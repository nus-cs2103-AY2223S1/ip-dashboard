[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"plugins {","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"shadowJar {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"  dependencies {","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    exclude(dependency(\u0027org.junit.jupiter:junit-jupiter-api\u0027))","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    exclude(dependency(\u0027org.junit.jupiter:junit-jupiter-engine\u0027))","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"  }","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"checkstyle {","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"repositories {","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    mavenCentral()","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"sourceSets {","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    main {","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"        java {","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027,\u0027src/test/java\u0027]","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"run {","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"test {","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"dependencies {","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.1\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.1\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"tanhl2000":59}},{"path":"dukeLog.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"0,todo run","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"@rem Find java.exe","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"goto fail","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"goto fail","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":":execute","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"@rem Setup the command line","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":":end","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"tanhl2000"},"content":":fail","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"tanhl2000"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"tanhl2000"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"tanhl2000"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"exit /b 1","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":":mainEnd","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"tanhl2000"},"content":":omega","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"tanhl2000":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"rootProject.name \u003d \"ip\"","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"tanhl2000":1}},{"path":"src/main/java/command/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerFileAddressInvalidException;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"public class ArchiveCommand {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_FILE_ADDRESS_ERROR \u003d \"User file address invalid, please check pathing\";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    private String logFileAddress \u003d \"\";","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    public ArchiveCommand() {","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    public ArchiveCommand(String newAddress) {","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"        this.logFileAddress \u003d newAddress;","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":" ","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, ","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     * UI and storage that are taken in as arguments, in this case saves the chatbot logs","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        //if not a valid address, throw exception","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"        if (!this.verifyAddress(this.logFileAddress)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerFileAddressInvalidException(MESSAGE_FILE_ADDRESS_ERROR);","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        //else, do cleanUp()","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"            if (this.logFileAddress.equals(\"\")) {","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"                return ui.bye(storage.saveToFile());","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"            } else {","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"                return ui.bye(storage.saveToFile(this.logFileAddress));","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"     * verify if user given file address is valid","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"     * @param address file path address given by user","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"     * @return boolean","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    private boolean verifyAddress(String address) {","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"        //pre-process address string","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"        String addressToCheck \u003d address.strip();","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"        String[] addressSplit \u003d addressToCheck.split(\" \");","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"        //verification","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"        if (addressSplit.length \u003e 1) {","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"            return false;","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"        if (address.equals(\"\")) {","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"            return false;","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"        return true;","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-20"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-20"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-20"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"tanhl2000":78}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerFileAddressInvalidException;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":" * Represents a \"bye\" command from the user that will end the chatbot.","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":" * @extends Command","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    private String logFileAddress \u003d \"\";","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    public ByeCommand(String newAddress) {","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"        this.logFileAddress \u003d newAddress;","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":" ","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, ","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"     * UI and storage that are taken in as arguments, in this case saves the chatbot logs","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"            if (this.logFileAddress.equals(\"\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"                return ui.bye(storage.saveToFile());","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"                return ui.bye(storage.saveToFile(this.logFileAddress));","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":54}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":" * Abstract class thats represents a user inputted command to the chatbot.  ","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    Command() {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException; //Referenced from Marcus Ong Wee\u0027s code","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    public abstract Task getTask() throws MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":19}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import task.Deadline;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":" * Represents a \"deadline\" command from the user that will schedule a new Deadline task in the chatbot.","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    private String description;","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    private String date;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    public DeadlineCommand(String description, String date) {","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"     * Returns description inputted by the user","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        return this.description;","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments,","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"     *  in this case adds the deadline task described by the user into the tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"            Task newDeadline \u003d this.getTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"            return ui.add(newDeadline);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"            return new Deadline(description, date);","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"        } catch (MissingArgumentException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":71}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":" * Represents a \"bye\" command from the user that will end the chatbot.","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    private int pos;","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    public DeleteCommand(String pos) {","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"        this.pos \u003d Integer.parseInt(pos);","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        try {   ","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"            tasks.delete(this.pos);","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"            return ui.delete(this.pos);","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated ","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":48}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import task.Event;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    private String description;","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    private String duration;","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    public EventCommand(String description, String duration) {","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * in this case adds the event task described by the user into the tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"            Task newEvent \u003d this.getTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"            return ui.add(newEvent);","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"            return new Event(description, duration);","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        } catch (MissingArgumentException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":57}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private String keyword;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"     *  Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"     * in this case it lists all tasks in the tasklist with the given keyword","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"        return ui.list(tasks.search(keyword), true);","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":38}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    public ListCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"     * in this case it lists all tasks in the tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"        return ui.list(tasks, false);","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":34}},{"path":"src/main/java/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"public class LoadCommand extends Command{","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    private String logFileAddress \u003d \"\";","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    public LoadCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    public LoadCommand(String newAddress) {","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"        this.logFileAddress \u003d newAddress;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     * in this case it loads the tasks from a chatbot log file into the current chatbots tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"            if (this.logFileAddress.equals(\"\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"                return ui.load(storage.loadFile());","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"                return ui.load(storage.loadFile(this.logFileAddress));","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":49}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    private int pos;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    public MarkCommand(String pos) {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        this.pos \u003d Integer.parseInt(pos);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"     * in this case marks the task that the user specified as done","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            tasks.mark(this.pos);","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"            return ui.mark(this.pos);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"        } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":45}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import task.ToDo;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    private String description;","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"     * Returns description inputted by the user","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"        return this.description;","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"  ","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"     * in this case adds the Todo Task defined by the user into the tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"            Task newEvent \u003d this.getTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"            return ui.add(newEvent);","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"            return new ToDo(description);","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"        } catch (MissingArgumentException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":62}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import meower.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    private int pos;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    public UnmarkCommand(String pos) {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"        super();","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        this.pos \u003d Integer.parseInt(pos);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":" ","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"     * Executes the functionality of the command, in the tasklist, UI and storage that are taken in as arguments, ","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"     * in this case marks the task specified by the user as not done","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     * @param ui ui from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"     * @param storage storage from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            tasks.unmark(this.pos);","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"            return ui.unmark(this.pos);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"        } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"     * Returns the task that will be generated from the command, returns an empty task if no task is to be generated","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"        return Task.empty();","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"tanhl2000":46}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * when an invalid command is given by the user","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class InvalidCommandException extends MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":11}},{"path":"src/main/java/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * when an invalid date or non-date format is given by the user","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class InvalidDateException extends MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":11}},{"path":"src/main/java/exception/MeowerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * Main exception class from which all custom chatbot exceptions will extend from","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class MeowerException extends Exception{","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public MeowerException(String message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"tanhl2000":11}},{"path":"src/main/java/exception/MeowerFileAddressInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"public class MeowerFileAddressInvalidException extends MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"    public MeowerFileAddressInvalidException(String message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"tanhl2000":8}},{"path":"src/main/java/exception/MeowerFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * When file address given is not valid","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class MeowerFileNotFoundException extends MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public MeowerFileNotFoundException(String message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"tanhl2000":12}},{"path":"src/main/java/exception/MeowerIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * When there is an error in the IO of the chatbot","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class MeowerIOException extends MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public MeowerIOException(String message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"tanhl2000":11}},{"path":"src/main/java/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * When the user is missing arguments when calling commands","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class MissingArgumentException extends MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public MissingArgumentException(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":11}},{"path":"src/main/java/exception/TaskListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":" * When the user specifies a positional argument for tasklist that is out of bounds for tasklist of that size","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"public class TaskListOutOfBoundsException extends MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    public TaskListOutOfBoundsException(String message) {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"        super(message);","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"tanhl2000":11}},{"path":"src/main/java/meower/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"//taken from textbook","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    private void flip() {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"        db.flip();","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"        return db;","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":63}},{"path":"src/main/java/meower/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"//taken from textbook","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"public class Launcher {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":15}},{"path":"src/main/java/meower/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"//taken from textbook","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    private Meower meower \u003d new Meower();","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"        assert meower !\u003d null: \"meower bot cannot be null\";","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(meower);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            stage.show();","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":34}},{"path":"src/main/java/meower/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"//taken from textbook","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    private Meower duke;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaMeower.jpg\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    public void setDuke(Meower d) {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    @FXML","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"        assert userImage !\u003d null: \"userImage should not be null\"; //both asserts idea taken from Marcus Ong Wee\u0027s code","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"        assert dukeImage !\u003d null: \"dukeImage should not be null\";","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"        );","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":57}},{"path":"src/main/java/meower/Meower.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import command.Command;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"public class Meower {","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    private Parser parser;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    public Meower() {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"        this.ui \u003d new Ui(this.tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        this.storage \u003d new Storage(this.tasks, this.ui);","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    //methods below taken from textbook and partially adapted","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"     * Process user inputs and generate the corresponding commands and ui events","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    public String processUserInput(String userInput) {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"            Command nextCommand \u003d parser.parse(userInput);","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"            return nextCommand.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            return ui.errorMessage(e);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"     * Generates the reponse to a given userinput","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"     * @param input String representation of the userinput","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"            Command nextCommand \u003d parser.parse(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"            assert this.tasks.getSize() \u003e\u003d 0: \"tasklist size pointer should never be negative\";","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"            return nextCommand.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"            return ui.errorMessage(e);","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":48}},{"path":"src/main/java/meower/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import command.ByeCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import command.Command;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import command.DeleteCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import command.EventCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import command.FindCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import command.ListCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"import command.LoadCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"import command.MarkCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"import command.TodoCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"public class Parser {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_UNNECESSARY_ARG \u003d \"Argument given for command not needing argument\";","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_INVALID_COMMAND \u003d \"Command entered is invalid\";","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_FIND \u003d \"find\"; ","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_LOAD \u003d \"load\"; ","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    private final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    public Parser() {","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        ;","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"     * Parses a given userinput into the respective commands, throws InvalidCommandException when user gives invalid commands","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * @param userCommand the command inputted by the user","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     * @return Command","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"     * @throws InvalidCommandException thrown when an invalid command is inputted by the user","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    public Command parse(String userCommand) throws InvalidCommandException {","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"        //split user command into command word and arguments","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"        String splitUserStatement[] \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"        String command \u003d splitUserStatement[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        //initialise empty string to store arguments","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"        String commandArgs \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        if (splitUserStatement.length \u003e 1){","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"            commandArgs \u003d splitUserStatement[1].strip();","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        //switch-case for different command word","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"        switch(command) { //no breaks as all cases lead to return","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"            return new FindCommand(commandArgs);","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_LOAD:","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"            if (!commandArgs.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"                return new LoadCommand(commandArgs);","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"            return new LoadCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"            if (!commandArgs.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"                throw new InvalidCommandException(MESSAGE_ERROR_UNNECESSARY_ARG);","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"            if (!commandArgs.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"                return new ByeCommand(commandArgs);","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"            return new TodoCommand(commandArgs);","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_DEADLINE:   ","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"            //process arguments to pass into Command constructor","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"            String[] deadlineArgs \u003d parseCommandArgs(\"/by\",commandArgs); ","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"            String deadlineDescription \u003d deadlineArgs[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"tanhl2000"},"content":"            String deadlineDate \u003d deadlineArgs[1].strip();  ","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"tanhl2000"},"content":"            return new DeadlineCommand(deadlineDescription, deadlineDate);","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"tanhl2000"},"content":"            //process arguments to pass into Command constructor","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"            String[] eventArgs \u003d parseCommandArgs(\"/at\",commandArgs); ","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"            String eventDescription \u003d eventArgs[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"            String eventDate \u003d eventArgs[1].strip();          ","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"            return new EventCommand(eventDescription, eventDate);","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"tanhl2000"},"content":"            return new MarkCommand(commandArgs);","lastModifiedDate":"2022-09-10"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"tanhl2000"},"content":"            return new UnmarkCommand(commandArgs);","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"            return new DeleteCommand(commandArgs);","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"        default:","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"            throw new InvalidCommandException(MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-09-20"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"     * Parses the arguments of the user inputted commands","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"     * @param delimiter the String that will be used to split the given arguments","lastModifiedDate":"2022-09-20"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"     * @param args String representation of user inputted arguments","lastModifiedDate":"2022-09-20"},{"lineNumber":104,"author":{"gitId":"tanhl2000"},"content":"     * @return String[]","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"    public String[] parseCommandArgs(String delimiter, String args) {","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"        String[] splitByDelimiter \u003d args.split(delimiter, 2);","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"        return splitByDelimiter;","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":110}},{"path":"src/main/java/meower/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.io.File;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"import command.Command;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerFileAddressInvalidException;","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerFileNotFoundException;","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerIOException;","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"public class Storage {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_ARCHIVENAME \u003d \"Archive name not allowed\";","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_FILEPATH \u003d \"File path specified does not exist\";","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_FILESAVE \u003d \"Error in saving Tasks\";","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_FILE_ADDRESS_ERROR \u003d \"User file address invalid, please check pathing\";","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    private final String LOG_FILE_DIRECTORY \u003d \"./src/main/resources/logs\"; //log files must be in resources directory","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    private final String ARCHIVE_PATH \u003d \"./src/main/resources/archive\";","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    private String logFileAddress \u003d \"./src/main/resources/logs/meowerLog.txt\"; //default log file address","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    private String saveFileAddress \u003d \"./src/main/resources/archive/archive.txt\"; //default archive file address","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    private ArrayList\u003cString\u003e archive \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    private ArrayList\u003cString[]\u003e loggedTasks \u003d new ArrayList\u003cString[]\u003e();","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"    private TaskList existingTasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    public Storage(TaskList existingTasks, Ui ui) {","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"        this.existingTasks \u003d existingTasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    public void createArchive() throws MeowerFileAddressInvalidException {","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"        if (!this.verifyPath(ARCHIVE_PATH)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"            this.createDirectory(ARCHIVE_PATH);","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"            this.archive \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"     * loadLog loads the tasks stored in the log file into the current tasklist, ","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"     * throws DukeExceptions if theres issues with the format of the log file or file address is invalid","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"     * @return TaskList","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    public int loadFile() throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"        assert this.saveFileAddress !\u003d null: \"There must be a log file address at this point\";","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"        ","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"            //initialise parser, file scanner and tasklist","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"            Scanner fileReader \u003d new Scanner(new File(saveFileAddress));","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"            TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"            //read the log file and store tasks read to the temporary arraylist of task logs","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"                String nextLogLine \u003d fileReader.nextLine();","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"                String[] parsedLogLine \u003d nextLogLine.split(\",\", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"                loggedTasks.add(parsedLogLine);","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"            //close the scanner","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"            fileReader.close();","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"            //add all the tasks in the temporary array list of task logs into the tasklist","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"            int numOfTasks \u003d 0;","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"            for (String[] loggedTask : loggedTasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"                boolean isDone \u003d Integer.parseInt(loggedTask[0]) \u003d\u003d 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"                Command parsedCommand \u003d parser.parse(loggedTask[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"tanhl2000"},"content":"                Task newTask \u003d parsedCommand.getTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"tanhl2000"},"content":"                numOfTasks +\u003d 1;","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"tanhl2000"},"content":"                if (isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"tanhl2000"},"content":"                    newTask.mark();","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"                }","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"                newTaskList.add(parsedCommand.getTask());","lastModifiedDate":"2022-09-10"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"tanhl2000"},"content":"            //return the new tasklist to be used","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"tanhl2000"},"content":"            this.existingTasks.replace(newTaskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"            return numOfTasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"tanhl2000"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"            throw e;","lastModifiedDate":"2022-09-10"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerFileNotFoundException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":99,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"     * Overloaded constructor for case where user defines a new file address","lastModifiedDate":"2022-09-20"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"     * @param newPath String representation of user defined new file path, relative path from ip folder","lastModifiedDate":"2022-09-20"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"     * @return int","lastModifiedDate":"2022-09-20"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":104,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"    public int loadFile(String newPath) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"        String fullPath \u003d this.LOG_FILE_DIRECTORY + \"/\" + newPath;","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"        if (!this.verifyPath(fullPath)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerFileAddressInvalidException(MESSAGE_ERROR_FILEPATH);","lastModifiedDate":"2022-09-20"},{"lineNumber":109,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"tanhl2000"},"content":"        this.logFileAddress \u003d fullPath;","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"tanhl2000"},"content":"        return this.loadFile();","lastModifiedDate":"2022-09-20"},{"lineNumber":112,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":114,"author":{"gitId":"tanhl2000"},"content":"    public int archiveToFile(String archiveName) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":115,"author":{"gitId":"tanhl2000"},"content":"        //create archive directory structure if it doesn\u0027t yet exist","lastModifiedDate":"2022-09-20"},{"lineNumber":116,"author":{"gitId":"tanhl2000"},"content":"        this.createArchive();","lastModifiedDate":"2022-09-20"},{"lineNumber":117,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":118,"author":{"gitId":"tanhl2000"},"content":"        //archive by storing file names in a arraylist, dedicated archive folder","lastModifiedDate":"2022-09-20"},{"lineNumber":119,"author":{"gitId":"tanhl2000"},"content":"        if (!this.verifyAddress(archiveName)) { //note to self use better method to verify","lastModifiedDate":"2022-09-20"},{"lineNumber":120,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerFileAddressInvalidException(MESSAGE_ERROR_ARCHIVENAME); //since archive name is name of file must not have spaces etc","lastModifiedDate":"2022-09-20"},{"lineNumber":121,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":122,"author":{"gitId":"tanhl2000"},"content":"        this.saveToFile(ARCHIVE_PATH + \"/\" + archiveName);","lastModifiedDate":"2022-09-20"},{"lineNumber":123,"author":{"gitId":"tanhl2000"},"content":"        this.existingTasks.clear();","lastModifiedDate":"2022-09-20"},{"lineNumber":124,"author":{"gitId":"tanhl2000"},"content":"        archive.add(archiveName);","lastModifiedDate":"2022-09-20"},{"lineNumber":125,"author":{"gitId":"tanhl2000"},"content":"        return 0;","lastModifiedDate":"2022-09-20"},{"lineNumber":126,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"tanhl2000"},"content":"     * Saves the tasks in the tasklist into a logfile given by a pre-loaded file address","lastModifiedDate":"2022-09-20"},{"lineNumber":130,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"tanhl2000"},"content":"    public int saveToFile() throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":133,"author":{"gitId":"tanhl2000"},"content":"        assert this.logFileAddress !\u003d null: \"There must be a log file address at this point\";","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"tanhl2000"},"content":"        //if no tasks to be saved, exit with message","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"tanhl2000"},"content":"        if (existingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-09-18"},{"lineNumber":137,"author":{"gitId":"tanhl2000"},"content":"            return 0;","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":139,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":140,"author":{"gitId":"tanhl2000"},"content":"            //Verify filepath exists","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"tanhl2000"},"content":"            this.verifyAddress(this.logFileAddress);","lastModifiedDate":"2022-09-20"},{"lineNumber":142,"author":{"gitId":"tanhl2000"},"content":"            this.createDirectory(this.logFileAddress);","lastModifiedDate":"2022-09-20"},{"lineNumber":143,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"tanhl2000"},"content":"            //initialise file writer and integer counter","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"tanhl2000"},"content":"            FileWriter fileWriter \u003d new FileWriter(logFileAddress);","lastModifiedDate":"2022-09-10"},{"lineNumber":146,"author":{"gitId":"tanhl2000"},"content":"            int numOfTasks \u003d 0;","lastModifiedDate":"2022-09-10"},{"lineNumber":147,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"tanhl2000"},"content":"            //log tasks in tasklist","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"tanhl2000"},"content":"            for (Task task : existingTasks.getTasks()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":150,"author":{"gitId":"tanhl2000"},"content":"                fileWriter.write(task.log());","lastModifiedDate":"2022-09-10"},{"lineNumber":151,"author":{"gitId":"tanhl2000"},"content":"                numOfTasks +\u003d 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":152,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":153,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":154,"author":{"gitId":"tanhl2000"},"content":"            //close file writer and show message to user","lastModifiedDate":"2022-09-19"},{"lineNumber":155,"author":{"gitId":"tanhl2000"},"content":"            fileWriter.close();","lastModifiedDate":"2022-09-10"},{"lineNumber":156,"author":{"gitId":"tanhl2000"},"content":"            return numOfTasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":158,"author":{"gitId":"tanhl2000"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":159,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerIOException(MESSAGE_ERROR_FILESAVE);","lastModifiedDate":"2022-09-20"},{"lineNumber":160,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":161,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":162,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":163,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"tanhl2000"},"content":"     * Overloaded constructor that allows for a new user defined file path","lastModifiedDate":"2022-09-20"},{"lineNumber":165,"author":{"gitId":"tanhl2000"},"content":"     * @param newFilePathe user inputted new file path for saving log files, relative path from ip folder","lastModifiedDate":"2022-09-20"},{"lineNumber":166,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":167,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":168,"author":{"gitId":"tanhl2000"},"content":"    public int saveToFile(String newFilePath) throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":169,"author":{"gitId":"tanhl2000"},"content":"        if (!this.verifyAddress(newFilePath)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":170,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerFileAddressInvalidException(MESSAGE_FILE_ADDRESS_ERROR);","lastModifiedDate":"2022-09-20"},{"lineNumber":171,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":172,"author":{"gitId":"tanhl2000"},"content":"        logFileAddress \u003d this.LOG_FILE_DIRECTORY + \"/\" + newFilePath;","lastModifiedDate":"2022-09-20"},{"lineNumber":173,"author":{"gitId":"tanhl2000"},"content":"        return this.saveToFile();","lastModifiedDate":"2022-09-20"},{"lineNumber":174,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":175,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":176,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":177,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":178,"author":{"gitId":"tanhl2000"},"content":"     * Verifies if the path already exists","lastModifiedDate":"2022-09-20"},{"lineNumber":179,"author":{"gitId":"tanhl2000"},"content":"     * @param fullPath file path to be verified","lastModifiedDate":"2022-09-20"},{"lineNumber":180,"author":{"gitId":"tanhl2000"},"content":"     * @return boolean","lastModifiedDate":"2022-09-20"},{"lineNumber":181,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":182,"author":{"gitId":"tanhl2000"},"content":"    private boolean verifyPath(String fullPath) {","lastModifiedDate":"2022-09-19"},{"lineNumber":183,"author":{"gitId":"tanhl2000"},"content":"        Path fullPathToCheck \u003d Paths.get(fullPath);","lastModifiedDate":"2022-09-19"},{"lineNumber":184,"author":{"gitId":"tanhl2000"},"content":"        if (Files.exists(fullPathToCheck)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":185,"author":{"gitId":"tanhl2000"},"content":"            return true;","lastModifiedDate":"2022-09-19"},{"lineNumber":186,"author":{"gitId":"tanhl2000"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":187,"author":{"gitId":"tanhl2000"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":188,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":189,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":190,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":191,"author":{"gitId":"tanhl2000"},"content":"        /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":192,"author":{"gitId":"tanhl2000"},"content":"     * verify if user given file address is valid","lastModifiedDate":"2022-09-20"},{"lineNumber":193,"author":{"gitId":"tanhl2000"},"content":"     * @param address file path address given by user","lastModifiedDate":"2022-09-20"},{"lineNumber":194,"author":{"gitId":"tanhl2000"},"content":"     * @return boolean","lastModifiedDate":"2022-09-20"},{"lineNumber":195,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":196,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":197,"author":{"gitId":"tanhl2000"},"content":"    private boolean verifyAddress(String address) {","lastModifiedDate":"2022-09-20"},{"lineNumber":198,"author":{"gitId":"tanhl2000"},"content":"        //pre-process address string","lastModifiedDate":"2022-09-20"},{"lineNumber":199,"author":{"gitId":"tanhl2000"},"content":"        String addressToCheck \u003d address.strip();","lastModifiedDate":"2022-09-20"},{"lineNumber":200,"author":{"gitId":"tanhl2000"},"content":"        String[] addressSplit \u003d addressToCheck.split(\" \");","lastModifiedDate":"2022-09-20"},{"lineNumber":201,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":202,"author":{"gitId":"tanhl2000"},"content":"        //verification","lastModifiedDate":"2022-09-20"},{"lineNumber":203,"author":{"gitId":"tanhl2000"},"content":"        if (addressSplit.length \u003e 1) {","lastModifiedDate":"2022-09-20"},{"lineNumber":204,"author":{"gitId":"tanhl2000"},"content":"            return false;","lastModifiedDate":"2022-09-20"},{"lineNumber":205,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":206,"author":{"gitId":"tanhl2000"},"content":"        if (address.equals(\"\")) {","lastModifiedDate":"2022-09-20"},{"lineNumber":207,"author":{"gitId":"tanhl2000"},"content":"            return false;","lastModifiedDate":"2022-09-20"},{"lineNumber":208,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":209,"author":{"gitId":"tanhl2000"},"content":"        return true;","lastModifiedDate":"2022-09-20"},{"lineNumber":210,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":211,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":212,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-20"},{"lineNumber":213,"author":{"gitId":"tanhl2000"},"content":"     * creates directories along the file path saved in the log file address property","lastModifiedDate":"2022-09-20"},{"lineNumber":214,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":215,"author":{"gitId":"tanhl2000"},"content":"    private void createDirectory(String path) throws MeowerFileAddressInvalidException{","lastModifiedDate":"2022-09-20"},{"lineNumber":216,"author":{"gitId":"tanhl2000"},"content":"        String directoriesPath \u003d this.removeFilePath(path);","lastModifiedDate":"2022-09-20"},{"lineNumber":217,"author":{"gitId":"tanhl2000"},"content":"        Path dirPath \u003d Paths.get(directoriesPath);","lastModifiedDate":"2022-09-19"},{"lineNumber":218,"author":{"gitId":"tanhl2000"},"content":"        if (!Files.exists(dirPath)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":219,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":220,"author":{"gitId":"tanhl2000"},"content":"            //if path doesnt exist, create directory","lastModifiedDate":"2022-09-19"},{"lineNumber":221,"author":{"gitId":"tanhl2000"},"content":"            File directory \u003d new File(directoriesPath);","lastModifiedDate":"2022-09-19"},{"lineNumber":222,"author":{"gitId":"tanhl2000"},"content":"            if (!directory.mkdirs()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":223,"author":{"gitId":"tanhl2000"},"content":"                throw new MeowerFileAddressInvalidException(\"cannot create directory as file address is invalid\");","lastModifiedDate":"2022-09-20"},{"lineNumber":224,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":225,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":226,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":227,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":228,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":229,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":230,"author":{"gitId":"tanhl2000"},"content":"     * Removes the directories in the file path, leaving only the file name","lastModifiedDate":"2022-09-20"},{"lineNumber":231,"author":{"gitId":"tanhl2000"},"content":"     * @param fullPath file path to a file","lastModifiedDate":"2022-09-20"},{"lineNumber":232,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":233,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":234,"author":{"gitId":"tanhl2000"},"content":"    private String removeFilePath(String fullPath) {","lastModifiedDate":"2022-09-19"},{"lineNumber":235,"author":{"gitId":"tanhl2000"},"content":"        return fullPath.substring(0, fullPath.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2022-09-19"},{"lineNumber":236,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":237,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":238,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":239,"author":{"gitId":"tanhl2000"},"content":"     * @param numOfTasks","lastModifiedDate":"2022-09-18"},{"lineNumber":240,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":241,"author":{"gitId":"tanhl2000"},"content":"    public void sendEndMessage(int numOfTasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":242,"author":{"gitId":"tanhl2000"},"content":"        this.ui.chat(String.format(\"Saved %d tasks to log file\\n\", numOfTasks));","lastModifiedDate":"2022-09-10"},{"lineNumber":243,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":244,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":245,"author":{"gitId":"tanhl2000"},"content":"    public void sendNoTasksMessage() {","lastModifiedDate":"2022-09-10"},{"lineNumber":246,"author":{"gitId":"tanhl2000"},"content":"        this.ui.chat(\"No tasks saved to log file \\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":247,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":248,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":248}},{"path":"src/main/java/meower/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"public class TaskList {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_OUTOFBOUNDS \u003d \"Positional argument out of bounds for TaskList of size \";","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    private TaskList searchTasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    private int size;","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"        this.size \u003d 0;","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    public TaskList(TaskList taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"        this.tasks.addAll(taskList.tasks); //deep copy TaskList","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"        this.size \u003d taskList.getSize();","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"     * Returns true if tasklist is empty, false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"     * @return Boolean","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    public Boolean isEmpty() {","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        return !(this.size \u003e 0);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"     * Returns number of tasks in the tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * @return int","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"        return this.size;","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    public void clear() {","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"     * adds a task into the back of the tasklist","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"     * @param newTask task inputted by user to be added to tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"        assert newTask.isEmpty() \u003d\u003d false: \"Tasks added to tasklist should never be empty\";","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"        this.size +\u003d 1;","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"     * deletes the task at the specified index in the tasklist, throws TaskListOutOfBoundsException if index is out of bounds","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"     * @param pos user inputted index to delete task","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"     * @throws TaskListOutOfBoundsException thrown when user inputted pos is outside the size of the tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"    public void delete(int pos) throws TaskListOutOfBoundsException{","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"        if (pos \u003e this.getSize()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"            throw new TaskListOutOfBoundsException(String.format(\"%s%d\", this.MESSAGE_ERROR_OUTOFBOUNDS,this.getSize()));","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"        this.tasks.remove(pos-1);","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"        this.size -\u003d 1;","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"     * returns the task at the specified index in the tasklist, throws TaskListOutOfBoundsException if index is out of bounds","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"     * @param pos user inputted index to get task","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"     * @throws TaskListOutOfBoundsException thrown when user inputted pos is outside the size of the tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"tanhl2000"},"content":"    public Task get(int pos) throws TaskListOutOfBoundsException{","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"tanhl2000"},"content":"        if (pos \u003e this.getSize()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"tanhl2000"},"content":"            throw new TaskListOutOfBoundsException(String.format(\"%s%d\", this.MESSAGE_ERROR_OUTOFBOUNDS,this.getSize()));","lastModifiedDate":"2022-09-20"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"        return this.tasks.get(pos-1);","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":88,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"     * marks the task at the specified index in the tasklist as done, throws TaskListOutOfBoundsException if index is out of bounds","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"tanhl2000"},"content":"     * @param pos user inputted index to mark task done","lastModifiedDate":"2022-09-20"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"     * @throws TaskListOutOfBoundsException thrown when user inputted pos is outside the size of the tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"    public void mark(int pos) throws TaskListOutOfBoundsException{","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"        if (pos \u003e this.getSize()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"            throw new TaskListOutOfBoundsException(String.format(\"%s%d\", this.MESSAGE_ERROR_OUTOFBOUNDS,this.getSize()));","lastModifiedDate":"2022-09-20"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"        this.tasks.get(pos-1).mark();","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"     * marks the task at the specified index in the tasklist as not done, throws TaskListOutOfBoundsException if index is out of bounds","lastModifiedDate":"2022-09-18"},{"lineNumber":104,"author":{"gitId":"tanhl2000"},"content":"     * @param pos user inputted index to mark task not done","lastModifiedDate":"2022-09-20"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"     * @throws TaskListOutOfBoundsException thrown when user inputted pos is outside the size of the tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"    public void unmark(int pos) throws TaskListOutOfBoundsException{","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"        if (pos \u003e this.getSize()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"tanhl2000"},"content":"            throw new TaskListOutOfBoundsException(String.format(\"%s%d\", this.MESSAGE_ERROR_OUTOFBOUNDS,this.getSize()));","lastModifiedDate":"2022-09-20"},{"lineNumber":110,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"tanhl2000"},"content":"        this.tasks.get(pos-1).unmark();","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":114,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":115,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":116,"author":{"gitId":"tanhl2000"},"content":"     * returns the ArrayList of tasks","lastModifiedDate":"2022-09-18"},{"lineNumber":117,"author":{"gitId":"tanhl2000"},"content":"     * @return ArrayList\u003cTask\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":118,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":119,"author":{"gitId":"tanhl2000"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-09-10"},{"lineNumber":120,"author":{"gitId":"tanhl2000"},"content":"        return this.tasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":121,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":122,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":123,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":124,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":125,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":126,"author":{"gitId":"tanhl2000"},"content":"     * returns a list of all tasks that have the user specified keyword","lastModifiedDate":"2022-09-20"},{"lineNumber":127,"author":{"gitId":"tanhl2000"},"content":"     * @param keyword user inputted string by which to filter the tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":128,"author":{"gitId":"tanhl2000"},"content":"     * @return TaskList","lastModifiedDate":"2022-09-20"},{"lineNumber":129,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":130,"author":{"gitId":"tanhl2000"},"content":"    public TaskList search(String keyword) {","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"        this.searchTasks \u003d new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"tanhl2000"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"tanhl2000"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"tanhl2000"},"content":"                this.searchTasks.add(task);","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"tanhl2000"},"content":"        return this.searchTasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":141,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":142,"author":{"gitId":"tanhl2000"},"content":"     * replaces the current tasks in the tasklist with the tasks in the user inputted tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":143,"author":{"gitId":"tanhl2000"},"content":"     * @param newList user inputted tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":144,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":145,"author":{"gitId":"tanhl2000"},"content":"    public void replace(TaskList newList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"tanhl2000"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"tanhl2000"},"content":"        this.tasks.addAll(newList.tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":151,"author":{"gitId":"tanhl2000"},"content":"     * Returns the list command format of the tasks in index order","lastModifiedDate":"2022-09-18"},{"lineNumber":152,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":153,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":154,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"tanhl2000"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"tanhl2000"},"content":"        String output \u003d \"Tasks: \\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"tanhl2000"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"tanhl2000"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"tanhl2000"},"content":"            return \"No tasks! Yay!\";","lastModifiedDate":"2022-09-09"},{"lineNumber":160,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"tanhl2000"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-09"},{"lineNumber":162,"author":{"gitId":"tanhl2000"},"content":"            output +\u003d String.valueOf(count) + \". \" + task + \"\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":163,"author":{"gitId":"tanhl2000"},"content":"            count +\u003d 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"tanhl2000"},"content":"        output \u003d output.substring(0, output.length()-1);","lastModifiedDate":"2022-09-16"},{"lineNumber":166,"author":{"gitId":"tanhl2000"},"content":"        return output;","lastModifiedDate":"2022-09-09"},{"lineNumber":167,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":168}},{"path":"src/main/java/meower/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package meower;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import exception.TaskListOutOfBoundsException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"public class Ui {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Duke  \\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_FIND \u003d \"Tasks found:\\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_LOG_ERROR \u003d \"File pathing for log file is facing issues, tasks not saved\\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_MARK \u003d \"Task has been marked done:\";","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_UNMARK \u003d \"Task has been marked not done:\";","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ADD \u003d \"Task added: \\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_DELETE \u003d \"Task deleted: \\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_END \u003d \"Error in saving Tasks, progress from current session is not saved :(\";","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * returns the greeting message","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    public String greeting() {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(this.MESSAGE_GREETING);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"     * returns a log file error message","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    public String logFileError() {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(MESSAGE_LOG_ERROR);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"     * Shows a list of the tasks the chatbot holds to the user in tasklist index order, ","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"     * indicates the task type, done or not done, task description and task date","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"     * @param isFind specify if there is a keyword to filter the tasks by","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    public String list(TaskList tasks, boolean isFind) {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"        if (isFind) {","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"            return this.chat(MESSAGE_FIND + tasks.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"            return this.chat(tasks.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"     * Shows the new task that was added to the user, indicates the task type, task description and task date","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"     * @param newTask new task inputted by user to be added to tasklist","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"    public String add(Task newTask) {","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(String.format(\"%s%s\", MESSAGE_ADD, newTask));","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"     * Shows the task that was deleted to the user, indicates the task type, task description and task date","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"     * @param pos index in tasklist where task to be deleted","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"    public String delete(int pos) throws MeowerException{","lastModifiedDate":"2022-09-20"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"            return this.chat(String.format(\"%s%s\", MESSAGE_DELETE, this.tasks.get(pos)));","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"        } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":80,"author":{"gitId":"tanhl2000"},"content":"     * Shows the task that was marked done to the user, indicates the task type, done or not done, task description and task date","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"tanhl2000"},"content":"     * @param pos index in tasklist where task to be marked done","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":83,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"    public String mark(int pos) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"            return this.chat(MESSAGE_MARK + this.tasks.get(pos));","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"        } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":89,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"     * Shows the task that was marked not done to the user, indicates the task type, done or not done, task description and task date","lastModifiedDate":"2022-09-18"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"     * @param pos index in tasklist where task to be marked not done","lastModifiedDate":"2022-09-20"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"     * @throws MeowerException Main Meower chatbot Exception","lastModifiedDate":"2022-09-20"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"    public String unmark(int pos) throws MeowerException {","lastModifiedDate":"2022-09-20"},{"lineNumber":99,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"            return this.chat(MESSAGE_UNMARK + tasks.get(pos));","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"        } catch (TaskListOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"            throw new MeowerException(e.getLocalizedMessage());","lastModifiedDate":"2022-09-20"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"     * returns the error messages from exceptions","lastModifiedDate":"2022-09-20"},{"lineNumber":109,"author":{"gitId":"tanhl2000"},"content":"     * @param e exception from which error message to be shown","lastModifiedDate":"2022-09-20"},{"lineNumber":110,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":111,"author":{"gitId":"tanhl2000"},"content":"    public String errorMessage(MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":112,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(e.getLocalizedMessage());","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":116,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":117,"author":{"gitId":"tanhl2000"},"content":"     * returns the error message when there was an error in ending the program","lastModifiedDate":"2022-09-20"},{"lineNumber":118,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":119,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":120,"author":{"gitId":"tanhl2000"},"content":"    public String errorEnd() {","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(MESSAGE_ERROR_END);","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":125,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":126,"author":{"gitId":"tanhl2000"},"content":"     * returns the message upon successful loading of task, specifies number of tasks loaded","lastModifiedDate":"2022-09-20"},{"lineNumber":127,"author":{"gitId":"tanhl2000"},"content":"     * @param numOfTasks number of tasks loaded","lastModifiedDate":"2022-09-20"},{"lineNumber":128,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":129,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":130,"author":{"gitId":"tanhl2000"},"content":"    public String load(int numOfTasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(String.format(\"Loaded %d tasks. \\nHave a productive day!\", numOfTasks));","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":135,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-20"},{"lineNumber":136,"author":{"gitId":"tanhl2000"},"content":"     * returns the message upon successful saving of task, specifies number of tasks saved","lastModifiedDate":"2022-09-20"},{"lineNumber":137,"author":{"gitId":"tanhl2000"},"content":"     * @param numOfTasks number of tasks saved","lastModifiedDate":"2022-09-20"},{"lineNumber":138,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-20"},{"lineNumber":139,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":140,"author":{"gitId":"tanhl2000"},"content":"    public String bye(int numOfTasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"tanhl2000"},"content":"        return this.chat(String.format(\"Saved %d tasks. \\nBye bye! :D\", numOfTasks));","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":143,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":144,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":145,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":146,"author":{"gitId":"tanhl2000"},"content":"     * returns the message","lastModifiedDate":"2022-09-20"},{"lineNumber":147,"author":{"gitId":"tanhl2000"},"content":"     * @param message any message from Meower chatbot","lastModifiedDate":"2022-09-20"},{"lineNumber":148,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":149,"author":{"gitId":"tanhl2000"},"content":"    public String chat(String message) {","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"tanhl2000"},"content":"        return(message);","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":152,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":152}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package task;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_MISSING_ARGS \u003d \"Deadline command is missing arguments.\";","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_MISSING_DESCRIPTION \u003d \"Description is missing\";","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    public Deadline(String description, String date) throws MissingArgumentException, InvalidDateException{","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        super(\"deadline\", description, date);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        if (date.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_ARGS);","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_DESCRIPTION);","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"        this.date \u003d super.date;","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    public Deadline(String description, String date, boolean isDone) throws MissingArgumentException, InvalidDateException{","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"        super(\"deadline\", description, date, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        if (date.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_ARGS);","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_DESCRIPTION);","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"        this.date \u003d super.date;","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * returns string representation of deadline task","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.date.format(super.outputDateFormatter));","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":46}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package task;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"public class Event extends Task{","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_MISSING_ARGS \u003d \"Event command is missing arguments.\";","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_MISSING_DESCRIPTION \u003d \"Description is missing\";","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    protected LocalDate duration;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    public Event(String description, String duration) throws MissingArgumentException, InvalidDateException {","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        super(\"event\", description, duration);","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_ARGS);","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_DESCRIPTION);","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"        this.duration \u003d super.date;","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"    public Event(String description, String duration, boolean isDone) throws MissingArgumentException, InvalidDateException {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"        super(\"event\", description, duration, isDone);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_ARGS);","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_DESCRIPTION);","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"        this.duration \u003d super.date;","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"     * returns string representation of event task","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.duration.format(super.outputDateFormatter));","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":46}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package task;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"public class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_PAST_DATE \u003d \"Date should be a future date, not one in the past\";","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_WRONG_FORMAT \u003d \"Date is formatted wrongly\";","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    protected DateTimeFormatter inputDateFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    protected DateTimeFormatter outputDateFormatter \u003d DateTimeFormatter.ofPattern(\"E, d MMM yyyy\");","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    protected String type;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    protected String description;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    protected boolean isEmpty;","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"    private Task() {","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"        this.isEmpty \u003d true;","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    Task (String type, String description) {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    Task (String type, String description, boolean isDone) {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"    Task (String type, String description, String date) throws InvalidDateException {","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"        this.date \u003d convert(date);","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    Task (String type, String description, String date, boolean isDone) throws InvalidDateException{","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"tanhl2000"},"content":"        this.date \u003d convert(date);","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"tanhl2000"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"tanhl2000"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"tanhl2000"},"content":"     * returns an empty task","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"tanhl2000"},"content":"     * @return Task","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"tanhl2000"},"content":"    public static Task empty() {","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"tanhl2000"},"content":"        return new Task();","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"tanhl2000"},"content":"     * checks if task is empty, returns true if empty and false if not","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"tanhl2000"},"content":"     * @return boolean","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"tanhl2000"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"tanhl2000"},"content":"        return this.isEmpty;","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"tanhl2000"},"content":"     * returns description of task","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"tanhl2000"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"tanhl2000"},"content":"        return this.description;","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"tanhl2000"},"content":"     * marks the task done","lastModifiedDate":"2022-09-20"},{"lineNumber":83,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":84,"author":{"gitId":"tanhl2000"},"content":"    public void mark() {","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"tanhl2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"tanhl2000"},"content":"    /**","lastModifiedDate":"2022-09-20"},{"lineNumber":89,"author":{"gitId":"tanhl2000"},"content":"     * marks the task not done","lastModifiedDate":"2022-09-20"},{"lineNumber":90,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":91,"author":{"gitId":"tanhl2000"},"content":"    public void unmark() {","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"tanhl2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":96,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":97,"author":{"gitId":"tanhl2000"},"content":"     * returns the log file format String to save this task to the log file","lastModifiedDate":"2022-09-20"},{"lineNumber":98,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"tanhl2000"},"content":"    public String log() {","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"tanhl2000"},"content":"        int binIsDone;","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"tanhl2000"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"tanhl2000"},"content":"            binIsDone \u003d 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"tanhl2000"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"tanhl2000"},"content":"            binIsDone \u003d 0;","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"tanhl2000"},"content":"        switch(type) {","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"tanhl2000"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"tanhl2000"},"content":"            return String.format(\"%d,todo %s\\n\", binIsDone, this.description);","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"tanhl2000"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"tanhl2000"},"content":"            return String.format(\"%d,deadline %s/by%s\\n\", binIsDone, this.description, this.date.format(inputDateFormatter));","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"tanhl2000"},"content":"        case \"event\":","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"tanhl2000"},"content":"            return String.format(\"%d,event %s/at%s\\n\", binIsDone, this.description, this.date.format(inputDateFormatter));","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"tanhl2000"},"content":"        default:","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"tanhl2000"},"content":"            return \"N\";","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":120,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":121,"author":{"gitId":"tanhl2000"},"content":"     * converts dates of specified format to LocalDate type","lastModifiedDate":"2022-09-20"},{"lineNumber":122,"author":{"gitId":"tanhl2000"},"content":"     * @param date String representation of a date","lastModifiedDate":"2022-09-20"},{"lineNumber":123,"author":{"gitId":"tanhl2000"},"content":"     * @return LocalDate","lastModifiedDate":"2022-09-18"},{"lineNumber":124,"author":{"gitId":"tanhl2000"},"content":"     * @throws InvalidDateException thrown when an invalid or non-date format is given ","lastModifiedDate":"2022-09-20"},{"lineNumber":125,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"tanhl2000"},"content":"    public LocalDate convert(String date) throws InvalidDateException { //assumes format is in d/M/yyyy","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"tanhl2000"},"content":"            LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"tanhl2000"},"content":"            LocalDate taskDate \u003d LocalDate.parse(date, inputDateFormatter);","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"tanhl2000"},"content":"            if (taskDate.isBefore(currentDate)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"tanhl2000"},"content":"                throw new InvalidDateException(MESSAGE_ERROR_PAST_DATE);","lastModifiedDate":"2022-09-20"},{"lineNumber":132,"author":{"gitId":"tanhl2000"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"tanhl2000"},"content":"            return taskDate;","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"tanhl2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"tanhl2000"},"content":"            throw new InvalidDateException(MESSAGE_ERROR_WRONG_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":136,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":140,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":141,"author":{"gitId":"tanhl2000"},"content":"     * returns the string representation of tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":142,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":143,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":144,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"tanhl2000"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"tanhl2000"},"content":"        char mark;","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"tanhl2000"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"tanhl2000"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"tanhl2000"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"tanhl2000"},"content":"            mark \u003d \u0027 \u0027;","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"tanhl2000"},"content":"        return (\"[\" + mark + \"] \" + this.getDescription());","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":154}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package task;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"    private final String MESSAGE_ERROR_MISSING_DESCRIPTION \u003d \"Description is missing\";","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"    public ToDo(String description) throws MissingArgumentException{","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"        super(\"todo\", description);","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_DESCRIPTION);","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"    public ToDo(String description, boolean isDone) throws MissingArgumentException{","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        super(\"todo\", description, isDone);","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"            throw new MissingArgumentException(MESSAGE_ERROR_MISSING_DESCRIPTION);","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    /** ","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"     * returns string representation of todo task","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"     * @return String","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"tanhl2000":32}},{"path":"src/main/resources/logs/meowerLog.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"0,todo harro","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"tanhl2000":1}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"97.0\" prefWidth\u003d\"285.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" textFill\u003d\"RED\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"            \u003cFont name\u003d\"Arial Rounded MT Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"meower.MainWindow\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Meow\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"      \u003cImageView fitHeight\u003d\"553.0\" fitWidth\u003d\"397.0\" focusTraversable\u003d\"true\" opacity\u003d\"0.13\" pickOnBounds\u003d\"true\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"         \u003cimage\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"            \u003cImage url\u003d\"@../images/kittens.jpg\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"         \u003c/image\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tanhl2000":26}},{"path":"src/test/java/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package main;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import meower.Parser;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    public void descriptionTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"            assertEquals(p.parse(\"todo run\").getTask().getDescription(), \"run\");","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"            return;","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"            return;","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    /*@Test","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"    } */","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"}   ","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"tanhl2000":29}},{"path":"src/test/java/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"package main;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"tanhl2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"tanhl2000"},"content":"import exception.MeowerException;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"tanhl2000"},"content":"import meower.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"tanhl2000"},"content":"import task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"tanhl2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"tanhl2000"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"tanhl2000"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"tanhl2000"},"content":"    public void addTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"tanhl2000"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"tanhl2000"},"content":"        Task testTask \u003d Task.empty();","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"tanhl2000"},"content":"            tasks.add(testTask);","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"tanhl2000"},"content":"            assertEquals(tasks.get(1), testTask);","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"tanhl2000"},"content":"            return;","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"tanhl2000"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"tanhl2000"},"content":"    public void sizeTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"tanhl2000"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"tanhl2000"},"content":"        Task testTask \u003d Task.empty();","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"tanhl2000"},"content":"        int testSize \u003d 5;","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"tanhl2000"},"content":"        for (int i \u003d 0; i \u003c testSize; i++) {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"tanhl2000"},"content":"            tasks.add(testTask);","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"tanhl2000"},"content":"        assertEquals(tasks.getSize(), testSize);","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"tanhl2000"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"tanhl2000"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"tanhl2000"},"content":"    public void deleteTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"tanhl2000"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"tanhl2000"},"content":"        Task testTask \u003d Task.empty();","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"tanhl2000"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"tanhl2000"},"content":"            tasks.add(testTask);","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"tanhl2000"},"content":"            tasks.delete(1);","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"tanhl2000"},"content":"            assertEquals(tasks.isEmpty(), true);","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"tanhl2000"},"content":"        } catch (MeowerException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"tanhl2000"},"content":"            return;","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"tanhl2000"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"tanhl2000"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"tanhl2000"},"content":"    ","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"tanhl2000"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"tanhl2000":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanhl2000"},"content":"todo work","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"tanhl2000"},"content":"deadline quiz /by sunday","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"tanhl2000":2}}]

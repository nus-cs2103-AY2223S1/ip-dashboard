[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":22,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"[T][ ] Coding Assignment","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"[D][ ] Literature Essay (by: Sep 20 2022)","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"[E][X] Taylor Swift Concert (at: Sep 9 2022)","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"bensohh":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"## Quick Start ","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"1. Ensure that you have Java `11` installed on your computer.","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"2. Download the latest duke.jar from here.","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"3. Double-click the file to start the app. The GUI should appear in a few seconds.","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"4. Type the command in the command box and press Enter to execute it. e.g. typing `--help` and pressing Enter will execute the help command.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"   * `list` : Lists all the tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"   * `todo coding homework` : Adds a Todo task to the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"   * `mark 1` : Marks the 1st task as completed.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"   * `delete 1` : Deletes the 1st task in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"   * `bye` : Terminates the Chat Bot.","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"   ","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"5. Refer the Features below for details on each command.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"### `todo` - Adds a Todo task.","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"Creates a Todo Task and adds it into the list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"`todo (Task Description)`","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"`todo Literature Essay`","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"A Todo task is created and stored in the list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"  [T][] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"### `deadline` - Adds a Deadline task.","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"Creates a Deadline Task and adds it into the list of tasks. Use the \u0027/by\u0027 followed","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"by the date format of ```YYYY-MM-DD``` (e.g., ```2022-11-22```)to generate it in the ","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"different format such as ```MMM dd yyyy``` e.g., (```Nov 22 2022```).","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"`deadline Task Description /by YYYY-MM-DD` or `deadline Task Description /by Additional Information`","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"1. `deadline Literature Essay /by 2022-11-22`","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"2. `deadline Literature Essay /by tmr 2359`","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"1. A Deadline task is created and stored in the list of tasks (Date formatted).","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"  [D][] Literature Essay (by: Nov 22 2022)","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"2. A Deadline task is created and stored in the list of tasks (without formatting).","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"  [D][] Literature Essay (by: tmr 2359)","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"### `event` - Adds an Event task.","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"Creates an Event Task and adds it into the list of tasks. Use the \u0027/at\u0027 followed","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"by the date format of ```YYYY-MM-DD``` (e.g., ```2022-09-20```)to generate it in the ","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"different format such as ```MMM dd yyyy``` e.g., (```Sep 20 2022```).","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"`event Task Description /at YYYY-MM-DD` or `event Task Description /at Additional Information`","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"1. `event Coldplay Concert /at Stadium`","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"2. `event Coldplay Concert /at 2022-09-20`","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"1. An Event task is created and stored in the list of tasks (without formatting).","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"  [E][] Coldplay Concert (at: Stadium)","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"2. An Event task is created and stored in the list of tasks (Date formatted).","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"  [E][] Coldplay Concert (at: Sep 20 2022)","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"### `list` - Lists all the tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"Prints out all the tasks within the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"bensohh"},"content":"`list`","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"`list`","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"All the tasks within the list are printed.","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"bensohh"},"content":"Here are the tasks in your to-do list:","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"1. [T][] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"2. [D][] Literature Essay (by:Nov 22 2022)","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"3. [E][] Coldplay Concert (at: Stadium)","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":149,"author":{"gitId":"bensohh"},"content":"### `mark` - Marks a task as completed.","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"bensohh"},"content":"Marks a specified task number as completed.","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"bensohh"},"content":"`mark (Task Number)`","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"bensohh"},"content":"`mark 1`","lastModifiedDate":"2022-09-16"},{"lineNumber":160,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":161,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":162,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":163,"author":{"gitId":"bensohh"},"content":"Task number 1 in the list will be marked with an \u0027X\u0027 to indicate that it","lastModifiedDate":"2022-09-16"},{"lineNumber":164,"author":{"gitId":"bensohh"},"content":"is completed.","lastModifiedDate":"2022-09-16"},{"lineNumber":165,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":166,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":167,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":168,"author":{"gitId":"bensohh"},"content":"Good Job! I have marked this task as done:","lastModifiedDate":"2022-09-16"},{"lineNumber":169,"author":{"gitId":"bensohh"},"content":"  [T][X] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":170,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":171,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":172,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":173,"author":{"gitId":"bensohh"},"content":"### `unmark` - Marks a task as uncompleted.","lastModifiedDate":"2022-09-16"},{"lineNumber":174,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":175,"author":{"gitId":"bensohh"},"content":"Marks a specified task number as uncompleted.","lastModifiedDate":"2022-09-16"},{"lineNumber":176,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":177,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":178,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":179,"author":{"gitId":"bensohh"},"content":"`unmark (Task Number)`","lastModifiedDate":"2022-09-16"},{"lineNumber":180,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":181,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":182,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":183,"author":{"gitId":"bensohh"},"content":"`unmark 1`","lastModifiedDate":"2022-09-16"},{"lineNumber":184,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":185,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":186,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":187,"author":{"gitId":"bensohh"},"content":"Task number 1 in the list will be marked with a \u0027\u0027 to indicate that it","lastModifiedDate":"2022-09-16"},{"lineNumber":188,"author":{"gitId":"bensohh"},"content":"is uncompleted.","lastModifiedDate":"2022-09-16"},{"lineNumber":189,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":190,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":191,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":192,"author":{"gitId":"bensohh"},"content":"Alright! I have marked this task as not done yet:","lastModifiedDate":"2022-09-16"},{"lineNumber":193,"author":{"gitId":"bensohh"},"content":"  [T][] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":194,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":195,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":196,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":197,"author":{"gitId":"bensohh"},"content":"### `find` - Search for tasks with matching keywords.","lastModifiedDate":"2022-09-16"},{"lineNumber":198,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":199,"author":{"gitId":"bensohh"},"content":"Searches the list for tasks with matching keywords. You may add additional keywords","lastModifiedDate":"2022-09-16"},{"lineNumber":200,"author":{"gitId":"bensohh"},"content":"by separating them with a `,`.","lastModifiedDate":"2022-09-16"},{"lineNumber":201,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":202,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":203,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":204,"author":{"gitId":"bensohh"},"content":"`find (Keyword)` or `find (Keyword1, Keyword2, ...)`","lastModifiedDate":"2022-09-16"},{"lineNumber":205,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":206,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":207,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":208,"author":{"gitId":"bensohh"},"content":"1. `find Literature`","lastModifiedDate":"2022-09-16"},{"lineNumber":209,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":210,"author":{"gitId":"bensohh"},"content":"2. `find Literature, swimming`","lastModifiedDate":"2022-09-16"},{"lineNumber":211,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":212,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":213,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":214,"author":{"gitId":"bensohh"},"content":"1. Tasks with the keyword `Literature` will be collated and printed","lastModifiedDate":"2022-09-16"},{"lineNumber":215,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":216,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":217,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":218,"author":{"gitId":"bensohh"},"content":"Here are the matching tasks in your to-do list:","lastModifiedDate":"2022-09-16"},{"lineNumber":219,"author":{"gitId":"bensohh"},"content":"1. [T][] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":220,"author":{"gitId":"bensohh"},"content":"2. [D][] Literature Essay (by:Nov 22 2022)","lastModifiedDate":"2022-09-16"},{"lineNumber":221,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":222,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":223,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":224,"author":{"gitId":"bensohh"},"content":"2. Tasks with the keyword `Literature` and `swimming` will be collated and printed","lastModifiedDate":"2022-09-16"},{"lineNumber":225,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":228,"author":{"gitId":"bensohh"},"content":"Here are the matching tasks in your to-do list:","lastModifiedDate":"2022-09-16"},{"lineNumber":229,"author":{"gitId":"bensohh"},"content":"1. [T][] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":230,"author":{"gitId":"bensohh"},"content":"2. [D][] Literature Essay (by:Nov 22 2022)","lastModifiedDate":"2022-09-16"},{"lineNumber":231,"author":{"gitId":"bensohh"},"content":"4. [T][] swimming with friends","lastModifiedDate":"2022-09-16"},{"lineNumber":232,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":233,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":234,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":235,"author":{"gitId":"bensohh"},"content":"### `delete` - Deletes a task.","lastModifiedDate":"2022-09-16"},{"lineNumber":236,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":237,"author":{"gitId":"bensohh"},"content":"Deletes the specified task from the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":238,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":239,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":240,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":241,"author":{"gitId":"bensohh"},"content":"`delete (Task Number)`","lastModifiedDate":"2022-09-16"},{"lineNumber":242,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":243,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":244,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":245,"author":{"gitId":"bensohh"},"content":"`delete 1`","lastModifiedDate":"2022-09-16"},{"lineNumber":246,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":247,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":248,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":249,"author":{"gitId":"bensohh"},"content":"Task number 1 will be deleted from the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":250,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":251,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":252,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":253,"author":{"gitId":"bensohh"},"content":"Noted. I have removed this task:","lastModifiedDate":"2022-09-16"},{"lineNumber":254,"author":{"gitId":"bensohh"},"content":"  [T][] Literature Essay","lastModifiedDate":"2022-09-16"},{"lineNumber":255,"author":{"gitId":"bensohh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":256,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":257,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":258,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":259,"author":{"gitId":"bensohh"},"content":"### `undo` - Returns the Chat Bot to the state before executing the previous command.","lastModifiedDate":"2022-09-16"},{"lineNumber":260,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":261,"author":{"gitId":"bensohh"},"content":"It will undo the previous command executed, returning the Chat Bot to its previous state. This","lastModifiedDate":"2022-09-16"},{"lineNumber":262,"author":{"gitId":"bensohh"},"content":"only works for commands such as `delete`, `todo`, `deadline`, `event`, `mark` and `unmark`.","lastModifiedDate":"2022-09-16"},{"lineNumber":263,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":264,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":266,"author":{"gitId":"bensohh"},"content":"`undo`","lastModifiedDate":"2022-09-16"},{"lineNumber":267,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":268,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":269,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":270,"author":{"gitId":"bensohh"},"content":"`undo`","lastModifiedDate":"2022-09-16"},{"lineNumber":271,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":272,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":273,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":274,"author":{"gitId":"bensohh"},"content":"The Chat Bot will return to the state before executing the previous command. The outcome","lastModifiedDate":"2022-09-16"},{"lineNumber":275,"author":{"gitId":"bensohh"},"content":"depends on the type of command executed, the example below indicates `undo` on a delete command.","lastModifiedDate":"2022-09-16"},{"lineNumber":276,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":277,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":278,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":279,"author":{"gitId":"bensohh"},"content":"Undo Complete! I added back the deleted task.","lastModifiedDate":"2022-09-16"},{"lineNumber":280,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":281,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":282,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":283,"author":{"gitId":"bensohh"},"content":"### `help` - Prints the list of commands available.","lastModifiedDate":"2022-09-16"},{"lineNumber":284,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":285,"author":{"gitId":"bensohh"},"content":"Prints out the list of commands and simple description of its functions.","lastModifiedDate":"2022-09-16"},{"lineNumber":286,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":287,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":288,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":289,"author":{"gitId":"bensohh"},"content":"`help`","lastModifiedDate":"2022-09-16"},{"lineNumber":290,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":291,"author":{"gitId":"bensohh"},"content":"Example of usage: ","lastModifiedDate":"2022-09-16"},{"lineNumber":292,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":293,"author":{"gitId":"bensohh"},"content":"`help`","lastModifiedDate":"2022-09-16"},{"lineNumber":294,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":295,"author":{"gitId":"bensohh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-16"},{"lineNumber":296,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":297,"author":{"gitId":"bensohh"},"content":"A list of commands and its basic description will be printed out.","lastModifiedDate":"2022-09-16"},{"lineNumber":298,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":299,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":300,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":301,"author":{"gitId":"bensohh"},"content":"list -\u003e list out all the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":302,"author":{"gitId":"bensohh"},"content":"todo -\u003e creates a todo task","lastModifiedDate":"2022-09-16"},{"lineNumber":303,"author":{"gitId":"bensohh"},"content":"deadline -\u003e creates a deadline task, add /by to specify deadline","lastModifiedDate":"2022-09-16"},{"lineNumber":304,"author":{"gitId":"bensohh"},"content":"event -\u003e creates an event task, add /at to specify location/date","lastModifiedDate":"2022-09-16"},{"lineNumber":305,"author":{"gitId":"bensohh"},"content":"mark -\u003e marks a task as done in the task list","lastModifiedDate":"2022-09-16"},{"lineNumber":306,"author":{"gitId":"bensohh"},"content":"unmark -\u003e marks a task as not done in the task list","lastModifiedDate":"2022-09-16"},{"lineNumber":307,"author":{"gitId":"bensohh"},"content":"delete -\u003e removes the task from the task list","lastModifiedDate":"2022-09-16"},{"lineNumber":308,"author":{"gitId":"bensohh"},"content":"find -\u003e searches for task with the same keyword","lastModifiedDate":"2022-09-16"},{"lineNumber":309,"author":{"gitId":"bensohh"},"content":"undo -\u003e returns to the state before execution of the previous command","lastModifiedDate":"2022-09-16"},{"lineNumber":310,"author":{"gitId":"bensohh"},"content":"bye -\u003e end and close the ChatBot","lastModifiedDate":"2022-09-16"},{"lineNumber":311,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":312,"author":{"gitId":"bensohh"},"content":"```","lastModifiedDate":"2022-09-16"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":314,"author":{"gitId":"bensohh"},"content":"### `bye` - Ends the Chat Bot.","lastModifiedDate":"2022-09-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":316,"author":{"gitId":"bensohh"},"content":"Terminates the Chat Bot.","lastModifiedDate":"2022-09-16"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":318,"author":{"gitId":"bensohh"},"content":"Format:","lastModifiedDate":"2022-09-16"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":320,"author":{"gitId":"bensohh"},"content":"`bye`","lastModifiedDate":"2022-09-16"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":324,"author":{"gitId":"bensohh"},"content":"`bye`","lastModifiedDate":"2022-09-16"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":328,"author":{"gitId":"bensohh"},"content":"The Chat Bot will be terminated 5 seconds after execution of `bye` command.","lastModifiedDate":"2022-09-16"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":330,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":331,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":332,"author":{"gitId":"bensohh"},"content":"Sayonara! Mata ne!","lastModifiedDate":"2022-09-16"},{"lineNumber":333,"author":{"gitId":"bensohh"},"content":"--- The window will close in 5 seconds ---","lastModifiedDate":"2022-09-16"},{"lineNumber":334,"author":{"gitId":"bensohh"},"content":"________________________________________","lastModifiedDate":"2022-09-16"},{"lineNumber":335,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"bensohh":309,"-":26}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"     * Creates a user dialog with the given text and image.","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"     * @param text String to be printed in the user dialog","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"     * @param img Image representing the user profile","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"     * @return DialogBox consisting of the user profile image and text to be printed","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"     * Creates a duke dialog with the given text and image.","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"     * @param text String to be printed in the duke dialog","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"     * @param img Image representing the duke profile","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"     * @return DialogBox consisting of the duke profile image and response text to be printed","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"bensohh":78}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * An interactive ChatBot that provides functions of a to-do list","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" * depending on the user\u0027s input.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     * @param filePath String representation of the relative file path to store the data","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    public Duke(String filePath, Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        ui \u003d new Ui(stage);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     * Gets a response from the Chat Bot after user inputs a command.","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * @param fullCommand String command that user inputs","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     * @return String representing the response of the Chat Bot","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bensohh":55,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"public class Launcher {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"bensohh":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * Starts the Duke application by bridging the gap in Duke and the UI in MainWindow.","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     * @param stage Current stage of the application","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"        this.duke \u003d new Duke(\"./data/tasks.txt\", stage);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"bensohh":39}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     * Initializes the MainWindow.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"                DialogBox.getDukeDialog(Ui.welcomeMessage(), dukeImage)","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        );","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     * Sets the Duke Object.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * @param d Duke Object to set","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"bensohh":66}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" * Represents a command for adding tasks to the task lists. It comprises of 3 types","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":" * of task to be created, namely todo, deadline and event.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    private int taskType;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    private String taskDetails;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of AddCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * @param taskType Integer value representing the type of task, 0-TODO Task,","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     *                 1-DEADLINE Task, 2-EVENT Task","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     * @param taskDetails String representation of the task description","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    public AddCommand(int taskType, String taskDetails) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"     * Creates the corresponding task based on the taskType in AddCommand and adds task","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"     * to the TaskList. The task list is then stored on a file under data/tasks.txt","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"     * @param tasks List to add and keep track of the tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing and reading of tasks from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if the writeToFile method fails while storing the TaskList on a local txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        if (this.taskType \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            tasks.add(new Todo(this.taskDetails, false));","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        } else if (this.taskType \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"            String[] infoArray \u003d this.taskDetails.split(\" /by \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"            tasks.add(new Deadline(infoArray[0], formatDate(infoArray[1]), false));","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"            assert this.taskType \u003d\u003d 2; // Assumption made that the remaining tasks will be of type 2 --\u003e Event","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"            String[] infoArray \u003d this.taskDetails.split(\" /at \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"            tasks.add(new Event(infoArray[0], formatDate(infoArray[1]), false));","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"        String taskDescription \u003d \"  \" + tasks.getTask(tasks.size() - 1).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"            return this + taskDescription","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"                    + \"\\nNow you have 1 task in the list.\"","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"                    + \"\\n________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"            return this + taskDescription","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"                    + \"\\nNow you have \"","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"                    + tasks.size()","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"                    + \" tasks in the list.\"","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"                    + \"\\n________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"     * Takes in dates in the format YYYY-MM-DD and transform them into MMM d yyyy.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"     * (2019-05-05 to May 5 2019)","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"     * @param dateInput String representation of the date in YYYY-MM-DD format.","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"     * @return String representation of the same date in MMM d yyyy format.","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"    public String formatDate(String dateInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"            LocalDate d1 \u003d LocalDate.parse(dateInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"            return d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"        } catch (DateTimeParseException e) { //","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"            return dateInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation of successfully executing the AddCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"     * @return String to notify user that task has been successfully added","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"                + \"Got it. I have added this task:\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"     * Checks if 2 instances of AddCommand are the same.","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"     * @param o Object to be tested against an instance of AddCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"     * @return true if the Object is an instance of AddCommand, contains the same","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"     *     taskType and same taskDetails","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"        if (o instanceof AddCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"            AddCommand t \u003d (AddCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"            if (t.taskType \u003d\u003d this.taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"                return Objects.equals(t.taskDetails, this.taskDetails);","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":126}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * Represents the different types of command user can input into the ChatBot.","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * Executes the corresponding command.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response from ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if any duke specific error occurs","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occurs when writing/reading from a txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic behind deleting a task from the TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of DeleteCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     * @param taskNumber Integer representing the task number to delete","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * Executes the DeleteCommand and removes the corresponding task from the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * Stores the updated TaskList into a txt file under data/tasks.txt","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the TaskList is empty or an invalid task number in user\u0027s input","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occurs while writing to a txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        //Exception: Throw an error when user tries to delete from an empty list","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There are no task left to be deleted!\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"                    + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        //Exception: Throw an error when the second half after \"delete\" keyword is greater than task_list","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There is no such task number!\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                    + \"________________________________________\";;","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        String taskDescription \u003d tasks.getTask(taskNumber - 1).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        String respondMessage \u003d this","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"                + \"  \"","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"                + taskDescription","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"                + \"\\n Now you have \"","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"                + (tasks.size() - 1)","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"                + \" tasks in the list.\"","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"                + \"\\n________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"        Parser.setTaskDescription(taskDescription);","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        tasks.delete(this.taskNumber - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"        return respondMessage;","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation of successfully executing the DeleteCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"     * @return String to notify the user that a task has been removed","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"                + \"Noted. I have removed this task:\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"     * Checks if 2 instances of DeleteCommand are the same.","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"     * @param o Object to be compared against an instance of DeleteCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"     * @return true if both are instances of DeleteCommand and they contain the same task number else false","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"        if (o instanceof DeleteCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"            DeleteCommand t \u003d (DeleteCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"            return t.taskNumber \u003d\u003d this.taskNumber;","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":101}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic for an ExitCommand to terminate the ChatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of ExitCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * Executes the ExitCommand which prints the goodbye message.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        ui.stopDuke();","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        return this.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     * Crafts a farewell message to the user when the ExitCommand is executed.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     * @return String representation of the farewell message","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"                + \"Sayonara! Mata ne!\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"                + \"--- The window will close in 5 seconds ---\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic for the FindCommand to search for tasks by keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    private String[] keyWord;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of FindCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * @param keyWord Array of String keywords to search for in the list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    public FindCommand(String... keyWord) {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     * Executes the FindCommand to filter the tasks according to the keyword","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * specified by the user and print out all the matching tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     * @param tasks List of tasks to keep track of in the to-do list","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles reading/writing of data to txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        StringBuilder respondMessage \u003d new StringBuilder(this.toString());","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c this.keyWord.length; i++) {","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            respondMessage.append(tasks.findTasks(this.keyWord[i]));","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"        return respondMessage.append(\"\\n________________________________________\").toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation to indicate that FindCommand has been successfully executed.","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * @return String to notify user of the following tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"                + \"Here are the matching tasks in your to-do list:\";","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"bensohh":53}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic of the Help Command when user input \"--help\".","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"     * Executes the Help Command and list out all the available commands and","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     * examples for the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response from ChatBot after executing the command","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"                + \"list -\u003e list out all the tasks\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"                + \"todo -\u003e creates a todo task\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"                + \"deadline -\u003e creates a deadline task, add /by to specify deadline\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"                + \"event -\u003e creates an event task, add /at to specify location/date\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"                + \"mark -\u003e marks a task as done in the task list\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                + \"unmark -\u003e marks a task as not done in the task list\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                + \"delete -\u003e removes the task from the task list\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"                + \"find -\u003e searches for task with the same keyword\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"                + \"undo -\u003e returns to the state before execution of the previous command\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"                + \"bye -\u003e end and close the ChatBot\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"                + \"________________________________________\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    };","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"bensohh":34}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic of a ListCommand when the user inputs the keyword list.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     * Executes the ListCommand and printing out each task in a single line,","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * consisting of the task type (T, D, E), task status (completed tasks are marked with X) and","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        return this + tasks.compileAllTasks()","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                + \"\\n________________________________________\";","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation of successfully executing the ListCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     * @return String to notify the user of the tasks he has in his to-do list","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"                + \"Here are the tasks in your to-do list:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":40}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic for the MarkCommand when the user wants to mark a certain task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of MarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     * @param taskNumber Integer representing the task number to mark","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * Executes the MarkCommand by marking the task specified as completed with an \u0027X\u0027.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * Stores the updated tasks by writing to the txt file.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the specified task is invalid","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occurred while writing data to the txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        if (this.taskNumber \u003e tasks.size() || this.taskNumber \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There is no such task number!\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"                    + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        tasks.getTask(this.taskNumber - 1).markTaskDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        return this","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"                + \"  \"","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                + tasks.getTask(this.taskNumber - 1).toString()","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                + \"\\n________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation of successfully executing the MarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"     * @return String to notify the user that the specified task has been marked","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"                + \"Good Job! I have marked this task as done:\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"     * Checks if the Object o is the same as an instance of MarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"     * @param o Object to be compared against an instance of MarkCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     * @return true if the Object is an instance of MarkCommand and both have the same task number, else","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"     *     return false","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"        if (o instanceof MarkCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"            MarkCommand t \u003d (MarkCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"            return t.taskNumber \u003d\u003d this.taskNumber;","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":88}},{"path":"src/main/java/duke/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic for an Undo Command when a user wishes to restore","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" * to the previous state (before execution of command).","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    private String commandToUndo;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    // Messages to return for the various Commands","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    private final String undoMarkMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"            + \"Undo Complete! I unmarked the task\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    private final String undoUnmarkMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"            + \"Undo Complete! I marked the task\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";;","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    private final String undoTodoMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"            + \"Undo Complete! I deleted the todo task\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";;","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    private final String undoDeadlineMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            + \"Undo Complete! I deleted the deadline task\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";;","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    private final String undoEventMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"            + \"Undo Complete! I deleted the event task\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    private final String undoDeleteMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"            + \"Undo Complete! I added back the deleted task\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    private final String undoDefaultMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            + \"Error! Cannot undo the previous command \u003e.\u003c\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of UndoCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"     * @param commandToUndo Command type that the user wishes to undo","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"     * @param taskDescription Description of the task (Add Commands)","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"     * @param taskNumber Task number that the user indicated (Mark, Unmark commands)","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    public UndoCommand(String commandToUndo, String taskDescription, int taskNumber) {","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        this.commandToUndo \u003d commandToUndo;","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"     * Executes the Undo Command which restores the ChatBot to the version before","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"     * the command has been executed. This only works for (Add, Delete, Mark, Unmark commands).","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"     * @return String representation indicating the success/failure of the undo command","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if an error occurs in the execution of the commands","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occurs in the execution of the commands when reading","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"     *     or writing to the txt file","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"        Command c;","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        switch (commandToUndo) {","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"            c \u003d new UnmarkCommand(this.taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"            return undoMarkMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"            c \u003d new MarkCommand(this.taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"            return undoUnmarkMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"            c \u003d new DeleteCommand(tasks.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"            return undoTodoMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"            c \u003d new DeleteCommand(tasks.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"            return undoDeadlineMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"        case \"event\":","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"            c \u003d new DeleteCommand(tasks.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"            return undoEventMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"            Task taskToUndo \u003d storage.formatString(this.taskDescription);","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"            tasks.add(taskToUndo);","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"            return undoDeleteMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"        default:","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"            return undoDefaultMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"     * Checks if two UndoCommands are the same.","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"     * @param o Object to be compared against an instance of UndoCommand","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"     * @return true if the Object is an instance of UndoCommand with the same parameters","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"        if (o instanceof UndoCommand) {","lastModifiedDate":"2022-09-16"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"            UndoCommand u \u003d (UndoCommand) o;","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"            if (!this.commandToUndo.equals(u.commandToUndo)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"                return false;","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"            if (this.taskNumber !\u003d u.taskNumber) {","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"                return false;","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"            if (this.taskDescription !\u003d null) {","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"                return this.taskDescription.equals(u.taskDescription);","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"bensohh"},"content":"                return u.taskDescription \u003d\u003d null;","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"bensohh":134}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic for the UnmarkCommand when the user wants to unmark a certain task as","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * not completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of UnmarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     * @param taskNumber Integer representing the task number to delete","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * Executes the UnmarkCommand by unmarking the task specified as not completed by removing","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * the \u0027X\u0027 symbol. Storing the updated tasks by writing to the txt file.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the specified task is invalid","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occurred while writing data to the txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        if (this.taskNumber \u003e tasks.size() || this.taskNumber \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There is no such task number!\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"                    + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        tasks.getTask(this.taskNumber - 1).markTaskUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        return this","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"                + \"  \"","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                + tasks.getTask(this.taskNumber - 1).toString()","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                + \"\\n________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation of successfully executing the UnmarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"     * @return String to notify the user that the specified task has been unmarked","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"                + \"Alright! I have marked this task as not done yet:\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"     * Checks if the Object o is the same as an instance of UnmarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"     * @param o Object to be compared against an instance of UnmarkCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     * @return true if the Object is an instance of UnmarkCommand and both have the same task number, else","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"     *     return false","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"        if (o instanceof UnmarkCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"            UnmarkCommand t \u003d (UnmarkCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"            return t.taskNumber \u003d\u003d this.taskNumber;","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":88}},{"path":"src/main/java/duke/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Encapsulates the logic for a WrongCommand when the user key in keywords that are","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * not recognised by the ChatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class WrongCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * Executes the WrongCommand by informing the user that the ChatBot does not recognise","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * the command and the ChatBot will request for another input.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * @param tasks List that keeps track of the tasks added/removed","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param ui Ui that handles the interaction with user inputs","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @param storage Storage that handles the writing/reading of data from a txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * @return String that represents the response of ChatBot after executing the command","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        return this.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * Gives a String representation of successfully executing the WrongCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     * @return String to notify the user that the input command is not recognised","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"                + \"Sorry! I don\u0027t know what that means :(\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"                + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":40}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":" * Encapsulates the errors that occur that are specific to the ChatBot/Duke mainly","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * due to invalid inputs from the user. Invalid tasks number specified, unrecognised","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * commands, empty TaskList during Marking/Unmarking/Deleting.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * Extends from Task as it is a more specific/well-defined","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * task, it is differentiated with the \"deadline\" keyword in user-input.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    //String field to store details after /by keyword","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    protected String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Deadline and it also utilises","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * the constructor of its parent class (Task)","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * @param description String that contains the details about the task","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * @param by String that contains the information of the deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param isDone Boolean to keep track if the task has been marked before","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     * Provides a String representation of the Deadline task.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * @return String representation of a task with a Deadline","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * Extends from Task as it is a more specific/well-defined","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * task, it is differentiated with the \"event\" keyword in user-input.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    //String field to store the details after /at keyword","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    private String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Event and it also utilises","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * the constructor of the parent class.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * @param description String that contains the details about the task","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param at String that contains the information of the specific time of event","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @param isDone Boolean to keep track if the task has been marked before","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     * Provides a String representation of the Event task.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * @return String representation of a task with a specific time-frame.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * Simulates the individual task entered by the user and","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * encapsulates the task description as well as task status","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" * within its fields.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    //To encapsulate the information regarding the task","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    //To keep track of the status of the task (done/not done)","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param description String describing the task to be done.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @param isDone Boolean to keep track if the task has been marked before","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     * Checks the status of the task (done/undone) and mark it with an X if it is done.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     * @return String representation of \"X\" for tasks that are done and an empty space","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     *     \" \" for tasks that are undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     * Marks the field isDone for each task as done (true).","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public void markTaskDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * Marks the field isDone for each task as undone (false).","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public void markTaskUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"     * Provides a string representation of the task status and task","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"     * description as follows \"[task status] task_description\".","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"     * @return String representation of the formatted task.","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":62}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Simulates the list used to store the Tasks added by the user","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" * and provide basic operations similar to a to-do list.","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of TaskList when provided with","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * a list of tasks (there are existing data stored in a local txt file).","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param taskInStorage ArrayList of tasks retrieved from a local txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskInStorage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        this.taskList \u003d taskInStorage;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of TaskList when there are no data stored","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     * locally.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     * @param task Task to be added into the list","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * @param taskNumber Specified task to be removed","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        this.taskList.remove(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"     * @return Integer representing the number of tasks in the TaskList","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"     * Retrieves the specified task.","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"     * @param taskIndex Specified task to retrieve from the TaskList","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"     * @return Task corresponding to the number that was specified","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"     * @return true if the TaskList is empty, otherwise return false","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"     * Iterates through the TaskList to find tasks with matching keywords.","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"     * @param keyWord String representing the keyWord to search","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"     * @return String representation of the compiled tasks","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"    public String findTasks(String keyWord) {","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"        StringBuilder tasksWithKeyWord \u003d new StringBuilder();","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"        Stream\u003cTask\u003e taskStream \u003d this.taskList.stream();","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"        taskStream.map(task -\u003e (this.taskList.indexOf(task) + 1) + \". \" + task.toString())","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"                .filter(description -\u003e description.contains(keyWord))","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"                .forEach(matchDescription -\u003e tasksWithKeyWord","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"                        .append(\"\\n\")","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"                        .append(matchDescription));","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"        return tasksWithKeyWord.toString();","lastModifiedDate":"2022-09-07"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"     * Compiles all the tasks into a String format where each task","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"     * takes up a single line.","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"     * @return String representation of the compiled tasks","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"    public String compileAllTasks() {","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"        StringBuilder compiledTasks \u003d new StringBuilder();","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"        Stream\u003cTask\u003e taskStream \u003d this.taskList.stream();","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"        taskStream.map(task -\u003e (this.taskList.indexOf(task) + 1) + \". \" + task.toString())","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"                .forEach(description -\u003e compiledTasks","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"                        .append(\"\\n\")","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"                        .append(description));","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"        return compiledTasks.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":112}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" * Extends from Task as it is a more specific/well-defined task,","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * it is differentiated by having no deadline/due dates in user-input.","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Todo and it also utilises","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * the constructor of it\u0027s parent class.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * @param description String that contains the details about the task","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     * @param isDone Boolean to keep track if the task has been marked before","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     * Provides a String representation of the Todo task.","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     * @return String representation of a task without deadline/due dates.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     * Checks if two Todo Task are the same.","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     * @param o Object to be compared against an instance of Todo","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     * @return true if the Object is an instance of Todo and both have the same task","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"     *     description/toString representation","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"        if (o instanceof Todo) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"            Todo t \u003d (Todo) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            return Objects.equals(t.toString(), this.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":55}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.command.UndoCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" * Handles the process of parsing the user inputs and carry out the","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":" * corresponding commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    //The important keywords to check against with the user-input","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public static final String EXITCOMMAND \u003d \"bye\";","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    public static final String LISTCOMMAND \u003d \"list\";","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    public static final String MARKCOMMAND \u003d \"mark\";","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    public static final String UNMARKCOMMAND \u003d \"unmark\";","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    public static final String DELETECOMMAND \u003d \"delete\";","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    public static final String FINDCOMMAND \u003d \"find\";","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    public static final String HELPCOMMAND \u003d \"help\";","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    //The Strings representing the 3 types of Tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    //Extensions implemented for C-Undo","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    public static final String UNDO \u003d \"undo\";","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    //Keeps track of previous command details","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    private static String commandToUndo \u003d \"wrong\";","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    private static String taskDescription \u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"    private static int taskNumber \u003d -1;","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"    //List of customised error messages","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    private static String emptyInputError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"            + \"Empty strings or blanks are invalid!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"    private static String deleteNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The task number for deleting must be specified!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"    private static String deleteInvalidError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! Please input a number after delete keyword!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    private static String markNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The task number for marking must be specified!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"    private static String markInvalidError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! Please input a number after mark keyword!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"    private static String unmarkNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The task number for unmarking must be specified!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"    private static String unmarkInvalidError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! Please input a number after unmark keyword!\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    private static String todoNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"    private static String deadlineNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"    private static String eventNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The description of an event cannot be empty.\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    private static String findNullError \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"            + \"OOPS!!! The keyword to search cannot be empty.\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"            + \"________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of a Parser.","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"    public Parser() {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"     * Processes the user input, checks it against the specified commands and carry out","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"     * the valid commands depending on the keywords used.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"     * @param fullCommand String representing the entire line of user input","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"     * @return an instance of a Command corresponding to the keyword used in user input","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if an error specific to the ChatBot occurs","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"        //Exception: When the user input is empty/blank","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"        if (fullCommand.isEmpty() || fullCommand.isBlank()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(emptyInputError);","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"        //To obtain the first word in the user-input, used to check for keyword/command","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"        String[] array \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"bensohh"},"content":"        String firstText \u003d array[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"bensohh"},"content":"        if (fullCommand.equals(EXITCOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"bensohh"},"content":"            return handleExitCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"bensohh"},"content":"        } else if (fullCommand.equals(LISTCOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"bensohh"},"content":"            return handleListCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"bensohh"},"content":"        } else if (fullCommand.equals(UNDO)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"bensohh"},"content":"            return handleUndoCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"bensohh"},"content":"        } else if (fullCommand.equals(HELPCOMMAND)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"bensohh"},"content":"            return handleHelpCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(DELETECOMMAND)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"bensohh"},"content":"            return handleDeleteCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(MARKCOMMAND)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"bensohh"},"content":"            return handleMarkCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(UNMARKCOMMAND)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"bensohh"},"content":"            return handleUnmarkCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(TODO)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"bensohh"},"content":"            return handleTodoCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(DEADLINE)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"bensohh"},"content":"            return handleDeadlineCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(EVENT)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"bensohh"},"content":"            return handleEventCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(FINDCOMMAND)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"bensohh"},"content":"            return handleFindCommand(array);","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"bensohh"},"content":"            return new WrongCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of an ExitCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"bensohh"},"content":"     * @return ExitCommand when user input \"bye\"","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"bensohh"},"content":"    public static ExitCommand handleExitCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"bensohh"},"content":"        setAttributes(\"wrong\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":149,"author":{"gitId":"bensohh"},"content":"        return new ExitCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a ListCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"bensohh"},"content":"     * @return ListCommand when user input \"list\"","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"bensohh"},"content":"    public static ListCommand handleListCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"bensohh"},"content":"        setAttributes(\"wrong\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"bensohh"},"content":"        return new ListCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":160,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":161,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":162,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":163,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a UndoCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":164,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":165,"author":{"gitId":"bensohh"},"content":"     * @return Command if user input \"undo\"","lastModifiedDate":"2022-09-16"},{"lineNumber":166,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":167,"author":{"gitId":"bensohh"},"content":"    public static Command handleUndoCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":168,"author":{"gitId":"bensohh"},"content":"        Command c \u003d new UndoCommand(commandToUndo, taskDescription, taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":169,"author":{"gitId":"bensohh"},"content":"        setAttributes(\"wrong\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":170,"author":{"gitId":"bensohh"},"content":"        return c;","lastModifiedDate":"2022-09-08"},{"lineNumber":171,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":172,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":173,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":174,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a HelpCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":175,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":176,"author":{"gitId":"bensohh"},"content":"     * @return HelpCommand if user input \"help\"","lastModifiedDate":"2022-09-16"},{"lineNumber":177,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":178,"author":{"gitId":"bensohh"},"content":"    public static HelpCommand handleHelpCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":179,"author":{"gitId":"bensohh"},"content":"        setAttributes(\"wrong\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":180,"author":{"gitId":"bensohh"},"content":"        return new HelpCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":181,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":182,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":183,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":184,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a DeleteCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":185,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":186,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":187,"author":{"gitId":"bensohh"},"content":"     * @return DeleteCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":188,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":189,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":190,"author":{"gitId":"bensohh"},"content":"    public static DeleteCommand handleDeleteCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":191,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(deleteNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":193,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":195,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":196,"author":{"gitId":"bensohh"},"content":"            int inputNumber \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2022-09-01"},{"lineNumber":197,"author":{"gitId":"bensohh"},"content":"            setAttributes(DELETECOMMAND, null, inputNumber);","lastModifiedDate":"2022-09-16"},{"lineNumber":198,"author":{"gitId":"bensohh"},"content":"            return new DeleteCommand(inputNumber);","lastModifiedDate":"2022-09-01"},{"lineNumber":199,"author":{"gitId":"bensohh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":200,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(deleteInvalidError);","lastModifiedDate":"2022-09-16"},{"lineNumber":201,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":202,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":203,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":204,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":205,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a MarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":206,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":207,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":208,"author":{"gitId":"bensohh"},"content":"     * @return MarkCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":209,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":210,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":211,"author":{"gitId":"bensohh"},"content":"    public static MarkCommand handleMarkCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":212,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(markNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":214,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":216,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":217,"author":{"gitId":"bensohh"},"content":"            int inputNumber \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2022-09-01"},{"lineNumber":218,"author":{"gitId":"bensohh"},"content":"            setAttributes(MARKCOMMAND, null, inputNumber);","lastModifiedDate":"2022-09-16"},{"lineNumber":219,"author":{"gitId":"bensohh"},"content":"            return new MarkCommand(inputNumber);","lastModifiedDate":"2022-09-01"},{"lineNumber":220,"author":{"gitId":"bensohh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":221,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(markInvalidError);","lastModifiedDate":"2022-09-16"},{"lineNumber":222,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":223,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":224,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":225,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a UnmarkCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":228,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":229,"author":{"gitId":"bensohh"},"content":"     * @return UnmarkCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":230,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":231,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":232,"author":{"gitId":"bensohh"},"content":"    public static UnmarkCommand handleUnmarkCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":233,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(unmarkNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":235,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":237,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":238,"author":{"gitId":"bensohh"},"content":"            int inputNumber \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2022-09-01"},{"lineNumber":239,"author":{"gitId":"bensohh"},"content":"            setAttributes(UNMARKCOMMAND, null, inputNumber);","lastModifiedDate":"2022-09-16"},{"lineNumber":240,"author":{"gitId":"bensohh"},"content":"            return new UnmarkCommand(inputNumber);","lastModifiedDate":"2022-09-01"},{"lineNumber":241,"author":{"gitId":"bensohh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":242,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(unmarkInvalidError);","lastModifiedDate":"2022-09-16"},{"lineNumber":243,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":244,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":245,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":246,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":247,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a TodoCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":248,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":249,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":250,"author":{"gitId":"bensohh"},"content":"     * @return AddCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":251,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":252,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":253,"author":{"gitId":"bensohh"},"content":"    public static AddCommand handleTodoCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":254,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":255,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(todoNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":256,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":257,"author":{"gitId":"bensohh"},"content":"        setAttributes(TODO, null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":258,"author":{"gitId":"bensohh"},"content":"        return new AddCommand(0, array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":259,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":260,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":261,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":262,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a DeadlineCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":263,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":264,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"bensohh"},"content":"     * @return AddCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":266,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":267,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":268,"author":{"gitId":"bensohh"},"content":"    public static AddCommand handleDeadlineCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":269,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":270,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(deadlineNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":271,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":272,"author":{"gitId":"bensohh"},"content":"        setAttributes(DEADLINE, null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":273,"author":{"gitId":"bensohh"},"content":"        return new AddCommand(1, array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":274,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":275,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":276,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":277,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of an EventCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":278,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":279,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":280,"author":{"gitId":"bensohh"},"content":"     * @return AddCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":281,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":282,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":283,"author":{"gitId":"bensohh"},"content":"    public static AddCommand handleEventCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":284,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":285,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(eventNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":286,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":287,"author":{"gitId":"bensohh"},"content":"        setAttributes(EVENT, null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":288,"author":{"gitId":"bensohh"},"content":"        return new AddCommand(2, array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":289,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":290,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":291,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":292,"author":{"gitId":"bensohh"},"content":"     * Handles the parsing of a FindCommand.","lastModifiedDate":"2022-09-16"},{"lineNumber":293,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":294,"author":{"gitId":"bensohh"},"content":"     * @param array String array containing the command details","lastModifiedDate":"2022-09-16"},{"lineNumber":295,"author":{"gitId":"bensohh"},"content":"     * @return FindCommand if the user inputs a valid command","lastModifiedDate":"2022-09-16"},{"lineNumber":296,"author":{"gitId":"bensohh"},"content":"     * @throws DukeException if the user inputs an invalid command","lastModifiedDate":"2022-09-16"},{"lineNumber":297,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":298,"author":{"gitId":"bensohh"},"content":"    public static FindCommand handleFindCommand(String[] array) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":299,"author":{"gitId":"bensohh"},"content":"        setAttributes(\"wrong\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":300,"author":{"gitId":"bensohh"},"content":"        if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":301,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(findNullError);","lastModifiedDate":"2022-09-16"},{"lineNumber":302,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":303,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":304,"author":{"gitId":"bensohh"},"content":"        // User can input multiple keywords separated by a comma \",\" e.g. find book, clean, concert","lastModifiedDate":"2022-09-16"},{"lineNumber":305,"author":{"gitId":"bensohh"},"content":"        String[] searchKeywords \u003d array[1].split(\",\");","lastModifiedDate":"2022-09-02"},{"lineNumber":306,"author":{"gitId":"bensohh"},"content":"        return new FindCommand(searchKeywords);","lastModifiedDate":"2022-09-02"},{"lineNumber":307,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":308,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":309,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":310,"author":{"gitId":"bensohh"},"content":"     * Sets the details of the previous commands into the 3 static fields.","lastModifiedDate":"2022-09-16"},{"lineNumber":311,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":312,"author":{"gitId":"bensohh"},"content":"     * @param commandToUndo String representation of the type of command to undo","lastModifiedDate":"2022-09-16"},{"lineNumber":313,"author":{"gitId":"bensohh"},"content":"     * @param taskDescription String representation of task details","lastModifiedDate":"2022-09-16"},{"lineNumber":314,"author":{"gitId":"bensohh"},"content":"     * @param taskNumber Task number to execute command on","lastModifiedDate":"2022-09-16"},{"lineNumber":315,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":316,"author":{"gitId":"bensohh"},"content":"    public static void setAttributes(String commandToUndo, String taskDescription, int taskNumber) {","lastModifiedDate":"2022-09-16"},{"lineNumber":317,"author":{"gitId":"bensohh"},"content":"        Parser.commandToUndo \u003d commandToUndo;","lastModifiedDate":"2022-09-16"},{"lineNumber":318,"author":{"gitId":"bensohh"},"content":"        Parser.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-09-16"},{"lineNumber":319,"author":{"gitId":"bensohh"},"content":"        Parser.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-09-16"},{"lineNumber":320,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":321,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":322,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":323,"author":{"gitId":"bensohh"},"content":"     * Sets the taskDescription.","lastModifiedDate":"2022-09-16"},{"lineNumber":324,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":325,"author":{"gitId":"bensohh"},"content":"     * @param description String representation of the task.","lastModifiedDate":"2022-09-16"},{"lineNumber":326,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":327,"author":{"gitId":"bensohh"},"content":"    public static void setTaskDescription(String description) {","lastModifiedDate":"2022-09-08"},{"lineNumber":328,"author":{"gitId":"bensohh"},"content":"        Parser.taskDescription \u003d description;","lastModifiedDate":"2022-09-08"},{"lineNumber":329,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":330,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":330}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" * Handles reading/writing of tasks to a local txt file.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * @param filePath String representation of the relative file path","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     * Searches for the specified file and directory to generate a list of Tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"     * from a local txt file.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"     * @return ArrayList of Task containing all the task specified in the txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     *     or an empty ArrayList of Task if the txt file is empty/does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occur when reading/writing to directories and file","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        ArrayList\u003cTask\u003e taskStored \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        File fileToLoad \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        if (!fileToLoad.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            File fileDirectory \u003d new File(\"./data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"                assert fileDirectory.exists(); // Assuming that the directory is created","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"                fileToLoad.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"                assert fileToLoad.exists(); // Assuming that the file is created","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"                System.out.println(\"Creating new directory data and new file tasks.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                fileToLoad.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                assert fileToLoad.exists(); // Assuming that the file is created","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"                System.out.println(\"Creating new file tasks.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        Scanner sc \u003d new Scanner(fileToLoad);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"            taskStored.add(formatString(sc.nextLine()));","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        return taskStored;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"     * Parses the data stored in the txt file and format them before creating new","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"     * tasks according to the task type, task status and task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"     * @param stringStored String representation of each line stored in the txt file","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"     * @return Task corresponding to the stored String after formatting","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"    public Task formatString(String stringStored) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"        // To isolate the string containing the task description","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"        String s1 \u003d stringStored.substring(7);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"        // To isolate the string containing the task status","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        String s2 \u003d stringStored.substring(0, 6);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"        // To keep track if the task has been marked completed","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"        boolean isCompleted \u003d s2.contains(\"[X]\");","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"        if (s2.contains(\"[T]\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"            return new Todo(s1, isCompleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"        } else if (s2.contains(\"[D]\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"            String[] separateBy \u003d s1.split(\" \\\\(by: \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"            return new Deadline(separateBy[0], separateBy[1].substring(0, separateBy[1].length() - 1), isCompleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"            assert s2.contains(\"[E]\");","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"            String[] separateAt \u003d s1.split(\" \\\\(at: \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"            return new Event(separateAt[0], separateAt[1].substring(0, separateAt[1].length() - 1), isCompleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"     * Writes the list of tasks to a local txt file for storing.","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"     * @param tasks List of tasks to be stored","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if an error occurs while writing to the txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"        String dataToStore \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"                dataToStore \u003d tasks.getTask(i).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"                dataToStore \u003d dataToStore + \"\\n\" + tasks.getTask(i).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"        fileWriter.write(dataToStore);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"        fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":112}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":" * Handles the interactions with the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * @author bensohh","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" * @version CS2103T AY 22/23 Sem 1 (G01)","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    private Stage stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * Creates an instance of Ui.","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public Ui(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     * Crafts a welcome message for the user.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * @return String representation of a Welcome Message","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        return \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"                + \"Kon\u0027nichiwa, I am Raijinmaru! A Fat Capybara!\\n\"","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"                + \"How may I assist you today?\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"                + \"Type help for list of commands\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"                + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"     * Displays the error messages.","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"     * @param errorMessage String representation of the error message to be shown","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"     * Stops the ChatBot and closes the window after 5 seconds.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    public void stopDuke() {","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        PauseTransition closeWindow \u003d new PauseTransition(Duration.seconds(5));","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        closeWindow.setOnFinished(e -\u003e this.stage.close());","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        closeWindow.play();","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"      \u003cTextFlow maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"              \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"300.0\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"bensohh":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: cornsilk;\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"bensohh":19}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"import duke.command.UndoCommand;","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public void parseTest() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        String[] parseInputs \u003d new String[] {\"todo Clear Linear Algebra Homework\",","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"                                             \"deadline Cook Dinner /by 2019-05-03\",","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"                                             \"event Attend Taylor Swift Concert /at 2022-02-02\",","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"                                             \"mark 1\",","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                                             \"unmark 1\",","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                                             \"undo\",","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"                                             \"delete 1\",","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"                                             \"list\",","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"                                             \"invalid\",","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"                                             \"help\",","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"                                             \"bye\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        String[] commandInputs \u003d new String[] {\"Clear Linear Algebra Homework\",","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"                                               \"Cook Dinner /by 2019-05-03\",","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"                                               \"Attend Taylor Swift Concert /at 2022-02-02\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        int[] commandTypes \u003d new int[] {0, 1, 2};","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c parseInputs.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"            if (i \u003c 3) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"                assertEquals(new AddCommand(commandTypes[i], commandInputs[i]), Parser.parse(parseInputs[i]));","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 3) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                assertEquals(new MarkCommand(1), Parser.parse(parseInputs[i]));","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 4) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"                assertEquals(new UnmarkCommand(1), Parser.parse(parseInputs[i]));","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 5) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"                assertEquals(new UndoCommand(\"unmark\", null, 1), Parser.parse(parseInputs[i]));","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 6) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"                assertEquals(new DeleteCommand(1), Parser.parse(parseInputs[i]));","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 7) {","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof ListCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 8) {","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof WrongCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 9) {","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof HelpCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof ExitCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":62}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    public void formatStringTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"        String[] testOutputs \u003d new String[] {\"[T][X] Clear Linear Algebra Homework\",","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"                                             \"[D][ ] Cook Dinner (by: May 3 2019)\",","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"                                             \"[E][X] Attend Taylor Swift Concert (at: Feb 2 2023)\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c testOutputs.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"            Storage s \u003d new Storage(\"./data/testing.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"            assertEquals(testOutputs[i], s.formatString(testOutputs[i]).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":19}},{"path":"src/test/java/duke/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"public class UiTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    public void welcomeMessageTest() {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"        String expectedOutput \u003d \"________________________________________\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"                + \"Kon\u0027nichiwa, I am Raijinmaru! A Fat Capybara!\\n\"","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"                + \"How may I assist you today?\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"                + \"Type help for list of commands\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"                + \"________________________________________\";","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"        assertEquals(expectedOutput, Ui.welcomeMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":17}},{"path":"src/test/java/duke/util/UndoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.command.UndoCommand;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    public void undoTodoCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoTodoCommand \u003d new UndoCommand(\"todo\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"todo Coding Assignment\");","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoTodoCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    public void undoDeadlineCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoDeadlineCommand \u003d new UndoCommand(\"deadline\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"deadline Coding Assignment /by 2022-05-05\");","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoDeadlineCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    public void undoEventCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoEventCommand \u003d new UndoCommand(\"event\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"event Coding Assignment /at 2022-10-10\");","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoEventCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    public void undoMarkCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoMarkCommand \u003d new UndoCommand(\"mark\", null, 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"todo Coding Assignment\");","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"mark 1\");","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoMarkCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    public void undoUnmarkCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoUnmarkCommand \u003d new UndoCommand(\"unmark\", null, 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"todo Coding Assignment\");","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"mark 1\");","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"unmark 1\");","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoUnmarkCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"    public void undoOtherCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoOtherCommand \u003d new UndoCommand(\"wrong\", null, -1);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"list\"); // Cannot undo a list command","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoOtherCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"help\"); // Cannot undo a help command","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoOtherCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"find Coding\"); // Cannot undo a find command","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoOtherCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"undo\"); // Cannot undo an undo command","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoOtherCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"bye\"); // Cannot undo an exit command","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoOtherCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"    public void undoDeleteCommandTest() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"        UndoCommand undoDeleteCommand \u003d new UndoCommand(\"delete\", null, 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"todo Coding Assignment\");","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        Parser.parse(\"delete 1\");","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"        assertEquals(Parser.parse(\"undo\"), undoDeleteCommand);","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"bensohh":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"todo read a book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"deadline finish homework /by Wednesday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"event attend IU concert /at Sunday 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"unmark 2","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"unmark 3","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"delete 3","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"delete 2","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"delete 1","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"mark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"unmark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"delete 1","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bensohh":3,"-":35}}]

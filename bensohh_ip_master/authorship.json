[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":6,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        System.out.println(ui.showWelcome());","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bensohh":58,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" * Represents a command for adding tasks to the task lists. It comprises of 3 types","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":" * of task to be created, namely todo, deadline and event.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    private int taskType;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    private String taskDetails;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     * Constructor to create an instance of AddCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * @param taskType Integer value representing the type of task, 0-TODO Task,","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     *                 1-DEADLINE Task, 2-EVENT Task","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     * @param taskDetails String representation of the task description","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * @return instance of AddCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    public AddCommand(int taskType, String taskDetails) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"     * Create the corresponding task based on the taskType in AddCommand and adds task","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     * to the TaskList. The task list is then stored on a file under data/tasks.txt","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"     * @param tasks a list to add and keep track of the tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"     * @param ui an instance of ui that handles the interaction with user inputs","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"     * @param storage a storage that handles the writing and reading of tasks from a txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"     * @throws IOException if the writeToFile method fails while storing the TaskList on a local txt file","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        if (this.taskType \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"            tasks.add(new Todo(this.taskDetails, false));","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        } else if (this.taskType \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            String[] infoArray \u003d this.taskDetails.split(\" /by \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"            tasks.add(new Deadline(infoArray[0], formatDate(infoArray[1]), false));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"            String[] infoArray \u003d this.taskDetails.split(\" /at \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"            tasks.add(new Event(infoArray[0], formatDate(infoArray[1]), false));","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        String taskDescription \u003d \"  \" + tasks.getTask(tasks.size() - 1).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"     * Takes in dates in the format YYYY-MM-DD and transform them into MMM d yyyy.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"     * (2019-05-05 to May 5 2019)","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"     * @param dateInput a String representation of the date in YYYY-MM-DD format.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"     * @return a string representation of the same date in MMM d yyyy format.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"    public String formatDate(String dateInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"            LocalDate d1 \u003d LocalDate.parse(dateInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"            return d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"        } catch (DateTimeParseException e) { //","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"            return dateInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"     * Check if it is the exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"     * @return false since an AddCommand does not terminate the ChatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"     * A string","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"     * @return","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"                + \"Got it. I have added this task:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"bensohh"},"content":"        if (o instanceof AddCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"bensohh"},"content":"            AddCommand t \u003d (AddCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"bensohh"},"content":"            if (t.taskType \u003d\u003d this.taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"bensohh"},"content":"                return Objects.equals(t.taskDetails, this.taskDetails);","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":112}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":17}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    public DeleteCommand(String taskDetails) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        //Exception: Throw an error when user tries to delete from an empty list","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There are no task left to be deleted!\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                    + \"__________________________________________________\";","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        //Exception: Throw an error when the second half after \"delete\" keyword is greater than task_list","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There is no such task number!\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"                    + \"__________________________________________________\";","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"        System.out.println(\"  \" + tasks.getTask(taskNumber - 1).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        tasks.delete(this.taskNumber - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                + \"Noted. I have removed this task:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"        if (o instanceof DeleteCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"            DeleteCommand t \u003d (DeleteCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"            return t.taskNumber \u003d\u003d this.taskNumber;","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":69}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"                + \"Adios Amigo! See you soon!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"            System.out.printf(\"%d. \" + tasks.getTask(i).toString() + \"\\n\", i + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                + \"Here are the tasks in your to-do list:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":30}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    public MarkCommand(String taskDetails) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        if (this.taskNumber \u003e tasks.size() || this.taskNumber \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There is no such task number!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        tasks.getTask(this.taskNumber - 1).markTaskDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        System.out.println(\"  \" + tasks.getTask(this.taskNumber - 1).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                + \"Good Job! I have marked this task as done:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        if (o instanceof MarkCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"            MarkCommand t \u003d (MarkCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"            return t.taskNumber \u003d\u003d this.taskNumber;","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":60}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    public UnmarkCommand(String taskDetails) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"        this.taskNumber \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        if (this.taskNumber \u003e tasks.size() || this.taskNumber \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                    + \"OOPS!!! There is no such task number!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        tasks.getTask(this.taskNumber - 1).markTaskUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        System.out.println(\"  \" + tasks.getTask(this.taskNumber - 1).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                + \"Alright! I have marked this task as not done yet:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"        if (o instanceof UnmarkCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"            UnmarkCommand t \u003d (UnmarkCommand) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"            return t.taskNumber \u003d\u003d this.taskNumber;","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":60}},{"path":"src/main/java/duke/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"public class WrongCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"                + \"OOPS! I\u0027m sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":24}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":9}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * The Deadline class extends from Task as it is a more specific/well-defined","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * task, it is differentiated with the \"deadline\" keyword in user-input.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    //String field to store details after /by keyword","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    protected String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     * Constructor method for an instance of Deadline and it also utilises","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     * the constructor of it\u0027s parent class (Task)","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * @param description String that contains the details about the task","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * @param by String that contains the information of the deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     * A string method to represent the Deadline task.","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * @return a string representation of a task with a Deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * The Event class extends from Task as it is a more specific/well-defined","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * task, it is differentiated with the \"event\" keyword in user-input.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    //String field to store the details after /at keyword","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    private String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     * Constructor method for an instance of Event and it also utilises","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     * the constructor of it\u0027s parent class (Task)","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * @param description String that contains the details about the task","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * @param at String that contains the information of the specific time of event","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     * A string method to represent the Event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     * @return a string representation of a task with a specific time-frame.","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":" * This class is used to simulate the individual task entered by the","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":" * user and encapsulates the task description as well as task status","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" * within its fields.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    //To encapsulate the information regarding the task","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    //To keep track of the status of the task (done/not done)","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    protected boolean createBefore;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     * This is a constructor for Task. It creates an instance of Task and sets","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"     * the fields of the Task instance.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"     * @param description This is a String describing the task to be done.","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"     * @return an instance of Task","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"     * This method is used to check the status of the task (done/undone)","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"     * and mark it with an X if it is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"     * @return a String representation of \"X\" for tasks that are done and an empty space \" \" for tasks that are undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"     * This method is used to mark the field isDone for each task as done (true).","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public void markTaskDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"     * This method is used to mark the field isDone for each task as undone (false).","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    public void markTaskUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"     * This method provides a string representation of the task status and task","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"     * description as follows \"[task status] task_description\".","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"     * @return a String representation of the formatted task.","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":62}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskInStorage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"        this.taskList \u003d taskInStorage;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        this.taskList.remove(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":39}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":" * The Todo class extends from Task as it is a more specific/well-defined","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * task, it is differentiated by having no deadline/due dates in user-input.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"     * Constructor method for an instance of Todo and it also utilises","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"     * the constructor of it\u0027s parent class (Task)","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"     * @param description String that contains the details about the task","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"     * A string method to represent the Todo task.","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"     * @return a string representation of a task without deadline/due dates.","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        if (o instanceof Todo) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            Todo t \u003d (Todo) o;","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"            return Objects.equals(t.toString(), this.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":44}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"    //The important keywords to check against with the user-input","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    public static final String EXITCOMMAND \u003d \"bye\";","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    public static final String LISTCOMMAND \u003d \"list\";","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    public static final String MARKCOMMAND \u003d \"mark\";","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    public static final String UNMARKCOMMAND \u003d \"unmark\";","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"    public static final String DELETECOMMAND \u003d \"delete\";","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    //The Strings representing the 3 types of Tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"    public Parser() {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"        if (fullCommand.isEmpty() || fullCommand.isBlank()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"            String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"                    + \"Please enter valid inputs, empty strings or blanks are not valid!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        //To obtain the first word in the user-input, used to check for keyword/command","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        String[] array \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"        String firstText \u003d array[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        if (fullCommand.equals(EXITCOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"        } else if (fullCommand.equals(LISTCOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(DELETECOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"            if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"                String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"                        + \"OOPS!!! The task number for deleting must be specified!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"            return new DeleteCommand(array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(MARKCOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"            if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"                String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"                        + \"OOPS!!! The task number for marking must be specified!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"            return new MarkCommand(array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(UNMARKCOMMAND)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"            if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"                String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"                        + \"OOPS!!! The task number for unmarking must be specified!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"            return new UnmarkCommand(array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(TODO)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"            if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"                String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"                        + \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"            return new AddCommand(0, array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(DEADLINE)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"            if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"                String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"                        + \"OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"            return new AddCommand(1, array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        } else if (firstText.equals(EVENT)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"            if (array.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"                String errorMessage \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"bensohh"},"content":"                        + \"OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"bensohh"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bensohh"},"content":"            return new AddCommand(2, array[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"bensohh"},"content":"            return new WrongCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":98}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"        ArrayList\u003cTask\u003e taskStored \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"        File fileToLoad \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        if (!fileToLoad.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"            File fileDirectory \u003d new File(\"./data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"                fileToLoad.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"                System.out.println(\"Creating new directory data and new file tasks.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"                fileToLoad.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"                System.out.println(\"Creating new file tasks.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"        Scanner sc \u003d new Scanner(fileToLoad);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            taskStored.add(formatString(sc.nextLine()));","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"        return taskStored;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"    public Task formatString(String stringStored) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"        // To isolate the string containing the task description","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bensohh"},"content":"        String s1 \u003d stringStored.substring(7);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bensohh"},"content":"        // To isolate the string containing the task status","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bensohh"},"content":"        String s2 \u003d stringStored.substring(0, 6);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bensohh"},"content":"        // To keep track if the task has been marked completed","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bensohh"},"content":"        boolean isCompleted \u003d s2.contains(\"[X]\");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bensohh"},"content":"        if (s2.contains(\"[T]\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bensohh"},"content":"            return new Todo(s1, isCompleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bensohh"},"content":"        } else if (s2.contains(\"[D]\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bensohh"},"content":"            String[] separateBy \u003d s1.split(\" \\\\(by: \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bensohh"},"content":"            return new Deadline(separateBy[0], separateBy[1].substring(0, separateBy[1].length() - 1), isCompleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bensohh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bensohh"},"content":"            String[] separateAt \u003d s1.split(\" \\\\(at: \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bensohh"},"content":"            return new Event(separateAt[0], separateAt[1].substring(0, separateAt[1].length() - 1), isCompleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"bensohh"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bensohh"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bensohh"},"content":"        String dataToStore \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bensohh"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bensohh"},"content":"                dataToStore \u003d tasks.getTask(i).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bensohh"},"content":"                dataToStore \u003d dataToStore + \"\\n\" + tasks.getTask(i).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bensohh"},"content":"        fileWriter.write(dataToStore);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bensohh"},"content":"        fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":88}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"//Deals with interactions with the user","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":" * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"    public Ui() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"     * Insert Javadocs","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"        String logo \u003d \" _           _        \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"                + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"                + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"                + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"                + \"|_____|\\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"                + \"Hola Amigo! My name is\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                + logo","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"                + \"How may I assist you today?\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"                + \"__________________________________________________\";","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"        System.out.println(\"__________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bensohh":44}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"    public void parseTest() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"        String[] parseInputs \u003d new String[] {\"todo Clear Linear Algebra Homework\",","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"                                             \"deadline Cook Dinner /by 2019-05-03\",","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"                                             \"event Attend Taylor Swift Concert /at 2022-02-02\",","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"                                             \"mark 1\",","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"                                             \"unmark 1\",","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bensohh"},"content":"                                             \"delete 1\",","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bensohh"},"content":"                                             \"list\",","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bensohh"},"content":"                                             \"invalid\",","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bensohh"},"content":"                                             \"bye\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bensohh"},"content":"        String[] commandInputs \u003d new String[] {\"Clear Linear Algebra Homework\",","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bensohh"},"content":"                                               \"Cook Dinner /by 2019-05-03\",","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bensohh"},"content":"                                               \"Attend Taylor Swift Concert /at 2022-02-02\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bensohh"},"content":"        int[] commandTypes \u003d new int[] {0, 1, 2};","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c parseInputs.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bensohh"},"content":"            if (i \u003c 3) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bensohh"},"content":"                assertEquals(new AddCommand(commandTypes[i], commandInputs[i]), Parser.parse(parseInputs[i]));","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 3) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bensohh"},"content":"                assertEquals(new MarkCommand(\"1\"), Parser.parse((parseInputs[i])));","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 4) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bensohh"},"content":"                assertEquals(new UnmarkCommand(\"1\"), Parser.parse((parseInputs[i])));","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 5) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bensohh"},"content":"                assertEquals(new DeleteCommand(\"1\"), Parser.parse((parseInputs[i])));","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 6) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof ListCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bensohh"},"content":"            } else if (i \u003d\u003d 7) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof WrongCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bensohh"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bensohh"},"content":"                assertTrue(Parser.parse(parseInputs[i]) instanceof ExitCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bensohh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":54}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    public void formatStringTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"        String[] testOutputs \u003d new String[] {\"[T][X] Clear Linear Algebra Homework\",","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"                                             \"[D][ ] Cook Dinner (by: May 3 2019)\",","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"                                             \"[E][X] Attend Taylor Swift Concert (at: Feb 2 2023)\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"        for (int i \u003d 0; i \u003c testOutputs.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"            Storage s \u003d new Storage(\"./data/testing.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"            assertEquals(testOutputs[i], s.formatString(testOutputs[i]).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":19}},{"path":"src/test/java/duke/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"package duke.util;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"public class UiTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"    public void showWelcomeTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"        String logo \u003d \" _           _        \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"                + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"                + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"                + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"                + \"|_____|\\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"        String expectedOutput \u003d \"__________________________________________________\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"                + \"Hola Amigo! My name is\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"                + logo","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"                + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"                + \"How may I assist you today?\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"                + \"__________________________________________________\";","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"        assertEquals(expectedOutput, ui.showWelcome());","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bensohh":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bensohh"},"content":"todo read a book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"bensohh"},"content":"deadline finish homework /by Wednesday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"bensohh"},"content":"event attend IU concert /at Sunday 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"bensohh"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"bensohh"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"bensohh"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"bensohh"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"bensohh"},"content":"unmark 2","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bensohh"},"content":"unmark 3","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bensohh"},"content":"delete 3","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bensohh"},"content":"delete 2","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bensohh"},"content":"delete 1","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bensohh"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bensohh"},"content":"mark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bensohh"},"content":"unmark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bensohh"},"content":"delete 1","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bensohh"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"bensohh":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"bensohh"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bensohh":1,"-":37}}]

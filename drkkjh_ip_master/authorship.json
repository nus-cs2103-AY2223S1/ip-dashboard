[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"checkstyle {","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drkkjh":20,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":" * Duke, the personal chatbot that helps a person keep track of","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":" * todos, events, deadlines.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * Constructs an instance of Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     * @param filePath the file location for saving data","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"            taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"    public String getGreeting() {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        return ui.greet();","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"     * Gets Duke\u0027s response to the user\u0027s input.","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     * @param input the input from the user","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     * @return Duke\u0027s response to the user\u0027s input","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"            return c.handle(this.storage, this.ui, this.taskList);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"            return \"Duke says:\\n\" + ui.formatMessage(e.toString());","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"drkkjh":52,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":" * A \u003ccode\u003eRuntimeException\u003c/code\u003e thrown by Duke due to invalid input given by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"    private String message;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"     * Constructs a new exception which is thrown by Duke with the message intended.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"     * @param message the message to be shown to the user","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     * The string representation of this exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"     * @return the string representation","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"        return this.message;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":29}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"import duke.command.MarkUndoneCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"import duke.command.OnDateCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":" * Handles the input given by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * Handles the case where the user inputs a \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @param   input the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * @return  the \u003ccode\u003eTodo\u003c/code\u003e that the user specified","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    public static Todo handleTodo(String input) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"        return new Todo(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"     * Handles the case where the user inputs a \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     * @param   input the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     * @return  the \u003ccode\u003eEvent\u003c/code\u003e that the user specified","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"    public static Event handleEvent(String input) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Did you forget to specify what?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"        String[] modifiedInput \u003d input.split(\"/\", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"        String description \u003d modifiedInput[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"        if (modifiedInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Did you forget to specify when your event is at?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"            + \" In yyyy-mm-dd format please.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"        String when \u003d modifiedInput[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        String[] secondModifiedInput \u003d when.split(\" \", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"        String dateAt \u003d secondModifiedInput[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"        LocalDate localDateAt \u003d LocalDate.parse(dateAt);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"        return new Event(description, localDateAt);","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"     * Handles the case where the user inputs a \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"     * @param   input the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"     * @return  the \u003ccode\u003eDeadline\u003c/code\u003e that the user specified","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"    public static Deadline handleDeadline(String input) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Did you forget to specify what?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"        String[] modifiedInput \u003d input.split(\"/\", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"        String description \u003d modifiedInput[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"        if (modifiedInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Did you forget to specify when your deadline for this is due by?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"            + \" In yyyy-mm-dd format please.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"        String when \u003d modifiedInput[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"drkkjh"},"content":"        String[] secondModifiedInput \u003d when.split(\" \", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"drkkjh"},"content":"        String dateBy \u003d secondModifiedInput[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"drkkjh"},"content":"        LocalDate localDateBy \u003d LocalDate.parse(dateBy);","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"drkkjh"},"content":"        return new Deadline(description, localDateBy);","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"drkkjh"},"content":"     * Handles the number input given from the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"drkkjh"},"content":"     * @param   input the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"drkkjh"},"content":"     * @return  the integer that the user specified","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"drkkjh"},"content":"    public static int parseInt(String input) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"drkkjh"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Did you forget to specify which task to delete?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"drkkjh"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"drkkjh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Come on. Give me a number instead! Like 1 or 3!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"drkkjh"},"content":"     * Handles the case where user inputs a \u003ccode\u003eFind\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"drkkjh"},"content":"     * @param input the input string from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"drkkjh"},"content":"     * @return the string from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error in the input given from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"drkkjh"},"content":"    public static String handleFind(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"drkkjh"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Did you forget to specify what you are looking for?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"drkkjh"},"content":"        } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":117,"author":{"gitId":"drkkjh"},"content":"            return input;","lastModifiedDate":"2022-08-30"},{"lineNumber":118,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"drkkjh"},"content":"     * Handles the reading of the input from the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"drkkjh"},"content":"     * @param   input the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"drkkjh"},"content":"     * @return  the \u003ccode\u003eCommand\u003c/code\u003e corresponding to the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"drkkjh"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"drkkjh"},"content":"        String[] strArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"drkkjh"},"content":"        String first \u003d strArray[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"drkkjh"},"content":"        String second \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"drkkjh"},"content":"        if (strArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"drkkjh"},"content":"            second \u003d strArray[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"drkkjh"},"content":"        Command cmd;","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"drkkjh"},"content":"        switch (first) {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"drkkjh"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new ByeCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"drkkjh"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new ListCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"drkkjh"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new MarkDoneCommand(parseInt(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"drkkjh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new MarkUndoneCommand(parseInt(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"drkkjh"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new AddCommand(handleTodo(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"drkkjh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new AddCommand(handleDeadline(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"drkkjh"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new AddCommand(handleEvent(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"drkkjh"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new DeleteCommand(parseInt(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"drkkjh"},"content":"        case \"on\":","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new OnDateCommand(LocalDate.parse(second));","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"drkkjh"},"content":"        case \"find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"drkkjh"},"content":"            cmd \u003d new FindCommand(handleFind(second));","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"drkkjh"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"drkkjh"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Invalid command entered. I don\u0027t recognize it. Sorry!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"drkkjh"},"content":"        return cmd;","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":172}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":" * The user interface that the user sees.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"     * The greeting from Duke that the user sees upon running a new instance of Duke","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    public String greet() {","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"        output +\u003d \"Hello! I\u0027m Duke\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"        output +\u003d \"What can I do for you?\";","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"        output +\u003d \"You can add your todos, deadlines and events,\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"        output +\u003d \"and i will keep track of them for you at no cost!\";","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * The line that engulfs each message sent by Duke to the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"    public void line() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"        System.out.println(\"________________________________________\");","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     * The method that returns the message that user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"     * @return the message that user inputs","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"    public String formatMessage(String msg) {","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"        return msg;","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     * The method that reads the input from the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     * @return the string representation of the input from the user","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"    public String parseCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":49}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a command to add a task to the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    private Task task;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * Constructs a command by adding \u003ccode\u003eTask\u003c/code\u003e to the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param task the task to be added to the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * Handles the command by adding \u003ccode\u003eTask\u003c/code\u003e to the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @param storage   the \u003ccode\u003eStorage\u003c/code\u003e that loads and saves tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * @param ui        the user interface dealing with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * @param taskList  the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if an error occurs when adding the task to the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"        return \"Duke says:\\n\" + ui.formatMessage(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"                + this.task + \"\\n\" + taskList.getArraySize());","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":40}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":" * Represents a command to exit Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"     * Returns true if command was to exit Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"     * @return true","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"        return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"     * Handles the command to exit Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error saving to the file","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        return \"Duke says:\\n\" + ui.formatMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a command made by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"     * Returns a boolean that denotes if Duke should exit or not upon handling this command.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * @return true if and only if this is a bye command","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"        return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"     * Handles the command made by user to Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error when handling the command","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"        return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    };","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":34}},{"path":"src/main/java/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":" * Enums for duke","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"public enum Commands {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"drkkjh":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a command to delete a \u003ccode\u003eTask\u003c/code\u003e in the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    private int index;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * Constructs a command to delete a \u003ccode\u003eTask\u003c/code\u003e from the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param index  the index of the task deleted, in accordance to 1-based indexing","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     *               from user perspective.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     * Handles the command to delete a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error deleting the \u003ccode\u003eTask\u003c/code\u003e from the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        Task t \u003d taskList.deleteTask(this.index);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"        return \"Duke says:\\n\" + ui.formatMessage(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"                + t + \"\\n\" + taskList.getArraySize());","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":" * Represents a command to find tasks from the keyword given by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"    private String keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     * Constructs a command to find tasks from the keyword given by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"     * @param keyword the keyword from the input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * Handles a command to find tasks from the keyword given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e that loads and saves tasks in a list of tasks to a file","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interface that the user sees","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error finding the tasks from the keyword given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"        List\u003cTask\u003e filteredList \u003d list.stream().filter(task -\u003e task.containsKeyword(keyword))","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Sorry! You don\u0027t have tasks related to this keyword you entered\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"        String output \u003d \"Duke says:\\n\" + \"Here are all your related tasks:\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        for (Task t : filteredList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"            output +\u003d i + 1 + \".\" + t + \"\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"            i++;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"drkkjh":54}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a command to list out all the tasks in the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"     * Handles the command to list out all \u003ccode\u003eTask\u003c/code\u003e in the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is currently no tasks in the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"        int numOfTasks \u003d taskList.getSize();","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Unfortunately, you do not have any tasks at hand.\"","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"                    + \" Try creating some first.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"        String output \u003d \"Duke says:\\n\" + \"Here are the tasks in your list\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"        for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"            Task t \u003d taskList.getTask(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"            output +\u003d i + \".\" + t + \"\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":37}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a command to mark a \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    private int index;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * Constructs a command to mark a \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param index the index of the task, based on 1-based indexing from user perspective.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"     * Handles the command to mark a \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error marking the task as done","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"        Task t \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        t.markDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        return \"Duke says:\\n\" + ui.formatMessage(\"Nice, I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"                + t);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":39}},{"path":"src/main/java/duke/command/MarkUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a command to mark a \u003ccode\u003eTask\u003c/code\u003e as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class MarkUndoneCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    private int index;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * Constructs a command to mark a \u003ccode\u003eTask\u003c/code\u003e as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param index the index of the task, using 1-based indexing from user perspective.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    public MarkUndoneCommand(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * Handles the command to mark a \u003ccode\u003eTask\u003c/code\u003e as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error marking the task as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"        Task t \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        t.markUndone();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        return \"Duke says:\\n\" + ui.formatMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"                + t);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":39}},{"path":"src/main/java/duke/command/OnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":" * Represents a command to list out all \u003ccode\u003eTask\u003c/code\u003e in the","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":" * list of tasks given a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"public class OnDateCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"    private LocalDate localDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"     * Constructs a command to list out all \u003ccode\u003eTask\u003c/code\u003e in the","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"     * list of tasks given a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * @param localDate the date entered by the user, parsed into a \u003ccode\u003eLocalDate\u003c/code\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"    public OnDateCommand(LocalDate localDate) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     * Handles the command to list out all \u003ccode\u003eTask\u003c/code\u003e in the list of tasks given a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"     * @param storage  the \u003ccode\u003eStorage\u003c/code\u003e dealing with loading and saving tasks in a file","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"     * @param ui       the user interfaces that deals with user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"    public String handle(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"        List\u003cTask\u003e filteredList \u003d list.stream().filter(task -\u003e task.isHappeningOnDate(localDate))","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"        String output \u003d \"Duke says:\\n\" + \"Hey, these are what you need to do on this date: \"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"                + localDate.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\"))","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        for (Task t : filteredList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"            output +\u003d i + 1 + \".\" + t + \"\\n\";","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"            i++;","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":54}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.gui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"drkkjh":62}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.gui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"public class Launcher {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"drkkjh":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.gui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendGreetings();","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"drkkjh":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.gui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"    public void sendGreetings() {","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getGreeting(), dukeImage));","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"     * the dialog container. Clears the user input after processing. If supposed to exit, delays the exit","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"     * by 2 seconds to allow exit message to be seen by user.","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"        if (response.equals(\"Duke says:\\n\" + \"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"                @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"                public void run() {","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"                    Platform.exit();","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"            },","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"                    2000);","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"drkkjh":72}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":" * Represents a storage to load and save all \u003ccode\u003eTask\u003c/code\u003e in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":" * of tasks to a file.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * Constructs a storage to load and save all \u003ccode\u003eTask\u003c/code\u003e in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     * of tasks to a file.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * @param filePath the path of the file that stores the data in the hard disk","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"     * Saves all the \u003ccode\u003eTask\u003c/code\u003e to a file in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error saving the list","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"     *                       of tasks to the hard drive.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"        // Write to data","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"            List\u003cTask\u003e listOfTasks \u003d taskList.getTaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"            for (Task t : listOfTasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"                fileWriter.write(t.toFileDescription() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Hey! Are you in the wrong directory? You are currently at\"","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"                    + e.getMessage());","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"     * Loads all the \u003ccode\u003eTask\u003c/code\u003e saved in the file located in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"     * @return the list of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error loading the tasks from the file","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"        // Load the file data into corresponding ArrayList","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"            if (data.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"                Scanner scanner \u003d new Scanner(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"drkkjh"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"drkkjh"},"content":"                    String currentlyAt \u003d scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"drkkjh"},"content":"                    char first \u003d currentlyAt.charAt(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"drkkjh"},"content":"                    Task task;","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"drkkjh"},"content":"                    switch(first) {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"drkkjh"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"drkkjh"},"content":"                        task \u003d Todo.fromFileDescription(currentlyAt);","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"drkkjh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"drkkjh"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"drkkjh"},"content":"                        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"drkkjh"},"content":"                            task \u003d Deadline.fromFileDescription(currentlyAt);","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"drkkjh"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"drkkjh"},"content":"                            throw e;","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"drkkjh"},"content":"                        }","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"drkkjh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"drkkjh"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"drkkjh"},"content":"                        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"drkkjh"},"content":"                            task \u003d Event.fromFileDescription(currentlyAt);","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"drkkjh"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":101,"author":{"gitId":"drkkjh"},"content":"                            throw e;","lastModifiedDate":"2022-08-30"},{"lineNumber":102,"author":{"gitId":"drkkjh"},"content":"                        }","lastModifiedDate":"2022-08-30"},{"lineNumber":103,"author":{"gitId":"drkkjh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"drkkjh"},"content":"                    default:","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"drkkjh"},"content":"                        throw new DukeException(\"What!? How did this happen... I\u0027m pretty sure you\"","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"drkkjh"},"content":"                                + \"have an itchy hand and modified the duke.txt file!!!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":107,"author":{"gitId":"drkkjh"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"drkkjh"},"content":"                    list.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"drkkjh"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"drkkjh"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"drkkjh"},"content":"                data.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"drkkjh"},"content":"                throw new DukeException(\"Welcome! This is your first time using Duke right?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"drkkjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"drkkjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Are you a hacker? How on earth did you get to this stage!?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"drkkjh"},"content":"        return list;","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":119}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents a deadline-type of task","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * Constructs a deadline-type task.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     * @param by          the date of the deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * Returns a string description of the deadline task for saving the task","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * to the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     * @return the string description","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    public String toFileDescription() {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        return \"D\" + \" | \" + super.toFileDescription() + \" | \" + this.by;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"     * Returns a deadline-type task from the string description stored in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"     * @param input the string description of the deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     * @return the deadline-type task","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing input to a LocalDate","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"    public static Deadline fromFileDescription(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"        String[] strArray \u003d input.split(\" \\\\| \", 4);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        String description \u003d strArray[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        String by \u003d strArray[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"            LocalDate dateBy \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"            Deadline deadline \u003d new Deadline(description, dateBy);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"            if (strArray[1].equals(\"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"                deadline.markDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"            return deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Enter the date in yyyy-mm-dd please!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"     * Returns a boolean denoting if the event is happening at the queried date.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"     * @param localDate the queried date","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"     * @return true if and only if the queried date is the same as the deadline-type","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"     *      task\u0027s deadline date.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"    public boolean isHappeningOnDate(LocalDate localDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"        return this.by.equals(localDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"drkkjh":81}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * Represents an event-type of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     * Constructs an event-type of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     * @param at the date when the task is happening at","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * Returns a string description of the event task for saving the task","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     * to the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     * @return the string description","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    public String toFileDescription() {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        return \"E\" + \" | \" + super.toFileDescription() + \" | \" + this.at;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"     * Returns an event-type task from the string description stored in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"     * @param input the string description of the event task","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     * @return the event-type task","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input to a LocalDate","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"    public static Event fromFileDescription(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"        String[] strArray \u003d input.split(\" \\\\| \", 4);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        String description \u003d strArray[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        String at \u003d strArray[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"            LocalDate dateAt \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"            Event event \u003d new Event(description, dateAt);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"            if (strArray[1].equals(\"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"                event.markDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"            return event;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Enter the date in yyyy-mm-dd format please!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"     * Returns a boolean denoting if the event is happening at the queried date.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"     * @param localDate the queried date","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"     * @return true if and only if the queried date is the same as the event-type","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"     *      task\u0027s event date.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"    public boolean isHappeningOnDate(LocalDate localDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"        return this.at.equals(localDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"     * Returns a string representation of this event.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"     * @return the string representation","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"drkkjh":81}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":" * Represents a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"     * Constructs a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     * Returns the status of the task, whether it is done or not.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"     * @return X if it is done, whitespace if it is not done","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"     * Marks the status of the task, denoted by the boolean variable isDone,","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"     * as true if the task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     * Marks the status of the task, denoted by the boolean variable isDone,","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"     * as false if the task is undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"     * Returns a string description of the task for saving the task","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"     * to the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"     * @return the string description","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"    public String toFileDescription() {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"        return (this.isDone ? \"1 \" : \"0 \") + \"| \" + this.description;","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"     * Returns a task from the string description stored in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"     * @param input the string description of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"     * @return the task","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error parsing the input to a LocalDate","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"    public static Task fromFileDescription(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"        return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"     * Returns a boolean denoting if the event is happening at the queried date.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"     * @param localDate the queried date","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"     * @return false as there is no date specified","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"    public boolean isHappeningOnDate(LocalDate localDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"drkkjh"},"content":"     * Returns a boolean to check if keyword specified by user is in the task\u0027s description.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"drkkjh"},"content":"     * @param keyword the keyword entered by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"drkkjh"},"content":"     * @return true if and only if the keyword is contained in the description","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"drkkjh"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"drkkjh"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"drkkjh"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"drkkjh"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"drkkjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"drkkjh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"drkkjh":101}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"     * Constructs a new list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"     * Constructs the list of tasks entered from a previous session that","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"     * is captured in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"     * @param taskList the list of tasks that was captured in the hard disk","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     * A getter for the number of \u003ccode\u003eTask\u003c/code\u003e in the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"     * @return an integer representing the number of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"     * A getter for the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"     * @return the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"     * The method to add a task to the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"     * @param t the task to be added","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error adding the task to the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"    public void addTask(Task t) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"     * The method to delete a task from the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"     * @param index the index of the task, using 1-based indexing from user perspective","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"     * @return the task that is deleted from the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error deleting the task","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"drkkjh"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"drkkjh"},"content":"        int numOfTasks \u003d this.tasks.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"drkkjh"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Hey there! Are you sure you are referring to a correct task? \"","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"drkkjh"},"content":"                    + \" It definitely has to be at least 1!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"drkkjh"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(String.format(\"That\u0027s magical! You only have %d task(s) at hand!\", numOfTasks));","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"drkkjh"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"You cant delete anything yet! Try creating some tasks first!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"drkkjh"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"drkkjh"},"content":"        int indexInList \u003d index - 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"drkkjh"},"content":"        this.tasks.remove(indexInList);","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"drkkjh"},"content":"        return t;","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"drkkjh"},"content":"     * The method to retrieve a \u003ccode\u003eTask\u003c/code\u003e from the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"drkkjh"},"content":"     * @param index the index of the task within the list of tasks,","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"drkkjh"},"content":"     *              using 1-based indexing from user perspective","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"drkkjh"},"content":"     * @return the task that is queried","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"drkkjh"},"content":"     * @throws DukeException if there is an error accessing the \u003ccode\u003eTask\u003c/code\u003e from","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"drkkjh"},"content":"     *      the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"drkkjh"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"drkkjh"},"content":"        int numOfTasks \u003d this.tasks.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"drkkjh"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Unfortunately, you do not have any tasks at hand.\"","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"drkkjh"},"content":"                    + \" Try creating some first.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"drkkjh"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(String.format(\"That\u0027s magical! You only have %d task(s) at hand!\", numOfTasks));","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"drkkjh"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"drkkjh"},"content":"            throw new DukeException(\"Hey there! Are you sure you are referring to a correct task? \"","lastModifiedDate":"2022-08-30"},{"lineNumber":105,"author":{"gitId":"drkkjh"},"content":"                    + \"It definitely has to be at least 1!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"drkkjh"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2022-08-30"},{"lineNumber":108,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"drkkjh"},"content":"     * Returns a message which denotes the number of \u003ccode\u003eTask\u003c/code\u003e in the list of tasks, to the user.","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"drkkjh"},"content":"     * @return message which denotes number of Task in the list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"drkkjh"},"content":"    public String getArraySize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"drkkjh"},"content":"        return \"Now you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"drkkjh":117}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":" * Represents a todo-type task.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":" * @author Derrick Khoo","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"     * Constructs a todo-type task.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"     * @param description the description of the todo-type task","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"     * Returns a string description of the todo-type task for saving the task","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"     * to the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"     * @return the string description","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"    public String toFileDescription() {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"        return \"T\" + \" | \" + super.toFileDescription();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"     * Returns an todo-type task from the string description stored in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"     * @param input the string description of the todo task","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"     * @return the todo-type task","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"    public static Todo fromFileDescription(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"        String[] strArray \u003d input.split(\" \\\\| \", 3);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"        boolean isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"        Todo todo \u003d new Todo(strArray[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"        if (strArray[1].equals(\"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"            todo.markDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"        return todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"     * Returns a boolean denoting if the event is happening at the queried date.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"     * @param localDate the queried date","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"     * @return false because there is no date specified for a todo-type task","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"drkkjh"},"content":"    public boolean isHappeningOnDate(LocalDate localDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"drkkjh"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"drkkjh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"drkkjh"},"content":"     * The string representation of a todo-type task.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"drkkjh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"drkkjh"},"content":"     * @return the string representation","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"drkkjh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"drkkjh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"drkkjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"drkkjh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"drkkjh":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"drkkjh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"drkkjh":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"    public void testBye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"            assertEquals(true, Parser.parse(\"bye\").isDone());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"            assertEquals(true, Parser.parse(\"bye bye\").isDone());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"            assertTrue(Parser.parse(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"    public void testList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"            assertEquals(false, Parser.parse(\"list\").isDone());","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"            assertEquals(false, Parser.parse(\"list all\").isDone());","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"            assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"drkkjh"},"content":"    public void testMark() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"drkkjh"},"content":"            assertEquals(false, Parser.parse(\"mark\").isDone());","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"drkkjh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"drkkjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"drkkjh"},"content":"            assertEquals(\"Did you forget to specify which task to delete?\", e);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"drkkjh"},"content":"    public void testUnmark() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"drkkjh"},"content":"            assertEquals(false, Parser.parse(\"unmark\").isDone());","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"drkkjh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"drkkjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"drkkjh"},"content":"            assertEquals(\"Did you forget to specify which task to delete?\", e);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"drkkjh":51}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"    public void test() {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"        assertEquals(arrayList, taskList.getTaskList());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"            Task t1;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"            Task t2;","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"drkkjh"},"content":"            Task t3;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"drkkjh"},"content":"            t1 \u003d new Todo(\"return book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"drkkjh"},"content":"            taskList.addTask(t1);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"drkkjh"},"content":"            t2 \u003d new Deadline(\"finish Duke project\", LocalDate.parse(\"2022-08-25\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"drkkjh"},"content":"            taskList.addTask(t2);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"drkkjh"},"content":"            t3 \u003d new Event(\"meet project teammates\", LocalDate.parse(\"2022-08-27\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"drkkjh"},"content":"            taskList.addTask(t3);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"drkkjh"},"content":"            assertEquals(3, taskList.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"drkkjh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"drkkjh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"drkkjh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"drkkjh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"drkkjh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"drkkjh":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drkkjh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"drkkjh"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"drkkjh"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"drkkjh"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"drkkjh"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"drkkjh"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"drkkjh"},"content":"mark 0","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"drkkjh"},"content":"deadline return book","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"drkkjh"},"content":"deadline return book /by 2022-08-25","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"drkkjh"},"content":"event project meeting","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"drkkjh"},"content":"event project meeting /at 2022-08-25","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"drkkjh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"drkkjh"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"drkkjh"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"drkkjh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"drkkjh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"drkkjh"},"content":"blah","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"drkkjh"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"drkkjh":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"drkkjh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drkkjh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"drkkjh"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drkkjh":1,"-":37}}]

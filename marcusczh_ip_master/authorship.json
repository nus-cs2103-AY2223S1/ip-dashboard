[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"marcusczh":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.command.LoadDataCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.command.SaveDataCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.command.WelcomeCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a Duke bot. A Duke object contains its storage, task list, ui, parser, folder path and file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Storage to handle file loading and saving */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** Task list to handle task related functionalities */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /** Ui to handle interactions with the user */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /** Parser to parse the user inputs */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    /** Folder path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    private String folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    /** File path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * Creates a Duke object.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param folderPath folder path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public Duke(String folderPath, String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     * Runs the functionalities of the Duke bot.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"    public void run() {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"        new LoadDataCommand(folderPath, filePath).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"        new WelcomeCommand().execute(tasks, ui, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"        while (ui.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"                String inputs \u003d ui.readCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"                Command command \u003d parser.parse(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"                new SaveDataCommand(filePath).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"        Duke duke \u003d new Duke(\"./data\", \"./data/duke.txt\");","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        duke.run();","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"marcusczh":59}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents Exceptions related to Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"     * Constructs a DukeException object with the given description.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     * @param description description for the exception.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    public DukeException(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"marcusczh":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.command.AddDeadLineCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import duke.command.MarkItemCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"import duke.command.UnMarkItemCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":" * Represents a Parser to parse user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /** ArrayList of unknown commands */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    private static List\u003cString\u003e UNKNOWN_COMMANDS \u003d Arrays.asList(\"todo\", \"deadline\", \"event\");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Parses the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param command user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @return Command object for the next action.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException exception thrown when inputs are not recognised.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        String task;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        String[] inputs \u003d command.split(\" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"            } else if (UNKNOWN_COMMANDS.contains(command)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"        } else if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"            if (inputs[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"                return new MarkItemCommand(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"                return new UnMarkItemCommand(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"                return new DeleteCommand(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"                return new ListCommand(true, LocalDate.parse(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"find\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"                return new FindCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"                return new AddTodoCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"                return new AddDeadLineCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"            case \"event\":","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"                return new AddEventCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":67}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":" * Represents a storage to handle file loading and saving.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * Loads the file contents located in the file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param folderPath folder path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * @param tasks task list to handle task related functionalities.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public void loadFileContents(String folderPath, String filePath, TaskList tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"            File directory \u003d new File(folderPath);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"                int index \u003d 0;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"                    String[] input \u003d scanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"                    switch (input[0]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"                        tasks.addTodo(String.join(\" \", Arrays.copyOfRange(input, 2, input.length)));","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"                        int limit \u003d findElem(input, \"/at\");","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"                        String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(input, 2, limit));","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"                        String at \u003d String.join(\" \", Arrays.copyOfRange(input, limit + 1, input.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"                        tasks.addEvent(taskDescription, at);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"                        limit \u003d findElem(input, \"/by\");","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"                        String task \u003d String.join(\" \", Arrays.copyOfRange(input, 2, limit));","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"                        String by \u003d String.join(\" \", Arrays.copyOfRange(input, limit + 1, input.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"                        tasks.addDeadLine(task, by);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"                    if (input[1].equals(\"X\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"                        tasks.markItem(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"                    index++;","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"     * Save the tasks in the task list into the data file located in the specified file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"     * @param tasks task list containing tasks to be saved.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"    public void saveFileContents(String filePath, TaskList tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"            for (int i \u003d 0; i \u003c tasks.getTotalTasks(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"                switch (task.getTaskType()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"                case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"                    fw.write(todo.getTaskType() + \"|\" + todo.getStatusIcon() + \"|\" + todo.getDescription()","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"                case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"                    fw.write(event.getTaskType() + \"|\" + event.getStatusIcon() + \"|\" + event.getDescription()","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"                            + \"|/at|\" + event.getAt() + System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"                case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"                    fw.write(deadline.getTaskType() + \"|\" + deadline.getStatusIcon() + \"|\"","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"                            + deadline.getDescription() + \"|/by|\" + deadline.getBy() + System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"    private static \u003cT\u003e int findElem(T[] arr, T elem) {","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"            if (arr[i].equals(elem)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"marcusczh"},"content":"                return i;","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"marcusczh"},"content":"        return -1;","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":107}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" * Represents a task list to handle task related functionalities. A TaskList object contains an ArrayList of the","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" * current tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /** List of all the tasks */;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private ArrayList\u003cTask\u003e data;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * Creates a TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        this.data \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param index index of task to be returned.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @return task located at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        return data.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * @return total number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"        return data.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"     * Returns the latest task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"     * @return latest task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"    public Task getLatestTask() {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"        return data.get(data.size() - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        data.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"     * Adds a todo task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription task description of the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"    public void addTodo(String taskDescription) {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"        data.add(new Todo(taskDescription));","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription task description of the deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"     * @param by deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"    public void addDeadLine(String taskDescription, String by) {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"        data.add(new Deadline(taskDescription, by));","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription task description of the event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"     * @param at start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"    public void addEvent(String taskDescription, String at) {","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"        data.add(new Event(taskDescription, at));","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"     * Lists all the tasks in the task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"    public void listTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"        for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"            System.out.println(index + \".\" + data.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"marcusczh"},"content":"     * Lists all the tasks that fall on the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"marcusczh"},"content":"     * @param date date of tasks to be listed.","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"marcusczh"},"content":"    public void listTasks(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"marcusczh"},"content":"        for (Task task : data) {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"marcusczh"},"content":"            if (!task.getTaskType().equals(\"T\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"marcusczh"},"content":"                if (task.getTaskType().equals(\"E\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"marcusczh"},"content":"                    if (LocalDate.parse(((Event)task).getAt().split(\" \")[0]).equals(date)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"marcusczh"},"content":"                        System.out.println(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"marcusczh"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"marcusczh"},"content":"                } else if (task.getTaskType().equals(\"D\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"marcusczh"},"content":"                    if (LocalDate.parse(((Deadline) task).getBy().split(\" \")[0]).equals(date)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"marcusczh"},"content":"                        System.out.println(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"marcusczh"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"marcusczh"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"marcusczh"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"marcusczh"},"content":"    public void markItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"marcusczh"},"content":"        data.get(index).markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"marcusczh"},"content":"     * Un-marks a task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be un-marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"marcusczh"},"content":"    public void unMarkItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"marcusczh"},"content":"        data.get(index).markAsNotDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"marcusczh"},"content":"     * Finds and prints tasks which contain the specified keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"marcusczh"},"content":"     * @param keyword keyword to search for.","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"marcusczh"},"content":"    public void find(String keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"marcusczh"},"content":"        for (Task task : data) {","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"marcusczh"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"marcusczh"},"content":"                System.out.println(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":154}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a Ui to handle user interactions. A Ui object contains a scanner to read in user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Scanner to read in user inputs */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Prints welcome message.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * Prints bye message.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public void printByeMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * Throws exception when /by is not included in a deadline command.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException Exception thrown to indicate that /by was not included in the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    public void printDeadLineErrorMessage() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        throw new DukeException(\"Oops! Remember to include /by and the deadline after your task description\");","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * Throws exception when /at is not included in an event command.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException Exception thrown to indicate that /at was not included in the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"    public void printEventErrorMessage() throws DukeException{","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"        throw new DukeException(\"Oops! Remember to include /at and the event time after your task description\");","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"     * Prints entry message before listing tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"    public void printListTasksMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"     * Prints entry message before listing tasks due on the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"     * @param date date of tasks to be listed.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"    public void printListTasksDueOnDateMessage(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        System.out.printf(\"Here are the tasks due on %s\\n\", date);","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"     * Prints message indicating that no tasks are due on a specified day.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"    public void printNoTasksMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"        System.out.println(\"Looks like you have no tasks occurring on that day\");","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"     * Prints confirmation message after marking a task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"     * @param task task that was marked as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"    public void printMarkTaskMessage(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"        System.out.printf(\"Nice! I\u0027ve marked this task as done:\\n%s\\n\", task);","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"     * Prints confirmation message after un-marking a task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"     * @param task task that was un-marked as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"    public void printUnMarkTaskMessage(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"        System.out.printf(\"OK, I\u0027ve marked this task as not done yet:\\n%s\\n\", task);","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"     * Prints confirmation message after deleting a task.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"     * @param deletedTask task that was deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"     * @param totalTasks total number of tasks left.","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"    public void printDeleteTaskMessage(Task deletedTask, int totalTasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"        System.out.printf(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"                deletedTask, totalTasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"     * Prints confirmation message after adding a task.","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"marcusczh"},"content":"     * @param task task that was added.","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"marcusczh"},"content":"     * @param totalTasks total number of tasks currently in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"marcusczh"},"content":"    public void printTaskAddedMessage(Task task, int totalTasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"marcusczh"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"marcusczh"},"content":"                task, totalTasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"marcusczh"},"content":"     * Reads in the next command by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"marcusczh"},"content":"     * @return user command.","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"marcusczh"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"marcusczh"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"marcusczh"},"content":"     * Checks if the user has entered another command.","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"marcusczh"},"content":"     * @return boolean indicating if the user has entered another command.","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"marcusczh"},"content":"    public boolean hasNext() {","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"marcusczh"},"content":"        return sc.hasNext();","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"marcusczh"},"content":"     * Prints an error message when an error occurs.","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"marcusczh"},"content":"     * @param message error message of the exception that occurred.","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"marcusczh"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"marcusczh"},"content":"        System.out.printf(\"Seems like something went wrong\\n%s\", message);","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"marcusczh"},"content":"     * Prints entry message for finding tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"marcusczh"},"content":"    public void printFindMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"marcusczh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":144}},{"path":"src/main/java/duke/command/AddDeadLineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * Represents an add Deadline Task command. An AddDeadLineCommand object contains the index of the /by command,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" * task description and the deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"public class AddDeadLineCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /** Index of the /by command */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    private int limit;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    /** Deadline of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    private String by;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * Creates a AddDeadLineCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    public AddDeadLineCommand(String[] inputs) {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.DEADLINE);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        limit \u003d findElem(inputs, \"/by\");","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        taskDescription \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, limit));","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"        by \u003d String.join(\" \", Arrays.copyOfRange(inputs, limit + 1, inputs.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     * Executes the add deadline command, adding the DeadLine Task to the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException exception thrown when /by is missing.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"        if (limit \u003d\u003d -1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"            ui.printDeadLineErrorMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"            return;","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"        tasks.addDeadLine(taskDescription, by);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"        ui.printTaskAddedMessage(tasks.getLatestTask(), tasks.getTotalTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":51}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * Represents an add Event Task command. An AddEventCommand object contains the index of the /at command,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" * task description and when the event is occurring.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** Index of the /at command */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private int limit;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /** When the event is occurring */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private String at;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Creates a AddEventCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    public AddEventCommand(String[] inputs) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.EVENT);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        limit \u003d findElem(inputs, \"/at\");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        taskDescription \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, limit));","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        at \u003d String.join(\" \", Arrays.copyOfRange(inputs, limit + 1, inputs.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     * Executes the add event command, adding the Event Task to the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException exception thrown when /at is missing.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"        if (limit \u003d\u003d -1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"            ui.printEventErrorMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"            return;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"        tasks.addEvent(taskDescription, at);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"        ui.printTaskAddedMessage(tasks.getLatestTask(), tasks.getTotalTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":51}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Represents an add Todo Task command. An AddTodoCommand object contains the task description.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Creates a AddTodoCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    public AddTodoCommand(String[] inputs) {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.TODO);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        taskDescription \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Executes the add todo command, adding the Todo Task to the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        tasks.addTodo(taskDescription);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        ui.printTaskAddedMessage(tasks.getLatestTask(), tasks.getTotalTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":38}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a Bye command.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Creates a ByeCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.BYE);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * Executes the bye command, printing a bye message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        ui.printByeMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":29}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a command.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Type of the command */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private CommandType type;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates a command.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param type type of the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public Command(CommandType type) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException exception thrown when commands are missing.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     * Finds an element within an array.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     * @param arr array to be searched.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @param elem element to be searched for.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * @return index of the element in the array.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     * @param \u003cT\u003e generic type for any type of array and element.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    protected static \u003cT\u003e int findElem(T[] arr, T elem) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"            if (arr[i].equals(elem)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"                return i;","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"        return -1;","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":51}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents the different command types","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"    WELCOME,","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    BYE,","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    LIST,","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"    MARK,","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"    UNMARK,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    DELETE,","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    TODO,","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    EVENT,","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    LOAD,","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    SAVE,","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    FIND,","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":19}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a Delete Task Command. A DeleteCommand object contains the index of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Index of the task to be deleted */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * Executes the Delete Task command, deleting the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        Task deletedTask \u003d tasks.getTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        ui.printDeleteTaskMessage(deletedTask, tasks.getTotalTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a find command. A FindCommand object contains the keyword to search for.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** keyword to search for */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    String keyword;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public FindCommand(String[] inputs) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.keyword \u003d inputs[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Executes the find command, searching the task list and printing out tasks containing the specified keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        ui.printFindMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        tasks.find(keyword);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Represents a List command. A ListCommand object contains a boolean indicating if a date is provided and the","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * given date.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** Boolean value indicating if a date is provided */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private boolean isDueListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /** Date provided by the user */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param isDueListCommand Indicates if a date is provided.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * @param date Date to be compared with.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public ListCommand(boolean isDueListCommand, LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        this.isDueListCommand \u003d isDueListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        this.isDueListCommand \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     * Executes the list command, either listing all tasks, or tasks that fall on the given date, depending on","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     * the boolean provided during initialisation.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"        if (isDueListCommand) {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"            ui.printListTasksDueOnDateMessage(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"            tasks.listTasks(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"            ui.printListTasksMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"            tasks.listTasks();","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":57}},{"path":"src/main/java/duke/command/LoadDataCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a load data command. A LoadDataCommand contains the folder path and file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class LoadDataCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** Folder path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    private String folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** File path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Creates a LoadDataCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @param folderPath folder path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    public LoadDataCommand(String folderPath, String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.LOAD);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * Executes the load data command, loading the data from the file path provided into the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        storage.loadFileContents(folderPath, filePath, tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":39}},{"path":"src/main/java/duke/command/MarkItemCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a mark item command. A MarkItemCommand contains the index of the task to be marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class MarkItemCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** Index of the task to be marked */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * Creates a MarkItemCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public MarkItemCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.MARK);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Executes the mark item command, marking the item at the specified index as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        tasks.markItem(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        ui.printMarkTaskMessage(tasks.getTask(index));","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":36}},{"path":"src/main/java/duke/command/SaveDataCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a save data command. A SaveDataCommand object contains the file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class SaveDataCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** File path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * Creates a SaveDataCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public SaveDataCommand(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.SAVE);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Executes the save data command, saving the tasks list data into the file specified by the file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        storage.saveFileContents(filePath, tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":36}},{"path":"src/main/java/duke/command/UnMarkItemCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a un-mark item command. A UnMarkItemCommand contains the index of the task to be un-marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class UnMarkItemCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** Index of the task to be un-marked */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * Creates an UnMarkItemCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param index Index of the task to be un-marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public UnMarkItemCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.UNMARK);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Executes the un-mark item command, marking the item at the specified index as not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        tasks.unMarkItem(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        ui.printUnMarkTaskMessage(tasks.getTask(index));","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":36}},{"path":"src/main/java/duke/command/WelcomeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a welcome command.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class WelcomeCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Creates a WelcomeCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    public WelcomeCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.WELCOME);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * Executes the welcome command, printing the welcome message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":30}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":" * Represents a Deadline task. A Deadline object contains the deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"    /** Deadline of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"     * Creates a task with a deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(description, \"D\");","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @return deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    public String getBy() {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     * String representation of the Deadline object.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + super.getTaskType() + \"]\" + super.toString() + \" (by: \" + parseDateTime(by) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":" * Represents an Event task. An Event object contains the start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"    /** Start time of the event */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"     * Creates an event with a start time.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * @param description the description of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param at the start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(description, \"E\");","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @return start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    public String getAt() {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     * String representation of the Event object.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + super.getTaskType() + \"]\" + super.toString() + \" (at: \" + parseDateTime(at) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    protected String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"    protected String taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Creates a task","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * @param taskType the type of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     * Gets the description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * @return description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        return this.description;","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     * Gets the status of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     * @return status of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     * Mark a task as done","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     * Mark a task as not done","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"        return this.taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"    public static String parseDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu HHmm\")) + \"hrs\";","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":71}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents a Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"     * Creates a todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"        super(description, \"T\");","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * String representation of the Todo object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + super.getTaskType() + \"]\" + super.toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":26}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Tests to test the Parser class.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** Parser object used in the tests */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Tests if the bye command works as intended, which should return a ByeCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException Exception thrown when unknown commands are detected.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    public void parse_byeCommand_byeCommandInstanceReturned() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        assertTrue(parser.parse(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Tests if the list command works as intended, which should return a ListCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @throws DukeException Exception thrown when unknown commands are detected.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    public void parse_listCommand_listCommandInstanceReturned() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        assertTrue(parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":36}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Tests to test the TaskList class.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Tests if the getTask function works as intended, which should return the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    public void getTask_getFirstTodoTask_todoTaskReturned() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"        tasks.addTodo(\"description\");","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"        assertEquals(\"description\", tasks.getTask(0).getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Tests if the getTotalTasks function works as intended, which should return the total number of tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    public void getTotalTasks_oneTaskTotal_oneReturned() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        tasks.addTodo(\"description\");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        assertEquals(1, tasks.getTotalTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"todo borrow book","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"deadline return book /by 2022-09-01 15:00","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"event project meeting /at 2022-09-02 13:00","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":6}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"    mainClassName \u003d \"tuna.gui.Launcher\"","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"    archiveBaseName \u003d \"tuna\"","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"marcusczh":24}},{"path":"src/main/java/tuna/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.command.AddDeadLineCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import tuna.command.AddEventCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import tuna.command.AddTodoCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import tuna.command.ByeCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import tuna.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"import tuna.command.DeleteCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"import tuna.command.FindCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"import tuna.command.ListCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"import tuna.command.MarkItemCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"import tuna.command.SortCommand;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"import tuna.command.UnMarkItemCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":" * Represents a Parser to parse user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    /** ArrayList of unknown commands */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    private static final List\u003cString\u003e UNKNOWN_COMMANDS \u003d Arrays.asList(\"todo\", \"deadline\", \"event\");","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * Parses the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param command user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @return Command object for the next action.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown when inputs are not recognised.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    public Command parse(String command) throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        String[] inputs \u003d command.split(\" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"            } else if (command.equals(\"sort\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"                return new SortCommand();","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"            } else if (UNKNOWN_COMMANDS.contains(command)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"                throw new TunaException(\"I\u0027m sorry I do not understand the command. The description of a \" + command","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"                        + \" command cannot be empty.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"        } else if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"            if (inputs[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"                return new MarkItemCommand(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"                return new UnMarkItemCommand(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"                return new DeleteCommand(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"                return new ListCommand(LocalDate.parse(inputs[1]));","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"            } else if (inputs[0].equals(\"find\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"                return new FindCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"        switch (inputs[0]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"            return new AddTodoCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"            return new AddDeadLineCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"        case \"event\":","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"            return new AddEventCommand(inputs);","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"        default:","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Oops! Sorry! I do not know what that means\");","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":70}},{"path":"src/main/java/tuna/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":" * Represents a storage to handle file loading and saving.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private static final int TASK_DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    private static final int TASK_DATE_TIME_INDEX \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private static final int TASK_STATUS_INDEX \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Loads the file contents located in the file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     * @param folderPath folder path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * @param tasks task list to handle task related functionalities.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown when data file has incorrect formatting.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    public void loadFileContents(String folderPath, String filePath, TaskList tasks) throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        assert !folderPath.equals(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"            File directory \u003d new File(folderPath);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"                processFile(file, tasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    private void processFile(File file, TaskList tasks) throws TunaException, IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"        parseFileContents(scanner, tasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    private void parseFileContents(Scanner scanner, TaskList tasks) throws TunaException {","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"            String[] input \u003d scanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"            switch (input[0]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"            case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"                tasks.addTodo(String.join(\" \", Arrays.copyOfRange(input, 2, input.length)));","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"            case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"                String[] eventDetails \u003d parseTaskDetails(input, \"/at\");","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"                tasks.addEvent(eventDetails[TASK_DESCRIPTION_INDEX], eventDetails[TASK_DATE_TIME_INDEX]);","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"            case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"                String[] deadlineDetails \u003d parseTaskDetails(input, \"/by\");","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"                tasks.addDeadLine(deadlineDetails[TASK_DESCRIPTION_INDEX], deadlineDetails[TASK_DATE_TIME_INDEX]);","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"                throw new TunaException(\"Oops! Seems like the data file is not formatted correctly\");","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"            if (isCompletedTask(input[TASK_STATUS_INDEX])) {","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"                tasks.markItem(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"            index++;","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"    private String[] parseTaskDetails(String[] input, String keyword) {","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"        int limit \u003d findElem(input, keyword);","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"        String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(input, 2, limit));","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"        String dateTime \u003d String.join(\" \", Arrays.copyOfRange(input, limit + 1, input.length));","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"        return new String[]{taskDescription, dateTime};","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"    private boolean isCompletedTask(String statusIcon) {","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"        return statusIcon.equals(\"X\");","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"     * Saves the tasks in the task list into the data file located in the specified file path.","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"     * @param tasks task list containing tasks to be saved.","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown when error occurs in processing the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"    public void saveFileContents(String filePath, TaskList tasks) throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"            saveTasks(fw, tasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"            fw.close();","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"marcusczh"},"content":"    private void saveTasks(FileWriter fw, TaskList tasks) throws IOException, TunaException {","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"marcusczh"},"content":"        for (int i \u003d 0; i \u003c tasks.getTotalTasks(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"marcusczh"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"marcusczh"},"content":"            switch (task.getTaskType()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"marcusczh"},"content":"            case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"marcusczh"},"content":"                Todo todo \u003d (Todo) task;","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"marcusczh"},"content":"                fw.write(todo.getTaskType() + \"|\" + todo.getStatusIcon() + \"|\" + todo.getDescription()","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"marcusczh"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"marcusczh"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"marcusczh"},"content":"            case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"marcusczh"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"marcusczh"},"content":"                fw.write(event.getTaskType() + \"|\" + event.getStatusIcon() + \"|\" + event.getDescription()","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"marcusczh"},"content":"                        + \"|/at|\" + event.getStringRepresentationOfDateTime() + System.lineSeparator());","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"marcusczh"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"marcusczh"},"content":"            case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"marcusczh"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"marcusczh"},"content":"                fw.write(deadline.getTaskType() + \"|\" + deadline.getStatusIcon() + \"|\"","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"marcusczh"},"content":"                        + deadline.getDescription() + \"|/by|\" + deadline.getStringRepresentationOfDateTime()","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"marcusczh"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"marcusczh"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"marcusczh"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"marcusczh"},"content":"                throw new TunaException(\"Oops! Seems like something went wrong in the task list\");","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"marcusczh"},"content":"    private static \u003cT\u003e int findElem(T[] arr, T elem) {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"marcusczh"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"marcusczh"},"content":"            if (arr[i].equals(elem)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"marcusczh"},"content":"                return i;","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"marcusczh"},"content":"        return -1;","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":139}},{"path":"src/main/java/tuna/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import tuna.task.TimeBasedTask;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":" * Represents a task list to handle task related functionalities. A TaskList object contains an ArrayList of the","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":" * current tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /** List of all the tasks */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Creates a TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param index index of task to be returned.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     * @return task located at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     * @return total number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"        return tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     * Returns the latest task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"     * @return latest task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"    public Task getLatestTask() {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"     * Adds a todo task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription task description of the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"    public void addTodo(String taskDescription) {","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"        tasks.add(new Todo(taskDescription));","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription task description of the deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"     * @param by deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"    public void addDeadLine(String taskDescription, String by) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"        tasks.add(new Deadline(taskDescription, by));","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription task description of the event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"     * @param at start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"    public void addEvent(String taskDescription, String at) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"        tasks.add(new Event(taskDescription, at));","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"     * Lists all the tasks in the task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"marcusczh"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"marcusczh"},"content":"    public ArrayList\u003cTask\u003e listTasks() {","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"marcusczh"},"content":"        return new ArrayList\u003cTask\u003e(tasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"marcusczh"},"content":"     * Lists all the tasks that fall on the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"marcusczh"},"content":"     * @param date date of tasks to be listed.","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"marcusczh"},"content":"     * @return ArrayList of tasks occurring on the specified date.","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"marcusczh"},"content":"    public ArrayList\u003cTask\u003e listTasks(LocalDate date) {","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"marcusczh"},"content":"        ArrayList\u003cTask\u003e tasksToList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"marcusczh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":117,"author":{"gitId":"marcusczh"},"content":"            if (!task.getTaskType().equals(\"T\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"marcusczh"},"content":"                if (task.getTaskType().equals(\"E\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"marcusczh"},"content":"                    if (LocalDate.parse(((Event) task).getStringRepresentationOfDateTime().split(\" \")[0])","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"marcusczh"},"content":"                            .equals(date)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"marcusczh"},"content":"                        tasksToList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"marcusczh"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"marcusczh"},"content":"                } else if (task.getTaskType().equals(\"D\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"marcusczh"},"content":"                    if (LocalDate.parse(((Deadline) task).getStringRepresentationOfDateTime().split(\" \")[0])","lastModifiedDate":"2022-09-04"},{"lineNumber":125,"author":{"gitId":"marcusczh"},"content":"                            .equals(date)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":126,"author":{"gitId":"marcusczh"},"content":"                        tasksToList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":127,"author":{"gitId":"marcusczh"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"marcusczh"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"marcusczh"},"content":"        return tasksToList;","lastModifiedDate":"2022-09-04"},{"lineNumber":132,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"marcusczh"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"marcusczh"},"content":"    public void markItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":141,"author":{"gitId":"marcusczh"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":142,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"marcusczh"},"content":"     * Un-marks a task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be un-marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"marcusczh"},"content":"    public void unMarkItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"marcusczh"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":152,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"marcusczh"},"content":"     * Finds and prints tasks which contain the specified keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"marcusczh"},"content":"     * @param keyword keyword to search for.","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"marcusczh"},"content":"     * @return ArrayList of tasks which contain the specified keyword.","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"marcusczh"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2022-08-29"},{"lineNumber":161,"author":{"gitId":"marcusczh"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":162,"author":{"gitId":"marcusczh"},"content":"        tasks.stream().filter((task) -\u003e {","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"marcusczh"},"content":"            return task.getDescription().contains(keyword);","lastModifiedDate":"2022-09-04"},{"lineNumber":164,"author":{"gitId":"marcusczh"},"content":"        }).forEach((task) -\u003e {","lastModifiedDate":"2022-09-04"},{"lineNumber":165,"author":{"gitId":"marcusczh"},"content":"            tasksFound.add(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":166,"author":{"gitId":"marcusczh"},"content":"        });","lastModifiedDate":"2022-09-04"},{"lineNumber":167,"author":{"gitId":"marcusczh"},"content":"        return tasksFound;","lastModifiedDate":"2022-08-29"},{"lineNumber":168,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":170,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":171,"author":{"gitId":"marcusczh"},"content":"     * Sorts the tasks in the tasks list in chronological order.","lastModifiedDate":"2022-09-04"},{"lineNumber":172,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"marcusczh"},"content":"    public void sort() {","lastModifiedDate":"2022-09-04"},{"lineNumber":174,"author":{"gitId":"marcusczh"},"content":"        ArrayList\u003cTask\u003e todoTasks \u003d getTodoTasks();","lastModifiedDate":"2022-09-04"},{"lineNumber":175,"author":{"gitId":"marcusczh"},"content":"        ArrayList\u003cTimeBasedTask\u003e timeBasedTasks \u003d getTimeBasedTasks();","lastModifiedDate":"2022-09-04"},{"lineNumber":176,"author":{"gitId":"marcusczh"},"content":"        timeBasedTasks.sort(Comparator.comparing(TimeBasedTask::getDateTime));","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"marcusczh"},"content":"        tasks.clear();","lastModifiedDate":"2022-09-04"},{"lineNumber":178,"author":{"gitId":"marcusczh"},"content":"        tasks.addAll(timeBasedTasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":179,"author":{"gitId":"marcusczh"},"content":"        tasks.addAll(todoTasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":180,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":182,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":183,"author":{"gitId":"marcusczh"},"content":"     * Filters out Todo tasks from the tasks list.","lastModifiedDate":"2022-09-04"},{"lineNumber":184,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":185,"author":{"gitId":"marcusczh"},"content":"     * @return list of todo tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":186,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":187,"author":{"gitId":"marcusczh"},"content":"    private ArrayList\u003cTask\u003e getTodoTasks() {","lastModifiedDate":"2022-09-04"},{"lineNumber":188,"author":{"gitId":"marcusczh"},"content":"        ArrayList\u003cTask\u003e todoTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":189,"author":{"gitId":"marcusczh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":190,"author":{"gitId":"marcusczh"},"content":"            String taskType \u003d task.getTaskType();","lastModifiedDate":"2022-09-04"},{"lineNumber":191,"author":{"gitId":"marcusczh"},"content":"            if (taskType \u003d\u003d \"T\") {","lastModifiedDate":"2022-09-04"},{"lineNumber":192,"author":{"gitId":"marcusczh"},"content":"                todoTasks.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":193,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":194,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":195,"author":{"gitId":"marcusczh"},"content":"        return todoTasks;","lastModifiedDate":"2022-09-04"},{"lineNumber":196,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":197,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":198,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":199,"author":{"gitId":"marcusczh"},"content":"     * Filters out time based tasks from the tasks list.","lastModifiedDate":"2022-09-04"},{"lineNumber":200,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":201,"author":{"gitId":"marcusczh"},"content":"     * @return list of time based tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":202,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":203,"author":{"gitId":"marcusczh"},"content":"    private ArrayList\u003cTimeBasedTask\u003e getTimeBasedTasks() {","lastModifiedDate":"2022-09-04"},{"lineNumber":204,"author":{"gitId":"marcusczh"},"content":"        ArrayList\u003cTimeBasedTask\u003e timeBasedTasks \u003d new ArrayList\u003cTimeBasedTask\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":205,"author":{"gitId":"marcusczh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":206,"author":{"gitId":"marcusczh"},"content":"            String taskType \u003d task.getTaskType();","lastModifiedDate":"2022-09-04"},{"lineNumber":207,"author":{"gitId":"marcusczh"},"content":"            if (taskType.equals(\"D\") || taskType.equals(\"E\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":208,"author":{"gitId":"marcusczh"},"content":"                timeBasedTasks.add((TimeBasedTask) task);","lastModifiedDate":"2022-09-04"},{"lineNumber":209,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":210,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":211,"author":{"gitId":"marcusczh"},"content":"        return timeBasedTasks;","lastModifiedDate":"2022-09-04"},{"lineNumber":212,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":213,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":213}},{"path":"src/main/java/tuna/Tuna.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.command.CommandType;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.command.LoadDataCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.command.SaveDataCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import tuna.command.WelcomeCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * Represents a Tuna bot. A Tuna object contains its storage, task list, ui, parser, folder path and file path.","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"public class Tuna {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** Storage to handle file loading and saving */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /** Task list to handle task related functionalities */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /** Ui to handle interactions with the user */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    /** Parser to parse the user inputs */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    /** Folder path of the data file */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    private String folderPath;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /** File path of the data file */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * Creates a Tuna object.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param folderPath folder path of the data file.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public Tuna(String folderPath, String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        new WelcomeCommand().execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"     * Initialises data and sends welcome message when user first runs the GUI.","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"     * @return welcome message.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown during execution.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    public String initialise() throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"        new LoadDataCommand(folderPath, filePath).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"        return new WelcomeCommand().execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"     * Runs the functionalities of the Tuna bot in terminal.","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"    public void run() {","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"            new LoadDataCommand(folderPath, filePath).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"            System.out.println(new WelcomeCommand().execute(tasks, ui, storage));","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"            boolean isByeCommand \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"            while (!isByeCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"                try {","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"                    String inputs \u003d ui.readCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"                    Command command \u003d parser.parse(inputs);","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"                    System.out.println(command.execute(tasks, ui, storage));","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"                    isByeCommand \u003d command.getType() \u003d\u003d CommandType.BYE;","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"                } catch (TunaException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"                    System.out.println(ui.showError(e.getMessage()));","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"            new SaveDataCommand(filePath).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"        } catch (TunaException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"            if (command.getType() \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"                new SaveDataCommand(filePath).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"                Platform.exit();","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"        } catch (TunaException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"     * Runs Tuna in the terminal.","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"     * @param args command line arguments.","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"        Tuna tuna \u003d new Tuna(\"./data\", \"./data/tuna.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"        tuna.run();","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":101}},{"path":"src/main/java/tuna/TunaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents Exceptions related to Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public class TunaException extends Exception {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"     * Constructs a DukeException object with the given description.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     * @param description description for the exception.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    public TunaException(String description) {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"marcusczh":16}},{"path":"src/main/java/tuna/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Represents a Ui to handle user interactions. A Ui object contains a scanner to read in user inputs.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"public class Ui {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** Scanner to read in user inputs */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Returns welcome message.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @return welcome message.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        return \"Hello! I\u0027m Tuna\\nWelcome back to the app\\nWhat can I do for you today?\";","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * Returns bye message.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @return bye message.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"    public String byeMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"        return \"Bye! Don\u0027t forget to do your tasks! Hope to see you again soon!\";","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     * Returns entry message and lists tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     * @param tasks list of tasks to be returned.","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @return all tasks in the list.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"    public String listTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"            message.append(String.format(\"%d. %s\\n\", index, task.toString()));","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"            index +\u003d 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"        return message.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"     * Returns entry message and lists tasks due on the specified date.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"     * @param date date of tasks to be listed.","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"     * @param tasks lists of tasks to be returned.","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"     * @return tasks that are due on the specified date.","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"    public String listTasksDueOnDateMessage(LocalDate date, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"        StringBuilder message \u003d new StringBuilder(String.format(\"Here are the tasks due on %s\\n\", date));","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        tasks.stream().forEach((task) -\u003e {","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"            message.append(String.format(\"%s\\n\", task.toString()));","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"        });","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"        return message.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after marking a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"     * @param task task that was marked as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message after marking a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"    public String markTaskMessage(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\\n\", task);","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after un-marking a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"marcusczh"},"content":"     * @param task task that was un-marked as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message after un-marking a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"marcusczh"},"content":"    public String unMarkTaskMessage(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"marcusczh"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\\n\", task);","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after deleting a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"marcusczh"},"content":"     * @param deletedTask task that was deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"marcusczh"},"content":"     * @param totalTasks total number of tasks left.","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message after deleting a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"marcusczh"},"content":"    public String deletedTaskMessage(Task deletedTask, int totalTasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"marcusczh"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"marcusczh"},"content":"                deletedTask, totalTasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after adding a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"marcusczh"},"content":"     * @param task task that was added.","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"marcusczh"},"content":"     * @param totalTasks total number of tasks currently in the list.","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message after adding a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"marcusczh"},"content":"    public String taskAddedMessage(Task task, int totalTasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":107,"author":{"gitId":"marcusczh"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n\",","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"marcusczh"},"content":"                task, totalTasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"marcusczh"},"content":"     * Reads in the next command by the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"marcusczh"},"content":"     * @return user command.","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"marcusczh"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-29"},{"lineNumber":117,"author":{"gitId":"marcusczh"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":118,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":119,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":121,"author":{"gitId":"marcusczh"},"content":"     * Returns error message of exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"marcusczh"},"content":"     * @param message error message of the exception that occurred.","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"marcusczh"},"content":"     * @return error message of exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":125,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"marcusczh"},"content":"    public String showError(String message) {","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"marcusczh"},"content":"        return message;","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":130,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"marcusczh"},"content":"     * Returns entry message and lists tasks that contain the specified keyword.","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":133,"author":{"gitId":"marcusczh"},"content":"     * @param tasksFound tasks that contain the specified keyword.","lastModifiedDate":"2022-08-29"},{"lineNumber":134,"author":{"gitId":"marcusczh"},"content":"     * @return list of tasks containing the specified keyword.","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"marcusczh"},"content":"    public String findMessage(ArrayList\u003cTask\u003e tasksFound) {","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"marcusczh"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":138,"author":{"gitId":"marcusczh"},"content":"        for (Task task : tasksFound) {","lastModifiedDate":"2022-08-29"},{"lineNumber":139,"author":{"gitId":"marcusczh"},"content":"            message.append(String.format(\"%s\\n\", task.toString()));","lastModifiedDate":"2022-08-29"},{"lineNumber":140,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":141,"author":{"gitId":"marcusczh"},"content":"        return message.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":142,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":143,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":144,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":145,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after tasks have been saved to the data file.","lastModifiedDate":"2022-08-29"},{"lineNumber":146,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":147,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message to indicate tasks have been saved.","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":149,"author":{"gitId":"marcusczh"},"content":"    public String fileSavedMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":150,"author":{"gitId":"marcusczh"},"content":"        return \"Your data has been saved\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":151,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":153,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":154,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after tasks have been loaded from the data file.","lastModifiedDate":"2022-08-29"},{"lineNumber":155,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":156,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message to indicate tasks have been loaded.","lastModifiedDate":"2022-08-29"},{"lineNumber":157,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":158,"author":{"gitId":"marcusczh"},"content":"    public String fileLoadedMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"marcusczh"},"content":"        return \"Your data has been loaded\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":160,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":161,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":162,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"marcusczh"},"content":"     * Returns confirmation message after tasks have been sorted.","lastModifiedDate":"2022-09-04"},{"lineNumber":164,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":165,"author":{"gitId":"marcusczh"},"content":"     * @param tasks tasks to print after sorting.","lastModifiedDate":"2022-09-04"},{"lineNumber":166,"author":{"gitId":"marcusczh"},"content":"     * @return confirmation message and the tasks after sorting.","lastModifiedDate":"2022-09-04"},{"lineNumber":167,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":168,"author":{"gitId":"marcusczh"},"content":"    public String sortTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":169,"author":{"gitId":"marcusczh"},"content":"        StringBuilder message \u003d new StringBuilder(\"Your tasks have been sorted\\n\");","lastModifiedDate":"2022-09-04"},{"lineNumber":170,"author":{"gitId":"marcusczh"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":171,"author":{"gitId":"marcusczh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":172,"author":{"gitId":"marcusczh"},"content":"            message.append(String.format(\"%d. %s\\n\", index, task.toString()));","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"marcusczh"},"content":"            index +\u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":174,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":175,"author":{"gitId":"marcusczh"},"content":"        return message.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":176,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":177}},{"path":"src/main/java/tuna/command/AddDeadLineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * Represents an add Deadline Task command. An AddDeadLineCommand object contains the index of the /by command,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" * task description and the deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"public class AddDeadLineCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /** Index of the /by command */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    private int limit;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    /** Deadline of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    private String by;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * Creates a AddDeadLineCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown when /by is missing.","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"    public AddDeadLineCommand(String[] inputs) throws TunaException {","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.DEADLINE);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        limit \u003d findElem(inputs, \"/by\");","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"        if (limit \u003d\u003d -1) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Oops! Remember to include /by and the deadline after your task description\");","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        taskDescription \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, limit));","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        by \u003d String.join(\" \", Arrays.copyOfRange(inputs, limit + 1, inputs.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * Executes the add deadline command, adding the DeadLine Task to the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"        tasks.addDeadLine(taskDescription, by);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"        return ui.taskAddedMessage(tasks.getLatestTask(), tasks.getTotalTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":51}},{"path":"src/main/java/tuna/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * Represents an add Event Task command. An AddEventCommand object contains the index of the /at command,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" * task description and when the event is occurring.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** Index of the /at command */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private int limit;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /** When the event is occurring */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private String at;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Creates a AddEventCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown when /at is missing.","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    public AddEventCommand(String[] inputs) throws TunaException {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.EVENT);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        limit \u003d findElem(inputs, \"/at\");","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        if (limit \u003d\u003d -1) {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Oops! Remember to include /at and the event time after your task description\");","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        taskDescription \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, limit));","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        at \u003d String.join(\" \", Arrays.copyOfRange(inputs, limit + 1, inputs.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * Executes the add event command, adding the Event Task to the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"        tasks.addEvent(taskDescription, at);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"        return ui.taskAddedMessage(tasks.getLatestTask(), tasks.getTotalTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":51}},{"path":"src/main/java/tuna/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Represents an add Todo Task command. An AddTodoCommand object contains the task description.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Creates a AddTodoCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    public AddTodoCommand(String[] inputs) {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.TODO);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        taskDescription \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length));","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Executes the add todo command, adding the Todo Task to the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        tasks.addTodo(taskDescription);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        return ui.taskAddedMessage(tasks.getLatestTask(), tasks.getTotalTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":38}},{"path":"src/main/java/tuna/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a Bye command.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Creates a ByeCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.BYE);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * Executes the bye command, printing a bye message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        return ui.byeMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":29}},{"path":"src/main/java/tuna/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a command.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Type of the command */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private CommandType type;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates a command.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param type type of the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public Command(CommandType type) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Returns the type of the command.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @return type of the command.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    public CommandType getType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        return type;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     * @return String indicating the task executed.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException exception thrown when commands are missing.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException;","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"     * Finds an element within an array.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"     * @param \u003cT\u003e generic type for any type of array and element.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"     * @param arr array to be searched.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     * @param elem element to be searched for.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"     * @return index of the element in the array.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"    protected static \u003cT\u003e int findElem(T[] arr, T elem) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"            if (arr[i].equals(elem)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"                return i;","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"        return -1;","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":61}},{"path":"src/main/java/tuna/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents the different command types","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"    WELCOME,","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    BYE,","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    LIST,","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"    MARK,","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"    UNMARK,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    DELETE,","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    TODO,","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    EVENT,","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    LOAD,","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    SAVE,","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    FIND,","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    SORT","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":20}},{"path":"src/main/java/tuna/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Represents a Delete Task Command. A DeleteCommand object contains the index of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** Index of the task to be deleted */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Executes the Delete Task command, deleting the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getTotalTasks()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Oops! Seems like the index you entered is out of range\");","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"        assert index \u003c tasks.getTotalTasks();","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        Task deletedTask \u003d tasks.getTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        return ui.deletedTaskMessage(deletedTask, tasks.getTotalTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":44}},{"path":"src/main/java/tuna/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a find command. A FindCommand object contains the keyword to search for.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** keyword to search for */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    private String keyword;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param inputs String array containing the user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    public FindCommand(String[] inputs) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.keyword \u003d inputs[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"     * Executes the find command, searching the task list and printing out tasks containing the specified keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        return ui.findMessage(tasks.find(keyword));","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":35}},{"path":"src/main/java/tuna/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * Represents a List command. A ListCommand object contains a boolean indicating if a date is provided and the","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * given date.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    /** Date provided by the user */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @param date Date to be compared with.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    public ListCommand(LocalDate ... date) {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        if (date.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"            this.date \u003d date[0];","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"            this.date \u003d null;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * Executes the list command, either listing all tasks, or tasks that fall on the given date, depending on","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     * the boolean provided during initialisation.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"            return ui.listTasksDueOnDateMessage(date, tasks.listTasks(date));","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"            return ui.listTasksMessage(tasks.listTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":46}},{"path":"src/main/java/tuna/command/LoadDataCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a load data command. A LoadDataCommand contains the folder path and file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public class LoadDataCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Folder path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private String folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** File path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * Creates a LoadDataCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * @param folderPath folder path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    public LoadDataCommand(String folderPath, String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.LOAD);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        assert !folderPath.equals(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     * Executes the load data command, loading the data from the file path provided into the tasks list.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        storage.loadFileContents(folderPath, filePath, tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        return ui.fileLoadedMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":43}},{"path":"src/main/java/tuna/command/MarkItemCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a mark item command. A MarkItemCommand contains the index of the task to be marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public class MarkItemCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Index of the task to be marked */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates a MarkItemCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public MarkItemCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.MARK);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * Executes the mark item command, marking the item at the specified index as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when index provided is out of range.","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getTotalTasks()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Oops! Seems like the index you entered is out of range\");","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"        assert index \u003c tasks.getTotalTasks();","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        tasks.markItem(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        return ui.markTaskMessage(tasks.getTask(index));","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":43}},{"path":"src/main/java/tuna/command/SaveDataCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a save data command. A SaveDataCommand object contains the file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public class SaveDataCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** File path of the data file */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates a SaveDataCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param filePath file path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public SaveDataCommand(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.SAVE);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Executes the save data command, saving the tasks list data into the file specified by the file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        storage.saveFileContents(filePath, tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        return ui.fileSavedMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":39}},{"path":"src/main/java/tuna/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a Sort command.","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     * Creates a SortCommand object.","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    public SortCommand() {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.SORT);","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * Executes the sort command, sorting all tasks according to chronological order.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * @param tasks   TaskList object.","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param ui      Ui object.","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        tasks.sort();","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        return ui.sortTasksMessage(tasks.listTasks());","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"marcusczh":29}},{"path":"src/main/java/tuna/command/UnMarkItemCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a un-mark item command. A UnMarkItemCommand contains the index of the task to be un-marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"public class UnMarkItemCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Index of the task to be un-marked */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates an UnMarkItemCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param index Index of the task to be un-marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public UnMarkItemCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.UNMARK);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"     * Executes the un-mark item command, marking the item at the specified index as not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getTotalTasks()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Oops! Seems like the index you entered is out of range\");","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"        assert index \u003c tasks.getTotalTasks();","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"        tasks.unMarkItem(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"        return ui.unMarkTaskMessage(tasks.getTask(index));","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":42}},{"path":"src/main/java/tuna/command/WelcomeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import tuna.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import tuna.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Represents a welcome command.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class WelcomeCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Creates a WelcomeCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    public WelcomeCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"        super(CommandType.WELCOME);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * Executes the welcome command, printing the welcome message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * @param storage Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        return ui.welcomeMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":30}},{"path":"src/main/java/tuna/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.gui;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    protected DialogBox(String text, Image img, String resourcePath) {","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(resourcePath));","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":36}},{"path":"src/main/java/tuna/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.gui;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":" * Represents a Launcher object.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     * Launches the application.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     * @param args command line arguments.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":17}},{"path":"src/main/java/tuna/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.gui;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import tuna.Tuna;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private Tuna tuna \u003d new Tuna(\"./data\", \"./data/tuna.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTuna(tuna);","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"        } catch (TunaException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":35}},{"path":"src/main/java/tuna/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.gui;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"import tuna.Tuna;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    private Tuna tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"            .getResourceAsStream(\"/images/fishing-rod.png\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    private Image tunaImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"            .getResourceAsStream(\"/images/tuna.png\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"    public void setTuna(Tuna d) throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"        tuna \u003d d;","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"                TunaDialogBox.getTunaDialog(tuna.initialise(), tunaImage)","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"        String response \u003d tuna.getResponse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"                UserDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"                TunaDialogBox.getTunaDialog(response, tunaImage)","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":61}},{"path":"src/main/java/tuna/gui/TunaDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.gui;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"public class TunaDialogBox extends DialogBox {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    private TunaDialogBox(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"        super(text, img, \"/view/TunaDialogBox.fxml\");","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    private void flip() {","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public static TunaDialogBox getTunaDialog(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        var db \u003d new TunaDialogBox(text, img);","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"        db.flip();","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        return db;","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"marcusczh":37}},{"path":"src/main/java/tuna/gui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.gui;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class UserDialogBox extends DialogBox {","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    private UserDialogBox(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"        super(text, img, \"/view/UserDialogBox.fxml\");","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    public static UserDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"marcusczh":19}},{"path":"src/main/java/tuna/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":" * Represents a Deadline task.","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"public class Deadline extends TimeBasedTask {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     * Creates a task with a deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    public Deadline(String description, String by) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        super(description, \"D\", by);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * Returns string representation of the Deadline object.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + super.getTaskType() + \"]\" + super.toString() + \" (by: \" + parseDateTime(this.getDateTime()) + \")\";","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":29}},{"path":"src/main/java/tuna/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":" * Represents an Event task.","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"public class Event extends TimeBasedTask {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     * Creates an event with a start time.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     * @param description the description of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * @param at the start time of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    public Event(String description, String at) throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        super(description, \"E\", at);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * Returns string representation of the Event object.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + super.getTaskType() + \"]\" + super.toString() + \" (at: \" + parseDateTime(this.getDateTime()) + \")\";","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":29}},{"path":"src/main/java/tuna/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents a task. A task object contains a description, isDone to indicate if it is completed and a task type","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"    protected String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"    /** Indicates if the task is completed */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /** Type of the task */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    protected String taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"     * Creates a task.","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param taskType the type of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"     * Gets the description of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     * @return description of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        return this.description;","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * Gets the status of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @return status of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"     * Returns the type of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"     * @return type of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"marcusczh"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"marcusczh"},"content":"        return this.taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"marcusczh"},"content":"     * Returns string representation of the Task object.","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":77}},{"path":"src/main/java/tuna/task/TimeBasedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.task;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"import tuna.TunaException;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" * Represents a time based task. A TimeBasedTask object contains a LocalDateTime object indicating the date and time","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":" * of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"public abstract class TimeBasedTask extends Task {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    /** Date and Time of the task */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"     * Creates a time based task.","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * @param taskDescription description of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @param taskType the type of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * @param stringRepresentationOfDateTime LocalDateTime object indicating the date and time of the task.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when the date and time provided is not formatted correctly.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    public TimeBasedTask(String taskDescription, String taskType, String stringRepresentationOfDateTime)","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"            throws TunaException {","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"        super(taskDescription, taskType);","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"            dateTime \u003d LocalDateTime.parse(stringRepresentationOfDateTime,","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"            throw new TunaException(\"Seems like you formatted the date and time wrongly, remember to format it as \"","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"                    + \"such:\\nyyyy-mm-dd hh:mm\");","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"     * Returns the date and time of the task as a LocalDateTime object.","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"marcusczh"},"content":"     * @return LocalDateTime of the start of the event.","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"marcusczh"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"marcusczh"},"content":"        return dateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"marcusczh"},"content":"     * Returns formatted representation of LocalDateTime object for display.","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"marcusczh"},"content":"     * @param dateTime LocalDateTime object to be formatted.","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"marcusczh"},"content":"     * @return formatted representation of LocalDateTime.","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"marcusczh"},"content":"    public static String parseDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"marcusczh"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu HHmm\")) + \"hrs\";","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"marcusczh"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"marcusczh"},"content":"     * @return start time of the event.","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"marcusczh"},"content":"    public String getStringRepresentationOfDateTime() {","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"marcusczh"},"content":"        return this.getDateTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"marcusczh":63}},{"path":"src/main/java/tuna/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":" * Represents a Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"     * Creates a todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"        super(description, \"T\");","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"     * Returns string representation of the Todo object.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"        return \"[\" + super.getTaskType() + \"]\" + super.toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"            fx:controller\u003d\"tuna.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"                      style\u003d\"-fx-background-color: lightblue;\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"marcusczh":25}},{"path":"src/main/resources/view/TunaDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: mistyrose; -fx-border-radius: 10;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"        -fx-background-radius: 10; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"                \u003cInsets right\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"74.0\" fitWidth\u003d\"77.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"marcusczh":22}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: palegreen; -fx-border-radius: 10;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"        -fx-background-radius: 10; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"                \u003cInsets right\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"74.0\" fitWidth\u003d\"77.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"marcusczh":22}},{"path":"src/test/java/tuna/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"import tuna.command.ByeCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":"import tuna.command.ListCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":" * Tests to test the Parser class.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    /** Parser object used in the tests */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"     * Tests if the bye command works as intended, which should return a ByeCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when unknown commands are detected.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"    public void parse_byeCommand_byeCommandInstanceReturned() throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"        assertTrue(parser.parse(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"     * Tests if the list command works as intended, which should return a ListCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"     * @throws TunaException Exception thrown when unknown commands are detected.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"marcusczh"},"content":"    public void parse_listCommand_listCommandInstanceReturned() throws TunaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"marcusczh"},"content":"        assertTrue(parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":37}},{"path":"src/test/java/tuna/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"package tuna;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"marcusczh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"marcusczh"},"content":" * Tests to test the TaskList class.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"marcusczh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"marcusczh"},"content":"     * Tests if the getTask function works as intended, which should return the task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"    public void getTask_getFirstTodoTask_todoTaskReturned() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"marcusczh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"        tasks.addTodo(\"description\");","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"marcusczh"},"content":"        assertEquals(\"description\", tasks.getTask(0).getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"marcusczh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"marcusczh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"     * Tests if the getTotalTasks function works as intended, which should return the total number of tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"marcusczh"},"content":"     * in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"marcusczh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"marcusczh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"marcusczh"},"content":"    public void getTotalTasks_oneTaskTotal_oneReturned() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"marcusczh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"marcusczh"},"content":"        tasks.addTodo(\"description\");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"marcusczh"},"content":"        assertEquals(1, tasks.getTotalTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"marcusczh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"marcusczh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"marcusczh":32}},{"path":"text-ui-test/data/tuna.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"D|X|return book|/by|2022-08-12 15:00","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"T| |look for book","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"marcusczh"},"content":"E|X|concert|/at|2022-09-10 18:30","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"marcusczh"},"content":"D| |borrow book|/by|2022-08-10 12:00","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"marcusczh"},"content":"D|X|read book|/by|2022-08-11 23:59","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"marcusczh"},"content":"T| |new task","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"marcusczh":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcusczh"},"content":"list","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"marcusczh"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"marcusczh":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"marcusczh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tuna\\*.java","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marcusczh"},"content":"java -classpath ..\\bin tuna.Tuna \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"marcusczh":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"marcusczh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/tuna/*.java","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"marcusczh"},"content":"java -classpath ../bin tuna.Tuna \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"marcusczh":2}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"4. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"   Hello! I\u0027m Duke.","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"   What can I do for you?","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neosunhan":7,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"checkstyle {","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neosunhan":19,"-":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":" * App to store and keep track of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"public class Duke {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    public static final Path STORAGE_PATH \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    private boolean running;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"     * @param filePath Path to storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    public Duke(Path filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"        running \u003d true;","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"    public Duke() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"        this(STORAGE_PATH);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"     * Attempts to load tasks from storage into the list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"     * @return A string representing the outcome of the attempt.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"    public String loadTasks() {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"        String ret \u003d \"Loaded tasks from storage\";","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"            tasks.loadTasksFromStorage(storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"neosunhan"},"content":"            ret \u003d \"Error loading tasks from storage: \" + e.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"        return ret;","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"        String out;","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"neosunhan"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"neosunhan"},"content":"            out \u003d c.execute(tasks, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"neosunhan"},"content":"            if (c.isExit()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"neosunhan"},"content":"                running \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"neosunhan"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"neosunhan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"neosunhan"},"content":"            out \u003d \"Error: \" + e.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"neosunhan"},"content":"        return out;","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"neosunhan"},"content":"    public String getWelcome() {","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"neosunhan"},"content":"        return \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"neosunhan"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"neosunhan"},"content":"        return running;","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"neosunhan":71}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"neosunhan":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"            stage.show();","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"neosunhan":32}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":" * Command to add a Deadline to the list of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    private final String desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    private final LocalDate by;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"     * Constructor for an AddDeadlineCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    public AddDeadlineCommand(String desc, LocalDate by) {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"        Task newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"        storage.write(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + newTask + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":36}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":" * Command to add an Event to the list of tasks","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    private final String desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    private final LocalDate at;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"     * Constructor for an AddEventCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"     * @param desc Description of the event.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"     * @param at Date of the event.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    public AddEventCommand(String desc, LocalDate at) {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"        Task newTask \u003d new Event(desc, at);","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"        storage.write(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + newTask + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":36}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":" * Command to add an Todo to the list of the tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    private final String desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    public AddTodoCommand(String desc) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"        Task newTask \u003d new Todo(desc);","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"        storage.write(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + newTask + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" * Abstract representation of a command.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    public abstract String execute(TaskList tasks, Storage storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"        return false;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":15}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":" * Command to delete a task from the list of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"        Task del \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"        storage.write(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\\t\" + del + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":25}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" * Command to exit the Duke app.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"        return true;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":21}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":" * Command to search the list of tasks for a specified keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        this.keyword \u003d keyword.trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"        List\u003cInteger\u003e matches \u003d tasks.search(keyword);","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"        for (int i : matches) {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"            sb.append(\"\\n\\t\").append(i).append(\".\").append(tasks.getTask(i));","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"neosunhan":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" * Command to list all tasks currently in the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"            sb.append(\"\\n\\t\").append(i).append(\".\").append(tasks.getTask(i));","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":20}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" * Command to mark a task as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    public MarkTaskCommand(int taskIndex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"        tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"        storage.write(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + tasks.getTask(taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":24}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" * Command to mark a task as not done.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    public UnmarkTaskCommand(int taskIndex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"        tasks.markTaskAsNotDone(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"        storage.write(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"        return \"Nice! I\u0027ve marked this task as not done yet:\\n\\t\" + tasks.getTask(taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":24}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":" * An exception thrown by the Duke program.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"neosunhan":10}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.exception;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":" * An exception thrown when a task index is out of bounds","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":" * (i.e. the index is not within the current list of tasks).","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"public class TaskIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"    public TaskIndexOutOfBoundsException(int taskIndex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"        super(\"Task index \" + taskIndex + \" out of bounds\");","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":11}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"import duke.command.MarkTaskCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"import duke.command.UnmarkTaskCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":" * Parser for the Duke program.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    public static final Pattern DEADLINE_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003cdesc\u003e.+)/by(?\u003cdate\u003e.+)\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"    public static final Pattern EVENT_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003cdesc\u003e.+)/at(?\u003cdate\u003e.+)\");","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"    public static final Pattern STORAGE_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"            \"(?\u003ctaskType\u003e[TDE])\\\\|(?\u003cdone\u003e[01])\\\\|(?\u003cdesc\u003e[^|]+)\\\\|?(?\u003cdate\u003e.+)?\");","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"     * Parses a command entered by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"     * @param commandString Command entered by user.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"     * @return Command object that can be executed.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"    public static Command parseCommand(String commandString) {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(commandString.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Unknown command\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"neosunhan"},"content":"        String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"        switch(commandWord) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"neosunhan"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"neosunhan"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"            return new MarkTaskCommand(Parser.parseTaskIndex(arguments));","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"neosunhan"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"neosunhan"},"content":"            return new UnmarkTaskCommand(Parser.parseTaskIndex(arguments));","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"neosunhan"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"neosunhan"},"content":"            return Parser.prepareTodo(arguments);","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"neosunhan"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"neosunhan"},"content":"            return Parser.prepareDeadline(arguments);","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"neosunhan"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"neosunhan"},"content":"            return Parser.prepareEvent(arguments);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"neosunhan"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"neosunhan"},"content":"            return new DeleteTaskCommand(Parser.parseTaskIndex(arguments));","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"neosunhan"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"neosunhan"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"neosunhan"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"neosunhan"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"neosunhan"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Unknown command\");","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"neosunhan"},"content":"     * Parses a string representing a task stored in the hard disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"neosunhan"},"content":"     * @param taskString String representation of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"neosunhan"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"neosunhan"},"content":"    public static Task fromStorage(String taskString) {","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"neosunhan"},"content":"        Matcher matcher \u003d STORAGE_FORMAT.matcher(taskString);","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"neosunhan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Invalid task format in storage: \" + taskString);","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"neosunhan"},"content":"        String taskType \u003d matcher.group(\"taskType\");","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"neosunhan"},"content":"        String done \u003d matcher.group(\"done\");","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"neosunhan"},"content":"        String desc \u003d matcher.group(\"desc\");","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"neosunhan"},"content":"        String date \u003d matcher.group(\"date\");","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"neosunhan"},"content":"        Task newTask;","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"neosunhan"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"neosunhan"},"content":"        case \"T\":","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"neosunhan"},"content":"            newTask \u003d new Todo(desc);","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"neosunhan"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"neosunhan"},"content":"        case \"D\":","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"neosunhan"},"content":"            newTask \u003d new Deadline(desc, LocalDate.parse(date, Deadline.INPUT_DATE_FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"neosunhan"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"neosunhan"},"content":"        case \"E\":","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"neosunhan"},"content":"            newTask \u003d new Event(desc, LocalDate.parse(date, Deadline.INPUT_DATE_FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"neosunhan"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"neosunhan"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Invalid task format in storage: \" + taskString);","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"neosunhan"},"content":"        if (done.equals(\"1\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"neosunhan"},"content":"            newTask.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"neosunhan"},"content":"        return newTask;","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"neosunhan"},"content":"    private static Command prepareEvent(String arguments) {","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"neosunhan"},"content":"        Matcher matcher \u003d EVENT_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"neosunhan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Date/time not specified for event\");","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"neosunhan"},"content":"        String desc \u003d matcher.group(\"desc\").trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"neosunhan"},"content":"        String dateString \u003d matcher.group(\"date\").trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"neosunhan"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"The description of an event cannot be empty\");","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"neosunhan"},"content":"        LocalDate at;","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"neosunhan"},"content":"            at \u003d LocalDate.parse(dateString, Event.INPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"neosunhan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"neosunhan"},"content":"        return new AddEventCommand(desc, at);","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"neosunhan"},"content":"    private static Command prepareDeadline(String arguments) {","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"neosunhan"},"content":"        Matcher matcher \u003d DEADLINE_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"neosunhan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Date/time not specified for deadline\");","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"neosunhan"},"content":"        String desc \u003d matcher.group(\"desc\").trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"neosunhan"},"content":"        String dateString \u003d matcher.group(\"date\").trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"neosunhan"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty\");","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"neosunhan"},"content":"        LocalDate by;","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"neosunhan"},"content":"            by \u003d LocalDate.parse(dateString, Deadline.INPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"neosunhan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Invalid date format\");","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"neosunhan"},"content":"        return new AddDeadlineCommand(desc, by);","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"neosunhan"},"content":"    private static int parseTaskIndex(String taskIndexString) {","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"neosunhan"},"content":"        if (taskIndexString \u003d\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Task index not specified\");","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"neosunhan"},"content":"        taskIndexString \u003d taskIndexString.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"neosunhan"},"content":"        int taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"neosunhan"},"content":"            taskIndex \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"neosunhan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(taskIndexString + \" is not a valid task index\");","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"neosunhan"},"content":"        return taskIndex;","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"neosunhan"},"content":"    private static Command prepareTodo(String arguments) {","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"neosunhan"},"content":"        if (arguments \u003d\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"neosunhan"},"content":"        String desc \u003d arguments.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"neosunhan"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"neosunhan"},"content":"        return new AddTodoCommand(desc);","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":168,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":168}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":" * Hard disk storage for the Duke program.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    private final Path filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"     * @param filePath Path to the file in the hard disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Error creating storage path\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"     * Read tasks from storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"     * @return A List of Strings, each representing a task.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"    public List\u003cString\u003e read() {","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"            lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Unable to read \" + filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"neosunhan"},"content":"        return lines;","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"     * Write the list of tasks to the hard disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"     * @param tasks Tasks to write.","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"neosunhan"},"content":"    public void write(TaskList tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"neosunhan"},"content":"        List\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"neosunhan"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"neosunhan"},"content":"            taskStrings.add(tasks.getTask(i).toStorage());","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"neosunhan"},"content":"            Files.write(filePath, taskStrings);","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"neosunhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Unable to write to \" + filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.task;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    private final LocalDate by;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    public String toStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        return \"D|\" + super.toStorage() + \"|\" + by.format(Deadline.INPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(Deadline.OUTPUT_DATE_FORMAT) + \")\";","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"neosunhan":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.task;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":" * Represents an event occurring on a specific date.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    private final LocalDate at;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"     * Constructor for an Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"     * @param description Description for the event.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"     * @param at Date of the event.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    public String toStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        return \"E|\" + super.toStorage() + \"|\" + at.format(Event.INPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(Event.OUTPUT_DATE_FORMAT) + \")\";","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"neosunhan":30}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.task;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":" * Abstract representation of a task.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    public static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    protected String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"     * Constructor for a task.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"    public String toStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"        return (isDone ? \"1\" : \"0\") + \"|\" + description;","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"neosunhan":44}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.task;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"public class TaskList {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"     * Loads a list of tasks from storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"     * @param storage Hard disk storage that contains tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"    public void loadTasksFromStorage(Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"        if (size() !\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"            throw new DukeException(\"Current list of tasks is not empty!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"        List\u003cString\u003e taskStrings \u003d storage.read();","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"        for (String taskStr : taskStrings) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"            tasks.add(Parser.fromStorage(taskStr));","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"        tasks.add(t);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"     * @param taskIndex Index of the task to be deleted.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"neosunhan"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"neosunhan"},"content":"            throw new TaskIndexOutOfBoundsException(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"neosunhan"},"content":"        return tasks.remove(taskIndex - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"neosunhan"},"content":"        getTask(taskIndex).markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"neosunhan"},"content":"    public void markTaskAsNotDone(int taskIndex) {","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"neosunhan"},"content":"        getTask(taskIndex).markAsNotDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"neosunhan"},"content":"     * Searches the list of tasks for a specified keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"neosunhan"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"neosunhan"},"content":"     * @return A list of task indices representing the matches.","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"neosunhan"},"content":"    public List\u003cInteger\u003e search(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"neosunhan"},"content":"        ArrayList\u003cInteger\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"neosunhan"},"content":"        for (int i \u003d 1; i \u003c\u003d size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"neosunhan"},"content":"            if (getTask(i).toString().contains(keyword)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"neosunhan"},"content":"                matches.add(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"neosunhan"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"neosunhan"},"content":"        return matches;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"neosunhan"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"neosunhan"},"content":"        Task t;","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"neosunhan"},"content":"            t \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"neosunhan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"neosunhan"},"content":"            throw new TaskIndexOutOfBoundsException(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"neosunhan"},"content":"        return t;","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"neosunhan"},"content":"    public int size() {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"neosunhan"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"neosunhan":87}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.task;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":" * Represents a task to be done.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    public String toStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"        return \"T|\" + super.toStorage();","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"neosunhan":20}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"neosunhan"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"neosunhan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"neosunhan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"neosunhan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"neosunhan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"neosunhan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"neosunhan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"neosunhan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"neosunhan"},"content":"        db.flip();","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"neosunhan"},"content":"        return db;","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"neosunhan":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"neosunhan"},"content":"    private final Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/UserProfile.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"neosunhan"},"content":"    private final Image dukeImage \u003d new Image(getClass().getResourceAsStream(\"/images/DukeProfile.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"neosunhan"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"neosunhan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"neosunhan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"neosunhan"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"neosunhan"},"content":"        String loadStatus \u003d duke.loadTasks();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"neosunhan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"neosunhan"},"content":"                DialogBox.getDukeDialog(loadStatus, dukeImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"neosunhan"},"content":"                DialogBox.getDukeDialog(duke.getWelcome(), dukeImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"neosunhan"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"neosunhan"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"neosunhan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"neosunhan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"neosunhan"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"neosunhan"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"neosunhan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"neosunhan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"neosunhan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"neosunhan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"neosunhan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"neosunhan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"neosunhan"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"neosunhan"},"content":"        if (!duke.isRunning()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"neosunhan"},"content":"            Platform.exit();","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"neosunhan"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"neosunhan":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"neosunhan":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"neosunhan":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    public void fromStorage_deadlineTask() {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"        Task t \u003d Parser.fromStorage(\"D|1|foo bar|2022-04-20\");","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"        assertEquals(\"[D][X] foo bar (by: Apr 20 2022)\", t.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"    public void parseCommand_invalidMarkTaskIndex_exceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"neosunhan"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"neosunhan"},"content":"            Parser.parseCommand(\"mark foo\");","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"neosunhan"},"content":"            fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"neosunhan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"neosunhan"},"content":"            assertEquals(\"foo is not a valid task index\", e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"neosunhan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":27}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neosunhan"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"neosunhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"neosunhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"neosunhan"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"neosunhan"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"neosunhan"},"content":"    public void toStorage_notDone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"neosunhan"},"content":"        assertEquals(\"T|0|foo bar\", new Todo(\"foo bar\").toStorage());","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"neosunhan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"neosunhan"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"neosunhan"},"content":"    public void toStorage_done() {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"neosunhan"},"content":"        Todo t \u003d new Todo(\"foo bar baz\");","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"neosunhan"},"content":"        t.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"neosunhan"},"content":"        assertEquals(\"T|1|foo bar baz\", t.toStorage());","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"neosunhan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"neosunhan"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"neosunhan":19}}]

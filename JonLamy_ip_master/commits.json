{"authorDailyContributionsMap":{"JonLamy":[{"date":"2022-08-17","commitResults":[{"hash":"4257978beac627aef7e0e7cae5191fb389d9de7c","messageTitle":"Add simple echo.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":7}}},{"hash":"3008e08f88bafb14deee96b3da774e2854e92351","messageTitle":"Move scanner.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7312d093b8453b54232873502b1a6781bf35fc35","messageTitle":"Task adding and check toggle.","messageBody":"","tags":["Level-3","Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":1}}},{"hash":"da96bd40e78fdebd2d070298c69310481477735c","messageTitle":"Added new task types.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":9}}},{"hash":"35654d3cabeb0ac5d0ca86c53c64236ffb9ab5a0","messageTitle":"Basic setup for automating testing.","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":2,"deletions":1},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2022-08-18","commitResults":[{"hash":"965104b87261391d5117e739ff887e5b04eb4628","messageTitle":"Basic error handling.","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":7},"java":{"insertions":51,"deletions":31}}},{"hash":"534b129391be6efe0ec15f040346dbd8efb9d70d","messageTitle":"Improved error handling","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":120,"deletions":47}}},{"hash":"5b4687863f032ceafe2bbfd2f57360ef7d6c8e78","messageTitle":"Redesign logic and renamed project.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":200,"deletions":199}}},{"hash":"a97e876611295f665c4e37441b15f86c9643ae6e","messageTitle":"Refined automated testing.","messageBody":"","tags":["Level-6","Level-5","A-TextUiTesting","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":21,"deletions":10},"sh":{"insertions":1,"deletions":1}}},{"hash":"927e1b9712e3b5782c66947412fccbadfc402f2e","messageTitle":"Prettify outputs.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":2}}}]},{"date":"2022-08-25","commitResults":[{"hash":"0b9086f4d180331f43d23cde717933e492f82029","messageTitle":"Follow Java coding standard","messageBody":"Modified class/enum names and variables to match naming conventions.\nAdded all project files to their relavant packages\nlike `task` or `exception`.\nAdded relavant class header comments and Javadocs for understandability.\n\nAdditionally, improved readability by abstracting setCommand function.\n","fileTypesAndContributionMap":{"java":{"insertions":175,"deletions":72}}}]},{"date":"2022-08-26","commitResults":[{"hash":"246a3866e65a98e3ba4eae5b1187567251fe2912","messageTitle":"Add read file function","messageBody":"MrRobot will search for existing task data on start.\nIf file is not found, it will create a blank file.\nIf file is found, it will load it into its memory.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":101,"deletions":15}}},{"hash":"e5cb45f8c6d4d67d6b36c8a0356c77819182a8d3","messageTitle":"Exclude data files from tracking","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3}}}]},{"date":"2022-08-27","commitResults":[{"hash":"2a172abc519bc204a803b0c486df4273f4d0cecf","messageTitle":"Level-7","messageBody":"Implement both reading and writing to hard-disk functionality.\nMr. Robot will search and load existing task data on start.\n\nWhen tasklist is changed during runtime,\nit will write changes to the file.\n\nTask data in memory will be saved again on exit.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":34}}},{"hash":"4a61af42bbb46cd9296fdfc766c9d30897aad50e","messageTitle":"Level-8","messageBody":"Mr Robot can recognise dates given for deadline tasks,\nprovided they are given in the right format.\n\nIf input format by user is not supported,\nan error and example will be shown, and user will be prompted again.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":17}}},{"hash":"f59bcdeebb822744ce4af65be26b63a2c2c65d7c","messageTitle":"Fix error on saving deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"0b87f2d508ca1457a56e4c05377dd6268ffa58ca","messageTitle":"Implement OOP paradigm","messageBody":"Abstracted Ui, Storage, Parser, and Tasklist classes.\nCommands also get their own classes.\n\nExceptions will print more useful responses to the user.\n","tags":["A-Packages","A-MoreOOP","A-Gradle"],"fileTypesAndContributionMap":{"java":{"insertions":485,"deletions":340}}}]},{"date":"2022-08-28","commitResults":[{"hash":"9286a436aa0be52bd69d45eed84c6f11cc334717","messageTitle":"Add JUnit tests","messageBody":"Added JUnit support, and ParserTest, StorageTest to\ntest for the Parser and Storage classes.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":29,"deletions":20},"java":{"insertions":124,"deletions":25},"sh":{"insertions":2,"deletions":2}}},{"hash":"44081ccbc14ab45e28a1408113eb72dca495bf43","messageTitle":"Support JAR execution","messageBody":"Duke will create a local file when executed.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"ecb9abd3b9ead4b7c5f33ca18d14c7ac8a876fd1","messageTitle":"A-JavaDoc","messageBody":"Add JavaDoc comments to code\n","fileTypesAndContributionMap":{"java":{"insertions":178,"deletions":15}}},{"hash":"c9726e259ff1c029949849739272c59de8e16a71","messageTitle":"A-CodingStandard","messageBody":"Tweak code to comly with Java coding standard.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":28}}},{"hash":"3fb979c68e4f2658ef5937522c336a3d15dd04b7","messageTitle":"Level-9","messageBody":"Allows user to find tasks with descriptions containing specified keyword.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":0}}},{"hash":"df254bb0856472d3c8fd1f8df1897093fb262623","messageTitle":"Add fallthrough comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"275de0b1978144660b552a7cc7f558e414c4cbd3","messageTitle":"Import FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":5}}},{"hash":"17ee1ac5abcb55120a234223eea3634474004132","messageTitle":"Add JavaDoc for FindCommand","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":5}}}]},{"date":"2022-08-30","commitResults":[{"hash":"1ae36c60ba7540212a2f15d72ddf3ff40603c82b","messageTitle":"A-CheckStyle","messageBody":"Use Intellij to detect coding style violations.\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":153,"deletions":48}}}]},{"date":"2022-09-02","commitResults":[{"hash":"ee9aad02048ca040cdc709fe7f32dad094e1d3cd","messageTitle":"Level-10","messageBody":"Add GUI to Duke implemented with JavaFX.\nRemoved the CLI UI from Duke. Users will now interact through the GUI exclusively.\n","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":23,"deletions":3},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":280,"deletions":222}}}]},{"date":"2022-09-08","commitResults":[{"hash":"a080a5243df520fa8f0d6fb41d75b332b61f34a2","messageTitle":"Assert add command","messageBody":"Add assertion in AddCommand::execute()\n\nTo ensure that task type has been specified by the program.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"aae6b2602b40802163a0e7a14fc38ebdeeed67be","messageTitle":"A-Assertions","messageBody":"AddCommand and EditCommand\n\nAssert that type of add/edit command exists.\n\nGet response\n\nDuke will notify user when an empty input is provided,\ninstead of quitting the app.\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":42}}},{"hash":"139810b106cd04b8a3ae0c41e56e109eb8e1a442","messageTitle":"Improve code quality","messageBody":"Enhance readability by practicing SLAP\nand removing instances of deep-nested code.\n","fileTypesAndContributionMap":{"java":{"insertions":245,"deletions":234}}},{"hash":"7525617ec673e5ce207478abe728f4bbeee882aa","messageTitle":"Include BadLineFormat","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2022-09-09","commitResults":[{"hash":"f19cfe13c30224fcb023303c05a6d6ce07a92dc3","messageTitle":"C-Undo","messageBody":"User cannot undo changes to the tasklist (example: delete).\n\nThis risks important task information being lost accidentally.\n\nThe undo command reverts tasklist to previous state.\n\nThe undo command cannot be undid.\n\nFurthermore, storage function to save/update storage file\nhas been moved to command execution,\nprevents unnecessary file writing on commands such as:\nlist, find, bye, undo.\n","tags":["BCD-Extension","A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":62}}}]},{"date":"2022-09-12","commitResults":[{"hash":"779f07ab928afc90a1732017a99e9c4ffd0ed413","messageTitle":"Improve comments","messageBody":"Changed grammar to follow standard.\nE.g. \"Parse\" -\u003e \"Parses\"\n\nAdd header comments to TaskList.java\n\nChanged parameter description for Duke constructor.\n\"Path of file to ...\" -\u003e \"Path of directory to ...\"\n\nAdd parameter descriptions to 2 methods in Storage.java\n\nRemoved debugging print statements.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":56,"deletions":28}}}]}]},"authorFileTypeContributionMap":{"JonLamy":{"java":1248,"md":0,"fxml":35,"sh":3,"bat":0,"gradle":24,"txt":36}},"authorContributionVariance":{"JonLamy":62153.95},"authorDisplayNameMap":{"JonLamy":"CS2103T-T14-2 JONA..LOON"}}

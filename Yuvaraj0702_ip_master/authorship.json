[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Yuvaraj0702":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"plugins {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"repositories {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"dependencies {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"test {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    testLogging {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"        showExceptions true","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"        showCauses true","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"application {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"shadowJar {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"run{","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Yuvaraj0702":42}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"goto fail","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"goto fail","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":":init","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":":win9xME_args","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Yuvaraj0702"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":":execute","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Yuvaraj0702"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"Yuvaraj0702"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Yuvaraj0702"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Yuvaraj0702"},"content":":end","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Yuvaraj0702"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"Yuvaraj0702"},"content":":fail","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"Yuvaraj0702"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"Yuvaraj0702"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"Yuvaraj0702"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Yuvaraj0702"},"content":"exit /b 1","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Yuvaraj0702"},"content":":mainEnd","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Yuvaraj0702"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Yuvaraj0702"},"content":":omega","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Yuvaraj0702":103}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" * Child class duke.Deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":" * duke.Deadline a child class of duke.Task has the same functionality","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" * but adds on with a by field which allows users to set a deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":" * @author Yuvaraj Kumaresan","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"     *  @param description String describing the deadline task.","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param by          String providing the timeframe for the deadline task.*/","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the deadline object.","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method getBy()","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the by attribute.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"        return this.by;","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Yuvaraj0702":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":" * Duke IP for CS2103T AY 2022/2023","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" * @author Yuvaraj Kumaresan","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"    private static TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"    private static Storage storage \u003d new Storage(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"    private static Ui ui \u003d new Ui(storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    private static Parser parser \u003d new Parser(storage, ui);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"     * Starts the Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"    public static void run() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"        storage.readFromFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"        parser.parse();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"     * Main method.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param args","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"        String divider \u003d \"----------------------------------------------------------------------------------------------------------------\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Hello I am \\n\" + logo + \"\\nType help to see user guide.\\n\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"        run();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Yuvaraj0702":40,"-":8}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":" * Class duke.DukeException an extension of the exception class to handle possible exceptions thrown by duke.Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":" * @author Yuvaraj Kumaresan","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param errorMessage The error message string.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"     * Nested class DukeToDoException","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"     * DukeToDoException handles possible errors with the duke.ToDo input phrase.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    public static class DukeToDoException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"        /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"         * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"         *","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"         * @param errorMessage The error message string.","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"         */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"        public DukeToDoException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"            super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"     * Nested class DukeCommandException","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"     * DukeCommandException handles possible incorrect command errors.","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"    public static class DukeCommandException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"        /**","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"         * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"         *","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"         * @param errorMessage The error message string.","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"         */","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"        public DukeCommandException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"            super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Yuvaraj0702":53}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":" * Child class duke.Event","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" * duke.Event a child class of duke.Task has the same functionality","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":" * but adds on with an at field which allows users to set an event timing.","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" * @author Yuvaraj Kumaresan","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param description String describing the event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param at          String providing the timeframe for the event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the event object.","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method getAt()","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the at attribute.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"    public String getAt() {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"        return this.at;","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Yuvaraj0702":45}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" * Handles user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"    protected static Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"    protected static Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"    public Parser(Storage list, Ui ui) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"        this.storage \u003d list;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles parsing of text input by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"    public static void parse() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"            String text \u003d input.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"            if (text.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"                ui.list();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"                ui.bye();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"                    if (text.equalsIgnoreCase(\"delete\") || text.equalsIgnoreCase(\"delete \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"                        ui.deleteNoNumber();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"                    } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"                        int deletable \u003d Integer.parseInt(text.replace(\"delete \", \"\")) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"                        if (deletable \u003c storage.taskList.arrayList.size() \u0026\u0026 deletable \u003e\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"                            Task deleted \u003d storage.taskList.arrayList.get(deletable);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"                            storage.taskList.delete(deletable);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"                            ui.delete(deleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"                        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"                            ui.deleteError();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"                        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"                } catch (NumberFormatException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.deleteNumberFormatError();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"                if (text.equalsIgnoreCase(\"todo\") || text.equalsIgnoreCase(\"todo \") || text.replace(\"todo \", \"\").trim().length() \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"                    try {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"                        throw new DukeException.DukeToDoException(\"Please provide a description for your todo task.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"                    } catch (DukeException.DukeToDoException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"                        ui.todoError(error);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"                } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"                    ToDo item \u003d new ToDo(text.replace(\"todo \", \"\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"                    storage.taskList.addTodo(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.todo(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"                    String[] description \u003d text.replace(\"deadline \", \"\").split(\"/by \");","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"                    try {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"                        if (description[1].length() \u003e 10) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"                            Deadline item \u003d new Deadline(description[0], LocalDateTime.parse(description[1], formatter));","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Yuvaraj0702"},"content":"                            storage.taskList.addDeadline(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"                            ui.deadline(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Yuvaraj0702"},"content":"                        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"                            description[1] \u003d description[1] + \" 00:00\";","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":"                            Deadline item \u003d new Deadline(description[0], LocalDateTime.parse(description[1], formatter));","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Yuvaraj0702"},"content":"                            storage.taskList.addDeadline(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"                            ui.deadline(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Yuvaraj0702"},"content":"                        }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Yuvaraj0702"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"Yuvaraj0702"},"content":"                        ui.dateTimeParseError();","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Yuvaraj0702"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"                } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.dateTimeArrayException();","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"Yuvaraj0702"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"Yuvaraj0702"},"content":"                    String[] description \u003d text.replace(\"event \", \"\").split(\"/at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"Yuvaraj0702"},"content":"                    Event item \u003d new Event(description[0], description[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"Yuvaraj0702"},"content":"                    storage.taskList.addEvent(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.event(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"                } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.eventError();","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"Yuvaraj0702"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Yuvaraj0702"},"content":"                    if (text.equalsIgnoreCase(\"mark\") || text.equalsIgnoreCase(\"mark \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"Yuvaraj0702"},"content":"                        ui.noNumberToMark();","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Yuvaraj0702"},"content":"                    } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"Yuvaraj0702"},"content":"                        if (Integer.parseInt(text.replace(\"mark \", \"\")) - 1 \u003c storage.taskList.arrayList.size() \u0026\u0026 Integer.parseInt(text.replace(\"mark \", \"\")) \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"Yuvaraj0702"},"content":"                            Task toBeMarked \u003d storage.taskList.arrayList.get(Integer.parseInt(text.replace(\"mark \", \"\")) - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"Yuvaraj0702"},"content":"                            if (!toBeMarked.getIsDone()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"Yuvaraj0702"},"content":"                                storage.taskList.mark(toBeMarked);","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"Yuvaraj0702"},"content":"                                ui.mark(text);","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"Yuvaraj0702"},"content":"                            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"Yuvaraj0702"},"content":"                                ui.alreadyMarked();","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Yuvaraj0702"},"content":"                            }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"Yuvaraj0702"},"content":"                        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"Yuvaraj0702"},"content":"                            ui.noItemToMark();","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"Yuvaraj0702"},"content":"                        }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"Yuvaraj0702"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"Yuvaraj0702"},"content":"                } catch (NumberFormatException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.markFormatError();","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"Yuvaraj0702"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"Yuvaraj0702"},"content":"                    if (text.equalsIgnoreCase(\"unmark\") || text.equalsIgnoreCase(\"unmark \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"Yuvaraj0702"},"content":"                        ui.noNumberToUnmark();","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"Yuvaraj0702"},"content":"                    } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"Yuvaraj0702"},"content":"                        if (Integer.parseInt(text.replace(\"unmark \", \"\")) - 1 \u003c storage.taskList.arrayList.size() \u0026\u0026 Integer.parseInt(text.replace(\"unmark \", \"\")) \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"Yuvaraj0702"},"content":"                            Task toBeUnmarked \u003d storage.taskList.arrayList.get(Integer.parseInt(text.replace(\"unmark \", \"\")) - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"Yuvaraj0702"},"content":"                            if (toBeUnmarked.getIsDone()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"Yuvaraj0702"},"content":"                                storage.taskList.unmark(toBeUnmarked);","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"Yuvaraj0702"},"content":"                                ui.unmark(text);","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"Yuvaraj0702"},"content":"                            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"Yuvaraj0702"},"content":"                                ui.alreadyUnmarked();","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"Yuvaraj0702"},"content":"                            }","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"Yuvaraj0702"},"content":"                        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"Yuvaraj0702"},"content":"                            ui.noItemToUnmark();","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"Yuvaraj0702"},"content":"                        }","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"Yuvaraj0702"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"Yuvaraj0702"},"content":"                } catch (NumberFormatException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.unmarkFormatError();","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"Yuvaraj0702"},"content":"            } else if (text.startsWith(\"help\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"Yuvaraj0702"},"content":"                ui.help();","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"Yuvaraj0702"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"Yuvaraj0702"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"Yuvaraj0702"},"content":"                    throw new DukeException.DukeCommandException(\"Invalid command\");","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"Yuvaraj0702"},"content":"                } catch (DukeException.DukeCommandException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"Yuvaraj0702"},"content":"                    ui.generalError(error);","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"Yuvaraj0702"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"Yuvaraj0702"},"content":"            storage.writeToFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Yuvaraj0702":159}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":" * Handles storage, writing and editing of output text file.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    protected static TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    public Storage(TaskList list) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"        taskList \u003d list;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"     * Reads tasks from text file duke.txt.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    public static void readFromFile() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"            File myObj \u003d new File(\"duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"                FileInputStream saved \u003d new FileInputStream(\"duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"                Scanner scan \u003d new Scanner(saved);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"                while (scan.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"                    String next \u003d scan.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"                    if (next.startsWith(\"duke.ToDo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"                        String[] temp \u003d next.split(\" / \");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"                        ToDo item \u003d new ToDo(temp[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"                        item.setIsDone(temp[1].equalsIgnoreCase(\"true\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"                        taskList.arrayList.add(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"                    } else if (next.startsWith(\"duke.Deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"                        String[] temp \u003d next.split(\" / \");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"                        Deadline item \u003d new Deadline(temp[2], LocalDateTime.parse(temp[3], formatter));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"                        item.setIsDone(temp[1].equalsIgnoreCase(\"true\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"                        taskList.arrayList.add(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"                    } else if (next.startsWith(\"duke.Event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"                        String[] temp \u003d next.split(\" / \");","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"                        Event item \u003d new Event(temp[2], temp[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"                        item.setIsDone(temp[1].equalsIgnoreCase(\"true\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"                        taskList.arrayList.add(item);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"                scan.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"     * Write tasks to text file duke.txt.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"        FileWriter dukeWriter \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"        for (int i \u003d 0; i \u003c taskList.arrayList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"            if (taskList.arrayList.get(i).getClass() \u003d\u003d ToDo.class) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"                dukeWriter.write(\"duke.ToDo / \" + taskList.arrayList.get(i).getIsDone() + \" / \" + taskList.arrayList.get(i).getDescription() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"            if (taskList.arrayList.get(i).getClass() \u003d\u003d Event.class) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"                dukeWriter.write(\"duke.Event / \" + ((Event) taskList.arrayList.get(i)).getIsDone() + \" / \" + ((Event) taskList.arrayList.get(i)).getDescription() + \" / \" + ((Event) taskList.arrayList.get(i)).getAt() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"            if (taskList.arrayList.get(i).getClass() \u003d\u003d Deadline.class) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"                dukeWriter.write(\"duke.Deadline / \" + ((Deadline) taskList.arrayList.get(i)).getIsDone() + \" / \" + ((Deadline) taskList.arrayList.get(i)).getDescription() + \" / \" + ((Deadline) taskList.arrayList.get(i)).getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\")) + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"        dukeWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Yuvaraj0702":78}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":" * Class duke.Task","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":" * Description: An encapsulation of what a completable task is in the context of duke.Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" * Has description and isDone field to describe and mark completion status of a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":" * @author Yuvaraj Kumaresan","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param description The string describing the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method getStatusIcon","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the isDone field.","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method setIsDone","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param done Boolean value depicting if the task is done or not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"    public void setIsDone(Boolean done) {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method getIsDone","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return Boolean representing if the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method getDescription","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String with the description of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the task object.","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Yuvaraj0702":70}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":" * Handles the list and list edit functions.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    protected ArrayList\u003cTask\u003e arrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"        this.arrayList \u003d list;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles adding a todo task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param task The todo task to add to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    public void addTodo(ToDo task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"        this.arrayList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles adding a deadline task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param task The deadline task to add to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"    public void addDeadline(Deadline task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"        this.arrayList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles adding an event task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param task The event task to add to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"    public void addEvent(Event task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"        this.arrayList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles deleting a task from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param taskNumber The task number to delete from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"        this.arrayList.remove(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles marking a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param toBeMarked The task to be marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"    public void mark(Task toBeMarked) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"        toBeMarked.setIsDone(true);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles unmarking a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param toBeUnmarked The task to be unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"    public void unmark(Task toBeUnmarked) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"        toBeUnmarked.setIsDone(true);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Yuvaraj0702":70}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":" * Child class duke.ToDo","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" * duke.ToDo class a child class of the task and has similar functionality.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":" * @author Yuvaraj Kumaresan","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param description String describing the todo task.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"     * Method toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"     * @return String representation of the todo object.","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Yuvaraj0702":31}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":" * Handles UI aspects of the duke.Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    protected Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"    public Ui(Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    String divider \u003d \"----------------------------------------------------------------------------------------------------------------\";","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles UI output for list keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"    public void list() {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"        if (storage.taskList.arrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(\"The list is empty, please add more items to display them here.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(\"Here are the tasks in your list : \");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"            for (int i \u003d 0; i \u003c storage.taskList.arrayList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"                System.out.println((i + 1) + \". \" + storage.taskList.arrayList.get(i).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"            System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles UI output for bye keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"    public void bye() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"        storage.writeToFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles UI output for delete keyword with no line number.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"    public void deleteNoNumber() {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Please provide a task number to delete\");","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles UI output for delete keyword where the task does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"    public void deleteError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"The task you want to delete does not exist.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles the delete keyword and deletes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param deleted duke.Task to delete.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"    public void delete(Task deleted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Noted. I have removed this task:\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"                deleted.toString() +","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"                \"\\nNow you have \" + storage.taskList.arrayList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles invalid delete command.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Yuvaraj0702"},"content":"    public void deleteNumberFormatError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Invalid command please add a space between delete and the list item you would like to interact with. \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Additionally ensure you have entered a number after delete.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles todo keyword and adds task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param item duke.ToDo item to add to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"Yuvaraj0702"},"content":"    public void todo(ToDo item) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Got it. I\u0027ve added this task. \\n\" + item.toString() + \"\\nNow you have \" + storage.taskList.arrayList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles todo error when the todo keyword is used.","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param error The error thrown when todo malfunctions.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"Yuvaraj0702"},"content":"    public void todoError(DukeException.DukeToDoException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(error.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles deadline keyword and adds deadline task to list.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param item The deadline item to add to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"Yuvaraj0702"},"content":"    public void deadline(Deadline item) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Got it. I\u0027ve added this task. \\n\" + item.toString() + \"\\nNow you have \" + storage.taskList.arrayList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles improper date time format for deadline item.","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"Yuvaraj0702"},"content":"    public void dateTimeParseError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Incorrect date time format the format is dd/mm/yyyy hh:mm if time is not provided the default is 00:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles improper deadline keyword entries.","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"Yuvaraj0702"},"content":"    public void dateTimeArrayException() {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Please provide a deadline and a by time e.g. deadline \u003cdescription of the deadline\u003e /by \u003ctime of the deadline\u003e\");","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles the event keyword and adds an event to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param item The event item to add to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"Yuvaraj0702"},"content":"    public void event(Event item) {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Got it. I\u0027ve added this task. \\n\" + item.toString() + \"\\nNow you have \" + storage.taskList.arrayList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles improper event keyword entries.","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"Yuvaraj0702"},"content":"    public void eventError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Please provide a event and an at time e.g. event \u003cdescription of the event\u003e /at \u003ctime of the event\u003e\");","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles mark keyword and marks tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param text String to mark.","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"Yuvaraj0702"},"content":"    public void mark(String text) {","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"Yuvaraj0702"},"content":"                storage.taskList.arrayList.get(Integer.parseInt(text.replace(\"mark \", \"\")) - 1).toString() +","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"Yuvaraj0702"},"content":"                \"\\nNow you have \" + storage.taskList.arrayList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles missing task number to mark.","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"Yuvaraj0702"},"content":"    public void noNumberToMark() {","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Please provide a task number to mark as done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles case where task is already marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":186,"author":{"gitId":"Yuvaraj0702"},"content":"    public void alreadyMarked() {","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":188,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"This task is already marked done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":189,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":190,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles case where the item to mark does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":195,"author":{"gitId":"Yuvaraj0702"},"content":"    public void noItemToMark() {","lastModifiedDate":"2022-08-25"},{"lineNumber":196,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":197,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Such an item does not exist\");","lastModifiedDate":"2022-08-25"},{"lineNumber":198,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":199,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":200,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":201,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":202,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles improper mark keyword entries.","lastModifiedDate":"2022-08-25"},{"lineNumber":203,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":204,"author":{"gitId":"Yuvaraj0702"},"content":"    public void markFormatError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":205,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":206,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Invalid command please add a space between mark and the list item you would like to interact with. \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Additionally ensure you have entered a number after mark.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":208,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":209,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":210,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles unmark keyword and unmarks tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param text String to unmark","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"Yuvaraj0702"},"content":"    public void unmark(String text) {","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":218,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":219,"author":{"gitId":"Yuvaraj0702"},"content":"                storage.taskList.arrayList.get(Integer.parseInt(text.replace(\"unmark \", \"\")) - 1).toString() +","lastModifiedDate":"2022-08-25"},{"lineNumber":220,"author":{"gitId":"Yuvaraj0702"},"content":"                \"\\nNow you have \" + storage.taskList.arrayList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":221,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":222,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":223,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles case where unmark number is missing.","lastModifiedDate":"2022-08-25"},{"lineNumber":226,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"Yuvaraj0702"},"content":"    public void noNumberToUnmark() {","lastModifiedDate":"2022-08-25"},{"lineNumber":228,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":229,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Please provide a task number to mark as not done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles case where task is already unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":235,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"Yuvaraj0702"},"content":"    public void alreadyUnmarked() {","lastModifiedDate":"2022-08-25"},{"lineNumber":237,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":238,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"This task is already marked not done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":239,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":240,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":241,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":242,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":243,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles case where item to unmark does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":244,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":245,"author":{"gitId":"Yuvaraj0702"},"content":"    public void noItemToUnmark() {","lastModifiedDate":"2022-08-25"},{"lineNumber":246,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":247,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Such an item does not exist\");","lastModifiedDate":"2022-08-25"},{"lineNumber":248,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":249,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":250,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":251,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":252,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles improper unmark keyword entries.","lastModifiedDate":"2022-08-25"},{"lineNumber":253,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":254,"author":{"gitId":"Yuvaraj0702"},"content":"    public void unmarkFormatError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":255,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":256,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Invalid command please add a space between unmark and the list item you would like to interact with. \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":257,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Additionally ensure you have entered a number after unmark.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":258,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":259,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":260,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":261,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":262,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles the help keyword and displays the user guide.","lastModifiedDate":"2022-08-25"},{"lineNumber":263,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":264,"author":{"gitId":"Yuvaraj0702"},"content":"    public void help() {","lastModifiedDate":"2022-08-25"},{"lineNumber":265,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":266,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Welcome to the user guide. This guide has all the commands that are necessary to operate duke.Duke\\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":267,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Main commands : \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":268,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Todo : adds a todo task to the task list :-\u003e todo \u003cdescription of the task\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":269,"author":{"gitId":"Yuvaraj0702"},"content":"                \"duke.Deadline : adds a deadline task to the task list :-\u003e deadline \u003cdescription of the deadline\u003e /by \u003ctime of the deadline\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":270,"author":{"gitId":"Yuvaraj0702"},"content":"                \"duke.Event : adds an event task to the task list :-\u003e event \u003cdescription of the event\u003e /at \u003ctime of the event\u003e \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":271,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Other commands: \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":272,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Mark : marks a task as done :-\u003e mark \u003ctask number\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":273,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Unmark : marks a task as not done :-\u003e unmark \u003ctask number\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":274,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Delete : deletes a task :-\u003e delete \u003ctask number\u003e\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":275,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Help : brings up this display :-\u003e help\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":276,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Bye : closes duke.Duke :-\u003e bye \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":277,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Please enter one of the above to continue.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":278,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":279,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":280,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":281,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":282,"author":{"gitId":"Yuvaraj0702"},"content":"     * Handles general errors","lastModifiedDate":"2022-08-25"},{"lineNumber":283,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":284,"author":{"gitId":"Yuvaraj0702"},"content":"     * @param error The error message thrown.","lastModifiedDate":"2022-08-25"},{"lineNumber":285,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":286,"author":{"gitId":"Yuvaraj0702"},"content":"    public void generalError(DukeException.DukeCommandException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":287,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":288,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(error.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":289,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(\"Please provide a proper command. Formats are as follows: \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":290,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Main commands : \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":291,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Todo : adds a todo task to the task list :-\u003e todo \u003cdescription of the task\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":292,"author":{"gitId":"Yuvaraj0702"},"content":"                \"duke.Deadline : adds a deadline task to the task list :-\u003e deadline \u003cdescription of the deadline\u003e /by \u003ctime of the deadline\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":293,"author":{"gitId":"Yuvaraj0702"},"content":"                \"duke.Event : adds an event task to the task list :-\u003e event \u003cdescription of the event\u003e /at \u003ctime of the event\u003e \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":294,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Other commands: \\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":295,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Mark : marks a task as done :-\u003e mark \u003ctask number\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":296,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Unmark : marks a task as not done :-\u003e unmark \u003ctask number\u003e \\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":297,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Delete : deletes a task :-\u003e delete \u003ctask number\u003e\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":298,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Help : brings up this display :-\u003e help\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":299,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Bye : closes duke.Duke :-\u003e bye\\n\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":300,"author":{"gitId":"Yuvaraj0702"},"content":"                \"Please enter one of the above to continue.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":301,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(divider);","lastModifiedDate":"2022-08-25"},{"lineNumber":302,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":303,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Yuvaraj0702":303}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"help","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"todo bungee jumping","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"todo read the great gatsby","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"a random command","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"deadline submit project /by Thursday","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"event project meeting /at Mon 2pm","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"markew","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"mark2","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"mark 20","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Yuvaraj0702":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Yuvaraj0702":1,"-":21}}]

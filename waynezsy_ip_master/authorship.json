[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"waynezsy":22,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":" * The Duke class is a personal chatbot assistant.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"    /** The Storage that loads and writes files for Duke. */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    /** The Ui that interacts with the user. */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    /** The list of tasks stored by Duke. */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    private boolean isExit;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new Duke chatbot that loads and saves data","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     * to a specified file path.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        storage \u003d new Storage(DEFAULT_FILE_PATH);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"     * Checks if the latest command to Duke is an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"     * @return true if the latest command is an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"        return isExit;","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"     * Gets Duke\u0027s response to a specified input.","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"     * @param input The specified user input.","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"     * @return Duke\u0027s response to the specified input.","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"            return ui.getResponse();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"        return ui.getResponse();","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"     * Gets Duke\u0027s welcome message.","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"     * @return Duke\u0027s welcome message.","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"    public String getWelcome() {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        return ui.getResponse();","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"waynezsy":68,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":" * The DukeException class represents an exception","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":" * that is unique to Duke.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new DukeException with an error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"     * @param message A string that describes the error which occurred.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"waynezsy":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"import duke.command.OnCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":" * The Parser class deals with making sense of user commands to Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    private enum TempCommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, ON, FIND","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     * Executes the user command specified to Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param fullCommand The command specified to Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @return A Command object representing the user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the user command is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"            String[] strings \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"            String firstCommand \u003d strings[0].toUpperCase();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"            TempCommand tempCommand \u003d TempCommand.valueOf(firstCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"            switch (tempCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"            case BYE:","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"            case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"            case MARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"                if (fullCommand.length() \u003d\u003d 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify which task to mark with a single integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"                    String input \u003d fullCommand.substring(5);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"                    int n \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"                    return new MarkCommand(n);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify which task to mark with a single integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"                if (fullCommand.length() \u003d\u003d 6) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify which task to unmark with a single integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"                    String input \u003d fullCommand.substring(7);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"                    int n \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"                    return new UnmarkCommand(n);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify which task to unmark with a single integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"            case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"                    return new AddCommand(new Todo(fullCommand.substring(5)));","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"                    String input \u003d fullCommand.substring(9);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"                    if (input.startsWith(\"/by\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"                    String[] splitInput \u003d input.split(\" /by \");","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"                    return new AddCommand(new Deadline(splitInput[0], splitInput[1]));","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Use /by to provide when a deadline must be completed.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"            case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"                    String input \u003d fullCommand.substring(6);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"                    if (input.startsWith(\"/at\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"                        throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"                    String[] splitInput \u003d input.split(\" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"                    return new AddCommand(new Event(splitInput[0], splitInput[1]));","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"                } catch (StringIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Use /at to provide when an event occurs.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"            case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"                if (fullCommand.length() \u003d\u003d 6) {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify which task to delete with a single integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"                    String input \u003d fullCommand.substring(7);","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"                    int n \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"                    return new DeleteCommand(n);","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify which task to delete with a single integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"            case ON:","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"                if (fullCommand.length() \u003d\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify the date to check with yyyy-MM-dd.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"                    LocalDate date \u003d LocalDate.parse(fullCommand.substring(3));","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"                    return new OnCommand(date);","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Specify the date to check with yyyy-MM-dd.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"waynezsy"},"content":"            case FIND:","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"waynezsy"},"content":"                try {","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"waynezsy"},"content":"                    return new FindCommand(fullCommand.substring(5));","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"waynezsy"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Include the keyword you want to find.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"waynezsy"},"content":"            default:","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"waynezsy"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"waynezsy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":143}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":" * The Storage class deals with loading tasks from a file","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":" * and saving tasks in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    /** The location of the file in the hard disk to load from and write to. */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new Storage that loads tasks from a specified file path.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     * @param filePath The specified file path to load tasks from.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * Loads data from the Duke data file on the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @return An array list of tasks stored in the data file on the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when unable to load data from the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"            if (!f.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"                f.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"                tasks.add(Task.parseData(sc.nextLine()));","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"            return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"        } catch (IOException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"Unable to load data from hard disk file.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"     * Saves the task list as data in a data file on the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList to write into a data file.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when unable to write into the hard disk file.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    public void writeToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"            String[] dataStrings \u003d tasks.allToData();","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"            for (String s : dataStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"                fw.write(s);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"            fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"Unable to write into the hard disk file.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":71}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":" * The Ui class deals with interactions with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"    private static final String LOGO \u003d \"  _   _                   \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"            + \" | \\\\ | |                  \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"            + \" |  \\\\| |_   _  __ _ _ __  \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"            + \" | . ` | | | |/ _` | \u0027_ \\\\ \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"            + \" | |\\\\  | |_| | (_| | | | |\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"            + \" |_| \\\\_|\\\\__, |\\\\__,_|_| |_|\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"            + \"         __/ |            \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"            + \"        |___/             \";","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    /** The ui\u0027s response to the latest user input. */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    private String response;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     * Gets the response from Duke\u0027s ui.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"     * @return the response from the ui.","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    public String getResponse() {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message that a specified task has been added to a task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"     * @param task The specified task that was added.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The task list that the specified task was added to.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"    public void showAdded(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        response \u003d \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"                + task + \"\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"                + tasks.getCountStatement();","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message that a specified task has been deleted from a task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"     * @param task The specified task that was deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The task list that the specified task was deleted from.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    public void showDeleted(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        response \u003d \"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"                + task + \"\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"                + tasks.getCountStatement();","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message to an error message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"     * @param message The message that describes the error with Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        response \u003d \"Oh no :( \" + message;","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message to the exit message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"    public void showExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"        response \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message to every task found with a keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"    public void showFound(TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"        String[] strings \u003d tasks.allToString();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"        if (strings.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"            response.append(\"\\nYou have no matching tasks!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"            for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"                response.append(\"\\n\").append(i + 1).append(\".\").append(strings[i]);","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"        this.response \u003d response.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message to a list of all the tasks in a specified TaskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList to show the list of tasks from.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"        String[] strings \u003d tasks.allToString();","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"            response.append(\"\\n\").append(i + 1).append(\".\").append(strings[i]);","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"        this.response \u003d response.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message that a specified task has been marked as done.","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"     * @param task The specified task that was marked as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"        response \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message to every task occurring by/at a specific date.","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"     * @param tasks A TaskList containing the tasks occurring by/at a specific date.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"    public void showOnDate(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list on this date:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"        String[] strings \u003d tasks.allToString();","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"        if (strings.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"            response.append(\"\\nYou have no tasks on this date!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"            for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"                response.append(\"\\n\").append(i + 1).append(\".\").append(strings[i]);","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"        this.response \u003d response.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message that a specified task has been marked as done.","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"waynezsy"},"content":"     * @param task The specified task that was marked as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"waynezsy"},"content":"    public void showNotMarked(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"waynezsy"},"content":"        response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"waynezsy"},"content":"     * Sets the response message to a greeting from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"waynezsy"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"waynezsy"},"content":"        this.response \u003d \"Hello from\\n\" + LOGO + \"\\nHello! I\u0027m Nyan Cat\\nWhat can I do for you?\";","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":143}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * The AddCommand class represents a command","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" * that adds a new task to Duke\u0027s task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    /** The task to be added to Duke */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    private final Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new AddCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * @param task The task to be added to Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     * Adds a task to Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        ui.showAdded(task, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":41}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * The Command class represents a command that can be","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * issued by the user to Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"     * Checks if a command is a command to exit Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"     * @return true only if the command is an exit command.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"        return this instanceof ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * The DeleteCommand class represents a command","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" * that will delete a task from Duke\u0027s task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    /** The number of the task to be deleted. */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    private final int n;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new DeleteCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * @param n The number (as displayed in the full list) of the task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public DeleteCommand(int n) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        this.n \u003d n;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     * Deletes a task from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        Task task \u003d tasks.delete(n);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        ui.showDeleted(task, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * The ExitCommand class represents","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * a command that tells Duke to exit.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"     * Exits Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        ui.showExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * The FindCommand class represents a command that","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * finds a task in Duke\u0027s task list using a keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /** The keyword to search the task list with. */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new FindCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * @param keyword The specified keyword to search the task list with.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     * Finds tasks in Duke matching the keyword (or phrase) of this instance of FindCommand.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"        TaskList matchingList \u003d tasks.allContaining(keyword);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        ui.showFound(matchingList);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"waynezsy":38}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * The ListCommand class represents a command","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * that will display Duke\u0027s list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"     * Displays the list of tasks in Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        ui.showList(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * The MarkCommand class represents a command","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" * that marks a task in duke.Duke as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    /** The number of the task to be marked as done. */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    private final int n;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new MarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * @param n The number (as displayed in the full list) of the task to be marked as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public MarkCommand(int n) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        this.n \u003d n;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     * Marks a task in Duke as done.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        Task task \u003d tasks.mark(n);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        ui.showMarked(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":40}},{"path":"src/main/java/duke/command/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" * The OnCommand class represents a command","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":" * that will find tasks on a specified date from duke.Duke\u0027s task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"public class OnCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    /** The date at/by which tasks occur to be checked. */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new OnCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     * @param date The specified date to check.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    public OnCommand(LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     * Finds a task in Duke that happens on the date of this instance of OnCommand.","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        TaskList matchingList \u003d tasks.allOnDate(date);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        ui.showOnDate(matchingList);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":40}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * The UnmarkCommand class represents a command","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" * that marks a task in Duke as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    /** The number of the task to be marked as not done. */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    private final int n;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new UnmarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * @param n The number (as displayed in the full list) of the task to be marked as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public UnmarkCommand(int n) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        this.n \u003d n;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     * Marks a task in Duke as not done.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified TaskList involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @param ui The specified Ui involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     * @param storage The specified Storage involved with the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the command cannot be successfully executed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        Task task \u003d tasks.unmark(n);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        ui.showNotMarked(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":40}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"waynezsy":61}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"waynezsy":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"            controller.setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"            controller.showWelcome();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"waynezsy":37}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Doge.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/NyanCat.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"     * Shows the welcome message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"        String welcome \u003d duke.getWelcome();","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"                DialogBox.getDukeDialog(welcome, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"            Platform.exit();","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"waynezsy":67}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * The Deadline class represents a task","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * that needs to be done by a specified date/time.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /** A string describing by when the task must be completed. */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    private String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    /** The date by which the task must be completed. */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new Deadline task with a specified","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * description and time.","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     * @param description A string specifying the description of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     * @param by The specified deadline by which the task must be completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"            LocalDateTime dateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"            dateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"            date \u003d dateTime.toLocalDate();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"            this.by \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h.mma\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"                String[] strings \u003d by.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"                date \u003d LocalDate.parse(strings[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"                this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"                if (strings.length \u003e 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"                    this.by +\u003d \" \" + by.substring(by.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"                this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"     * Returns the representation of a Deadline task when stored in a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"     * @return a string representing the Deadline task as it is stored on a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        return \"D | \" + super.toData() + \" | \" + by + \"\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"     * Checks if the exact date by which a Deadline task should be done","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"     * is a specified date.","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"     * @param date The specified date to check.","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"     * @return true if the specified date is the exact date by which","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"     *     the Deadline task must be done.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"    public boolean onDate(LocalDate date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"        return date.equals(this.date);","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"waynezsy":76}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * The Event class represents a task that","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * happens at a specified time.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /** A string describing at when the event occurs. */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    private String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    /** The date at which the event occurs. */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new Event task with a specified","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * description and time at which it occurs.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     * @param description A string specifying the description of the event.","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     * @param at A string specifying the time at which the event occurs.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"            LocalDateTime dateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"            dateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"            date \u003d dateTime.toLocalDate();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"            this.at \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h.mma\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"                String[] strings \u003d at.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"                date \u003d LocalDate.parse(strings[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"                this.at \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"                if (strings.length \u003e 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"                    this.at +\u003d \" \" + at.substring(at.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"                this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"     * Returns the representation of an Event when stored in a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"     * @return a string representing the Event as it is stored on a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        return \"E | \" + super.toData() + \" | \" + at + \"\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"     * Checks if the date at which an Event occurs is the specified date.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"     * @param date The specified date to check.","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"     * @return true if the specified date is the date at which the Event occurs.","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"    public boolean onDate(LocalDate date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"        return date.equals(this.date);","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"waynezsy":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" * The Task class represents a task added to duke.Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    /** The description of the task. */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"    private final String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /** Whether the task has been completed or not. */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new Task with a specified description.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * @param description A string specifying the description of the Task.","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     * Parses a string into the task it represents.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     * @param s The string read from the Duke data file.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     * @return The task represented by the string read from the data file.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the string in the data file is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    public static Task parseData(String s) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"            String[] strings \u003d s.split(\" \\\\| \");","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"            Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"            switch (strings[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"            case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"                if (strings.length \u003e 3) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Invalid task data loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"                task \u003d new Todo(strings[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"            case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"                if (strings.length \u003e 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Invalid task data loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"                task \u003d new Deadline(strings[2], strings[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"            case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"                if (strings.length \u003e 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"                    throw new DukeException(\"Invalid task data loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"                task \u003d new Event(strings[2], strings[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"                throw new DukeException(\"Invalid task data loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"            if (strings[1].equals(\"X\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"            } else if (!strings[1].equals(\" \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"                throw new DukeException(\"Invalid task data loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"            return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"Invalid task data loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"     * Marks a Task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"     * Marks a Task as not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"     * Returns an icon that represents if the task is done or not.","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"     * @return \"X\" if the task is done, \" \" if not.","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"     * Returns the representation of a task when stored in a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"     * @return a string representing the task as it is stored on a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"        return getStatusIcon() + \" | \" + description;","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"     * Checks if the description of a task contains a specified keyword (or phrase).","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"     * @param keyword The specified keyword (or phrase) to check.","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"     * @return true if the task description contains the specified keyword (or phrase).","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"     * Checks if a Task occurs by/at a specific date.","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"     * @param date The specified date to check.","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"     * @return true if the task occurs by/at the specified date.","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"waynezsy"},"content":"    public abstract boolean onDate(LocalDate date);","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"waynezsy":129}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    /** An ArrayList storing the tasks for the instance of TaskList. */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     * Constructs a TaskList containing the tasks in a specified array list of Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The specified array list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     * Constructs a TaskList with the specified tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     * @param tasks The tasks to place in the TaskList initially.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     *     The number of arguments is variable and may be zero.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    public TaskList(Task ... tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"     * Returns a string describing the number of remaining tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"     * @return A string describing the number of remaining tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    public String getCountStatement() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        int count \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"            return \"Now you have 1 task in your list.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"            return \"Now you have \" + count + \" tasks in your list.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"     * Creates a new TaskList of every Task which description contains","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"     * a specified keyword (or phrase).","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"     * @param keyword The specified keyword (or phrase) within the descriptions of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"     * @return A new TaskList of every task which description contains a specified keyword (or phrase).","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"    public TaskList allContaining(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"                matchingList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"        return new TaskList(matchingList);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"     * Creates a new TaskList of every Task that occurs by/at a specified date in the","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"     * original TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"     * @param date The specified date by/at which the tasks to find occur.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"     * @return A new TaskList of every task that occurs by/at a specified date.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"    public TaskList allOnDate(LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"            if (task.onDate(date)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"                matchingList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"        return new TaskList(matchingList);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"     * Converts every Task stored in the TaskList into an array of strings containing the data of each Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"     * These strings can then be stored in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"     * @return An array of strings representing each Task in the TaskList as data","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"     *     that can be stored in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"    public String[] allToData() {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"        int count \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"        String[] strings \u003d new String[count];","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"            strings[i] \u003d tasks.get(i).toData();","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"        return strings;","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"     * Returns an array of strings representing each duke.task.Task","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"     * stored in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"     * @return An array of strings representing each task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"    public String[] allToString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"        int count \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"        String[] strings \u003d new String[count];","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"            strings[i] \u003d tasks.get(i).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"        return strings;","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"     * @param task The specified Task to add to the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"     * Deletes a Task from the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"     * @param n The number order of the specified task to delete.","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the task corresponding to the specified number does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"waynezsy"},"content":"    public Task delete(int n) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"waynezsy"},"content":"            Task task \u003d tasks.get(n - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"waynezsy"},"content":"            tasks.remove(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"waynezsy"},"content":"            return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"waynezsy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"The specified task does not exist.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"waynezsy"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"waynezsy"},"content":"     * @param n The number order of the specified task to mark as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"waynezsy"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the task corresponding to the specified number does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"waynezsy"},"content":"    public Task mark(int n) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"waynezsy"},"content":"            Task task \u003d tasks.get(n - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"waynezsy"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"waynezsy"},"content":"            return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"waynezsy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"The specified task does not exist.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"waynezsy"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"waynezsy"},"content":"     * @param n The number order of the specified task to mark as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"waynezsy"},"content":"     * @return The task that was marked as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"waynezsy"},"content":"     * @throws DukeException when the task corresponding to the specified number does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"waynezsy"},"content":"    public Task unmark(int n) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"waynezsy"},"content":"            Task task \u003d tasks.get(n - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"waynezsy"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"waynezsy"},"content":"            return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"waynezsy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"waynezsy"},"content":"            throw new DukeException(\"The specified task does not exist.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":174,"author":{"gitId":"waynezsy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":175,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"waynezsy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"waynezsy"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"waynezsy"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"waynezsy"},"content":"        if (obj instanceof TaskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"waynezsy"},"content":"            TaskList taskList \u003d (TaskList) obj;","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"waynezsy"},"content":"            if (this.tasks \u003d\u003d taskList.tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"waynezsy"},"content":"                return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"waynezsy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"waynezsy"},"content":"            return this.tasks.equals(taskList.tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"waynezsy"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"waynezsy"},"content":"            return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"waynezsy":192}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":" * The Todo class represents a task","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":" * without any date/time attached to it.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"     * Constructs a new Todo with a specified description.","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"     * @param description A string specifying the description of the Todo task.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"     * Returns the representation of a Todo task when stored in a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"     * @return a string representing the Todo task as it is stored on a data file on the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        return \"T | \" + super.toData() + \"\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"     * Checks if the Todo task should be done on a specific date.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"     * @param date The specified date to check.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"     * @return false.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"    public boolean onDate(LocalDate date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        return false;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"waynezsy":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #CCF381; -fx-background-radius: 50; -fx-border-color: #A881F3; -fx-border-radius: 50;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#4831d4\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"            \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"waynezsy":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #CCF381;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #F8F5FE; -fx-background-radius: 100; -fx-border-color: #a881f3; -fx-border-radius: 100;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #F8F5FE; -fx-background-radius: 100; -fx-border-color: #a881f3; -fx-border-radius: 100;\" text\u003d\"Send\" textFill\u003d\"#a881f3\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"            \u003cFont name\u003d\"Kristen ITC\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #F8F5FE;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #A881F3; -fx-background-radius: 10;\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"waynezsy":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"import duke.command.OnCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    public void parse_notACommand_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"hello\");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\",","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    public void parse_bye_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    public void parse_list_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    public void parse_markInteger_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"mark 1\") instanceof MarkCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    public void parse_markNothing_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify which task to mark with a single integer.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"    public void parse_markNonInteger_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"mark food\");","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify which task to mark with a single integer.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"    public void parse_unmarkInteger_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"unmark 1\") instanceof UnmarkCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"    public void parse_unmarkNothing_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"unmark\");","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify which task to unmark with a single integer.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"    public void parse_unmarkNonInteger_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"unmark food\");","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify which task to unmark with a single integer.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"    public void parse_todoDescription_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"todo homework\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"    public void parse_todoNoDescription_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The description of a todo cannot be empty.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"    public void parse_deadlineDescriptionBy_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"deadline sleep /by 2022-09-01 0000\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"deadline sleep /by 2022-09-01\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"deadline sleep /by 2022-09-01 afternoon\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"deadline sleep /by tonight\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"    public void parse_deadlineDescriptionNoBy_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"deadline sleep\");","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Use /by to provide when a deadline must be completed.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"waynezsy"},"content":"    public void parse_deadlineDescriptionByNothing_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"deadline sleep /by\");","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Use /by to provide when a deadline must be completed.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"waynezsy"},"content":"    public void parse_deadlineNoDescription_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"deadline /by tomorrow\");","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"waynezsy"},"content":"    public void parse_deadlineNoDescriptionNoBy_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"waynezsy"},"content":"    public void parse_eventDescriptionAt_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"event sleep /at 2022-09-01 0000\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"event sleep /at 2022-09-01\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"event sleep /at 2022-09-01 afternoon\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"event sleep /at tonight\") instanceof AddCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"waynezsy"},"content":"    public void parse_eventDescriptionNoAt_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"event sleep\");","lastModifiedDate":"2022-08-26"},{"lineNumber":174,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":175,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Use /at to provide when an event occurs.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"waynezsy"},"content":"    public void parse_eventDescriptionAtNothing_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"event sleep /at\");","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Use /at to provide when an event occurs.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"waynezsy"},"content":"    public void parse_eventNoDescription_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"event /at tomorrow\");","lastModifiedDate":"2022-08-26"},{"lineNumber":196,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":198,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The description of an event cannot be empty.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":199,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":201,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":202,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"waynezsy"},"content":"    public void parse_eventNoDescriptionNoAt_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"event\");","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":209,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The description of an event cannot be empty.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":212,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":213,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":214,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":215,"author":{"gitId":"waynezsy"},"content":"    public void parse_deleteInteger_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":216,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":217,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":218,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":219,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":220,"author":{"gitId":"waynezsy"},"content":"    public void parse_deleteNothing_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":222,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"delete\");","lastModifiedDate":"2022-08-26"},{"lineNumber":223,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":224,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":225,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify which task to delete with a single integer.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":226,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":227,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":228,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":229,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":230,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":231,"author":{"gitId":"waynezsy"},"content":"    public void parse_deleteNonInteger_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":232,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":233,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"delete food\");","lastModifiedDate":"2022-08-26"},{"lineNumber":234,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":235,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":236,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify which task to delete with a single integer.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":237,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":238,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":239,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":240,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":241,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":242,"author":{"gitId":"waynezsy"},"content":"    public void parse_onDate_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":243,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"on 2022-10-01\") instanceof OnCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":244,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":245,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":246,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":247,"author":{"gitId":"waynezsy"},"content":"    public void parse_onNothing_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":248,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":249,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"on\");","lastModifiedDate":"2022-08-26"},{"lineNumber":250,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":251,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":252,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify the date to check with yyyy-MM-dd.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":253,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":254,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":255,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":256,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":257,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":258,"author":{"gitId":"waynezsy"},"content":"    public void parse_onInvalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":259,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":260,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"on 22-5-4\");","lastModifiedDate":"2022-08-26"},{"lineNumber":261,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":262,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":263,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Specify the date to check with yyyy-MM-dd.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":264,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":265,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":266,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":267,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":268,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":269,"author":{"gitId":"waynezsy"},"content":"    public void parse_findSomething_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":270,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Parser.parse(\"find me\") instanceof FindCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":271,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":272,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":273,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":274,"author":{"gitId":"waynezsy"},"content":"    public void parse_findNothing_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":275,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":276,"author":{"gitId":"waynezsy"},"content":"            Parser.parse(\"find\");","lastModifiedDate":"2022-08-27"},{"lineNumber":277,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":278,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":279,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Include the keyword you want to find.\",","lastModifiedDate":"2022-08-27"},{"lineNumber":280,"author":{"gitId":"waynezsy"},"content":"                    e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":281,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":282,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":283,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"waynezsy":283}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    public void testGetCountStatement_notOne() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"Now you have 0 tasks in your list.\", testList.getCountStatement());","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    public void testGetCountStatement_one() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"        Task testTask \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        tasks.add(testTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"        TaskList testTaskList \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"Now you have 1 task in your list.\", testTaskList.getCountStatement());","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    public void testAdd() {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        Task testTask \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        testList.add(testTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"Now you have 1 task in your list.\", testList.getCountStatement());","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"    public void testDelete_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        Task expectedTask \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"        testList.add(expectedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"        Task actualTask \u003d testList.delete(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"Now you have 0 tasks in your list.\", testList.getCountStatement());","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedTask, actualTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    public void testDelete_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"            testList.delete(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The specified task does not exist.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    public void testMark_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        Task expectedTask \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"        testList.add(expectedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"        Task actualTask \u003d testList.mark(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"Now you have 1 task in your list.\", testList.getCountStatement());","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedTask, actualTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"[T][X] test\", actualTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"    public void testMark_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"            testList.mark(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The specified task does not exist.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"    public void testUnmark_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"        Task expectedTask \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"        testList.add(expectedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"        testList.mark(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"        Task actualTask \u003d testList.unmark(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"Now you have 1 task in your list.\", testList.getCountStatement());","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedTask, actualTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"[T][ ] test\", actualTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"    public void testUnmark_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"            testList.unmark(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"The specified task does not exist.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"    public void testAllOnDate() {","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"        Task todo \u003d new Todo(\"not on date\");","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"        Task deadlineOnDate \u003d new Deadline(\"on date\", \"2022-09-01\");","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"        Task deadlineNotOnDate \u003d new Deadline(\"not on date\", \"2022-09-02\");","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"        Task eventOnDate \u003d new Event(\"on date\", \"2022-09-01 0800\");","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"        Task eventNotOnDate \u003d new Event(\"not on date\", \"noon\");","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"        testList.add(todo);","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"        testList.add(deadlineOnDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"        testList.add(deadlineNotOnDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"        testList.add(eventOnDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"        testList.add(eventNotOnDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"        TaskList expectedList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"        expectedList.add(deadlineOnDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"        expectedList.add(eventOnDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"        TaskList actualList \u003d testList.allOnDate(LocalDate.parse(\"2022-09-01\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"waynezsy"},"content":"    public void testAllToData() {","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"waynezsy"},"content":"        testList.add(new Todo(\"test\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"waynezsy"},"content":"        testList.add(new Deadline(\"test\", \"2022-09-01\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"waynezsy"},"content":"        testList.add(new Event(\"test\", \"noon\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"waynezsy"},"content":"        String[] actualOutput \u003d testList.allToData();","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"waynezsy"},"content":"        String[] expectedOutput \u003d {\"T |   | test\\n\", \"D |   | test | Sep 1 2022\\n\", \"E |   | test | noon\\n\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"waynezsy"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"waynezsy"},"content":"            assertEquals(expectedOutput[i], actualOutput[i]);","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"waynezsy"},"content":"    public void testAllToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"waynezsy"},"content":"        testList.add(new Todo(\"test\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"waynezsy"},"content":"        testList.add(new Deadline(\"test\", \"2022-09-01\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"waynezsy"},"content":"        testList.add(new Event(\"test\", \"noon\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"waynezsy"},"content":"        String[] actualOutput \u003d testList.allToString();","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"waynezsy"},"content":"        String[] expectedOutput \u003d {\"[T][ ] test\", \"[D][ ] test (by: Sep 1 2022)\", \"[E][ ] test (at: noon)\"};","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"waynezsy"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"waynezsy"},"content":"            assertEquals(expectedOutput[i], actualOutput[i]);","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"waynezsy"},"content":"    public void testAllContaining() {","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"waynezsy"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"waynezsy"},"content":"        TaskList expectedOutput \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"waynezsy"},"content":"        Task testTask1 \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"waynezsy"},"content":"        Task testTask2 \u003d new Deadline(\"testy\", \"2022-09-01\");","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"waynezsy"},"content":"        Task testTask3 \u003d new Todo(\"hidden ninja\");","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"waynezsy"},"content":"        Task testTask4 \u003d new Event(\" i test +ve\", \"noon\");","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"waynezsy"},"content":"        testList.add(testTask1);","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"waynezsy"},"content":"        testList.add(testTask2);","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"waynezsy"},"content":"        testList.add(testTask3);","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"waynezsy"},"content":"        testList.add(testTask4);","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"waynezsy"},"content":"        expectedOutput.add(testTask1);","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"waynezsy"},"content":"        expectedOutput.add(testTask2);","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"waynezsy"},"content":"        expectedOutput.add(testTask4);","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"waynezsy"},"content":"        TaskList actualOutput \u003d testList.allContaining(\"test\");","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"waynezsy":178}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    public void parseData_todo_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"        Task test \u003d Task.parseData(\"T |   | test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"[T][ ] test\", test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    public void parseData_todoNoDescription_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"            Task.parseData(\"T |   | \");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Invalid task data loaded.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    public void parseData_deadline_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"        Task test \u003d Task.parseData(\"D | X | test | 2022-10-12\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"[D][X] test (by: Oct 12 2022)\", test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    public void parseData_deadlineNoBy_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"            Task test \u003d Task.parseData(\"D | X | test | \");","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Invalid task data loaded.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    public void parseData_event_success() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        Task test \u003d Task.parseData(\"E |   | test | 2022-10-12\");","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"        assertEquals(\"[E][ ] test (at: Oct 12 2022)\", test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"    public void parseData_eventNoAt_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"            Task test \u003d Task.parseData(\"E |   | test | \");","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Invalid task data loaded.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"    public void parseData_invalidTaskType_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"            Task.parseData(\"X | X | doesn\u0027t matter\");","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Invalid task data loaded.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"    public void parseData_invalidDoneStatus_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"            Task.parseData(\"T | P | doesn\u0027t matter\");","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"            assertEquals(\"Invalid task data loaded.\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"    public void testContains_true() {","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"        Task test \u003d new Todo(\"success\");","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"        assertTrue(test.contains(\"success\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"    public void testContains_false() {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"        Task test \u003d new Todo(\"failure\");","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"        assertFalse(test.contains(\"success\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"waynezsy":92}}]

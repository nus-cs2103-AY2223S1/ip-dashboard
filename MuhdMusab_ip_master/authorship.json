[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MuhdMusab":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"plugins {","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"repositories {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"dependencies {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"test {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"application {","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"shadowJar {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"run {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"javafx {","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"MuhdMusab":56}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"@rem","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"echo.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"echo.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"goto fail","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"echo.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"echo.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"goto fail","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":":execute","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":":end","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":":fail","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"exit /b 1","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":":mainEnd","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":":omega","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":2}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import task.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import task.Todo;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import ui.DialogBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eCommand class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":" * Filters out the commandType and runs the executes the appropriate","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":" * command based on the input commandType.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"public class Command {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private CommandType commandType;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private String input;","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a Command object to be executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * @param commandType type of command to be executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * @param tasks list of Tasks the user currently has.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     * @param input the String to be parsed.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"     * @param ui the User Interface that prints out the output.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    public Command(CommandType commandType, TaskList tasks, String input, Ui ui) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    private TaskList getMatchingTasks(String keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"            if (tasks.containsKeyword(i, keyword)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"                newTaskList.add(tasks.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        return newTaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    private void addTask(Task input) {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        tasks.add(input);","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    private LocalDateTime stringToLocalDateTime(String deadline) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        return deadlineDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    private boolean hasTaskIndex(int taskIndex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        return taskIndex - 1 \u003c this.tasks.getSize() \u0026\u0026 taskIndex - 1 \u003e\u003d 0;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"     * Returns a boolean describing whether the CommandType is a \"Bye\" Command.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"     * @return boolean describing whether the CommandType is a \"Bye\" Command.","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        return commandType \u003d\u003d CommandType.BYE;","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"     * Executes the Command based on the CommandType and updates the Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer the VBox to be updated with the corresponding DialogBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog the Dialog Box containing the user\u0027s input to be added to the Vbox.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"     * @throws DukeException If an exception is encountered or if","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"     *         the input is invalid.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    public void execute(VBox dialogContainer, DialogBox userDialog) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        switch (this.commandType) {","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"        case BYE:","lastModifiedDate":"2022-08-16"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"        case LIST:","lastModifiedDate":"2022-08-16"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"            ui.printTasks(tasks, \"Boss ah, this one your tasks:\",","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"                    \"Boss, you got no task yet ah\", dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"        case TODO:","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"            String todoDescription \u003d input.substring(4).trim();","lastModifiedDate":"2022-08-16"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"            if (todoDescription.equals(\"\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh your task cannot be empty lah!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"                Todo todo \u003d new Todo(todoDescription, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"                this.addTask(todo);","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"                ui.printAddedTaskMessage(todo, dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"                ui.printTaskCountMessage(tasks, dialogContainer);","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        case EVENT:","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"            String[] splittedEvent \u003d input.substring(5).split(\" /at \", 3);","lastModifiedDate":"2022-08-16"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"            boolean isEmptyEvent \u003d splittedEvent.length \u003d\u003d 2 \u0026\u0026 splittedEvent[0].trim().equals(\"\");","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"            boolean isIncorrectEventRange \u003d splittedEvent.length !\u003d 2 || splittedEvent[0].trim().equals(\"\")","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"                    || splittedEvent[1].trim().equals(\"\");","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"            if (isEmptyEvent) {","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh you never added your task name\");","lastModifiedDate":"2022-08-16"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"            } else if (isIncorrectEventRange) {","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh you never added the event range\");","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"                LocalDateTime eventDateTime \u003d DateTimeParser.changeStringToParsingDateTime(splittedEvent[1].trim());","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"                Event event \u003d new Event(splittedEvent[0].trim(), false, eventDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"                this.addTask(event);","lastModifiedDate":"2022-08-16"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"                ui.printAddedTaskMessage(event, dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"                ui.printTaskCountMessage(tasks, dialogContainer);","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-16"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"            String[] splittedDeadline \u003d input.substring(8).split(\" /by \", 3);","lastModifiedDate":"2022-08-16"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"            boolean isEmptyDeadline \u003d splittedDeadline.length \u003d\u003d 2 \u0026\u0026 splittedDeadline[0].trim().equals(\"\");","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"            boolean isIncorrectDeadlineDate \u003d splittedDeadline.length !\u003d 2 || splittedDeadline[0].trim().equals(\"\")","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"                    || splittedDeadline[1].trim().equals(\"\");","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"            if (isEmptyDeadline) {","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh you never added your task name\");","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"            } else if (isIncorrectDeadlineDate) {","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh you never added a deadline\");","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"            } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"                try {","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"                    LocalDateTime deadlineDateTime \u003d stringToLocalDateTime(splittedDeadline[1].trim());","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"                    Deadline deadline \u003d new Deadline(splittedDeadline[0].trim(), false, deadlineDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"                    this.addTask(deadline);","lastModifiedDate":"2022-08-16"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"                    ui.printAddedTaskMessage(deadline, dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"                    ui.printTaskCountMessage(tasks, dialogContainer);","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"                    throw new DukeException(\"Eh you never add a proper deadline date! \\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"                            + \"Your deadline date should be like this lah: Jan 21 2023 04:10 AM\");","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"        case EMPTY:","lastModifiedDate":"2022-08-16"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(\"Eh you never type anything leh?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"        case MARK:","lastModifiedDate":"2022-08-16"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"            String markIndexString \u003d input.substring(4).trim();","lastModifiedDate":"2022-08-16"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"            try {","lastModifiedDate":"2022-08-16"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"                int taskIndex \u003d Integer.parseInt(markIndexString);","lastModifiedDate":"2022-08-16"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"                if (!hasTaskIndex(taskIndex)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"                    throw new DukeException(\"Eh, you got that task number meh?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"                if (this.tasks.get(taskIndex - 1).canChangeIsDone(true)) {","lastModifiedDate":"2022-08-16"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"                    this.tasks.get(taskIndex - 1).changeIsDone(true);","lastModifiedDate":"2022-08-16"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"                    ui.printMarkedMessage(this.tasks.get(taskIndex - 1), dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"                } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"                    throw new DukeException(\"Eh, you done that task alr lah\");","lastModifiedDate":"2022-08-16"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh, you enter your task number correctly anot?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-16"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"            String unmarkIndexString \u003d input.substring(6).trim();","lastModifiedDate":"2022-08-16"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"            try {","lastModifiedDate":"2022-08-16"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"                int taskIndex \u003d Integer.parseInt(unmarkIndexString);","lastModifiedDate":"2022-08-16"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"                if (!hasTaskIndex(taskIndex)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"                    throw new DukeException(\"Eh, you got that task number meh?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"                if (this.tasks.get(taskIndex - 1).canChangeIsDone(false)) {","lastModifiedDate":"2022-08-16"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"                    this.tasks.get(taskIndex - 1).changeIsDone(false);","lastModifiedDate":"2022-08-16"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"                    ui.printUnmarkedMessage(this.tasks.get(taskIndex - 1), dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"                } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"                    throw new DukeException(\"Eh, your task alr not done lah\");","lastModifiedDate":"2022-08-16"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh, you enter your task number correctly anot?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"        case DELETE:","lastModifiedDate":"2022-08-16"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"            String taskIndexToDelete \u003d input.substring(6).trim();","lastModifiedDate":"2022-08-16"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"            try {","lastModifiedDate":"2022-08-16"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"                int taskIndex \u003d Integer.parseInt(taskIndexToDelete);","lastModifiedDate":"2022-08-16"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"                if (!hasTaskIndex(taskIndex)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"                    throw new DukeException(\"Eh, you got that task number meh?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"                } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"                    ui.printDeletedTaskMessage(tasks.get(taskIndex - 1), dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"                    tasks.remove(taskIndex - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh, you enter your task number correctly anot?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"        case FIND:","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"            String keyword \u003d input.substring(4).trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"            TaskList newTaskList \u003d getMatchingTasks(keyword);","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"            ui.printTasks(newTaskList, \"Boss ah, this one all your tasks matching \u0027\" + keyword + \"\u0027 : \",","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"                    \"Boss, no matching tasks ah\", dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"            if (keyword.equals(\"\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(\"Eh your keyword cannot be empty lah!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"        default:","lastModifiedDate":"2022-08-16"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(\"What talking you\");","lastModifiedDate":"2022-08-16"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"MuhdMusab":206}},{"path":"src/main/java/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eCommandType enum\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":" * CommandTypes that can be executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"    BYE,","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"    LIST,","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    TODO,","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    EVENT,","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    EMPTY,","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    INVALID,","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    MARK,","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    UNMARK,","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    FIND,","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    DELETE,","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"MuhdMusab":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import command.Command;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import parser.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import ui.DialogBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eDuke class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":" * Main class of the chat bot that links the","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":" * Storage, TaskList and Ui together.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"public class Duke {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private Parser parser;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     * Creates the Duke object.","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     * @param ui the User Interface that prints out the output.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer the VBox to add the dialog to.","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    public Duke(Ui ui, VBox dialogContainer) {","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"            tasks \u003d new TaskList(storage.readSavedTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            ui.sayErrorMessageWithoutUserInput(e.getMessage(), dialogContainer);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        ui.greet(dialogContainer);","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    public void execute(String trimmedUserInput, DialogBox userDialog, VBox dialogContainer) {","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"            Command command \u003d parser.parse(trimmedUserInput);","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"            command.execute(dialogContainer, userDialog);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"                try {","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"                    ui.sayGoodbye(dialogContainer, userDialog);","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"                    PauseTransition delay \u003d new PauseTransition(Duration.seconds(2.5));","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"                    delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"                    delay.play();","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"                    ui.sayErrorMessageWithUserInput(e.getMessage(), dialogContainer, userDialog);","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            ui.sayErrorMessageWithUserInput(e.getMessage(), dialogContainer, userDialog);","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MuhdMusab":61,"-":2}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eDukeException\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":" * Exception to be thrown when the chat bot has unintended or wrong","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":" * outcomes.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"    private String message;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"     * Creates the DukeException object.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * @param message error message to be returned.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        super(message);","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the String representation of the DukeException.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     * @return the String representation of the DukeException.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        return this.message;","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"MuhdMusab":30}},{"path":"src/main/java/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package launcher;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import main.Main;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eLauncher class\u003c/h1\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Starting point of the chat bot that launches the Duke class.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"     * Launches the application using the Duke class.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * @param args the command line arguments.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"            e.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"MuhdMusab":23}},{"path":"src/main/java/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package main;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import ui.MainWindow;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import ui.Ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"            AnchorPane mainWindow \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"            Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027serif\u0027\");","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(ui);","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"MuhdMusab":34}},{"path":"src/main/java/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eDateTimeParser class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * Parses the input String from the user and generates a","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * LocalDateTime with an appropriate format.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    private static DateTimeFormatter parsingFormatter \u003d java.time.format","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"            .DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    private static DateTimeFormatter readingFormatter \u003d java.time.format","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"            .DateTimeFormatter.ofPattern(\"d-MMM-yyyy hh:mm a\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the LocalDateTime parsed from the input String.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     * The LocalDateTime has to be of the format \u0027MMM d yyyy hh:mm a\u0027.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"     * @param str String representing the LocalDateTime to be returned.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     * @return LocalDateTime parsed from the input String.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public static LocalDateTime changeStringToParsingDateTime(String str) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        return LocalDateTime.parse(str, DateTimeParser.parsingFormatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the LocalDateTime parsed from the input String.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * The LocalDateTime has to be of the format \u0027d-MMM-yyyy hh:mm a\u0027.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * @param str String representing the LocalDateTime to be returned.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * @return LocalDateTime parsed from the input String.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public static LocalDateTime changeStringToReadingDateTime(String str) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        return LocalDateTime.parse(str, DateTimeParser.readingFormatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the String representation of the reformatted input LocalDateTime.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * The new LocalDateTime is of the format \u0027d-MMM-yyyy hh:mm a\u0027.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"     * @param localDateTime to be reformatted.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"     * @return the reformatted String of the LocalDateTime.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"    public static String changeDateTimeFormat(LocalDateTime localDateTime) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(\"d-MMM-yyyy hh:mm a\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":49}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import command.CommandType;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eParser class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":" * Parses the user\u0027s input and generates the appropriate command.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a Parser object.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     * @param tasks list of Tasks the user currently has.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     * @param ui the User Interface that prints out the output.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the appropriate Command after parsing the input String.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     * @param input String to be parsed.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    public Command parse(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.EMPTY, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.BYE, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.LIST, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.TODO, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.DEADLINE, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.EVENT, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.MARK, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.UNMARK, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.DELETE, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.FIND, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"            return new Command(CommandType.INVALID, tasks, input, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"MuhdMusab":62}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.io.File;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"import task.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"import task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"import task.Todo;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eStorage class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":" * Stores and reads tasks generated by the user to ensure the","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":" * tasks can be used the next time the chat bot is run.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    private String folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    private String filename;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    private String userDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a Storage object.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"     * @param folderPath folder path the output is to be saved at.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"     * @param filename file name the output is to be saved as.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    public Storage(String folderPath, String filename) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"     * Returns an ArrayList of Tasks containing the saved Tasks, if they exist.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"     * @return ArrayList of Tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"     * @throws DukeException if an error is encountered when the file","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"     *         is unable to be read.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    public ArrayList\u003cTask\u003e readSavedTasks() throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        Path dataDirectoryPath \u003d Paths.get(userDirectory, folderPath);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        Path savedTasksPath \u003d Paths.get(userDirectory, folderPath, filename);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        if (!hasDataDirectory(dataDirectoryPath)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"            createDataDirectory(dataDirectoryPath);","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"        if (!hasSavedTasks(savedTasksPath)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"            File tasksFile \u003d getTasksFile(savedTasksPath);","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"                tasks \u003d parseFileToTasks(tasksFile);","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"            } finally {","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"                return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    private File getTasksFile(Path savedTasksPath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"        File tasksFile \u003d new File(getAbsolutePath(savedTasksPath));","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        return tasksFile;","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    private ArrayList\u003cTask\u003e parseFileToTasks(File tasksFile) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"        Scanner sc \u003d new Scanner(tasksFile);","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"            String taskDescription \u003d sc.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"            tasks.add(parseLineToTask(taskDescription));","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"        return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"    private Task parseLineToTask(String line) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"        if (line.length() \u003c\u003d 7) {","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        char taskSymbol \u003d line.charAt(1);","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"        boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"                ? true","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"                : false;","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"        switch (taskSymbol) {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"            return getTodoFromLine(line, isDone);","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"            return getTaskFromLine(line, isDone, \" \\\\(by: \");","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"            return getTaskFromLine(line, isDone, \" \\\\(at: \");","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"    private String trimInputDateString(String str) {","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"        return str.substring(0, str.length() - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"    private Task getTaskFromLine(String line, boolean isDone, String regex) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        switch (regex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"        case \" \\\\(at: \":","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"            String[] splittedEvent \u003d line.substring(7).split(\" \\\\(at: \", 3);","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"            String trimmedInputEventDateString \u003d trimInputDateString(splittedEvent[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d DateTimeParser.changeStringToReadingDateTime(trimmedInputEventDateString);","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"            return new Event(splittedEvent[0], isDone, eventDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"        case \" \\\\(by: \":","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"            String[] splittedDeadline \u003d line.substring(7).split(\" \\\\(by: \", 3);","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"            String trimmedInputDeadlineDateString \u003d trimInputDateString(splittedDeadline[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d DateTimeParser","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"                    .changeStringToReadingDateTime(trimmedInputDeadlineDateString);","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"            return new Deadline(splittedDeadline[0], isDone, deadlineDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"        default:","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"    private Todo getTodoFromLine(String line, boolean isDone) {","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"        return new Todo(line.substring(7), isDone);","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"    private String getAbsolutePath(Path path) {","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"        return path.toAbsolutePath().toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"    private void createDataDirectory(Path dataDirectoryPath) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"            Files.createDirectories(dataDirectoryPath);","lastModifiedDate":"2022-08-20"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"    private boolean hasDataDirectory(Path dataDirectoryPath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"        return Files.exists(dataDirectoryPath);","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"    private boolean hasSavedTasks(Path savedTasksPath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"        return Files.exists(savedTasksPath);","lastModifiedDate":"2022-08-20"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"    private String generateTasksToAdd(TaskList tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"        int tasksSize \u003d tasks.getSize();","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"        for (int i \u003d 0; i \u003c tasksSize; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"            stringBuilder.append(tasks.taskStringAtIndex(i) + System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"    private String relativePath() {","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"        Path path \u003d Paths.get(userDirectory, \"data\", \"duke.txt\");","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        return path.toAbsolutePath().toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"     * Writes the saved tasks to the output file.","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"     * @param tasks TaskList to be written from.","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"     * @throws DukeException if an exception is encountered.","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    public void writeToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"            FileWriter fw \u003d new FileWriter(relativePath());","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"            fw.write(generateTasksToAdd(tasks));","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"MuhdMusab":182}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eDeadline class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * Task that the user has inputted and is required to do","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" * that has a Deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private LocalDateTime deadlineDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * @param description describes the Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     * @param isDone boolean value describing whether the user has done","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     *               the Task or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"     * @param deadlineDateTime the actual date and time of the deadline that","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     *                         the Task is to be completed by.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the String representation of the Deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.changeDateTimeFormat(deadlineDateTime) + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"MuhdMusab":38}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eEvent class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" * Task that the user has inputted and is required to do","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":" * that has a date and time that the Event is occurring at.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    private LocalDateTime eventDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     * @param description describes the Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     * @param isDone boolean value describing whether the user has done","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     *               the Task or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"     * @param eventDateTime the actual date and time of the Event that","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     *                      the Task is to be held at.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public Event(String description, boolean isDone, LocalDateTime eventDateTime) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the String representation of the Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateTimeParser.changeDateTimeFormat(eventDateTime) + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"MuhdMusab":38}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eTask class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":" * Task that the user has inputted and is required to do.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"public class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"    private String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * @param description describes the Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * @param isDone boolean value describing whether the user has done","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *               the Task or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"     * Return the String representing whether the task is done or not.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"     * @return the String representing whether the task is done or not.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the boolean representing whether the isDone value can","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     * be changed to the new value.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"     * @param newIsDone the new isDone value to be checked.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"     * @return the boolean representing whether the isDone value can","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"     *         be changed to the new value.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    public boolean canChangeIsDone(boolean newIsDone) {","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        return this.isDone !\u003d newIsDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"     * Changes the current isDone value to the input isDone.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"     * @param newIsDone the newIsDone value to be changed.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    public void changeIsDone(boolean newIsDone) {","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        this.isDone \u003d newIsDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"     * Return the description of the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"     * @return the description of the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"        return this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"     * Changes the current description to the input description.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"     * @param newDescription to be changed to.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"     * Return the isDone value representing whether the Task is done.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"     * @return the isDone value.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"MuhdMusab":84}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eTaskList class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":" * A list that contains all the tasks that the user is","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":" * required to do.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     * Creates the TaskList object with the input Task","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"     * ArrayList.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"     * @param tasks ArrayList of Task objects the TaskList is","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"     *              to contain.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the number of Tasks in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     * @return the number of Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"     * Return the String representation of the Task at the index.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"     * @param index the index of the Task to be represented as a String.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * @return String representation of the Task at the index.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"    public String taskStringAtIndex(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"     * Adds the input Task to the list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"     * The Task at the input index to be removed.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"     * Return the Task from the Task list at the input index.","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"     * @param index Index of the Task to be returned.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"     * @return the Task at the input index.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"     * Checks the Task at the input index and returns a boolean","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"     * describing whether the description of the task contains the","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"     * input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"     * @param index index of the Task to be checked.","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"     * @param keyword String to be checked against.","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"     * @return a boolean describing whether the description of the Task","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"     *         contains the input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"    public boolean containsKeyword(int index, String keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        for (String word : tasks.get(index).getDescription().split(\" \")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"            if (word.equals(keyword)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"                return true;","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":93}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eTodo class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":" * Task that the user has inputted and is required to do.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"     * Creates a Todo object.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"     * @param description describes the Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"     * @param isDone boolean value describing whether the user has done","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"     *               the Task or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"     * Returns the String representation of the Todo.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"     * @return String representation of the Todo.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"MuhdMusab":28}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eDialogBox class\u003c/h1\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":" * A HBox that represents a Dialog containing text and","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":" * an ImageView.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"//    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"//     * Creates the DialogBox object.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"//     *","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"//     * @param l Label to be contained within the DialogBox.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"//     * @param iv ImageView to be contained within the DialogBox.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"//     */","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"     * Factory method to create a DialogBox object that represents the user\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"     * @param l Label to be contained within the DialogBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"     * @param iv ImageView to be contained within the DialogBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"     * @return the DialogBox object that represents the user\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"    public static DialogBox getUserDialog(String l, Image iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"        DialogBox dialogBox \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        dialogBox.displayPicture.setClip(new Circle(47, 52, 40));","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"        return dialogBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"     * Factory method to create a DialogBox object that represents Uncle Cheong\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"     * @param l Label to be contained within the DialogBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"     * @param iv ImageView to be contained within the DialogBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"     * @return the DialogBox object that represents the Uncle Cheong\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    public static DialogBox getUncleCheongDialog(String l, Image iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"        DialogBox dialogBox \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        dialogBox.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"        dialogBox.displayPicture.setClip(new Circle(49.5, 49.5, 35));","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"        return dialogBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"MuhdMusab":83}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"            handleUserInput();","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        });","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"            handleUserInput();","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        });","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    public void setDuke(Ui ui) {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        this.duke \u003d new Duke(ui, dialogContainer);","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        String trimmedUserInput \u003d userInput.getText().trim();","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(trimmedUserInput, userImage);","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        duke.execute(trimmedUserInput, userDialog, dialogContainer);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"MuhdMusab":55}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"package ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":" * \u003ch1\u003eUi class\u003c/h1\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":" * Layer of abstraction that handles the printing of","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":" * output to the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    private Image uncleCheong \u003d new Image(this.getClass().getResourceAsStream(\"/images/unclecheong.jpeg\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    private void appendUncleCheongResponseWithoutUserInput(String response, VBox dialogContainer) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        dialogContainer.getChildren().add(DialogBox.getUncleCheongDialog(","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"               response, uncleCheong));","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    private void appendUncleCheongResponseAndUserInput(String response, VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        dialogContainer.getChildren().addAll(userDialog, DialogBox.getUncleCheongDialog(","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"                response, uncleCheong));","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"     * Prints the greeting text by the Chatbot to the Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the greeting text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    public void greet(VBox dialogContainer) {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseWithoutUserInput(\"Eh hello, my name is Uncle Cheong.\"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"                + \"\\nWhat you want?\\n\", dialogContainer);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"     * Prints the goodbye text by the Chatbot to the Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the goodbye text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"    public void sayGoodbye(VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(\"Eh you leaving me so soon?\\n\", dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"     * Prints the Error message by the Chatbot to the Ui","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"     * with the user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"     * @param error the error message.","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the error text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog contains the user\u0027s dialog to be added to the VBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"    public void sayErrorMessageWithUserInput(String error, VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(\"Eh something went wrong! \" + error, dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"     * Prints the Error message by the Chatbot to the Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"     * @param error the error message.","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the error text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"    public void sayErrorMessageWithoutUserInput(String error, VBox dialogContainer) {","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        dialogContainer.getChildren().add(DialogBox.getUncleCheongDialog(","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"                \"Eh something went wrong! \" + error, uncleCheong));","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"     * Prints all the Tasks and their descriptions in the list to the Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"     * @param tasks TaskList to br printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"     * @param notEmptyMessage message to be printed out if there are","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"     *                        Tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"     * @param emptyMessage message to be printed out if there are no","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"     *                     Tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the TaskList text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog contains the user\u0027s dialog to be added to the VBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"    public void printTasks(TaskList tasks, String notEmptyMessage, String emptyMessage,","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"                           VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"        int numberOfTasks \u003d tasks.getSize();","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"        if (numberOfTasks \u003e 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"            stringBuilder.append(notEmptyMessage + \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"                stringBuilder.append(i + 1 + \". \" + tasks.taskStringAtIndex(i) + \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"        } else if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"            stringBuilder.append(emptyMessage + \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(stringBuilder.toString(), dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"     * Prints out the number of Tasks in the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"     * @param tasks TaskList to be printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the number of tasks text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"    public void printTaskCountMessage(TaskList tasks, VBox dialogContainer) {","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseWithoutUserInput(\"Boss, you got \"","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"                + tasks.getSize() + \" tasks now\\n\", dialogContainer);","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"     * Prints out a message when a Task has been successfully added.","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"     * @param task TaskList to be printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the success text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog contains the user\u0027s dialog to be added to the VBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"    public void printAddedTaskMessage(Task task, VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(\"Swee lah! I added this task liao:\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"                + task + \"\\n\", dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"     * Prints out a message when a Task has been successfully deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"     * @param task TaskList to be printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the deletion text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog contains the user\u0027s dialog to be added to the VBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"    public void printDeletedTaskMessage(Task task, VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(\"Okay boss, this task I delete le:\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"                + task + \"\\n\", dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"     * Prints out a message when a Task has been successfully completed.","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"     * @param task TaskList to be printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the marked text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog contains the user\u0027s dialog to be added to the VBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"    public void printMarkedMessage(Task task, VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(\"Swee lah! Your task done liao: \\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"                + task, dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"     * Prints out a message when a Task has been unmarked.","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"     * @param task TaskList to br printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"     * @param dialogContainer VBox to add the unmarked text to.","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"     * @param userDialog contains the user\u0027s dialog to be added to the VBox.","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"    public void printUnmarkedMessage(Task task, VBox dialogContainer, DialogBox userDialog) {","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"        appendUncleCheongResponseAndUserInput(\"Eh? Not done yet? Okay I change liao: \\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"                + task, dialogContainer, userDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":156}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"text\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"MuhdMusab":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"MuhdMusab":19}},{"path":"src/test/java/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeStringToParsingDateTime() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(LocalDateTime.of(2022, 9, 15, 6, 54),","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"                DateTimeParser.changeStringToParsingDateTime(\"Sep 15 2022 06:54 AM\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeStringToReadingDateTime() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(LocalDateTime.of(2022, 9, 15, 6, 54),","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"                DateTimeParser.changeStringToReadingDateTime(\"15-Sep-2022 06:54 AM\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeDateTimeFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"15-Sep-2022 06:54 AM\",","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"                DateTimeParser.changeDateTimeFormat(LocalDateTime.of(2022, 9, 15, 6, 54)));","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":27}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public void testEmptyDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        Deadline deadline \u003d new Deadline(\"\", false, deadlineDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"\", deadline.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        Deadline deadline \u003d new Deadline(\"test\", false, deadlineDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"        deadline.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, deadline.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        deadline.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, deadline.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"    public void testSuccessfulCanChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        Deadline deadline \u003d new Deadline(\"test\", false, deadlineDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, deadline.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, deadline.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        deadline.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, deadline.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, deadline.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        Deadline deadline \u003d new Deadline(\"\", false, deadlineDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[D][ ]  (by: 2-Sep-2022 06:54 AM)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        deadline.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[D][X]  (by: 2-Sep-2022 06:54 AM)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        deadline.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[D][ ]  (by: 2-Sep-2022 06:54 AM)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        deadline.setDescription(\"Eat food\");","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[D][ ] Eat food (by: 2-Sep-2022 06:54 AM)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        deadline.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[D][X] Eat food (by: 2-Sep-2022 06:54 AM)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectMonthFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sept 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sept 2 2022 06:54 AM\u0027 could not be parsed at index 3\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"September 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027September 2 2022 06:54 AM\u0027 could not be parsed at index 3\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectDayFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 32 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 32 2022 06:54 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"                            + \"DayOfMonth (valid values 1 - 28/31): 32\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep -1 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep -1 2022 06:54 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"                    + \"DayOfMonth (valid values 1 - 28/31): -1\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectYearFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 22 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 22 06:54 AM\u0027 could not be parsed at index 7\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 00 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 00 06:54 AM\u0027 could not be parsed at index 7\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectTimeFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 06:61 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 06:61 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"                    + \"MinuteOfHour (valid values 0 - 59): 61\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 15:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 15:54 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"                    + \"ClockHourOfAmPm (valid values 1 - 12): 15\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 12:54\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 12:54\u0027 could not be parsed at index 17\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 12:54 AMM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 12:54 AMM\u0027 could not be parsed, \"","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"                    + \"unparsed text found at index 20\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectFormattedDateTime() {","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"15 Sep 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715 Sep 2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"15-Sep-2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715-Sep-2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"15-09-2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715-09-2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"15/09/2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715/09/2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"15/09/22 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":212,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715/09/22 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":215,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 2359\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":219,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 2359\u0027 could not be parsed at index 14\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":224}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"import task.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"public class EventTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"    public void testEmptyDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        Event event \u003d new Event(\"\", false, eventDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"\", event.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"        Event event \u003d new Event(\"test\", false, eventDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"        event.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, event.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        event.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, event.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"    public void testSuccessfulCanChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        Event event \u003d new Event(\"test\", false, eventDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, event.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, event.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"        event.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, event.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, event.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"        LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        Event event \u003d new Event(\"\", false, eventDateTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[E][ ]  (at: 2-Sep-2022 06:54 AM)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        event.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[E][X]  (at: 2-Sep-2022 06:54 AM)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"        event.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[E][ ]  (at: 2-Sep-2022 06:54 AM)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"MuhdMusab"},"content":"        event.setDescription(\"Eat food\");","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[E][ ] Eat food (at: 2-Sep-2022 06:54 AM)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"MuhdMusab"},"content":"        event.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[E][X] Eat food (at: 2-Sep-2022 06:54 AM)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectMonthFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sept 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sept 2 2022 06:54 AM\u0027 could not be parsed at index 3\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"September 2 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027September 2 2022 06:54 AM\u0027 could not be parsed at index 3\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectDayFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 32 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 32 2022 06:54 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"MuhdMusab"},"content":"                            + \"DayOfMonth (valid values 1 - 28/31): 32\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep -1 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep -1 2022 06:54 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"MuhdMusab"},"content":"                            + \"DayOfMonth (valid values 1 - 28/31): -1\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectYearFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 22 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 22 06:54 AM\u0027 could not be parsed at index 7\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 00 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 00 06:54 AM\u0027 could not be parsed at index 7\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectTimeFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 06:61 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 06:61 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"MuhdMusab"},"content":"                    + \"MinuteOfHour (valid values 0 - 59): 61\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 15:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 15:54 AM\u0027 could not be parsed: Invalid value for \"","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"MuhdMusab"},"content":"                    + \"ClockHourOfAmPm (valid values 1 - 12): 15\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 12:54\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 12:54\u0027 could not be parsed at index 17\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 12:54 AMM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 12:54 AMM\u0027 could not be parsed, \"","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"MuhdMusab"},"content":"                    + \"unparsed text found at index 20\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"MuhdMusab"},"content":"    public void testIncorrectFormattedDateTime() {","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"15 Sep 2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715 Sep 2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"15-Sep-2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715-Sep-2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"15-09-2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715-09-2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"15/09/2022 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715/09/2022 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":204,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":205,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":206,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":207,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"15/09/22 06:54 AM\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":209,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":211,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u002715/09/22 06:54 AM\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":212,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"MuhdMusab"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":215,"author":{"gitId":"MuhdMusab"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"MuhdMusab"},"content":"            LocalDateTime eventDateTime \u003d LocalDateTime.parse(\"Sep 15 2022 2359\", formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":217,"author":{"gitId":"MuhdMusab"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":218,"author":{"gitId":"MuhdMusab"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":219,"author":{"gitId":"MuhdMusab"},"content":"            assertEquals(\"Text \u0027Sep 15 2022 2359\u0027 could not be parsed at index 14\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"MuhdMusab"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":222}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"    public void testEmptyDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"        Task t \u003d new Task(\"\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"\", t.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        Task t \u003d new Task(\"test\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        t.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, t.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        t.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, t.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    public void testSuccessfulCanChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        Task t \u003d new Task(\"test\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, t.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, t.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        t.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, t.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, t.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        Task t \u003d new Task(\"\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[ ] \", t.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        t.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[X] \", t.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        t.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[ ] \", t.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        t.setDescription(\"Eat food\");","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[ ] Eat food\", t.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        t.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[X] Eat food\", t.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":62}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"import task.Todo;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"MuhdMusab"},"content":"    public void testEmptyDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"MuhdMusab"},"content":"        Todo todo \u003d new Todo(\"\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"\", todo.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"MuhdMusab"},"content":"    public void testChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"MuhdMusab"},"content":"        Todo todo \u003d new Todo(\"test\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"        todo.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, todo.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"MuhdMusab"},"content":"        todo.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, todo.getIsDone());","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"MuhdMusab"},"content":"    public void testSuccessfulCanChangeIsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"        Todo todo \u003d new Todo(\"test\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, todo.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, todo.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"MuhdMusab"},"content":"        todo.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(false, todo.canChangeIsDone(true));","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(true, todo.canChangeIsDone(false));","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"MuhdMusab"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"MuhdMusab"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"MuhdMusab"},"content":"        Todo todo \u003d new Todo(\"\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[T][ ] \", todo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"MuhdMusab"},"content":"        todo.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[T][X] \", todo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"MuhdMusab"},"content":"        todo.changeIsDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[T][ ] \", todo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"MuhdMusab"},"content":"        todo.setDescription(\"Eat food\");","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[T][ ] Eat food\", todo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"MuhdMusab"},"content":"        todo.changeIsDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"MuhdMusab"},"content":"        assertEquals(\"[T][X] Eat food\", todo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"MuhdMusab"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"MuhdMusab"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"MuhdMusab"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"MuhdMusab":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MuhdMusab"},"content":"event exam /at noon","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"MuhdMusab"},"content":"deadline shower /by 5pm","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"MuhdMusab"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"MuhdMusab"},"content":"mark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"MuhdMusab"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"MuhdMusab"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"MuhdMusab"},"content":"unmark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"MuhdMusab"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"MuhdMusab":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"MuhdMusab"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MuhdMusab":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"MuhdMusab"},"content":"dos2unix ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"MuhdMusab"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MuhdMusab":2,"-":36}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"checkstyle {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teoyuqi":21,"-":40}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eLauncher\u003c/Code\u003e class which launches","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":" * the application.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"teoyuqi":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eDuke\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":" * \u003cp\u003eMain class for the Duke application.\u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"    /** Directory path on disk to find/save task list. */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    private static final String OUTPUT_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"    /** Filename to save task list on disk. */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    private static final String OUTPUT_FILENAME \u003d \"list.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eTaskList\u003c/Code\u003e to store \u003cCode\u003eTasks\u003c/Code\u003e created by user. */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eStorage\u003c/Code\u003e to handle reading and writing task list to disk. */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eParser\u003c/Code\u003e to parse and handle user inputs. */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"    /** Boolean attribute to know if Duke is running. */","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"    private boolean dukeIsRunning \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"    private Scene scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"     * Constructor of \u003cCode\u003eDuke\u003c/Code\u003e object.","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"     * @param directory Directory path on disk to find/save task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"     * @param filename  Filename to save task list on disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"    public Duke(String directory, String filename) {","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"        storage \u003d new Storage(directory, filename, taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"     * Constructor of \u003cCode\u003eDuke\u003c/Code\u003e without arguments.","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"     * Necessary for JavaFX.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"    public Duke() {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"        storage \u003d new Storage(OUTPUT_DIRECTORY, OUTPUT_FILENAME, taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"     * Loads from \u003cCode\u003efxml\u003c/Code\u003e file to scene and stages scene.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"     * @param stage Stage to pass the application scene to.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"        dukeIsRunning \u003d true;","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"                    \"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"            stage.show();","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"     * Checks if Duke is running.","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"     * @return Boolean object of whether Duke is running.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"teoyuqi"},"content":"    public Boolean checkIfRunning() {","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"teoyuqi"},"content":"        return dukeIsRunning;","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"teoyuqi"},"content":"     * Parses a given user input to determine the response","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"teoyuqi"},"content":"     * to be returned by Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"teoyuqi"},"content":"     * @param userInput Input given by user.","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"teoyuqi"},"content":"     * @return          \u003cCode\u003eString\u003c/Code\u003e response by Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"teoyuqi"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"teoyuqi"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":95,"author":{"gitId":"teoyuqi"},"content":"            // Parse input to get command to call. Checks to user input","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"teoyuqi"},"content":"            // are also made here.","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"teoyuqi"},"content":"            BiFunction\u003cTaskList, String, String\u003e command \u003d","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"teoyuqi"},"content":"                    parser.handleUserInputs(userInput);","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"teoyuqi"},"content":"            // Apply command on input and keep output.","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"teoyuqi"},"content":"            String output \u003d command.apply(taskList, userInput);","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"teoyuqi"},"content":"            // Write changes to disk.","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"teoyuqi"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"teoyuqi"},"content":"            // Return any output.","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"teoyuqi"},"content":"            if (output.equals(\"exit sequence initiated\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"teoyuqi"},"content":"                dukeIsRunning \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"teoyuqi"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"teoyuqi"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"teoyuqi"},"content":"                return output;","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"teoyuqi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":111,"author":{"gitId":"teoyuqi"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"teoyuqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"teoyuqi"},"content":"            return \"Error writing to file: \" + e.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teoyuqi":114,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eDukeException\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":" * \u003cCode\u003eDukeException\u003c/Code\u003e is a checked exception thrown for exceptions","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":" * encountered while executing the \u003cCode\u003eDuke\u003c/Code\u003e program.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eDukeException\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"     * @param message Error message given by thrower of this exception.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"        super(message);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eDukeException\u003c/Code\u003e when \u003cCode\u003eThrowable\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"     * cause is supplied.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"     * @param message Error message given by thrower of this exception.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"     * @param cause   \u003cCode\u003eThrowable\u003c/Code\u003e cause that caused this exception","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"     *                to be thrown.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"        super(message, cause);","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"teoyuqi":29}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eParser\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":" *  \u003cCode\u003eParser\u003c/Code\u003e class is in charge of the following:","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":" *  \u003cul\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":" *      \u003cli\u003eParse user inputs given as `String`.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":" *      \u003cli\u003eCheck for erroneous inputs.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":" *      \u003cli\u003eReturn relevant command to handle input.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":" *  \u003c/ul\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to add task to `taskList`.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e addTask \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"            TaskList::add;","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to delete task from \u003cCode\u003etaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e deleteTask \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"            TaskList::delete;","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to mark task as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e markTask \u003d (","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"            taskList, input) -\u003e {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"        int i \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"        return taskList.markDone(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"    };","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to mark task as undone.","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e unmarkTask \u003d (","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"teoyuqi"},"content":"            taskList, input) -\u003e {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"teoyuqi"},"content":"        int i \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"teoyuqi"},"content":"        return taskList.markUndone(i);","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"teoyuqi"},"content":"    };","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to list out all tasks in \u003cCode\u003etaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e listTasks \u003d (","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"teoyuqi"},"content":"            taskList, input) -\u003e {","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"teoyuqi"},"content":"        // List inputs in \u0027userInput\u0027 list.","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"teoyuqi"},"content":"        return taskList.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"teoyuqi"},"content":"    };","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to find word among tasks in the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e findTask \u003d (","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"teoyuqi"},"content":"            taskList, input) -\u003e {","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"teoyuqi"},"content":"        return taskList.findWord(input.split(\" \")[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"teoyuqi"},"content":"    };","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eBiFunction\u003c/Code\u003e to exit program.","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"teoyuqi"},"content":"     *  Accepts:","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eTaskList\u003c/Code\u003e object of the running \u003cCode\u003eDuke\u003c/Code\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"teoyuqi"},"content":"     *     program.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003eFull \u003cCode\u003eString\u003c/Code\u003e input from user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"teoyuqi"},"content":"     *  Returns:","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"teoyuqi"},"content":"     *  \u003col\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"teoyuqi"},"content":"     *     \u003cli\u003e\u003cCode\u003eString\u003c/Code\u003e output to be displayed to user.\u003c/li\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"teoyuqi"},"content":"     *  \u003c/ol\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"teoyuqi"},"content":"    private static final BiFunction\u003cTaskList, String, String\u003e quit \u003d (","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"teoyuqi"},"content":"            taskList, input) -\u003e {","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"teoyuqi"},"content":"        // Exit","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"teoyuqi"},"content":"        return \"exit sequence initiated\";","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"teoyuqi"},"content":"    };","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eHashMap\u003c/Code\u003e of commands that maps to their","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"teoyuqi"},"content":"     * respective \u003cCode\u003eBiFunction\u003c/Code\u003es.","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"teoyuqi"},"content":"    private static final HashMap\u003cString,","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"teoyuqi"},"content":"            BiFunction\u003cTaskList, String, String\u003e\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"teoyuqi"},"content":"    static {","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"deadline\", addTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"event\", addTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"todo\", addTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"delete\", deleteTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"mark\", markTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":173,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"unmark\", unmarkTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":174,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"list\", listTasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":175,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"find\", findTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":176,"author":{"gitId":"teoyuqi"},"content":"        commands.put(\"bye\", quit);","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":178,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"teoyuqi"},"content":"     * Points to \u003cCode\u003eDuke\u003c/Code\u003e\u0027s current taskList. Used to keep track","lastModifiedDate":"2022-08-22"},{"lineNumber":181,"author":{"gitId":"teoyuqi"},"content":"     * of size.","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":183,"author":{"gitId":"teoyuqi"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":184,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":185,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":186,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eParser\u003c/Code\u003e object.","lastModifiedDate":"2022-08-22"},{"lineNumber":187,"author":{"gitId":"teoyuqi"},"content":"     * @param taskList \u003cCode\u003eTaskList\u003c/Code\u003e object belonging to","lastModifiedDate":"2022-08-22"},{"lineNumber":188,"author":{"gitId":"teoyuqi"},"content":"     *                 \u003cCode\u003eDuke\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":189,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":190,"author":{"gitId":"teoyuqi"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":191,"author":{"gitId":"teoyuqi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"teoyuqi"},"content":"     * Handles user inputs and check for errors.","lastModifiedDate":"2022-08-22"},{"lineNumber":196,"author":{"gitId":"teoyuqi"},"content":"     * @param userInput      Full \u003cCode\u003eString\u003c/Code\u003e input from user.","lastModifiedDate":"2022-08-22"},{"lineNumber":197,"author":{"gitId":"teoyuqi"},"content":"     * @throws DukeException Throw exception if command format is wrong.","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"teoyuqi"},"content":"    public BiFunction\u003cTaskList, String, String\u003e handleUserInputs(","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"teoyuqi"},"content":"            String userInput) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"teoyuqi"},"content":"        String[] args \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"teoyuqi"},"content":"        String command \u003d args[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"teoyuqi"},"content":"        // Error checking based on command.","lastModifiedDate":"2022-08-21"},{"lineNumber":204,"author":{"gitId":"teoyuqi"},"content":"        switch(command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":205,"author":{"gitId":"teoyuqi"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":206,"author":{"gitId":"teoyuqi"},"content":"            if ((userInput.indexOf(\" \") !\u003d 8)","lastModifiedDate":"2022-08-22"},{"lineNumber":207,"author":{"gitId":"teoyuqi"},"content":"                    || (userInput.indexOf(\"/by \") \u003c\u003d 9)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"teoyuqi"},"content":"                // Should have a \" \" delimiter followed by \"/by:\"","lastModifiedDate":"2022-08-21"},{"lineNumber":209,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To add a new \"","lastModifiedDate":"2022-08-22"},{"lineNumber":210,"author":{"gitId":"teoyuqi"},"content":"                        + \"deadline, please enter the following:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":211,"author":{"gitId":"teoyuqi"},"content":"                        + \"   deadline [TASK DESCRIPTION] /by [DUE DATE]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"teoyuqi"},"content":"            String dateString \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":214,"author":{"gitId":"teoyuqi"},"content":"                    userInput.substring(userInput.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-08-22"},{"lineNumber":215,"author":{"gitId":"teoyuqi"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"teoyuqi"},"content":"                DateTimeFormatter formatter \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":217,"author":{"gitId":"teoyuqi"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2022-08-22"},{"lineNumber":218,"author":{"gitId":"teoyuqi"},"content":"                LocalDate.parse(dateString, formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":219,"author":{"gitId":"teoyuqi"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong date format! To add a new \"","lastModifiedDate":"2022-08-22"},{"lineNumber":221,"author":{"gitId":"teoyuqi"},"content":"                        + \"deadline, please enter the following:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":222,"author":{"gitId":"teoyuqi"},"content":"                        + \"   deadline [TASK DESCRIPTION] /by \"","lastModifiedDate":"2022-08-22"},{"lineNumber":223,"author":{"gitId":"teoyuqi"},"content":"                        + \"[YYYY/MM/DD]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":224,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":225,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":227,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":228,"author":{"gitId":"teoyuqi"},"content":"        case \"event\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":229,"author":{"gitId":"teoyuqi"},"content":"            if ((userInput.indexOf(\" \") !\u003d 5)","lastModifiedDate":"2022-08-22"},{"lineNumber":230,"author":{"gitId":"teoyuqi"},"content":"                    || (userInput.indexOf(\"/at \") \u003c\u003d 6)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":231,"author":{"gitId":"teoyuqi"},"content":"                // Should have a \" \" delimiter followed by \"/at\"","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To add a new \"","lastModifiedDate":"2022-08-22"},{"lineNumber":233,"author":{"gitId":"teoyuqi"},"content":"                        + \"event, please enter the following:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":234,"author":{"gitId":"teoyuqi"},"content":"                        + \"   event [TASK DESCRIPTION] /at [VENUE]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":235,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":236,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":238,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"teoyuqi"},"content":"        case \"todo\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":240,"author":{"gitId":"teoyuqi"},"content":"            if ((args.length \u003c 2)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":241,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To create a \"","lastModifiedDate":"2022-08-22"},{"lineNumber":242,"author":{"gitId":"teoyuqi"},"content":"                        + \"\u0027todo\u0027 task, type:\\n   todo [DESCRIPTION]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":243,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":244,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":245,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":247,"author":{"gitId":"teoyuqi"},"content":"        case \"delete\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":248,"author":{"gitId":"teoyuqi"},"content":"            int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":249,"author":{"gitId":"teoyuqi"},"content":"            int size \u003d taskList.getSize();","lastModifiedDate":"2022-08-22"},{"lineNumber":250,"author":{"gitId":"teoyuqi"},"content":"            if ((args.length !\u003d 2)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":251,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To delete a task, \"","lastModifiedDate":"2022-08-22"},{"lineNumber":252,"author":{"gitId":"teoyuqi"},"content":"                        + \"type:\\n   delete [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":253,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":254,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":255,"author":{"gitId":"teoyuqi"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":256,"author":{"gitId":"teoyuqi"},"content":"                index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":257,"author":{"gitId":"teoyuqi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":258,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Task number must be an integer!\"","lastModifiedDate":"2022-08-22"},{"lineNumber":259,"author":{"gitId":"teoyuqi"},"content":"                        + \"\\n   delete [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":260,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":261,"author":{"gitId":"teoyuqi"},"content":"            if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2022-08-21"},{"lineNumber":262,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Task number is invalid.\"","lastModifiedDate":"2022-08-22"},{"lineNumber":263,"author":{"gitId":"teoyuqi"},"content":"                        + String.format(\"You have %d tasks!\", size)","lastModifiedDate":"2022-08-22"},{"lineNumber":264,"author":{"gitId":"teoyuqi"},"content":"                        + \"\\n   delete [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":265,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":266,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":267,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":268,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":269,"author":{"gitId":"teoyuqi"},"content":"        case \"mark\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":270,"author":{"gitId":"teoyuqi"},"content":"            int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":271,"author":{"gitId":"teoyuqi"},"content":"            int size \u003d taskList.getSize();","lastModifiedDate":"2022-08-22"},{"lineNumber":272,"author":{"gitId":"teoyuqi"},"content":"            if ((args.length !\u003d 2)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":273,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To mark a task as \"","lastModifiedDate":"2022-08-22"},{"lineNumber":274,"author":{"gitId":"teoyuqi"},"content":"                        + \"done, type:\\n   mark [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":275,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":276,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":277,"author":{"gitId":"teoyuqi"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":278,"author":{"gitId":"teoyuqi"},"content":"                index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":279,"author":{"gitId":"teoyuqi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":280,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Task number must be an integer!\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":281,"author":{"gitId":"teoyuqi"},"content":"                        + \"   mark [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":282,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":283,"author":{"gitId":"teoyuqi"},"content":"            if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2022-08-21"},{"lineNumber":284,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Task number is invalid.\"","lastModifiedDate":"2022-08-22"},{"lineNumber":285,"author":{"gitId":"teoyuqi"},"content":"                        + String.format(\"You have %d tasks!\\n\", size)","lastModifiedDate":"2022-08-22"},{"lineNumber":286,"author":{"gitId":"teoyuqi"},"content":"                        + \"   mark [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":287,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":288,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":289,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":290,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":291,"author":{"gitId":"teoyuqi"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":292,"author":{"gitId":"teoyuqi"},"content":"            int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":293,"author":{"gitId":"teoyuqi"},"content":"            int size \u003d taskList.getSize();","lastModifiedDate":"2022-08-22"},{"lineNumber":294,"author":{"gitId":"teoyuqi"},"content":"            if ((args.length !\u003d 2)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":295,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To unmark a task \"","lastModifiedDate":"2022-08-22"},{"lineNumber":296,"author":{"gitId":"teoyuqi"},"content":"                        + \"as done, type:\\n   unmark [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":297,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":298,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":299,"author":{"gitId":"teoyuqi"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":300,"author":{"gitId":"teoyuqi"},"content":"                index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":301,"author":{"gitId":"teoyuqi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":302,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Task number must be an integer!\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":303,"author":{"gitId":"teoyuqi"},"content":"                        + \"   unmark [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":304,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":305,"author":{"gitId":"teoyuqi"},"content":"            if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2022-08-21"},{"lineNumber":306,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Task number is invalid.\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":307,"author":{"gitId":"teoyuqi"},"content":"                        + String.format(\"You have %d tasks!\\n\", size)","lastModifiedDate":"2022-08-22"},{"lineNumber":308,"author":{"gitId":"teoyuqi"},"content":"                        + \"   mark [TASK NUMBER]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":309,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":310,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":311,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":312,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":313,"author":{"gitId":"teoyuqi"},"content":"        case \"list\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":314,"author":{"gitId":"teoyuqi"},"content":"            if (!userInput.equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":315,"author":{"gitId":"teoyuqi"},"content":"                // Whole input should only be \"list\"","lastModifiedDate":"2022-08-21"},{"lineNumber":316,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To list tasks, \"","lastModifiedDate":"2022-08-22"},{"lineNumber":317,"author":{"gitId":"teoyuqi"},"content":"                        + \"type:\\n   list\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":318,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":319,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":320,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":321,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":322,"author":{"gitId":"teoyuqi"},"content":"        case \"find\": {","lastModifiedDate":"2022-08-22"},{"lineNumber":323,"author":{"gitId":"teoyuqi"},"content":"            if ((args.length !\u003d 2)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":324,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To find a word, type:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":325,"author":{"gitId":"teoyuqi"},"content":"                        + \"   find [WORD TO FIND]\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":326,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":327,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":328,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":329,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":330,"author":{"gitId":"teoyuqi"},"content":"        case \"bye\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":331,"author":{"gitId":"teoyuqi"},"content":"            if (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":332,"author":{"gitId":"teoyuqi"},"content":"                // Whole input should only be \"bye\"","lastModifiedDate":"2022-08-21"},{"lineNumber":333,"author":{"gitId":"teoyuqi"},"content":"                throw new DukeException(\"Wrong format! To exit, type:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":334,"author":{"gitId":"teoyuqi"},"content":"                        + \"   bye\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":335,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":336,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":337,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":338,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":339,"author":{"gitId":"teoyuqi"},"content":"        default: {","lastModifiedDate":"2022-08-21"},{"lineNumber":340,"author":{"gitId":"teoyuqi"},"content":"            // Case where no commands are matched.","lastModifiedDate":"2022-08-21"},{"lineNumber":341,"author":{"gitId":"teoyuqi"},"content":"            throw new DukeException(\"Sorry, I did not quite get that! \"","lastModifiedDate":"2022-08-22"},{"lineNumber":342,"author":{"gitId":"teoyuqi"},"content":"                    + String.format(\"(%s)\\n\", userInput));","lastModifiedDate":"2022-08-22"},{"lineNumber":343,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":344,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":345,"author":{"gitId":"teoyuqi"},"content":"        // Call respective \u0027Consumer\u0027 object on input once it has been verified.","lastModifiedDate":"2022-08-21"},{"lineNumber":346,"author":{"gitId":"teoyuqi"},"content":"        return commands.get(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":347,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":348,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"teoyuqi":348}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eStorage\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":" * \u003cp\u003eIn charge of reading and writing files from disk.\u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"     * Keep track of the last-saved version of \u003cCode\u003eTaskList\u003c/Code\u003e in its","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eString\u003c/Code\u003e form.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"    private String previousSave;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eFile\u003c/Code\u003e object to save \u003cCode\u003eTaskList\u003c/Code\u003e. */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"    private final File file;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eStorage\u003c/Code\u003e object.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     * @param directory Directory to save task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"     * @param filename  Name of output file.","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"     * @param taskList  \u003cCode\u003eTaskList\u003c/Code\u003e object to save to file.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"    public Storage(String directory, String filename, TaskList taskList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"        int lineNumberInFile \u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"        file \u003d new File(directory + \"/\" + filename);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"            // Try to read task list from file.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"                if (!data.equals(\"\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"                    // Parse non-empty lines and add the tasks to \u0027taskList\u0027.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"                    addLineFromFile(data, lineNumberInFile, taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"                lineNumberInFile++;","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"            previousSave \u003d taskList.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"            sc.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"            // If file does not exist, check if directory exists. If","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"            // directory does not exist, create the directory.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"            File outDir \u003d new File(directory);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"            if (!outDir.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"                outDir.mkdir();","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"     * Writes given \u003cCode\u003eTaskList\u003c/Code\u003e to disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"     * Compares if there were changes since the last save before writing","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"     * the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"     * @param taskList     \u003cCode\u003eTaskList\u003c/Code\u003e object to write to disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"     * @throws IOException Thrown if error occurs while writing file.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"    public void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"        if (taskList.toString().equals(previousSave)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"            // Only write to file if there was a change.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"            return;","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"        fw.write(taskList.toFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"        fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"     * Adds tasks from lines in file into \u003cCode\u003eDuke\u003c/Code\u003e\u0027s","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"     * @param data             Single line of data in file.","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"     * @param lineNumberInFile Line number of current line.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"     * @param taskList         \u003cCode\u003eTaskList\u003c/Code\u003e object to add tasks to.","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"teoyuqi"},"content":"    private static void addLineFromFile(String data, int lineNumberInFile,","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"teoyuqi"},"content":"                                        TaskList taskList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"teoyuqi"},"content":"        String[] dataArgs \u003d data.split(\"\\\\|\");","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"teoyuqi"},"content":"        if ((dataArgs[0].equals(\"deadline\") \u0026\u0026 dataArgs.length \u003d\u003d 4)","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"teoyuqi"},"content":"                || (dataArgs[0].equals(\"event\") \u0026\u0026 dataArgs.length \u003d\u003d 4)","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"teoyuqi"},"content":"                || (dataArgs[0].equals(\"todo\") \u0026\u0026 dataArgs.length \u003d\u003d 3)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"teoyuqi"},"content":"            // Only add task if format in file is correct.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"teoyuqi"},"content":"            taskList.addFromFile(dataArgs);","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"teoyuqi"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"teoyuqi"},"content":"            System.out.printf(\"Line %d: Error in format of saved file!%n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"teoyuqi"},"content":"                    + \"Line will be ignored.%n%n\", lineNumberInFile);","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"teoyuqi":97}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-12"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"import java.util.List;","lastModifiedDate":"2022-08-12"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-12"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eTaskList\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":" *     Stores an \u003cCode\u003eArrayList\u003c/Code\u003e of \u003cCode\u003eTask\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-12"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eList\u003c/Code\u003e to store \u003cCode\u003eString\u003c/Code\u003e inputs given. */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"     * Gets description as \u003cCode\u003eString\u003c/Code\u003e from input.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     * @param input \u003cCode\u003eString\u003c/Code\u003e of words given by user as input","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     * @return      Return description of input task.","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"    private String getDescription(String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"            return input.substring(9, input.indexOf(\"/by \") - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"            return input.substring(6, input.indexOf(\"/at \") - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"            return input.substring(5);","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"        return null;","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"     * Gets venue as \u003cCode\u003eString\u003c/Code\u003e from user input.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"     * @param input \u003cCode\u003eString\u003c/Code\u003e of words given by user as input","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"     * @return      Return venue of input task as \u003cCode\u003eString\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"    private String getVenue(String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"        return input.substring(input.indexOf(\"/at \") + 4);","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"     * Gets date as \u003cCode\u003eLocalDate\u003c/Code\u003e from user input.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"     * @param input \u003cCode\u003eString\u003c/Code\u003e of words given by user as input.","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"     * @return      Return date of input task as \u003cCode\u003eLocalDate\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"    private LocalDate getDate(String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"        DateTimeFormatter formatter \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"        String dateString \u003d input.substring(input.indexOf(\"/by \") + 4);","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"        return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-12"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"     * Adds \u003cCode\u003eTask\u003c/Code\u003e from \u003cCode\u003eString\u003c/Code\u003e input into","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"     * @param input \u003cCode\u003eString\u003c/Code\u003e format \u003cCode\u003eTask\u003c/Code\u003e of to be","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"     *              added to \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"     * @return      \u003cCode\u003eString\u003c/Code\u003e output to be shown to user.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-12"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"    public String add(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"        switch (inputArr[0]) {","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"            newTask \u003d new Deadline(getDescription(input), getDate(input));","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"        case \"event\":","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"            newTask \u003d new Event(getDescription(input), getVenue(input));","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"            newTask \u003d new ToDo(getDescription(input));","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"teoyuqi"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"teoyuqi"},"content":"            return \"No task added.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"teoyuqi"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"teoyuqi"},"content":"        int size \u003d this.getSize();","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"teoyuqi"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   %s%n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"teoyuqi"},"content":"                + \"Now you have %d task%s in the list.%n\",","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"teoyuqi"},"content":"                newTask, size, size \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":94,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":95,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":97,"author":{"gitId":"teoyuqi"},"content":"     * Deletes a \u003cCode\u003eTask\u003c/Code\u003e from \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"teoyuqi"},"content":"     * @param input \u003cCode\u003eString\u003c/Code\u003e user input command to delete","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"teoyuqi"},"content":"     *              a \u003cCode\u003eTask\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"teoyuqi"},"content":"     * @return      \u003cCode\u003eString\u003c/Code\u003e output to be shown to user.","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":102,"author":{"gitId":"teoyuqi"},"content":"    public String delete(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"teoyuqi"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"teoyuqi"},"content":"        String taskToDelete \u003d taskList.get(index).toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":105,"author":{"gitId":"teoyuqi"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-08-14"},{"lineNumber":106,"author":{"gitId":"teoyuqi"},"content":"        int size \u003d this.getSize();","lastModifiedDate":"2022-08-14"},{"lineNumber":107,"author":{"gitId":"teoyuqi"},"content":"        return String.format(\"Got it. I\u0027ve removed this task:%n   %s%n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"teoyuqi"},"content":"                + \"Now you have %d task%s in the list.%n\",","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"teoyuqi"},"content":"                taskToDelete, size, size \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":111,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":112,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-12"},{"lineNumber":113,"author":{"gitId":"teoyuqi"},"content":"     * Overrides \u003cCode\u003etoString\u003c/Code\u003e method of \u003cCode\u003eTaskList\u003c/Code\u003e object.","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"teoyuqi"},"content":"     * @return \u003cCode\u003eTask\u003c/Code\u003e output to be shown to user.","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-12"},{"lineNumber":116,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":117,"author":{"gitId":"teoyuqi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":118,"author":{"gitId":"teoyuqi"},"content":"        StringBuilder res \u003d new StringBuilder(","lastModifiedDate":"2022-08-14"},{"lineNumber":119,"author":{"gitId":"teoyuqi"},"content":"                String.format(\"Here are the tasks in your list:%n\"));","lastModifiedDate":"2022-08-14"},{"lineNumber":120,"author":{"gitId":"teoyuqi"},"content":"        for (int i \u003d 0; i \u003c taskList.toArray().length; i++) {","lastModifiedDate":"2022-08-13"},{"lineNumber":121,"author":{"gitId":"teoyuqi"},"content":"            res.append(String.format(\"%d. %s%n\", i + 1, taskList.get(i)));","lastModifiedDate":"2022-08-14"},{"lineNumber":122,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-12"},{"lineNumber":123,"author":{"gitId":"teoyuqi"},"content":"        return res.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":124,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":125,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":126,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":127,"author":{"gitId":"teoyuqi"},"content":"     * Marks \u003cCode\u003eTask\u003c/Code\u003e with given index as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"teoyuqi"},"content":"     * @param index Index of task to be done. 1 based indexing.","lastModifiedDate":"2022-08-13"},{"lineNumber":129,"author":{"gitId":"teoyuqi"},"content":"     * @return      \u003cCode\u003eString\u003c/Code\u003e output to be shown to user.","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":131,"author":{"gitId":"teoyuqi"},"content":"    public String markDone(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"teoyuqi"},"content":"        taskList.get(index - 1).markDone();","lastModifiedDate":"2022-08-14"},{"lineNumber":133,"author":{"gitId":"teoyuqi"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:%n   %s%n\",","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"teoyuqi"},"content":"                taskList.get(index - 1));","lastModifiedDate":"2022-08-13"},{"lineNumber":135,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":136,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":137,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":138,"author":{"gitId":"teoyuqi"},"content":"     * Marks \u003cCode\u003eTask\u003c/Code\u003e with given index as undone.","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"teoyuqi"},"content":"     * @param index Index of task to be undone. 1 based indexing.","lastModifiedDate":"2022-08-13"},{"lineNumber":140,"author":{"gitId":"teoyuqi"},"content":"     * @return      \u003cCode\u003eString\u003c/Code\u003e output to be shown to user.","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":142,"author":{"gitId":"teoyuqi"},"content":"    public String markUndone(int index) {","lastModifiedDate":"2022-09-01"},{"lineNumber":143,"author":{"gitId":"teoyuqi"},"content":"        taskList.get(index - 1).markUnDone();","lastModifiedDate":"2022-08-14"},{"lineNumber":144,"author":{"gitId":"teoyuqi"},"content":"        return String.format(","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"teoyuqi"},"content":"                \"OK, I\u0027ve marked this task as not done yet:%n   %s%n\",","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"teoyuqi"},"content":"                taskList.get(index - 1));","lastModifiedDate":"2022-08-13"},{"lineNumber":147,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":148,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":149,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":150,"author":{"gitId":"teoyuqi"},"content":"     * Gets number of \u003cCode\u003eTask\u003c/Code\u003es in \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"teoyuqi"},"content":"     * @return Number of tasks in \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":153,"author":{"gitId":"teoyuqi"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-14"},{"lineNumber":154,"author":{"gitId":"teoyuqi"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":155,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":156,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":157,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":158,"author":{"gitId":"teoyuqi"},"content":"     * Return \u003cCode\u003eTaskList\u003c/Code\u003e as format to be saved in hard disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"teoyuqi"},"content":"     * @return String of \u003cCode\u003eTaskList\u003c/Code\u003e as format to be saved in file.","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":161,"author":{"gitId":"teoyuqi"},"content":"    public String toFile() {","lastModifiedDate":"2022-08-20"},{"lineNumber":162,"author":{"gitId":"teoyuqi"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2022-08-20"},{"lineNumber":163,"author":{"gitId":"teoyuqi"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":164,"author":{"gitId":"teoyuqi"},"content":"            res.append(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":165,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":166,"author":{"gitId":"teoyuqi"},"content":"        return res.toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":168,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":169,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":170,"author":{"gitId":"teoyuqi"},"content":"     * Adds \u003cCode\u003eTask\u003c/Code\u003e from file to \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"teoyuqi"},"content":"     * @param dataArgs Array containing details of \u003cCode\u003eTask\u003c/Code\u003e to be","lastModifiedDate":"2022-08-22"},{"lineNumber":172,"author":{"gitId":"teoyuqi"},"content":"     *                 added to \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":174,"author":{"gitId":"teoyuqi"},"content":"    public void addFromFile(String[] dataArgs) {","lastModifiedDate":"2022-08-20"},{"lineNumber":175,"author":{"gitId":"teoyuqi"},"content":"        Boolean isDone \u003d dataArgs[1].equals(\"true\");","lastModifiedDate":"2022-08-20"},{"lineNumber":176,"author":{"gitId":"teoyuqi"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-08-20"},{"lineNumber":177,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":178,"author":{"gitId":"teoyuqi"},"content":"        switch (dataArgs[0]) {","lastModifiedDate":"2022-08-20"},{"lineNumber":179,"author":{"gitId":"teoyuqi"},"content":"        case (\"deadline\"):","lastModifiedDate":"2022-08-20"},{"lineNumber":180,"author":{"gitId":"teoyuqi"},"content":"            LocalDate deadline \u003d LocalDate.parse(dataArgs[3],","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"teoyuqi"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"teoyuqi"},"content":"            newTask \u003d new Deadline(dataArgs[2], deadline, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":184,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":185,"author":{"gitId":"teoyuqi"},"content":"        case (\"event\"):","lastModifiedDate":"2022-08-20"},{"lineNumber":186,"author":{"gitId":"teoyuqi"},"content":"            newTask \u003d new Event(dataArgs[2], dataArgs[3], isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":187,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":188,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"teoyuqi"},"content":"        case (\"todo\"):","lastModifiedDate":"2022-08-20"},{"lineNumber":190,"author":{"gitId":"teoyuqi"},"content":"            newTask \u003d new ToDo(dataArgs[2], isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":191,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":192,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":193,"author":{"gitId":"teoyuqi"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"teoyuqi"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":195,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":196,"author":{"gitId":"teoyuqi"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-08-20"},{"lineNumber":197,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":198,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":199,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":200,"author":{"gitId":"teoyuqi"},"content":"     * Finds given word among the \u003cCode\u003eTask\u003c/Code\u003es in \u003cCode\u003eTaskList\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":201,"author":{"gitId":"teoyuqi"},"content":"     * @param keyword Word to search for.","lastModifiedDate":"2022-08-22"},{"lineNumber":202,"author":{"gitId":"teoyuqi"},"content":"     * @return        \u003cCode\u003eString\u003c/Code\u003e with information of \u003cCode\u003eTask\u003c/Code\u003es","lastModifiedDate":"2022-08-22"},{"lineNumber":203,"author":{"gitId":"teoyuqi"},"content":"     *                containing word.","lastModifiedDate":"2022-08-22"},{"lineNumber":204,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":205,"author":{"gitId":"teoyuqi"},"content":"    public String findWord(String keyword) {","lastModifiedDate":"2022-08-22"},{"lineNumber":206,"author":{"gitId":"teoyuqi"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":207,"author":{"gitId":"teoyuqi"},"content":"        output.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"teoyuqi"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":209,"author":{"gitId":"teoyuqi"},"content":"            if (task.hasWord(keyword)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":210,"author":{"gitId":"teoyuqi"},"content":"                output.append(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":211,"author":{"gitId":"teoyuqi"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":213,"author":{"gitId":"teoyuqi"},"content":"        return output.toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":214,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":215,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-12"}],"authorContributionMap":{"teoyuqi":215}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.gui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":" * Defines the \u003cCode\u003eDialogBox\u003c/Code\u003e class.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":" *     This control represents a dialog box consisting of an","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":" *     \u003cCode\u003eImageView\u003c/Code\u003e to represent the speaker, and","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":" *     a label containing text from the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eLabel\u003c/Code\u003e object for dialog text. */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eImageView\u003c/Code\u003e object for user/Duke image. */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eDialogBox\u003c/Code\u003e.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"     * @param text Text said by speaker to be shown in dialog box.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"     * @param img  Image representing the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"            // Load from `FXML` file.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"        // Set the text and image of the dialog box.","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"     * Flips the dialog box such that the image is on the left and","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"     * text is on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"     * Factory method to instantiate a new dialog box for the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"     * @param text Text said by user to be shown in dialog box.","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"     * @param img  Image representing the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"     * @return     \u003cCode\u003eDialogBox\u003c/Code\u003e object showing what was","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"     *             said by the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"        // Count number of lines in string","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"        int numberOfLines \u003d text.split(\"\\r\\n|\\r|\\n\").length;","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"        // Set minimum height of label to be relative to number of lines.","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"        db.setMinHeight(Math.max(99, numberOfLines * 25));","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"     * Factory method to instantiate a new dialog box for Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"teoyuqi"},"content":"     * @param text Text said by Duke to be shown in dialog box.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"teoyuqi"},"content":"     * @param img  Image representing Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"teoyuqi"},"content":"     * @return     \u003cCode\u003eDialogBox\u003c/Code\u003e object showing what was","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"teoyuqi"},"content":"     *             said by Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"teoyuqi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"teoyuqi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"teoyuqi"},"content":"        // Flip the dialog box since Duke\u0027s dialog boxes should have","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"teoyuqi"},"content":"        // the image on the left.","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"teoyuqi"},"content":"        db.flip();","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"teoyuqi"},"content":"        // Count number of lines in string","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"teoyuqi"},"content":"        int numberOfLines \u003d text.split(\"\\r\\n|\\r|\\n\").length;","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"teoyuqi"},"content":"        // Set minimum height of label to be relative to number of lines.","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"teoyuqi"},"content":"        db.setMinHeight(Math.max(99, numberOfLines * 25));","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"teoyuqi"},"content":"        return db;","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"teoyuqi":99}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.gui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":" * Controller for gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eString\u003c/Code\u003e to be shown on initialization. */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    private static final String GREETING \u003d","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"            \"Duke at your service. How may I help you?\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eString\u003c/Code\u003e of all available commands and their format. */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"    private static final String AVAILABLE_COMMANDS \u003d","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"            \"Available commands:\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"                    + \"   deadline [TASK DESCRIPTION] /by [YYYY/MM/DD]\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"                    + \"   event      [TASK DESCRIPTION] /at [VENUE]\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"                    + \"   todo       [TASK DESCRIPTION]\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"                    + \"   delete     [TASK NUMBER]\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"                    + \"   mark       [TASK NUMBER]\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"                    + \"   unmark   [TASK NUMBER]\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"                    + \"   list\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"                    + \"   find         [WORD TO SEARCH FOR]\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"                    + \"   bye\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"    /** Image to represent user. */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"            new Image(this.getClass().getResourceAsStream(","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"                    \"/images/DaUser.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"    /** Image to represent Duke. */","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"    private final Image dukeImage \u003d","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"            new Image(this.getClass().getResourceAsStream(","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"                    \"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"    /** Instance of \u003cCode\u003eDuke\u003c/Code\u003e object to chat with. */","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"    /** Container for chat content to scroll. */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"    /** Container for dialog chat boxes between Duke and user. */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"    /** Component to show user\u0027s text input. */","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"    /** Button for user to send text to Duke. */","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"     * Initializes \u003cCode\u003eMainWindow\u003c/Code\u003e and greets user.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"                DialogBox.getDukeDialog(GREETING + AVAILABLE_COMMANDS,","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"                        dukeImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"     * Sets the \u003cCode\u003eDuke\u003c/Code\u003e instance which user is talking to","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"     * and whom users will get responses from.","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"     * @param d Duke object to get responses from.","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"teoyuqi"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"teoyuqi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"teoyuqi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"teoyuqi"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"teoyuqi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"teoyuqi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"teoyuqi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"teoyuqi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"teoyuqi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"teoyuqi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"teoyuqi"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"teoyuqi"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"teoyuqi"},"content":"        if (!duke.checkIfRunning()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"teoyuqi"},"content":"            // If duke is no longer running, close application after","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"teoyuqi"},"content":"            // a 1.5-second pause.","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"teoyuqi"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"teoyuqi"},"content":"            delay.setOnFinished( event -\u003e Platform.exit());","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"teoyuqi"},"content":"            delay.play();","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"teoyuqi":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eDeadline\u003c/Code\u003e class","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"    /** Deadline of \u003cCode\u003eDeadline\u003c/Code\u003e object. */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eDeadline\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"     * @param by          Deadline of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eDeadline\u003c/Code\u003e with \u003cCode\u003eisDone\u003c/Code\u003e given.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"     * @param by          Deadline of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"     * @param isDone      Whether task is done.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"    public Deadline(String description, LocalDate by, Boolean isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"     * Overrides \u003cCode\u003etoString\u003c/Code\u003e to return status and description of","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eDeadline\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"     * @return [D][COMPLETION STATUS][TASK DESCRIPTION]","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"        DateTimeFormatter formatter \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"        String date \u003d by.format(formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"     * To produce a \u003cCode\u003eString\u003c/Code\u003e with \"|\" delimiters for storing the","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"     * \u003cCode\u003eDeadline\u003c/Code\u003e\u0027s data in a text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"     * @return \"deadline|[COMPLETION STATUS]|[TASK DESCRIPTION]|[TASK DEADLINE]","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"        return \"deadline\" + \"|\" + super.toFileFormat() + \"|\" + this.by;","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"     * Returns whether \u003cCode\u003eDeadline\u003c/Code\u003e\u0027s description or deadline contains","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"     * given word.","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"     * @param word Word to search for.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"     * @return     \u003cCode\u003eBoolean\u003c/Code\u003e value of whether","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"     *             \u003cCode\u003eDeadline\u003c/Code\u003e\u0027s description or date contains given","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"     *             word.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"    public Boolean hasWord(String word) {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"        return super.hasWord(word) || this.by.toString().contains(word);","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"teoyuqi":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eEvent\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"    /** Venue of event. */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"    protected String at;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eEvent\u003c/COde\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"     * @param at          Deadline of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eEvent\u003c/Code\u003e with \u003cCode\u003eisDone\u003c/Code\u003e known.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"     * @param at          Deadline of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"     * @param isDone      Whether task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"    public Event(String description, String at, Boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"     * Overrides \u003cCode\u003etoString\u003c/Code\u003e method to return status and","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"     * description of \u003cCode\u003eEvent\u003c/Code\u003e object.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"     * @return [E][COMPLETION STATUS][TASK DESCRIPTION]","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"     * Produces a \u003cCode\u003eString\u003c/Code\u003e with \"|\" delimiters for","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"     * storing the \u003cCode\u003eEvent\u003c/Code\u003e\u0027s data into a text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"     * @return \"event|[COMPLETION STATUS]|[TASK DESCRIPTION]|[TASK VENUE]\"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"        return \"event\" + \"|\" + super.toFileFormat() + \"|\" + this.at;","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"     * Returns whether \u003cCode\u003eEvent\u003c/Code\u003e\u0027s description or venue contains","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"     * given word.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"     * @param word Word to search for.","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"     * @return     \u003cCode\u003eBoolean\u003c/Code\u003e value of whether \u003cCode\u003eEvent\u003c/Code\u003e\u0027s","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"     *             description or venue contains given word.","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"    public Boolean hasWord(String word) {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"        return super.hasWord(word) || this.at.contains(word);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"teoyuqi":61}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eTask\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"    /** Description of task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eBoolean\u003c/Code\u003e object representing whether task is done. */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eTask\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eTask\u003c/Code\u003e with \u003cCode\u003eisDone\u003c/Code\u003e known.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     * @param isDone      Whether task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"     * Shows whether task is done.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"     * @return \"X\" if task is done, \" \" if task is not done.","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"     * Marks \u003cCode\u003eTask\u003c/Code\u003e as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"     * Marks \u003cCode\u003eTask\u003c/Code\u003e as undone.","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"    public void markUnDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"teoyuqi"},"content":"     * Overrides \u003cCode\u003etoString\u003c/Code\u003e method to return status","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"teoyuqi"},"content":"     * and description of \u003cCode\u003eTask\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"teoyuqi"},"content":"     * @return [[TASK STATUS]] [TASK DESCRIPTION]","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"teoyuqi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"teoyuqi"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"teoyuqi"},"content":"     * Produces \u003cCode\u003eString\u003c/Code\u003e with \"|\" delimiters for storing task\u0027s data","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"teoyuqi"},"content":"     * into a text file.","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"teoyuqi"},"content":"     * @return \"deadline|[COMPLETION STATUS]|[TASK DESCRIPTION]|[TASK DEADLINE]","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"teoyuqi"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"teoyuqi"},"content":"        return this.isDone + \"|\" + this.description;","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"teoyuqi"},"content":"     * Returns whether \u003cCode\u003eTask\u003c/Code\u003e\u0027s description contains given word.","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"teoyuqi"},"content":"     * @param word Word to search description for.","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"teoyuqi"},"content":"     * @return     \u003cCode\u003eBoolean\u003c/Code\u003e value of whether \u003cCode\u003eTask\u003c/Code\u003e\u0027s","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"teoyuqi"},"content":"     *             description contains given word.","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"teoyuqi"},"content":"    public Boolean hasWord(String word) {","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"teoyuqi"},"content":"        return this.description.contains(word);","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"teoyuqi":82}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":" * Defines \u003cCode\u003eToDo\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eToDo\u003c/Code\u003e.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"     * Constructor for \u003cCode\u003eToDo\u003c/Code\u003e if \u003cCode\u003eisDone\u003c/Code\u003e is known.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"     * @param isDone      Whether task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"     * Overrides \u003cCode\u003etoString\u003c/Code\u003e method to return status and","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     * description of \u003cCode\u003eToDo\u003c/Code\u003e object.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"     * @return [T][COMPLETION STATUS][TASK DESCRIPTION]","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"     * Produces a \u003cCode\u003eString\u003c/Code\u003e with \"|\" delimiters for","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"     * storing the task\u0027s data into a text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"     * @return \"todo|[COMPLETION STATUS]|[TASK DESCRIPTION]|\"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"        return \"todo\" + \"|\" + super.toFileFormat();","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"teoyuqi":42}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"         styleClass\u003d\"label-content\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"         prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"                   pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"        \u003cURL value\u003d\"@DialogBox.css\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"teoyuqi":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"            minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" styleClass\u003d\"user-input\"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"                   onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"                styleClass\u003d\"send-btn\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\"","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"                      prefWidth\u003d\"488.0\" styleClass\u003d\"dialog-container\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"        \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"teoyuqi":30}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":" * Defines unit test for \u003cCode\u003eParser\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"    /** Dummy \u003cCode\u003eTaskList\u003c/Code\u003e object to help in testing. */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"    private static final TaskList dummyTaskList \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"    /** \u003cCode\u003eParser\u003c/Code\u003e object to be tested. */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"    private static final Parser testParser \u003d new Parser(dummyTaskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"     * Tests \u003cCode\u003ehandleUserInputs\u003c/Code\u003e method of \u003cCode\u003eParser\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"    public void handleUserInputs_wrongInputs_exceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"        String testInput1 \u003d \"event /at EVENT VENUE\";","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"        String expectedOutput1 \u003d \"Wrong format! To add a new \"","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"                + \"event, please enter the following:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"                + \"   event [TASK DESCRIPTION] /at [VENUE]\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"            BiFunction\u003cTaskList, String, String\u003e testOutput \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"                    testParser.handleUserInputs(testInput1);","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"            assertEquals(expectedOutput1, e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"        String testInput2 \u003d \"eventEVENT DESCRIPTION /atEVENT VENUE\";","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"        String expectedOutput2 \u003d String.format(","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"                \"Sorry, I did not quite get that! (%s)\\n\", testInput2);","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"            BiFunction\u003cTaskList, String, String\u003e testOutput \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"                    testParser.handleUserInputs(testInput2);","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"            assertEquals(expectedOutput2, e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"teoyuqi":46}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":" * Defines unit test for \u003cCode\u003eEvent\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"public class EventTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"    /** Dummy event used for testing. */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"    private static final Event dummyEvent \u003d new Event(","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"            \"EVENT DESCRIPTION\", \"EVENT VENUE\");","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"     * Tests \u003cCode\u003etoString\u003c/Code\u003e method of \u003cCode\u003eEvent\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"        String expectedStringFormat \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"                \"[E][ ] EVENT DESCRIPTION (at: EVENT VENUE)\";","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"        assertEquals(expectedStringFormat, dummyEvent.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"     * Tests \u003cCode\u003etoFileFormat\u003c/Code\u003e method of \u003cCode\u003eEvent\u003c/Code\u003e class.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"    public void testFileFormatConversion() {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"        String expectedFileFormat \u003d","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"                \"event|false|EVENT DESCRIPTION|EVENT VENUE\";","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"        assertEquals(expectedFileFormat, dummyEvent.toFileFormat());","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"teoyuqi":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teoyuqi"},"content":"todo borrow book","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"teoyuqi"},"content":"deadline return book /by 2022/12/25","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"teoyuqi"},"content":"deadline buy cookies /by 2022//12","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"teoyuqi"},"content":"deadline buy cookies2 /by 2022/13/1","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"teoyuqi"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"teoyuqi"},"content":"todo feed cat","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"deadline buy cat food /by tomorrow","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"teoyuqi"},"content":"event submit ModReg appeals /at Sunday","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"teoyuqi"},"content":"todo feed neighbour\u0027s cat","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"teoyuqi"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"teoyuqi"},"content":"unmark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"teoyuqi"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"teoyuqi"},"content":"mark 4","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"event go to pet fair /at 1st Nov","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"teoyuqi"},"content":"mark 5","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"teoyuqi"},"content":"unmark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"teoyuqi"},"content":"unmark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"teoyuqi"},"content":"unmark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"teoyuqi"},"content":"unmark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"teoyuqi"},"content":"blah","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"teoyuqi"},"content":"blah /by","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"teoyuqi"},"content":"blah blah /by","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"teoyuqi"},"content":"deadline","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"teoyuqi"},"content":"deadline deadline","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"teoyuqi"},"content":"deadline deadline /at friday","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"teoyuqi"},"content":"deadline deadline / friday","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"teoyuqi"},"content":"event","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"teoyuqi"},"content":"event event","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"teoyuqi"},"content":"event event event /by NUS","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"teoyuqi"},"content":"event event event / NUS","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"teoyuqi"},"content":"todo","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"teoyuqi"},"content":"todo todo /by /at","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"teoyuqi"},"content":"mark","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"teoyuqi"},"content":"mark mark","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"teoyuqi"},"content":"mark 12","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"teoyuqi"},"content":"mark 13","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"teoyuqi"},"content":"list list","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"teoyuqi"},"content":"list 1","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"teoyuqi"},"content":"delete 1","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"teoyuqi"},"content":"delete 2","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"teoyuqi"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"teoyuqi"},"content":"delete delete","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"teoyuqi"},"content":"delete 1 2","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"teoyuqi"},"content":"bye 1","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"teoyuqi"},"content":"bye bye","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"teoyuqi"},"content":"bye list","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"teoyuqi"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"teoyuqi":53}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"teoyuqi"},"content":"if exist data\\list.txt del data\\list.txt","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"teoyuqi"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"teoyuqi"},"content":"java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teoyuqi":3,"-":19}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"rachaelsng":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":" * Represents the chatbot.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a chatbot.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     * @param filePath The file path of the storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"        TaskList currTasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"            currTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            currTasks \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        tasks \u003d currTasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    private void run() {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"                ui.showLine();","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"            } finally {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"rachaelsng":51}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":" * Custom exception for the chatbot.","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"     * Constructs an exception with the specified message.","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"     * @param message The specified error message.","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rachaelsng":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.commands.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"     * Parses user\u0027s input command.","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"     * @param command The user\u0027s input command.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * @return The command to be done.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If the input is incorrect.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        command \u003d command.toLowerCase();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"        String[] input \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"                case \"bye\":","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"                    return new ExitCommand();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"                case \"list\":","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"                    return new ListCommand();","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"                case \"delete\":","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a task number\");","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"                    return new DeleteCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"                case \"todo\":","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"                    return new ToDoCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"                case \"event\":","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"                    return new EventCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"                case \"deadline\":","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"                    return new DeadlineCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"                case \"mark\":","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a task number\");","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"                    return new MarkCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"                case \"unmark\":","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a task number\");","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"                    return new UnmarkCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"                case \"on\":","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"Please input a date!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"                    return new OnCommand(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"                case \"find\":","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"                    if (input.length \u003c 2) {","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"                        return new FindCommand(\"\");","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"rachaelsng"},"content":"                    }","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"rachaelsng"},"content":"                    return new FindCommand(input[1].trim());","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"rachaelsng"},"content":"                default:","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"rachaelsng"},"content":"                        throw new DukeException(\"What\u0027s \" + command + \" ??\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"rachaelsng"},"content":"                                + \"Please say something I can understand!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"rachaelsng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":72}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"import java.io.File;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"public class Storage {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    private String filePathStr;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a storage object with the specified file path.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"     * @param filePathStr The specified file path.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"    public Storage(String filePathStr) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        this.filePathStr \u003d filePathStr;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"     * Loads tasks from file.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     * @return List of tasks from file.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If there is an error in loading the tasks from file.","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"            File f1 \u003d new File(filePathStr);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"            f1.getParentFile().mkdirs();","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"            f1.createNewFile();","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"            Scanner scanner \u003d new Scanner(f1);","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"            String line;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"                Task newTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"                line \u003d scanner.nextLine();","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"                // process data","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"                switch (line.charAt(4)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"                        newTask \u003d ToDo.createToDoFromString(line);","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"                        break;","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"                        newTask \u003d Event.createEventFromString(line);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"                        break;","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"                        newTask \u003d Deadline.createDeadlineFromString(line);","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"                        break;","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"                    default:","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"                        newTask \u003d null;","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"                        break;","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"rachaelsng"},"content":"                tasks.add(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"rachaelsng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"rachaelsng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"File couldn\u0027t be created. Starting Duke with no tasks loaded!\");","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"rachaelsng"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Please input a file path!\");","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"rachaelsng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"There was an error loading your data!\");","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"rachaelsng"},"content":"        return tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"rachaelsng"},"content":"     * Saves the specified list of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The specified list of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"rachaelsng"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"rachaelsng"},"content":"            FileWriter fw \u003d new FileWriter(filePathStr);","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"rachaelsng"},"content":"            fw.write(taskList.toString());","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"rachaelsng"},"content":"            fw.close();","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"rachaelsng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"There was an error saving your file, your changes were not saved!\");","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":90}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":" * Contains and manages the list of tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * Constructs an empty task list","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a task list containing the specified tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     * @param tasks The specified tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"     * @param i Index of the task in the task list.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"    public Task get(int i) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"            return tasks.get(i);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Please enter a valid task number!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"     * @return Size of task list.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"    public int size() {","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"     * Converts an ArrayList of Tasks to a list as a String.","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"     * @return List of tasks as a string.","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"    public static String convertTasksToListString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"            String newLine \u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"            list.append(newLine);","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"rachaelsng"},"content":"        return list.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"rachaelsng"},"content":"     * Adds task to task list.","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"rachaelsng"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"rachaelsng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"rachaelsng"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"rachaelsng"},"content":"     * Deletes the specified task from task list.","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"rachaelsng"},"content":"     * @param index The index of the specified task in the list.","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"rachaelsng"},"content":"     * @return Deleted task.","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"rachaelsng"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"rachaelsng"},"content":"            return tasks.remove(index);","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"rachaelsng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"I can\u0027t find such a task to delete!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"rachaelsng"},"content":"     * Returns a task list with tasks on the specified date.","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"rachaelsng"},"content":"     * @param dateStr The specified date.","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"rachaelsng"},"content":"     * @return List of tasks with specified date.","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If date is blank or in the wrong format.","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"rachaelsng"},"content":"    public TaskList getTasksOnDate(String dateStr) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"rachaelsng"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"rachaelsng"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"rachaelsng"},"content":"            if (t.isOnThisDate(dateStr)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"rachaelsng"},"content":"                tasksOnDate.add(t);","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"rachaelsng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"rachaelsng"},"content":"        return new TaskList(tasksOnDate);","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"rachaelsng"},"content":"    public TaskList getTasksWithWord(String input) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"rachaelsng"},"content":"        ArrayList\u003cTask\u003e tasksWithWord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"rachaelsng"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"rachaelsng"},"content":"            if (t.doesDescriptionContain(input)) {","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"rachaelsng"},"content":"                tasksWithWord.add(t);","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"rachaelsng"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"rachaelsng"},"content":"        return new TaskList(tasksWithWord);","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":119,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"rachaelsng"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"rachaelsng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"rachaelsng"},"content":"        return convertTasksToListString(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":125}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":" * Deals with interactions with the user","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class Ui {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    private static final String LINE \u003d \"---------------\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"            + \"------------------------------------\";","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     * Reads the command typed by the user","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"     * @return The command that the user typed","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"        return SCANNER.nextLine();","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"     * Returns the word with the correct plural or singular form","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"     * @return The word with the correct plural or singular form","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    private static String showTaskTense(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        return taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     * Displays a line","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"     * Displays greeting","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Hi there! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"                \"     What\u0027s up?\");","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"     * Displays exit message","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"    public void showExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"     * Displays error message","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"     * @param message The error message","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"rachaelsng"},"content":"     * Displays added task message for the specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"rachaelsng"},"content":"     * @param task The specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"rachaelsng"},"content":"    public void showAddTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"rachaelsng"},"content":"                + \"  \" + task.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Now you have \" + taskList.size()","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"rachaelsng"},"content":"                + showTaskTense(taskList) + \" in the list.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"rachaelsng"},"content":"     * Displays the deleted task message for the specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"rachaelsng"},"content":"     * @param task The specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"rachaelsng"},"content":"    public void showDeleteTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Done! \" + task.toString()","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"rachaelsng"},"content":"                + \" has been deleted :(\");","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Now you have \" + taskList.size()","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"rachaelsng"},"content":"                + showTaskTense(taskList) + \" left.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"rachaelsng"},"content":"     * Displays the marked task message for the specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"rachaelsng"},"content":"     * @param task The specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"rachaelsng"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"rachaelsng"},"content":"     * Displays the unmarked task message for the specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"rachaelsng"},"content":"     * @param task The specified task","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"rachaelsng"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"rachaelsng"},"content":"     * Displays the specified task list","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The specified task list","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"rachaelsng"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"rachaelsng"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"Nothing to do right now...\");","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"rachaelsng"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"Tasks: \");","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"rachaelsng"},"content":"        System.out.println(\"You have \" + taskList.size()","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"rachaelsng"},"content":"                + showTaskTense(taskList) + \"!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":129,"author":{"gitId":"rachaelsng"},"content":"     * Displays the list of tasks on a specified date","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":131,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The list of tasks on a specified date","lastModifiedDate":"2022-09-01"},{"lineNumber":132,"author":{"gitId":"rachaelsng"},"content":"     * @param dateStr The specified date","lastModifiedDate":"2022-09-01"},{"lineNumber":133,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":134,"author":{"gitId":"rachaelsng"},"content":"    public void showTasksOnDate(TaskList taskList, String dateStr) {","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"rachaelsng"},"content":"        if (taskList.size() !\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":136,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"These are the tasks on \"","lastModifiedDate":"2022-09-01"},{"lineNumber":137,"author":{"gitId":"rachaelsng"},"content":"                    + dateStr + \":\");","lastModifiedDate":"2022-09-01"},{"lineNumber":138,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"You have \" + taskList.size()","lastModifiedDate":"2022-09-01"},{"lineNumber":140,"author":{"gitId":"rachaelsng"},"content":"                    + showTaskTense(taskList) + \" on \" + dateStr + \".\");","lastModifiedDate":"2022-09-01"},{"lineNumber":141,"author":{"gitId":"rachaelsng"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"There are no tasks on this date!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":145,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":146,"author":{"gitId":"rachaelsng"},"content":"    public void showFindings(TaskList taskList, String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":147,"author":{"gitId":"rachaelsng"},"content":"        if (taskList.size() !\u003d 0) {","lastModifiedDate":"2022-09-01"},{"lineNumber":148,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"I found \" + taskList.size()","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"rachaelsng"},"content":"                    + showTaskTense(taskList) + \" for \\\"\" + input + \"\\\"\");","lastModifiedDate":"2022-09-01"},{"lineNumber":150,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":151,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"Did you find what you were looking for?\");","lastModifiedDate":"2022-09-01"},{"lineNumber":152,"author":{"gitId":"rachaelsng"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":153,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"I couldn\u0027t find any tasks for \\\"\"","lastModifiedDate":"2022-09-01"},{"lineNumber":154,"author":{"gitId":"rachaelsng"},"content":"                    + input + \"\\\"\");","lastModifiedDate":"2022-09-01"},{"lineNumber":155,"author":{"gitId":"rachaelsng"},"content":"            System.out.println(\"Perhaps try another word!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":156,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":158,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":158}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":" * Represents commands available to be used.","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * Executes the command based on task list and storage, and calls UI methods when needed.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     * @param taskList The specified tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     * @param ui The Ui used to display messages.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"     * @param storage The storage used to load and save tasks locally.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If the command did not complete successfully.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     * Indicates whether the chat bot should exit after the command is executed.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"     * @return True, if chat bot should exit, otherwise false.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":28}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private final String input;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a command to create a new deadline with the specified input.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     * @param input The specified user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Hold up! Description cannot be empty!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"        String[] str \u003d input.split(\" /by \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        if (str.length \u003c 2 || str[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Wait! When is the deadline??\");","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"        Deadline newDeadline \u003d new Deadline(str[0], str[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"        taskList.addTask(newDeadline);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        ui.showAddTask(newDeadline, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":45}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    private final String input;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a command to delete a specified task.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     * @param input The user input for the index of a task.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"            int index \u003d Integer.parseInt(input.trim()) - 1;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            ui.showDeleteTask(taskList.deleteTask(index), taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Input a valid number!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":38}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private final String input;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a command to create a new event with the specified input.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     * @param input The specified user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Hold up! Description cannot be empty!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"        String[] str \u003d input.split(\" /at \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        if (str.length \u003c 2 || str[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Wait! When is this event??\");","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"        Event newEvent \u003d new Event(str[0], str[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"        taskList.addTask(newEvent);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        ui.showAddTask(newEvent, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":45}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"        ui.showExit();","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"        return true;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private String input;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Wait a minute :/ \"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"                    + \"what are you finding??\");","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"        TaskList tasksWithWord \u003d taskList.getTasksWithWord(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"        ui.showFindings(tasksWithWord, input);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"rachaelsng":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"        ui.showTaskList(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":22}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    private String input;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a command to mark a specified task as done.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     * @param input The user input for task number.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"            int index \u003d Integer.parseInt(input.trim()) - 1;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            taskList.get(index).markAsDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"            ui.showMarkedTask(taskList.get(index));","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Input a valid number!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":39}},{"path":"src/main/java/duke/commands/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class OnCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    private String input;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"     * Constructs command to return the list of tasks with a specified input date.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     * @param input The user input for date.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    public OnCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"        TaskList tasksOnDate \u003d taskList.getTasksOnDate(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        ui.showTasksOnDate(tasksOnDate, input);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":34}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    private String input;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * Constructs command to create a new To-Do task with the specified description input.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     * @param input The user input for task description.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    public ToDoCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Hold up! Description cannot be empty!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        ToDo newTodo \u003d new ToDo(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"        taskList.addTask(newTodo);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        ui.showAddTask(newTodo, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":39}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    private String input;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"     * Constructs command for marking a task as not done.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     * @param input The index of the task.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"            int index \u003d Integer.parseInt(input.trim()) - 1;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            taskList.get(index).markAsUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"            ui.showUnmarkedTask(taskList.get(index));","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Input a valid number!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":" * Represents a deadline.","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"    protected static DateTimeFormatter dateTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    protected static DateTimeFormatter dateTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd LLL yyyy hh:mma\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    protected static DateTimeFormatter dateInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a deadline with the specified description, date and time.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     * @param by The specified date and time.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If the date is not provided in the right format.","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"            this.dateTime \u003d LocalDateTime.parse(by, dateTimeInputFormatter);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Input your date and time in the format yyyy-MM-dd HHmm!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"    private Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"     * Creates a deadline from the data from the storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"     * @param line The line representing the deadline in storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"     * @return The deadline with the specified details.","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"    public static Deadline createDeadlineFromString(String line) {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"        return new Deadline(line.substring(10, line.indexOf(\"(by:\") - 1),","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"                LocalDateTime.parse(line.substring(line.indexOf(\"(by:\") + 5, line.lastIndexOf(\")\")),","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"                        dateTimeOutputFormatter));","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"    public boolean isOnThisDate(String dateStr) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"        if (dateStr.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Date cannot be blank!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr, dateInputFormatter);","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"            return date.equals(this.dateTime.toLocalDate());","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"        } catch (Exception e){","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Please type in the date in the format yyyy-MM-dd\");","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"rachaelsng"},"content":"    public boolean doesDescriptionContain(String input) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"rachaelsng"},"content":"        return Arrays.asList(description.split(\" \")).contains(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"rachaelsng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"rachaelsng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"rachaelsng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(dateTimeOutputFormatter) + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rachaelsng":78}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    protected static DateTimeFormatter dateTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"    protected static DateTimeFormatter dateTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd LLL yyyy hh:mma\");","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    protected static DateTimeFormatter dateInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"     * Constructs an event with the specified description, date and time.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"     * @param at The specified date and time.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If the date is not provided in the right format.","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            this.dateTime \u003d LocalDateTime.parse(at, dateTimeInputFormatter);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Input your date and time in the format yyyy-MM-dd HHmm!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"    private Event(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"     * Creates an event from the data from the storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"     * @param line The line representing the event in storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"     * @return The event with the specified details.","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"    public static Event createEventFromString(String line) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"        return new Event(line.substring(10, line.indexOf(\"(at:\") - 1),","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"                LocalDateTime.parse(line.substring(line.indexOf(\"(at:\") + 5, line.lastIndexOf(\")\")),","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"                        dateTimeOutputFormatter));","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"    public boolean isOnThisDate(String dateStr) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"        if (dateStr.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Date cannot be blank!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr, dateInputFormatter);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"            return date.equals(this.dateTime.toLocalDate());","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"        } catch (Exception e){","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"            throw new DukeException(\"Please type in the date in the format yyyy-MM-dd\");","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"rachaelsng"},"content":"    public boolean doesDescriptionContain(String input) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"rachaelsng"},"content":"        return Arrays.asList(description.split(\" \")).contains(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"rachaelsng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"rachaelsng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"rachaelsng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dateTime.format(dateTimeOutputFormatter) + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rachaelsng":75}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":" * Represents a task, which can be a to-do, event or deadline.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"     * Returns a string representing the status of completion of the task.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"     * @return A \"X\" if the task is completed, otherwise \" \".","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"     * Tests whether the task is associated with the specified date.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"     * @param dateStr The specified date.","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"     * @return True if the task is associated with the date, otherwise false.","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"     * @throws DukeException If the wrong input or format is provided for the date.","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"    public abstract boolean isOnThisDate(String dateStr) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rachaelsng"},"content":"    public abstract boolean doesDescriptionContain(String input) throws DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"rachaelsng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"rachaelsng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"rachaelsng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rachaelsng":63}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"     * Constructs a to-do with the specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"     * Creates a to-do using the storage data.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"     * @param line The line representing the to-do in the storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"     * @return The to-do with the specified description.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"    public static ToDo createToDoFromString(String line) {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"        return new ToDo(line.substring(10));","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    public boolean isOnThisDate(String dateStr) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    public boolean doesDescriptionContain(String input) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"        return Arrays.asList(description.split(\" \")).contains(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rachaelsng":44}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.task.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    public void addTaskTest(){","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"        Task task \u003d new ToDo(\"homework\");","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    public void deleteTaskTest(){","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"            Task newTask \u003d new Event(\"party\", \"2022-09-31 1600\");","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"            tasks.add(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"            TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            taskList.deleteTask(0);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(0, taskList.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"    public void getTasksOnDateTest(){","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"            Task task1 \u003d new Event(\"homework\", \"2022-09-01 2359\");","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"            taskList.addTask(task1);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"            Task task2 \u003d new Event(\"write\", \"2022-10-10 1200\");","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"            taskList.addTask(task2);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(1, taskList.getTasksOnDate(\"2022-09-01\").size());","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":46}},{"path":"src/test/java/duke/commands/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"    public void todoCommandTest1(){","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"            ToDoCommand toDoCommand \u003d new ToDoCommand(\"eat ramen\");","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"            Storage storage \u003d new Storage(\"../data/duke.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"            toDoCommand.execute(taskList, ui, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"    public void todoCommandTest2(){","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"            ToDoCommand toDoCommand \u003d new ToDoCommand(\"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"            Storage storage \u003d new Storage(\"../data/duke.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"            toDoCommand.execute(taskList, ui, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"Hold up! Description cannot be empty!\", e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rachaelsng"},"content":"    public void todoCommandTest3(){","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rachaelsng"},"content":"            ToDoCommand toDoCommand \u003d new ToDoCommand(\"   \");","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rachaelsng"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rachaelsng"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rachaelsng"},"content":"            Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rachaelsng"},"content":"            toDoCommand.execute(taskList, ui, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"Hold up! Description cannot be empty!\", e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":53}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.task.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    public void deadlineTest1(){","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"            Deadline deadline \u003d new Deadline(\"homework\", \"2022-09-10 0900\");","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"[D][ ] homework (by: 10 Sep 2022 09:00AM)\", deadline.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    public void deadlineTest2(){","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"            Deadline deadline \u003d new Deadline(\"homework\", \"2022-09-10\");","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"Input your date and time in the format yyyy-MM-dd HHmm!\"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"                    , e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"    public void deadlineTest3(){","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"            Deadline deadline \u003d new Deadline(\"housework\", \"2022-10-10 0800\");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"[D][ ] housework (by: 10 Oct 2022 08:00AM)\", deadline.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":40}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"import duke.task.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"public class EventTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"    public void eventTest1(){","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"            Event event \u003d new Event(\"sister\u0027s grad\", \"2023-01-10 1700\");","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"[E][ ] sister\u0027s grad (at: 10 Jan 2023 05:00PM)\", event.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    public void eventTest2(){","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"            Event event \u003d new Event(\"housewarming\", \"2022-12-10\");","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"Input your date and time in the format yyyy-MM-dd HHmm!\"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rachaelsng"},"content":"                    , e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rachaelsng"},"content":"    public void eventTest3(){","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rachaelsng"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rachaelsng"},"content":"            Event event \u003d new Event(\"housewarming\", \"2022-12-25 1800\");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rachaelsng"},"content":"            assertEquals(\"[E][ ] housewarming (at: 25 Dec 2022 06:00PM)\", event.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rachaelsng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rachaelsng"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rachaelsng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":40}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rachaelsng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rachaelsng"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rachaelsng"},"content":"    public void todoTest1(){","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rachaelsng"},"content":"        ToDo todo \u003d new ToDo(\"eat ramen\");","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rachaelsng"},"content":"        assertEquals(\"[T][ ] eat ramen\", todo.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rachaelsng"},"content":"    public void todoTest2(){","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rachaelsng"},"content":"        ToDo todo \u003d new ToDo(\"test wires\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rachaelsng"},"content":"        assertEquals(\"[T][ ] test wires\", todo.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rachaelsng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rachaelsng"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rachaelsng"},"content":"    public void todoTest3(){","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rachaelsng"},"content":"        ToDo todo \u003d new ToDo(\"test wires\");","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rachaelsng"},"content":"        assertFalse(todo.isOnThisDate(\"2022-09-08\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rachaelsng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rachaelsng"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rachaelsng":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachaelsng"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"rachaelsng"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rachaelsng":2}}]

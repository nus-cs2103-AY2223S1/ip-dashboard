[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Marcusgwj":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Marcusgwj":22,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.WelcomeCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * Duke is the class that represents the chat-bot.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private static final String TASKS_STORAGE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    public Duke() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d new TaskList(TASKS_STORAGE_PATH);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the welcome message string.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * @return The String to greet the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    public static String greetUser() {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"            Command welcomeCommand \u003d new WelcomeCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"            Response response \u003d welcomeCommand.execute();","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"            return response.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"     * Executes an action in response to the command and return the response.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"     * @param input The user input command.","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"            Command command \u003d Parser.parseCommand(input, taskList);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"            Response response \u003d command.execute();","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"            taskList.saveTasks();","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            return response;","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Marcusgwj":52,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     * Initialises the main window, adding a greeting message.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        String dukeText \u003d Duke.greetUser();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeText, dukeImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        Response response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"                DialogBox.getDukeDialog(response.toString(), dukeImage)","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"        if (response.isExitResponse()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"            Platform.exit();","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.CommandType;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.TagCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"import duke.command.UntagCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":" * Parser to make sense of user input.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"     * Parses a command from a string.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     * @param userInput The string to parse.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The task list to pass in to the Command.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    public static Command parseCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"            String[] inputArr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            CommandType command \u003d CommandType.parse(inputArr[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"            switch (command) {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"            case BYE:","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            case LIST:","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"                return new ListCommand(taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"            case MARK:","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"                return new MarkCommand(taskList, inputArr);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"                return new UnmarkCommand(taskList, inputArr);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"            case TODO:","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"                return new ToDoCommand(taskList, inputArr);","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"            case EVENT:","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"                return new EventCommand(taskList, inputArr);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"                return new DeadlineCommand(taskList, inputArr);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"            case DELETE:","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"                return new DeleteCommand(taskList, inputArr);","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"            case FIND:","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"                return new FindCommand(taskList, inputArr);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"            case TAG:","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"                return new TagCommand(taskList, inputArr);","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"            case UNTAG:","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"                return new UntagCommand(taskList, inputArr);","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"            default:","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"                return new InvalidCommand(\"Invalid command.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Marcusgwj"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Marcusgwj":67}},{"path":"src/main/java/duke/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":" * A Response from the application to some user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"public class Response {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"    private String message;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"    private boolean isExitResponse \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a response with the specified String message.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     * @param message The Response message.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    public Response(String message) {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     * Converts the Response to its String representation.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"     * @return The String representation of the Response.","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        return message;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * Sets the response to an Exit Response.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    public void setExitResponse() {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"        isExitResponse \u003d true;","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"     * Returns a boolean indicating whether to exit the Duke window.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"     * @return Boolean indicating whether it is an exitResponse.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"    public boolean isExitResponse() {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"        return isExitResponse;","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" * Storage handles loading data from and saving data to files.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private final File file;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a new Storage object with the specified path.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param path The path to the file to store data in.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"        file \u003d new File(path);","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"                file.createNewFile();","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"                System.out.println(\"Error creating data file.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"     * Reads and return the tasks of the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"     * @return The String tasks of the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"    public String read() {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"            StringBuilder fileTasks \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            if (!scanner.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"                return null;","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"            fileTasks.append(scanner.nextLine());","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"                fileTasks.append(System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"                fileTasks.append(scanner.nextLine());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            scanner.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"            return fileTasks.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"            throw new RuntimeException(\"File not found when trying to read data file.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"     * Writes the tasks into the Storage file.","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"     * @param contents The String tasks to write to the Storage file.","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"    public void write(String contents) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Marcusgwj"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"Marcusgwj"},"content":"            fileWriter.write(contents);","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Marcusgwj"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Marcusgwj"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Marcusgwj"},"content":"            throw new RuntimeException(\"File not found when trying to write to data file.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Marcusgwj"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Marcusgwj"},"content":"            throw new RuntimeException(\"Error when trying to write to data file\");","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Marcusgwj":73}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":" * Ui handles user interaction.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"public class Ui {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"    private static final String BORDER \u003d LINE + \"\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    private static final String GREETING \u003d \"Hello! I am duke.\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"    private static final String INVALID \u003d \"☹ OOPS!!! \";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     * Prints a message to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"        System.out.println(BORDER + message + BORDER);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"        System.out.println(BORDER + GREETING + BORDER);","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * Prints an error message to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     * @param error The error message to be printed.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public void invalidMessage(String error) {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        System.out.println(BORDER + INVALID + error + \"\\n\" + BORDER);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Marcusgwj":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" * Command represents a command to be executed.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"     * Executes an action in response to the command","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the action cannot be executed.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    public abstract Response execute() throws DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":18}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":" * CommandType represents the different types of commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    TAG(\"tag\"),","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    UNTAG(\"untag\");","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    private final String commandType;","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a CommandType with the corresponding command type.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"     * @param commandType Type of the Command.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    CommandType(String commandType) {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the corresponding CommandType based on the input String.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"     * @return The corresponding CommandType.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the command type String is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"    public static CommandType parse(String commandType) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        for (CommandType command : CommandType.values()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"            if (command.commandType.equals(commandType)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"                return command;","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Marcusgwj":46}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * DeadlineCommand represents a command to add a DeadLine to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a DeadlineCommand to add a DeadLine to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList to add the DeadLine to.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public DeadlineCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Adds the Deadline to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        String[] descriptionDate \u003d inputArr[1].split(\" /by \", 2);","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        if (descriptionDate.length \u003c 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"The description and date of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"        String task \u003d descriptionDate[0];","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"        String date \u003d descriptionDate[1];","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"        Deadline event \u003d new Deadline(task, date);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"        return new Response(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"                + event + \"\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" * DeleteCommand represents a command to delete a Task from a TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a DeleteCommand to delete a Task from a TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList to delete the Task from.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"    public DeleteCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     * Deletes the Task from the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.deleteTask(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"            assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"                    + task + \"\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"                    + \"Now you have \" + taskList.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"            throw exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":51}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * EventCommand represents a command to add an Event to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a EventCommand to add an Event to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList to add the Event to.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public EventCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Adds the Event to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        String[] descriptionDate \u003d inputArr[1].split(\" /at \", 2);","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        if (descriptionDate.length \u003c 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"The deadline and date of an event cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"        String description \u003d descriptionDate[0];","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"        String date \u003d descriptionDate[1];","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"        Event event \u003d new Event(description, date);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"        return new Response(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"                + event + \"\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":49}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":" * ExitCommand represents a command to exit the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"        Response exitResponse \u003d new Response(GOODBYE);","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"        exitResponse.setExitResponse();","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        return exitResponse;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Marcusgwj":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":" * FindCommand represents a command to find all tasks that match given keywords or tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a FindCommand to find matching tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList to search in.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    public FindCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * Finds all the tasks that match the keywords or tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     * @return Response to display the list of matching tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing criteria and keywords/tags.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"        String[] criteriaWords \u003d inputArr[1].split(\" \", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"        if (criteriaWords.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing criteria or keywords/tags.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"        List\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"        if (criteriaWords[0].equals(\"keywords\")) {","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"            tasks \u003d taskList.findKeywords(criteriaWords[1].split(\" \"));","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        } else if (criteriaWords[0].equals(\"tags\")) {","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"            tasks \u003d taskList.findTags(criteriaWords[1].split(\" \"));","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid search criteria\");","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"        assert tasks !\u003d null : \"Tasks cannot be null\";","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(\"There are no matching tasks in your list.\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"            for (int i \u003d 1; i \u003c\u003d size; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"                sb.append(String.format(\"%d.%s\\n\", i, tasks.get(i - 1)));","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(sb.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Marcusgwj":64}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":" * InvalidCommand represents a command that is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    private static final String INVALID \u003d \"OOPS!!! \";","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"    private String message;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a InvalidCommand to inform the user that the command is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     * @param message The error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"     * Returns an error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        return new Response(INVALID + this.message + \"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Marcusgwj":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" * ListCommand represents a command to display the tasks in the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a ListCommand to display the tasks in the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList to display.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"     * Displays the Tasks in the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        return new Response(taskList.toString());","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Marcusgwj":30}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * MarkCommand represents a command to mark a task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a MarkCommand to mark a task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList that the task belongs to.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public MarkCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Marks the task in the TaskList as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"            int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.markDone(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"            assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"                    + task + \"\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"            throw exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":49}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * TagCommand represents a command to add a tag to a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a TagCommand to add a tag to a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList that the task belongs to.","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public TagCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Adds a tag to a task in the TaskList.","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number and tag.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        String[] indexTag \u003d inputArr[1].split(\" \", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        if (indexTag.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number or tag.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            int index \u003d Integer.parseInt(indexTag[0]) - 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.tagTask(index, indexTag[1].split(\" \"));","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"            assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(\"Nice! I\u0027ve tagged this task:\\n\"","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"                    + task + \"\\n\");","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            throw exception;","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Marcusgwj":53}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * ToDoCommand represents a command to add a ToDo to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a ToDoCommand to add a ToDo to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList to add the ToDo to.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public ToDoCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Adds the ToDo to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        ToDo toDo \u003d new ToDo(inputArr[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        taskList.addTask(toDo);","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        return new Response(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"                + toDo + \"\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":43}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * UnmarkCommand represents a command to mark a task as uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a UnmarkCommand to mark a task as uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList that the task belongs to.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public UnmarkCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Marks the task in the TaskList as uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"            int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.unmarkDone(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"            assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"                    + task + \"\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":47}},{"path":"src/main/java/duke/command/UntagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" * UntagCommand represents a command to remove a tag from a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private String[] inputArr;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Creates an UntagCommand to remove a tag from a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param taskList The TaskList that the task belongs to.","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param inputArr The input String array.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public UntagCommand(TaskList taskList, String[] inputArr) {","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.inputArr \u003d inputArr;","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     * Removes a tag from a task in the TaskList.","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the input array is invalid.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number and tag.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        String[] indexTag \u003d inputArr[1].split(\" \", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        if (indexTag.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Missing task number or tag.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            int index \u003d Integer.parseInt(indexTag[0]) - 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.untagTask(index, indexTag[1].split(\" \"));","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"            assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"            return new Response(\"Ok! I\u0027ve untagged this task:\\n\"","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"                    + task + \"\\n\");","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            throw exception;","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Marcusgwj":53}},{"path":"src/main/java/duke/command/WelcomeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import duke.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":" * WelcomeCommand represents a command to greet the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"public class WelcomeCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    private static final String GREETING \u003d \"Hello! I am duke.\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"     * Displays the welcome message.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Response to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    public Response execute() {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"        return new Response(GREETING);","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":20}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":" * DukeException represents an Exception thrown because of an invalid input by the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"     * Create a DukeException with the specified Message.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" * Deadline is a task that is due by a specific date/time.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param date The date/time when the Deadline is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the date is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Date should be in yyyy-mm-dd format.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of the Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d super.getTagsString();","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        return (\"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\"","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"                + tagsString);","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation to be stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"     * @return String storage representation of the Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        String doneDescriptionString \u003d super.toStorageString();","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d super.getTagsStorageString();","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"        return \"D\" + Task.STORAGE_DELIMITER","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"                + doneDescriptionString + Task.STORAGE_DELIMITER","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"                + date","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"                + tagsString;","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" * Event is a task that happens at a specific date/time.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param date The date/time when the Event happens.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the date is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"    public Event(String description, String date) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Date should be in yyyy-mm-dd format.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of the Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d super.getTagsString();","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"        return (\"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\"","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"                + tagsString);","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation to be stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"     * @return String storage representation of the Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        String doneDescriptionString \u003d super.toStorageString();","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d super.getTagsStorageString();","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"        return \"E\" + Task.STORAGE_DELIMITER","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"                + doneDescriptionString + Task.STORAGE_DELIMITER","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"                + date","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"                + tagsString;","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":" * Task encapsulates a task with a description and a completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    protected static final String STORAGE_DELIMITER \u003d \" | \";","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    private static final String DONE_STATUS \u003d \"X\";","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private static final String NOT_DONE_STATUS \u003d \" \";","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"    private static final String DONE_STORAGE \u003d \"1\";","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    private static final String NOT_DONE_STORAGE \u003d \"0\";","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    private String description;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    private boolean isDone;","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    private HashSet\u003cString\u003e tags;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        return (isDone ? DONE_STATUS : NOT_DONE_STATUS);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of the Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + description);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"     * Marks the Task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"     * Marks the Task as uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation to be stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Marcusgwj"},"content":"     * @return storage String representation of the Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"Marcusgwj"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Marcusgwj"},"content":"        String statusStorage \u003d isDone ? DONE_STORAGE : NOT_DONE_STORAGE;","lastModifiedDate":"2022-09-05"},{"lineNumber":71,"author":{"gitId":"Marcusgwj"},"content":"        return statusStorage + Task.STORAGE_DELIMITER + description;","lastModifiedDate":"2022-09-05"},{"lineNumber":72,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a Task object from a storage String.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"Marcusgwj"},"content":"     * @param string The Storage String representing the Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Task represented by the Storage String.","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"Marcusgwj"},"content":"    public static Task fromStorageString(String string) {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"Marcusgwj"},"content":"        String[] taskSubstrings \u003d string.split(\" \\\\| \");","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Marcusgwj"},"content":"        TaskType taskType \u003d TaskType.parse(taskSubstrings[0]);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Marcusgwj"},"content":"        Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"Marcusgwj"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Marcusgwj"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"Marcusgwj"},"content":"                task \u003d new Deadline(taskSubstrings[2], taskSubstrings[3]);","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Marcusgwj"},"content":"                if (taskSubstrings.length \u003d\u003d 5) {","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"Marcusgwj"},"content":"                    String[] storageTags \u003d taskSubstrings[4].split(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"Marcusgwj"},"content":"                    fromStorageTags(task, storageTags);","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"Marcusgwj"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"Marcusgwj"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Marcusgwj"},"content":"            case EVENT:","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Marcusgwj"},"content":"                task \u003d new Event(taskSubstrings[2], taskSubstrings[3]);","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Marcusgwj"},"content":"                if (taskSubstrings.length \u003d\u003d 5) {","lastModifiedDate":"2022-09-07"},{"lineNumber":97,"author":{"gitId":"Marcusgwj"},"content":"                    String[] storageTags \u003d taskSubstrings[4].split(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":98,"author":{"gitId":"Marcusgwj"},"content":"                    fromStorageTags(task, storageTags);","lastModifiedDate":"2022-09-07"},{"lineNumber":99,"author":{"gitId":"Marcusgwj"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":100,"author":{"gitId":"Marcusgwj"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"Marcusgwj"},"content":"            case TODO:","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"Marcusgwj"},"content":"                task \u003d new ToDo(taskSubstrings[2]);","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"Marcusgwj"},"content":"                if (taskSubstrings.length \u003d\u003d 4) {","lastModifiedDate":"2022-09-07"},{"lineNumber":104,"author":{"gitId":"Marcusgwj"},"content":"                    String[] storageTags \u003d taskSubstrings[3].split(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"Marcusgwj"},"content":"                    fromStorageTags(task, storageTags);","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"Marcusgwj"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"Marcusgwj"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"Marcusgwj"},"content":"            default:","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"Marcusgwj"},"content":"                throw new RuntimeException(String.format(\"Invalid task type %s.\", taskType));","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":112,"author":{"gitId":"Marcusgwj"},"content":"            throw new RuntimeException(e.getMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":113,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":114,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"Marcusgwj"},"content":"        if (taskSubstrings[1].equals(Task.DONE_STORAGE)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"Marcusgwj"},"content":"            task.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"Marcusgwj"},"content":"        return task;","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"Marcusgwj"},"content":"     * Adds tags from storage tags to Task object.","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"Marcusgwj"},"content":"     * @param task The Task to be tagged.","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"Marcusgwj"},"content":"     * @param storageTags The String array containing the Tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":126,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":127,"author":{"gitId":"Marcusgwj"},"content":"    public static void fromStorageTags(Task task, String[] storageTags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":128,"author":{"gitId":"Marcusgwj"},"content":"        for (String storageTag : storageTags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":129,"author":{"gitId":"Marcusgwj"},"content":"            task.addTag(storageTag.substring(1));","lastModifiedDate":"2022-09-07"},{"lineNumber":130,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":131,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":133,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"Marcusgwj"},"content":"     * Checks whether the Task description matches the given keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"Marcusgwj"},"content":"     * @param keyword The keyword to match.","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"Marcusgwj"},"content":"     * @return Boolean indicating whether the description contains the keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"Marcusgwj"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"Marcusgwj"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-09-05"},{"lineNumber":141,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"Marcusgwj"},"content":"     * Checks whether the Task tags matches the given tag.","lastModifiedDate":"2022-09-07"},{"lineNumber":145,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"Marcusgwj"},"content":"     * @param searchTag The tag to match.","lastModifiedDate":"2022-09-07"},{"lineNumber":147,"author":{"gitId":"Marcusgwj"},"content":"     * @return Boolean indicating whether the tags contain the tag.","lastModifiedDate":"2022-09-07"},{"lineNumber":148,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":149,"author":{"gitId":"Marcusgwj"},"content":"    public boolean hasTag(String searchTag) {","lastModifiedDate":"2022-09-07"},{"lineNumber":150,"author":{"gitId":"Marcusgwj"},"content":"        return tags.contains(searchTag);","lastModifiedDate":"2022-09-07"},{"lineNumber":151,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":153,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":154,"author":{"gitId":"Marcusgwj"},"content":"     * Adds a tag to the Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":155,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":156,"author":{"gitId":"Marcusgwj"},"content":"    public void addTag(String newTag) {","lastModifiedDate":"2022-09-07"},{"lineNumber":157,"author":{"gitId":"Marcusgwj"},"content":"        tags.add(newTag);","lastModifiedDate":"2022-09-07"},{"lineNumber":158,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":159,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":160,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":161,"author":{"gitId":"Marcusgwj"},"content":"     * Removes a tag from the Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":162,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":163,"author":{"gitId":"Marcusgwj"},"content":"    public void removeTag(String currentTag) {","lastModifiedDate":"2022-09-07"},{"lineNumber":164,"author":{"gitId":"Marcusgwj"},"content":"        tags.remove(currentTag);","lastModifiedDate":"2022-09-07"},{"lineNumber":165,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":166,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":167,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":168,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of the tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":169,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":170,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":171,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":172,"author":{"gitId":"Marcusgwj"},"content":"    public String getTagsString() {","lastModifiedDate":"2022-09-07"},{"lineNumber":173,"author":{"gitId":"Marcusgwj"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-09-07"},{"lineNumber":174,"author":{"gitId":"Marcusgwj"},"content":"            return \"\";","lastModifiedDate":"2022-09-07"},{"lineNumber":175,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":176,"author":{"gitId":"Marcusgwj"},"content":"        return \" #\" + String.join(\" #\", tags);","lastModifiedDate":"2022-09-07"},{"lineNumber":177,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":178,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":179,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":180,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the storage String representation of the tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":181,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":182,"author":{"gitId":"Marcusgwj"},"content":"     * @return storage String representation of the tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":183,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":184,"author":{"gitId":"Marcusgwj"},"content":"    public String getTagsStorageString() {","lastModifiedDate":"2022-09-07"},{"lineNumber":185,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d getTagsString();","lastModifiedDate":"2022-09-07"},{"lineNumber":186,"author":{"gitId":"Marcusgwj"},"content":"        return tagsString \u003d\u003d \"\" ? \"\" : \" |\" + tagsString;","lastModifiedDate":"2022-09-07"},{"lineNumber":187,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":188,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":189,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Marcusgwj":189}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":" * TaskList represents the list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"public class TaskList {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a TaskList with the corresponding Storage file and list of saved tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     * @param path The path of the Storage file.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    public TaskList(String path) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"        this.taskList \u003d getSavedTasks();","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"     * Returns a List of the Tasks saved.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    private List\u003cTask\u003e getSavedTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"        String storageTasks \u003d storage.read();","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"        return parse(storageTasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"     * Parses a String of Tasks into a List of Tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"     * @param string The String of Tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"    private List\u003cTask\u003e parse(String string) {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"        if (string \u003d\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"        String[] taskStrings \u003d string.split(System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        for (String taskString : taskStrings) {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d Task.fromStorageString(taskString);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"            taskList.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"        return taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"     * Saves the list of Tasks to the storage file.","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"    public void saveTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"        StringBuilder storageTasks \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Marcusgwj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"Marcusgwj"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Marcusgwj"},"content":"                storageTasks.append(System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Marcusgwj"},"content":"            storageTasks.append(taskList.get(i).toStorageString());","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Marcusgwj"},"content":"        storage.write(storageTasks.toString());","lastModifiedDate":"2022-09-05"},{"lineNumber":71,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Marcusgwj"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"Marcusgwj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"Marcusgwj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"Marcusgwj"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-05"},{"lineNumber":80,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"Marcusgwj"},"content":"     * Removes the Task at the given index from the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"Marcusgwj"},"content":"     * @param index The given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"Marcusgwj"},"content":"     * @return The task removed.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"Marcusgwj"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"Marcusgwj"},"content":"        if (index \u003c 0 || index \u003e\u003d getSize()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":94,"author":{"gitId":"Marcusgwj"},"content":"            taskList.remove(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":95,"author":{"gitId":"Marcusgwj"},"content":"            return task;","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the current size of the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"Marcusgwj"},"content":"     * @return Current size of the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"Marcusgwj"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"Marcusgwj"},"content":"        return taskList.size();","lastModifiedDate":"2022-09-05"},{"lineNumber":106,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"Marcusgwj"},"content":"     * Marks the Task at the given index as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"Marcusgwj"},"content":"     * @param index The given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Task marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"Marcusgwj"},"content":"    public Task markDone(int index) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"Marcusgwj"},"content":"        if (index \u003c 0 || index \u003e\u003d getSize()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":117,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":120,"author":{"gitId":"Marcusgwj"},"content":"            task.markDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"Marcusgwj"},"content":"            return task;","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"Marcusgwj"},"content":"     * Marks the Task at the given index as uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"Marcusgwj"},"content":"     * @param index The given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Task unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"Marcusgwj"},"content":"    public Task unmarkDone(int index) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"Marcusgwj"},"content":"        if (index \u003c 0 || index \u003e\u003d getSize()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":134,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":135,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":137,"author":{"gitId":"Marcusgwj"},"content":"            task.markUndone();","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"Marcusgwj"},"content":"            return task;","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"Marcusgwj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"Marcusgwj"},"content":"        String[] stringList \u003d new String[taskList.size()];","lastModifiedDate":"2022-09-05"},{"lineNumber":150,"author":{"gitId":"Marcusgwj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-05"},{"lineNumber":151,"author":{"gitId":"Marcusgwj"},"content":"            stringList[i] \u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2022-09-05"},{"lineNumber":152,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"Marcusgwj"},"content":"        return String.join(\"\", stringList);","lastModifiedDate":"2022-08-17"},{"lineNumber":154,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":155,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"Marcusgwj"},"content":"     * Returns a List of Tasks that matches the given keywords.","lastModifiedDate":"2022-09-07"},{"lineNumber":158,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"Marcusgwj"},"content":"     * @param keywords The keywords to match with.","lastModifiedDate":"2022-08-29"},{"lineNumber":160,"author":{"gitId":"Marcusgwj"},"content":"     * @return The List of matching Tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"Marcusgwj"},"content":"    public List\u003cTask\u003e findKeywords(String ... keywords) {","lastModifiedDate":"2022-09-07"},{"lineNumber":163,"author":{"gitId":"Marcusgwj"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"Marcusgwj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-09-05"},{"lineNumber":165,"author":{"gitId":"Marcusgwj"},"content":"            boolean matchAllKeywords \u003d true;","lastModifiedDate":"2022-08-29"},{"lineNumber":166,"author":{"gitId":"Marcusgwj"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2022-08-29"},{"lineNumber":167,"author":{"gitId":"Marcusgwj"},"content":"                if (!task.hasKeyword(keyword)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":168,"author":{"gitId":"Marcusgwj"},"content":"                    matchAllKeywords \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":169,"author":{"gitId":"Marcusgwj"},"content":"                    break;","lastModifiedDate":"2022-08-29"},{"lineNumber":170,"author":{"gitId":"Marcusgwj"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":171,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":172,"author":{"gitId":"Marcusgwj"},"content":"            if (matchAllKeywords) {","lastModifiedDate":"2022-08-29"},{"lineNumber":173,"author":{"gitId":"Marcusgwj"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"Marcusgwj"},"content":"        return matchedTasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":179,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":180,"author":{"gitId":"Marcusgwj"},"content":"     * Returns a List of Tasks that matches the given tags.","lastModifiedDate":"2022-09-07"},{"lineNumber":181,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":182,"author":{"gitId":"Marcusgwj"},"content":"     * @param tags The tags to match with.","lastModifiedDate":"2022-09-07"},{"lineNumber":183,"author":{"gitId":"Marcusgwj"},"content":"     * @return The List of matching Tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":184,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":185,"author":{"gitId":"Marcusgwj"},"content":"    public List\u003cTask\u003e findTags(String ... tags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":186,"author":{"gitId":"Marcusgwj"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-07"},{"lineNumber":187,"author":{"gitId":"Marcusgwj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-09-07"},{"lineNumber":188,"author":{"gitId":"Marcusgwj"},"content":"            boolean matchAllTags \u003d true;","lastModifiedDate":"2022-09-07"},{"lineNumber":189,"author":{"gitId":"Marcusgwj"},"content":"            for (String tag : tags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":190,"author":{"gitId":"Marcusgwj"},"content":"                if (!task.hasTag(tag)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":191,"author":{"gitId":"Marcusgwj"},"content":"                    matchAllTags \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":192,"author":{"gitId":"Marcusgwj"},"content":"                    break;","lastModifiedDate":"2022-09-07"},{"lineNumber":193,"author":{"gitId":"Marcusgwj"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":194,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":195,"author":{"gitId":"Marcusgwj"},"content":"            if (matchAllTags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":196,"author":{"gitId":"Marcusgwj"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2022-09-07"},{"lineNumber":197,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":198,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":199,"author":{"gitId":"Marcusgwj"},"content":"        return matchedTasks;","lastModifiedDate":"2022-09-07"},{"lineNumber":200,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":201,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":202,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":203,"author":{"gitId":"Marcusgwj"},"content":"     * Adds given tags to the Task at the given index.","lastModifiedDate":"2022-09-07"},{"lineNumber":204,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":205,"author":{"gitId":"Marcusgwj"},"content":"     * @param index The given index.","lastModifiedDate":"2022-09-07"},{"lineNumber":206,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Task with the tag added.","lastModifiedDate":"2022-09-07"},{"lineNumber":207,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2022-09-07"},{"lineNumber":208,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":209,"author":{"gitId":"Marcusgwj"},"content":"    public Task tagTask(int index, String ...newTags) throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":210,"author":{"gitId":"Marcusgwj"},"content":"        if (index \u003c 0 || index \u003e\u003d getSize()) {","lastModifiedDate":"2022-09-07"},{"lineNumber":211,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":212,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":213,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-07"},{"lineNumber":214,"author":{"gitId":"Marcusgwj"},"content":"            for (String tag : newTags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":215,"author":{"gitId":"Marcusgwj"},"content":"                task.addTag(tag);","lastModifiedDate":"2022-09-07"},{"lineNumber":216,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":217,"author":{"gitId":"Marcusgwj"},"content":"            return task;","lastModifiedDate":"2022-09-07"},{"lineNumber":218,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":219,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":220,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":221,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":222,"author":{"gitId":"Marcusgwj"},"content":"     * Removes given tags from the Task at the given index.","lastModifiedDate":"2022-09-07"},{"lineNumber":223,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":224,"author":{"gitId":"Marcusgwj"},"content":"     * @param index The given index.","lastModifiedDate":"2022-09-07"},{"lineNumber":225,"author":{"gitId":"Marcusgwj"},"content":"     * @return The Task with the tag removed.","lastModifiedDate":"2022-09-07"},{"lineNumber":226,"author":{"gitId":"Marcusgwj"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2022-09-07"},{"lineNumber":227,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":228,"author":{"gitId":"Marcusgwj"},"content":"    public Task untagTask(int index, String ...currentTags) throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":229,"author":{"gitId":"Marcusgwj"},"content":"        if (index \u003c 0 || index \u003e\u003d getSize()) {","lastModifiedDate":"2022-09-07"},{"lineNumber":230,"author":{"gitId":"Marcusgwj"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":231,"author":{"gitId":"Marcusgwj"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":232,"author":{"gitId":"Marcusgwj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-07"},{"lineNumber":233,"author":{"gitId":"Marcusgwj"},"content":"            for (String tag : currentTags) {","lastModifiedDate":"2022-09-07"},{"lineNumber":234,"author":{"gitId":"Marcusgwj"},"content":"                task.removeTag(tag);","lastModifiedDate":"2022-09-07"},{"lineNumber":235,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":236,"author":{"gitId":"Marcusgwj"},"content":"            return task;","lastModifiedDate":"2022-09-07"},{"lineNumber":237,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":238,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":239,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":239}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":" * TaskType represents the different types of Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"    TODO(\"T\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    DEADLINE(\"D\");","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    private final String task;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"     * Creates a TaskType with the corresponding Task name.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"     * @param task The corresponding Task name.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    TaskType(String task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the corresponding TaskType based on the input String.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"     * @return The corresponding TaskType.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    public static TaskType parse(String string) {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"        for (TaskType taskType : TaskType.values()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"            if (taskType.task.equals(string)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"                return taskType;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        throw new RuntimeException(String.format(\"Invalid task type %s.\", string));","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Marcusgwj":36}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":" * ToDo is a task without a specified date/time.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation of the ToDo.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"     * @return String representation of the ToDo.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d super.getTagsString();","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"        return (\"[T]\" + super.toString() + tagsString);","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"     * Returns the String representation to be stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"     * @return String storage representation of the ToDo.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"        String doneDescriptionString \u003d super.toStorageString();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"        String tagsString \u003d super.getTagsStorageString();","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"        return \"T\" + Task.STORAGE_DELIMITER","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"                + doneDescriptionString","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"                + tagsString;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Marcusgwj":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    public void toString_newDeadline_returnsString() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"        Deadline deadline \u003d new Deadline(\"Test\", \"2022-09-23\");","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(\"[D][ ] Test (by: Sep 23 2022)\", deadline.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    public void toString_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"            Deadline deadline \u003d new Deadline(\"Test\", \"23-09-2022\");","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"            assertEquals(\"[D][ ] Test (by: Sep 23 2022)\", deadline.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"            assertEquals(\"Date should be in yyyy-mm-dd format.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    public void toStorageString_newDeadline_returnsStorageString() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"        Deadline deadline \u003d new Deadline(\"Test\", \"2022-09-23\");","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(\"D | 0 | Test | 2022-09-23\", deadline.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Marcusgwj":34}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"public class EventTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"    public void toString_newEvent_returnsString() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"        Event event \u003d new Event(\"Test\", \"2022-09-21\");","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(\"[E][ ] Test (at: Sep 21 2022)\", event.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"    public void toString_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"            Event event \u003d new Event(\"Test\", \"21-09-2022\");","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"            assertEquals(\"[E][ ] Test (at: Sep 21 2022)\", event.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"            assertEquals(\"Date should be in yyyy-mm-dd format.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"    public void toStorageString_newEvent_returnsStorageString() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"        Event event \u003d new Event(\"Test\", \"2022-09-21\");","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(\"E | 0 | Test | 2022-09-21\", event.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Marcusgwj":34}},{"path":"src/test/java/duke/task/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"public class TasklistTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    void getSize_emptyTaskList_returnZero() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"        String path \u003d \"./src/test/data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"            file.delete();","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"        TaskList taskList \u003d new TaskList(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"    void getSize_nonEmptyTaskList_returnsSize() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"        String path \u003d \"./src/test/data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Marcusgwj"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Marcusgwj"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Marcusgwj"},"content":"            file.delete();","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Marcusgwj"},"content":"        TaskList taskList \u003d new TaskList(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Marcusgwj"},"content":"        taskList.addTask(new ToDo(\"Test 1\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Marcusgwj"},"content":"        taskList.addTask(new ToDo(\"Test 2\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Marcusgwj"},"content":"    void markDone_indexOutOfBound_throwsException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Marcusgwj"},"content":"            String path \u003d \"./src/test/data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Marcusgwj"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Marcusgwj"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"Marcusgwj"},"content":"                file.delete();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Marcusgwj"},"content":"            TaskList taskList \u003d new TaskList(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Marcusgwj"},"content":"            taskList.markDone(-1);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Marcusgwj"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Marcusgwj"},"content":"            assertEquals(\"Invalid task number.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Marcusgwj"},"content":"    void unmarkDone_indexOutOfBound_throwsException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Marcusgwj"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Marcusgwj"},"content":"            String path \u003d \"./src/test/data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Marcusgwj"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Marcusgwj"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Marcusgwj"},"content":"                file.delete();","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Marcusgwj"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Marcusgwj"},"content":"            TaskList taskList \u003d new TaskList(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Marcusgwj"},"content":"            taskList.unmarkDone(-1);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Marcusgwj"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"Marcusgwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Marcusgwj"},"content":"            assertEquals(\"Invalid task number.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Marcusgwj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Marcusgwj":69}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"    public void toString_newToDo_returnsString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"        ToDo todo \u003d new ToDo(\"Test\");","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(\"[T][ ] Test\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"    public void toStorageString_newToDo_returnsStorageString() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"        ToDo todo \u003d new ToDo(\"Test\");","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"        assertEquals(\"T | 0 | Test\", todo.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Marcusgwj":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Marcusgwj"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"Marcusgwj"},"content":"deadline return book /by 2022-09-21","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Marcusgwj"},"content":"event project meeting /at 2022-09-23","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Marcusgwj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Marcusgwj"},"content":"find book","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Marcusgwj"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Marcusgwj"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Marcusgwj"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Marcusgwj"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Marcusgwj"},"content":"unmark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Marcusgwj"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Marcusgwj"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Marcusgwj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Marcusgwj"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Marcusgwj"},"content":"delete 1","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Marcusgwj"},"content":"delete -1","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Marcusgwj"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Marcusgwj"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Marcusgwj"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Marcusgwj"},"content":"deadline return book","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Marcusgwj"},"content":"event project meeting","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Marcusgwj"},"content":"mark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Marcusgwj"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Marcusgwj"},"content":"blah","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"Marcusgwj"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Marcusgwj":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Marcusgwj"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Marcusgwj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Marcusgwj":2,"-":19}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"minjiunn":16}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"deadline,hw /by 2022-09-01","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"todo,walk dog","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"todo,buy bread","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"event,meeting /at 2022-09-10","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"minjiunn":4}},{"path":"src/Test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    @Test","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    public void parse_incompleteInput_exceptionThrown() {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"            assertEquals(new AddCommand(\"deadline\", \" \"), Parser.parse(\"deadline\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"            fail();","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"            assertEquals(\"oops, your command seems to be incomplete :(\", e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    @Test","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"    public void parse_deleteAsInput_newDeleteCommandCreated() {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"            assertEquals(true, Parser.parse(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"            fail();","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"minjiunn":30}},{"path":"src/Test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"    @Test","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"    public void addTask_incompleteInput_exceptionThrown() {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"            new TaskList().addTask(\"\", \"/\");","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"            fail();","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"            assertEquals(\"oops, the description of your task seems to be incomplete!\", e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"minjiunn":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"/** A bot to help you to keep track of your tasks in a to-do list. */","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"    private String filepath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/DaUser.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/DaDuke.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"minjiunn"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"minjiunn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"minjiunn"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"minjiunn"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"minjiunn"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"minjiunn"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"minjiunn"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"minjiunn"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"minjiunn"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"minjiunn"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"minjiunn"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"minjiunn"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"        stage.show();","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"minjiunn"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"minjiunn"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"minjiunn"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"minjiunn"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"minjiunn"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"minjiunn"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"minjiunn"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"minjiunn"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"minjiunn"},"content":"        sendButton.setOnMouseClicked((event) -\u003e { handleUserInput(); });","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"minjiunn"},"content":"        userInput.setOnAction((event) -\u003e { handleUserInput();});","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"minjiunn"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"minjiunn"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"minjiunn"},"content":"        // more code to be added here later","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"minjiunn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"minjiunn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"minjiunn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"minjiunn"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"minjiunn"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"minjiunn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"minjiunn"},"content":"                DukeDialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"minjiunn"},"content":"                DukeDialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"minjiunn"},"content":"        );","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"minjiunn"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"minjiunn"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"minjiunn"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"minjiunn"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"minjiunn"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"minjiunn"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"minjiunn"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":144,"author":{"gitId":"minjiunn"},"content":"     * Starts up the bot.","lastModifiedDate":"2022-09-04"},{"lineNumber":145,"author":{"gitId":"minjiunn"},"content":"     * Allows user to interact with the bot and give commands, until the bot is given the command to deactivate.","lastModifiedDate":"2022-09-04"},{"lineNumber":146,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":147,"author":{"gitId":"minjiunn"},"content":"    public void run() {","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"minjiunn"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"minjiunn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"minjiunn"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"minjiunn"},"content":"            try {","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"minjiunn"},"content":"                String nextCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"minjiunn"},"content":"                Command c \u003d Parser.parse(nextCommand);","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"minjiunn"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"minjiunn"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"minjiunn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"minjiunn"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":158,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"minjiunn"},"content":"        ui.showExit();","lastModifiedDate":"2022-08-31"},{"lineNumber":161,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"minjiunn"},"content":"        //new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"minjiunn":164}},{"path":"src/main/java/duke/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    private Label text;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    public DukeDialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"        text \u003d l;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"    private void flip() {","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"    public static DukeDialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"        return new DukeDialogBox(l, iv);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"    public static DukeDialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"        var db \u003d new DukeDialogBox(l, iv);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"        db.flip();","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"        return db;","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"minjiunn":47}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"/** A class to represent the exceptions thrown when using the bot. */","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"        super(message);","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"        return \"oops, Duke Exception detected\";","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"minjiunn":13}},{"path":"src/main/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"public class DukeTest extends Application {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"    private String filepath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/DaUser.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/DaDuke.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"        // ...","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"minjiunn"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"minjiunn"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"minjiunn"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"minjiunn"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"minjiunn"},"content":"        stage.show();","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"minjiunn"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"minjiunn"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"minjiunn"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"minjiunn"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"minjiunn"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"minjiunn"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"minjiunn"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"minjiunn"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"minjiunn"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"minjiunn"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"minjiunn"},"content":"        sendButton.setOnMouseClicked((event) -\u003e { handleUserInput(); });","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"minjiunn"},"content":"        userInput.setOnAction((event) -\u003e { handleUserInput();});","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"minjiunn"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"minjiunn"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"minjiunn"},"content":"        // more code to be added here later","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"minjiunn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"minjiunn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"minjiunn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"minjiunn"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"minjiunn"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"minjiunn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"minjiunn"},"content":"                DukeDialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"minjiunn"},"content":"                DukeDialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"minjiunn"},"content":"        );","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"minjiunn"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"minjiunn"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"minjiunn"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"minjiunn"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"minjiunn"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"minjiunn"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"minjiunn"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"minjiunn":129}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"/** A launcher class to workaround classpath issues. */","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"public class Launcher {","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"        Application.launch(DukeTest.class, args);","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"minjiunn":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.command.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import java.util.List;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"/** A class that deals with making sense of the user input, and translating it to a command for the bot to execute. */","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    private static final ArrayList\u003cString\u003e ADD_COMMANDS \u003d new ArrayList\u003c\u003e(List.of(\"todo\", \"deadline\", \"event\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    private static final ArrayList\u003cString\u003e DELETE_COMMANDS \u003d new ArrayList\u003c\u003e(List.of(\"delete\", \"remove\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    private static final ArrayList\u003cString\u003e EDIT_COMMANDS \u003d new ArrayList\u003c\u003e(List.of(\"mark\", \"unmark\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    private static final ArrayList\u003cString\u003e VIEW_COMMANDS \u003d new ArrayList\u003c\u003e(List.of(\"list\", \"find\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"    private static final ArrayList\u003cString\u003e EXIT_COMMANDS \u003d new ArrayList\u003c\u003e(List.of(\"bye\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    public Parser() {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"        //","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"     * Parses the user input into a command for the bot.","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     * @param strToParse The user input.","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"     * @return A Command that can be executed by the bot.","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"     * @throws DukeException If the user gives an invalid input that the bot cannot understand.","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    public static Command parse(String strToParse) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"        String[] splitTask \u003d strToParse.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"        String keyword \u003d splitTask[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"        if (!ADD_COMMANDS.contains(keyword) \u0026\u0026 !EDIT_COMMANDS.contains(keyword) \u0026\u0026 !VIEW_COMMANDS.contains(keyword)","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"                \u0026\u0026 !EXIT_COMMANDS.contains(keyword) \u0026\u0026 !DELETE_COMMANDS.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"            throw new DukeException(\"oops, I am unable to understand your command :(\");","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"            if (EXIT_COMMANDS.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"            } else if (VIEW_COMMANDS.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"                return new ViewCommand(keyword, strToParse);","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"                    String input \u003d splitTask[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"                    if (ADD_COMMANDS.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"                        return new AddCommand(keyword, input);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"                    } else if (EDIT_COMMANDS.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"                        return new EditCommand(keyword, input);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"                    } else if (DELETE_COMMANDS.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"                        return new DeleteCommand(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"minjiunn"},"content":"                    throw new DukeException(\"oops, your command seems to be incomplete :(\");","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"minjiunn"},"content":"        return null;","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":56}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import java.io.File;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"/** A class representing the storage where the tasks of the user are stored in a file. */","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"public class Storage {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    private static String filepath;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    private static final String DUKE_FILEPATH \u003d \"data\";","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"    private static final String DUKEFILE_STR \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    private static File dukeFile;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     * Loads and retrieves the tasks currently saved in the file, upon starting the bot.","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"        ArrayList\u003cString\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"        File directory \u003d new File(DUKE_FILEPATH);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"        dukeFile \u003d new File(this.filepath);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"            dukeFile.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"            Scanner scFile \u003d new Scanner(dukeFile);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"            while (scFile.hasNextLine()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"                String nextTask \u003d scFile.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"                loadedTasks.add(nextTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"        return loadedTasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"     * Writes a new task to the file that saves all the tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"     * @param strToWrite The String representing the task, to be written into the file.","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"minjiunn"},"content":"     * @throws DukeException If the bot is unable to write to the file.","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"minjiunn"},"content":"    public void writeToFile(String strToWrite) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"            FileWriter dukeWriter \u003d new FileWriter(DUKEFILE_STR, true);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"minjiunn"},"content":"            dukeWriter.append(strToWrite + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"minjiunn"},"content":"            dukeWriter.close();","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"minjiunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"minjiunn"},"content":"            throw new DukeException(\"Ohno, I can\u0027t seem to save your task to the file\");","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"minjiunn"},"content":"     * Deletes an existing task from the file.","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"minjiunn"},"content":"     * @param taskToRemove The String representing the task to be deleted.","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"     * @throws FileNotFoundException If the file containing the tasks cannot be found.","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"minjiunn"},"content":"     * @throws DukeException If the bot is unable to delete the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"minjiunn"},"content":"    public void removeFromFile(String taskToRemove) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"        Integer taskNo \u003d Integer.valueOf(taskToRemove);","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"minjiunn"},"content":"        Scanner sc \u003d new Scanner(dukeFile);","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"        String toReplace \u003d \"\";","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"minjiunn"},"content":"        int taskCounter \u003d 0;","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"minjiunn"},"content":"            String nextTask \u003d sc.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"minjiunn"},"content":"            taskCounter++;","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"minjiunn"},"content":"            if (taskCounter !\u003d taskNo) {","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"minjiunn"},"content":"                toReplace \u003d toReplace + nextTask + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"minjiunn"},"content":"            FileWriter dukeWriter \u003d new FileWriter(DUKEFILE_STR);","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"minjiunn"},"content":"            dukeWriter.write(toReplace);","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"minjiunn"},"content":"            dukeWriter.close();","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"minjiunn"},"content":"            throw new DukeException(\"oops, I can\u0027t remove the task from the saved data :(\");","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":91}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.task.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import java.security.KeyPair;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"/** A class that manages the Tasks in the to-do list. */","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"public class TaskList {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    /** The list of tasks in the to-do list */","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"    private static ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"        this.taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    public TaskList(ArrayList\u003cString\u003e taskArray) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"        this.taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"        if (taskArray \u003d\u003d null) {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"            throw new DukeException(\"Sorry, I encountered an error while trying to load your Task List :(\");","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"            String[] splitTask \u003d taskArray.get(i).split(\",\", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"            addTask(splitTask[0], splitTask[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"     * Adds a tasks to the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"     * @param keyword The String representing the type of task to add.","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"     * @param input The rest of the input from the user, including the task description and deadline, if applicable.","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"     * @throws DukeException If the task is invalid and cannot be added to the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"    public void addTask(String keyword, String input) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"        if (keyword.equals(\"todo\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"            Task todoTask \u003d new Todo(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"            taskArr.add(todoTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"            int slashChar \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"            if (slashChar \u003d\u003d -1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"                throw new DukeException(\"oops, looks like you\u0027re missing the command to tell me the deadline\");","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"            String taskDesc \u003d input.substring(0, slashChar);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"            String deadlineInput \u003d input.substring(slashChar + 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"            if (taskDesc.isBlank() || deadlineInput.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"minjiunn"},"content":"                throw new DukeException(\"oops, the description of your task seems to be incomplete!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"minjiunn"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"minjiunn"},"content":"                    String taskDate \u003d input.substring(slashChar + 4);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"minjiunn"},"content":"                    LocalDate deadline \u003d LocalDate.parse(taskDate);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"                    if (keyword.equals(\"deadline\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"                        taskArr.add(new Deadline(taskDesc,","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"minjiunn"},"content":"                                deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))));","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"minjiunn"},"content":"                    } else if (keyword.equals(\"event\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"minjiunn"},"content":"                        taskArr.add(new Event(taskDesc, deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))));","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"minjiunn"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"minjiunn"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"minjiunn"},"content":"                    throw new DukeException(\"oops, your date seems to be of an invalid format\");","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"minjiunn"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"minjiunn"},"content":"     * Deletes a task from the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"minjiunn"},"content":"     * @param input The task number to delete.","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI to display relevant messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"    public String deleteTask(String input, Ui ui) {","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"minjiunn"},"content":"        Integer taskNo \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"        Task taskToRemove \u003d this.taskArr.get(taskNo);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"minjiunn"},"content":"        this.taskArr.remove(getTask(taskNo));","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"minjiunn"},"content":"        return ui.showDeletingTask(taskToRemove.toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"minjiunn"},"content":"     * Marks a task in the to-do list as done or undone.","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"minjiunn"},"content":"     * @param keyword The command on whether to mark as done or undone.","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"minjiunn"},"content":"     * @param input The task number to mark.","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI to display relevant messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"minjiunn"},"content":"    public String markTask(String keyword, String input, Ui ui) {","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"        Integer taskNo \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"minjiunn"},"content":"        switch (keyword) {","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"minjiunn"},"content":"                this.taskArr.get(taskNo).markAsDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"minjiunn"},"content":"                return ui.showMarkedTask(this.taskArr.get(taskNo).toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"minjiunn"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"minjiunn"},"content":"                this.taskArr.get(taskNo).markAsUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"minjiunn"},"content":"                return ui.showUnmarkedTask(this.taskArr.get(taskNo).toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"minjiunn"},"content":"        return \"oops, I am unable to mark your task\";","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"minjiunn"},"content":"     * Find tasks that contain a specific keyword given by the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"minjiunn"},"content":"     * @param wordToSearch The keyword given by the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"minjiunn"},"content":"     * @param ui The Ui object to display the found tasks to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"minjiunn"},"content":"    public String findTasks(String wordToSearch, Ui ui) {","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"minjiunn"},"content":"        ArrayList\u003cInteger\u003e taskNo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"minjiunn"},"content":"        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"minjiunn"},"content":"        for (Integer i \u003d 0; i \u003c taskArr.size(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"minjiunn"},"content":"            if (taskArr.get(i).toString().contains(wordToSearch)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":112,"author":{"gitId":"minjiunn"},"content":"                taskNo.add(i);","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"minjiunn"},"content":"                relevantTasks.add(taskArr.get(i));","lastModifiedDate":"2022-09-04"},{"lineNumber":114,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"minjiunn"},"content":"        return ui.showFoundTasks(taskNo, relevantTasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"minjiunn"},"content":"     * Gets the most recent task added to the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"minjiunn"},"content":"     * @return The retrieved Task.","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"minjiunn"},"content":"    public Task getRecentTask() {","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"minjiunn"},"content":"        return this.taskArr.get(taskArr.size() - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"minjiunn"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"minjiunn"},"content":"        return this.taskArr.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":131,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"minjiunn"},"content":"    public Task getTask(int taskNo) {","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"minjiunn"},"content":"        return this.taskArr.get(taskNo);","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":135}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"/** A class to represent the face of the bot, dealing with user inputs and displaying messages to the user */","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"public class Ui {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    private Scanner s;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    private static final String INDENT \u003d \"        \";","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    private static final String DOUBLE_INDENT \u003d \"                \";","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    private static final String DIVIDER \u003d \" ________________________________________________________________\";","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"    private static final String NAME \u003d \"\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"            + DOUBLE_INDENT + \" _____  _____  __     __   __ \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"            + DOUBLE_INDENT + \"|__   ||  ___||  |   |  |/  / \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"            + DOUBLE_INDENT + \"  /  / |  |__ |  |   |  |  /  \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"            + DOUBLE_INDENT + \" /  /_ |  ___||  |__ |  |\\\\  \\\\ \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"            + DOUBLE_INDENT + \"|_____||_____||_____||__| \\\\__\\\\  \";","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    public Ui() {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"        s \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"        return \"Hello there! My name is Zelk, it\u0027s nice to meet you :) what can I do for you today?\";","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"     * Gets the next command from the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"     * @return The input from the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"        return this.s.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"     * Tells the user that the task that was given has been added to the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object that is keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"    public String showAddedTask(TaskList tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"        return \"new task added: \\n\" + tasks.getRecentTask() + \"\\nyou now have \"","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"minjiunn"},"content":"                + tasks.getNoOfTasks() + \" tasks in your list\";","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"minjiunn"},"content":"     * Tells the user that the task they have completed has been marked as done in the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"     * @param task The TaskList object keeping track of all the current tasks in the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"minjiunn"},"content":"    public String showMarkedTask(String task) {","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"minjiunn"},"content":"        return \"alright! I\u0027ve marked this task as done :)\\n\" + task;","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"minjiunn"},"content":"     * Tells the user that the task they have indicated has been marked as undone in the to-do list","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"minjiunn"},"content":"     * @param task The TaskList object keeping track of all the current tasks in the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"minjiunn"},"content":"    public String showUnmarkedTask(String task) {","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"        return \"okay, I\u0027ll mark this task as undone:\\n\" + task;","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"     * Displays to the user all the current tasks in the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"    public String listTasks(TaskList tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"minjiunn"},"content":"        String s \u003d \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"minjiunn"},"content":"        for (int i \u003d 0; i \u003c tasks.getNoOfTasks(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"minjiunn"},"content":"            s \u003d s + (i + 1) + \". \" + tasks.getTask(i) + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"minjiunn"},"content":"        return \"these are the tasks in your list so far!\\n\" + \"you currently have \" + tasks.getNoOfTasks()","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"minjiunn"},"content":"                + \" tasks in your list:\\n\" + s;","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"minjiunn"},"content":"     * Displays to the user that the task they want to remove is being deleted from the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"minjiunn"},"content":"     * @param task The TaskList object keeping track of all the current tasks in the to-do list.","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"minjiunn"},"content":"    public String showDeletingTask(String task) {","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"        return \"got it, removing this task from your list...\\n\" + task;","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"minjiunn"},"content":"     * Displays the tasks in the to-do list that matches the keyword given by the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"minjiunn"},"content":"     * @param taskNo The list of task numbers whose tasks matches the keyword.","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"minjiunn"},"content":"     * @param relevantTasks The list of matching tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"minjiunn"},"content":"    public String showFoundTasks(ArrayList\u003cInteger\u003e taskNo, ArrayList\u003cTask\u003e relevantTasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"minjiunn"},"content":"        String s \u003d \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"minjiunn"},"content":"        for (int i \u003d 0; i \u003c taskNo.size(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"minjiunn"},"content":"            s \u003d s + (taskNo.get(i) + 1) + \". \" + relevantTasks.get(i).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"minjiunn"},"content":"        return \"alright, I\u0027ve found \" + taskNo.size() + \" matching tasks in your list\\n + s\";","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":108,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"minjiunn"},"content":"     * Tells the user that an error has occurred.","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"minjiunn"},"content":"     * @param message The error message to display to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":112,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"minjiunn"},"content":"    public String showError(String message) {","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"minjiunn"},"content":"        return message;","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"minjiunn"},"content":"     * Displays the exit message to the user before deactivating.","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"minjiunn"},"content":"    public String showExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"minjiunn"},"content":"        s.close();","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"minjiunn"},"content":"        return \"bye! hope to see you again soon! thank you for using Zelk :D\";","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":124}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"/** A class that represents a command for the bot to add a task to the to-do list. */","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    private String keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    private String input;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    public AddCommand(String keyword, String commandInput) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"        this.input \u003d commandInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"     * Executes the user command by adding a task to the to-do list, after receiving the appropriate input from the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"     * Writes the task to the file, to save the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object that is keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI object that displays messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"     * @param storage The storage used to save the task to file.","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"     * @throws DukeException If the input from the user is invalid.","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"            if (this.input.isBlank()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"                throw new DukeException(\"oops, the description of your task seems to be incomplete!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"            tasks.addTask(this.keyword, this.input);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"            storage.writeToFile(this.keyword + \",\" + this.input);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"            return ui.showAddedTask(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":46}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"/** A class to represent the command given to the bot, based on the user input. */","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":14}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"/** A class that represents a command to delete a task from the to-do list **/","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    private String input;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"     * Executes the deleting of a task from the to-do list, after receiving the appropriate input from the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"     * Removes the task from the file.","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object that is keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI object that displays messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"     * @param storage The storage used to save the task to file.","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"            storage.removeFromFile(this.input);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"            return tasks.deleteTask(this.input, ui);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"        return \"oops, I am unable to execute the command\";","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":44}},{"path":"src/main/java/duke/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"/** A class that represents a command that marks a task in the to-do list as done or undone. */","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"    private String keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    private String input;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    public EditCommand(String keyword, String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"     * Executes the editing of a task to mark the task as done or undone, after receiving the appropriate input from","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"     * the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object that is keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI object that displays messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     * @param storage The storage used to save the task to file.","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"        return tasks.markTask(this.keyword, this.input, ui);","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":35}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"/** A class that represents a command to deactivate the bot. */","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"     * Does nothing, as there is no action for the bot to execute when deactivating.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object that is keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI object that displays messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"     * @param storage The storage used to save the task to file.","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"        return ui.showExit();","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"        return true;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":26}},{"path":"src/main/java/duke/command/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"/** A class that represents a command to view the current tasks in the to-do list */","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"    private String keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    private String userInput;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"     public ViewCommand(String keyword, String userInput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"         this.keyword \u003d keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"         this.userInput \u003d userInput;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"     }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"     * Executes the listing of all current tasks in the to-do list, after receiving the appropriate input from the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"     * @param tasks The TaskList object that is keeping track of all the current tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"     * @param ui The UI object that displays messages to the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"     * @param storage The storage used to save the task to file.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"         if (this.keyword.equals(\"list\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"             return ui.listTasks(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"         } else if (this.keyword.equals(\"find\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"             String wordToSearch \u003d this.userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"minjiunn"},"content":"             return tasks.findTasks(wordToSearch, ui);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"minjiunn"},"content":"         }","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"         return \"oops, I am unable to execute your command\";","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"minjiunn":40}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"/** A class representing a type of task that has a deadline, in the form of a date. */","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"minjiunn":17}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"/** A class representing a type of task that is an event to attend, and includes a date when the event occurs. */","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"    protected String on;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"    public Event(String description, String on) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"        this.on \u003d on;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.on + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"minjiunn":17}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"/** A class that represents a task, that can be added and removed from the to-do list. */","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"minjiunn":30}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"/** A class representing a task to be done, with no particular deadline. */","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"minjiunn"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"minjiunn"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"minjiunn"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"minjiunn"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"minjiunn":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minjiunn"},"content":"deadline homework /by 2pm tmr","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"minjiunn"},"content":"event /        dkd","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"minjiunn":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"if ! javac -cp ~/Desktop/NUS/Coursework/CS2103T/Project\\ Duke/src/main/java -Xlint:none -d ../bin ~/Desktop/NUS/Coursework/CS2103T/Project\\ Duke/src/main/java/*.java","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"minjiunn":1}}]

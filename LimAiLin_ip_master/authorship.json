[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"javafx {","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimAiLin":23,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"    private void flip() {","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"        db.flip();","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"        return db;","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"LimAiLin":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":" * Main class of Duke.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    private final Ui UI;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     * Creates a Duke object which saves all tasks into the filePath.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"     * @param filePath The text file to save the tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"        UI \u003d new Ui();","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"        STORAGE \u003d new Storage(filePath);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"            tasks \u003d new TaskList(STORAGE.load());","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"            UI.showLoadingError();","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"    protected String run(String input) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"        if (!Objects.equals(input, \"bye\")) {","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"            return c.execute(tasks, UI, STORAGE);","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"        } else {","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"            return UI.exit();","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"        assert !Objects.equals(input, \"\");","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"        return run(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LimAiLin":44,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":" * Thrown when Duke encounters an issue.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"     * Creates a DukeException.","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"     * @param errorMessage The error message to be shown.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"LimAiLin":18}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"* A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"*/","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"public class Launcher {","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"LimAiLin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"        final Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"            stage.setTitle(\"Dino\");","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"            stage.show();","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"LimAiLin":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dino.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Dino!\\n What can I do for you?\", dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"LimAiLin":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.command.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":" * Makes sense of the user commands.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"public class Parser {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"    private enum Commands {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"        BYE,","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"        LIST,","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"        MARK,","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"        UNMARK,","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"        TODO,","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"        EVENT,","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"        DELETE,","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"        FIND","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"     * Parses the input by the user.","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"     * @param command The input String to be parsed.","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"     * @return The Command the user wishes to execute.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown if user inputs an unknown command.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"        String[] str \u003d command.split(\"\\\\s\", 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"        Commands myTask;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"            myTask \u003d Commands.valueOf(str[0].toUpperCase(Locale.ROOT));","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"            throw new DukeException(\"Oops! I don\u0027t know what that means.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"        assert myTask \u003d\u003d Commands.BYE || myTask \u003d\u003d Commands.LIST || myTask \u003d\u003d Commands.MARK","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"                || myTask \u003d\u003d Commands.UNMARK || myTask \u003d\u003d Commands.DEADLINE || myTask \u003d\u003d Commands.TODO","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"                || myTask \u003d\u003d Commands.EVENT || myTask \u003d\u003d Commands.DELETE || myTask \u003d\u003d Commands.FIND;","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"        switch (myTask) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"        case BYE:","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"        case LIST:","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        case MARK:","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"            return new MarkCommand(str, true);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"            return new MarkCommand(str, false);","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"            return new AddCommand(str, 0);","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"        case TODO:","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"            return new AddCommand(str, 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"        case EVENT:","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"            return new AddCommand(str, 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"        case DELETE:","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"            return new DeleteCommand(str);","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"        case FIND:","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"LimAiLin"},"content":"            return new FindCommand(str);","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"LimAiLin"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"LimAiLin"},"content":"            Ui.invalidTask();","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"LimAiLin"},"content":"        return new ExitCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":68}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"import java.io.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":" * Loads tasks and saves tasks in the specified file.","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"public class Storage {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    private enum Commands {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"        TODO,","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"        EVENT","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    private final File FILE;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"    private final ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"     * Creates a storage object to load and save all tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"     * @param filePath The text file to load the tasks from and save the tasks to.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"        this.FILE \u003d new File(filePath);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"    protected ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"            if (this.FILE.createNewFile()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"                System.out.println(\"Dino created a new file: \" + FILE.getName() + \"\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"            } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"                loadFile();","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"                System.out.println(\"Dino found the file in your directory and loaded contents.\\n\");","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"            System.out.println(\"Dino failed at creating file./n\");","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"        return ls;","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"    public void loadFile() throws IOException {","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(FILE));","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"            String current \u003d br.readLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"            while (current !\u003d null) {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"                String[] str \u003d current.split(\"\\\\|\", 3);","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"                Commands myTask \u003d Commands.valueOf(str[0].toUpperCase(Locale.ROOT));","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"LimAiLin"},"content":"                assert myTask \u003d\u003d Commands.DEADLINE || myTask \u003d\u003d Commands.EVENT || myTask \u003d\u003d Commands.TODO;","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"LimAiLin"},"content":"                switch (myTask) {","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"LimAiLin"},"content":"                    case DEADLINE:","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"LimAiLin"},"content":"                        loadDl(str);","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"LimAiLin"},"content":"                        break;","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"LimAiLin"},"content":"                    case TODO:","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"LimAiLin"},"content":"                        loadTodo(str);","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"LimAiLin"},"content":"                        break;","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"LimAiLin"},"content":"                    case EVENT:","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"LimAiLin"},"content":"                        loadEvent(str);","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"LimAiLin"},"content":"                        break;","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"LimAiLin"},"content":"                    default:","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"LimAiLin"},"content":"                        Ui.invalidTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"LimAiLin"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"LimAiLin"},"content":"                current \u003d br.readLine();","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"LimAiLin"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"LimAiLin"},"content":"        } catch (IOException | IllegalArgumentException | DukeException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"LimAiLin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"LimAiLin"},"content":"        br.close();","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":83,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"LimAiLin"},"content":"    private void loadDl(String[] str) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"LimAiLin"},"content":"        String[] dl \u003d str[2].split(\"\\\\|\", 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"LimAiLin"},"content":"        Task deadline \u003d new Deadline(dl[0], dl[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"LimAiLin"},"content":"        ls.add(deadline);","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"LimAiLin"},"content":"        if (Objects.equals(str[1], \"1\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"LimAiLin"},"content":"            deadline.markAsDone();","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"LimAiLin"},"content":"    private void loadTodo(String[] str) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"LimAiLin"},"content":"        Task todo \u003d new ToDo(str[2]);","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"LimAiLin"},"content":"        ls.add(todo);","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"LimAiLin"},"content":"        if (Objects.equals(str[1], \"1\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"LimAiLin"},"content":"            todo.markAsDone();","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":100,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"LimAiLin"},"content":"    private void loadEvent(String[] str) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"LimAiLin"},"content":"        String[] evnt \u003d str[2].split(\"\\\\|\", 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"LimAiLin"},"content":"        Task event \u003d new Event(evnt[0], evnt[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"LimAiLin"},"content":"        ls.add(event);","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"LimAiLin"},"content":"        if (Objects.equals(str[1], \"1\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"LimAiLin"},"content":"            event.markAsDone();","lastModifiedDate":"2022-08-29"},{"lineNumber":107,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"LimAiLin"},"content":"    public void writeFile(TaskList tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"LimAiLin"},"content":"            FileWriter myWriter \u003d new FileWriter(this.FILE_PATH);","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"LimAiLin"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"LimAiLin"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"LimAiLin"},"content":"                Task myTask \u003d tasks.get(i);","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"LimAiLin"},"content":"                str.append(format(myTask));","lastModifiedDate":"2022-08-29"},{"lineNumber":117,"author":{"gitId":"LimAiLin"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":118,"author":{"gitId":"LimAiLin"},"content":"            myWriter.write(str.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":119,"author":{"gitId":"LimAiLin"},"content":"            myWriter.close();","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"LimAiLin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":121,"author":{"gitId":"LimAiLin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":125,"author":{"gitId":"LimAiLin"},"content":"    private String format(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"LimAiLin"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"LimAiLin"},"content":"            return \"TODO|\" + task.getStatus() + \"|\" + task.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"LimAiLin"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"LimAiLin"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-08-29"},{"lineNumber":130,"author":{"gitId":"LimAiLin"},"content":"            return \"EVENT|\" + task.getStatus() + \"|\" + task.getDescription() + \"|\" + event.getAt() + \"\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"LimAiLin"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"LimAiLin"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-29"},{"lineNumber":133,"author":{"gitId":"LimAiLin"},"content":"            return \"DEADLINE|\" + task.getStatus() + \"|\" + task.getDescription() + \"|\" + deadline.getBy() + \"\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":134,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"LimAiLin"},"content":"        return \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":137}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import java.util.Locale;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" * Keeps track of the current tasks of the user.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"public class TaskList {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    private final ArrayList\u003cTask\u003e MY_TASKS;","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"        this.MY_TASKS \u003d tasks;","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"     * Prints out all tasks in the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    public String list() {","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"        builder.append(\"RAWR! Here is your list:\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"        for (int i \u003d 0; i \u003c MY_TASKS.size(); i++) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"            builder.append(i + 1).append(\". \")","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"                    .append(MY_TASKS.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"     * @param task The specified task to be added.","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"        MY_TASKS.add(task);","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"     * Gets the task at a specified index.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"     * @param i The index of the task to be returned.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"     * @return The task at index i.","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        assert i \u003e 0 \u0026\u0026 i \u003c MY_TASKS.size();","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"        return MY_TASKS.get(i);","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"     * @param i The index of the task to be removed.","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"    public void remove(int i) {","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"        assert i \u003e 0 \u0026\u0026 i \u003c MY_TASKS.size();","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"        MY_TASKS.remove(i);","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"LimAiLin"},"content":"     * Gets the size of the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"LimAiLin"},"content":"     * @return The number of items in the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"LimAiLin"},"content":"    public int size() {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"LimAiLin"},"content":"        return MY_TASKS.size();","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"LimAiLin"},"content":"    public ArrayList\u003cTask\u003e find(String match) {","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"LimAiLin"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"LimAiLin"},"content":"        String matching \u003d match.toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"LimAiLin"},"content":"        for (Task task : MY_TASKS) {","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"LimAiLin"},"content":"            String description \u003d task.getDescription().toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"LimAiLin"},"content":"            if (description.contains(matching)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"LimAiLin"},"content":"                matches.add(task);","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"LimAiLin"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"LimAiLin"},"content":"        return matches;","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":83}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"public class Ui {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"     * Returns a message when Duke faces a loading error.","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"        System.out.println(\"RAWR! Error loading previous tasks.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     * Returns a String when the user wishes to exit.","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    public String exit() {","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"        return \"Bye bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"     * Throws an exception when the user does not enter a valid description.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when description is empty.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"    public void emptyDescription() throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"        throw new DukeException(\"RAWR! Empty description.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"     * Throws an exception when the user does not enter a valid task.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when task is invalid.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"    public static void invalidTask() throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"        throw new DukeException(\"RAWR! Invalid task.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"     * Throws an exception when the user does not enter a date when needed.","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when there is a missing date.","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"    public void missingDate() throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"        throw new DukeException(\"RAWR! Missing date.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"     * Returns a message when the user has marked a task.","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"     * @param myTask The task that the user has marked.","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"LimAiLin"},"content":"    public String complete(Task myTask) {","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"LimAiLin"},"content":"        return \"Hooray! You have completed this task:\\n\" + myTask;","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"LimAiLin"},"content":"     * Returns a message when the user has unmarked a task.","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"LimAiLin"},"content":"     * @param myTask The task that the user has unmarked.","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"LimAiLin"},"content":"    public String incomplete(Task myTask) {","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"LimAiLin"},"content":"        return \"Oh no! You have more things to complete:\\n\" + myTask;","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"LimAiLin"},"content":"     * Prints a message when the user has added a new task to the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"LimAiLin"},"content":"     * @param taskList The tasklist the user has added to.","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"LimAiLin"},"content":"     * @param task The task the user has added.","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"LimAiLin"},"content":"    public String add(TaskList taskList, Task task) {","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"LimAiLin"},"content":"        return \"Dino added: \" + task","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"LimAiLin"},"content":"        + \"\\nYou have \" + taskList.size() + \" task\" + (taskList.size() \u003e 1 ? \"s!\" : \"!\");","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"LimAiLin"},"content":"    public String match(ArrayList\u003cTask\u003e matching) {","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"LimAiLin"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"LimAiLin"},"content":"        builder.append(\"Here are the matching tasks Dino found:\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"LimAiLin"},"content":"        for (int i \u003d 0; i \u003c matching.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"LimAiLin"},"content":"            builder.append(i + 1).append(\". \").append(matching.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"LimAiLin"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"LimAiLin"},"content":"     * Returns the message when the user has removed a new task from the list.","lastModifiedDate":"2022-09-14"},{"lineNumber":99,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"LimAiLin"},"content":"     * @param taskList The tasklist the user has removed from.","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"LimAiLin"},"content":"     * @param task The task the user has removed.","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"LimAiLin"},"content":"    public String remove(TaskList taskList, Task task) {","lastModifiedDate":"2022-09-14"},{"lineNumber":104,"author":{"gitId":"LimAiLin"},"content":"        return \"Dino is removing \" + task + \"...\"","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"LimAiLin"},"content":"            + \"\\nYou have \" + taskList.size() + \" task\" + (taskList.size() \u003e 1 ? \"s!\" : \"!\");","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":107}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":" * Executes the commands to add tasks to the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    private final String[] STR;","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"    private final Commands COMMAND;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    private enum Commands {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"        TODO,","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"        EVENT","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"     * Creates a new AddCommand object.","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"     * @param str The array String of the task containing the description and date and time if necessary.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"     * @param i The integer specifying the type of task.","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"    public AddCommand(String[] str, int i) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"        this.STR \u003d str;","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"        Commands[] commands \u003d new Commands[]{Commands.DEADLINE, Commands.TODO, Commands.EVENT};","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"        this.COMMAND \u003d commands[i];","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"     * Executes the add command the user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"     * @param tasks The list in which the task is to be added.","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"     * @param ui The ui to deal with user interactions.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"     * @param storage The storage to be updated with the newly added task.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when the task has no name or no date and time is given when necessary.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        Task myTask \u003d null;","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"        assert COMMAND \u003d\u003d Commands.DEADLINE || COMMAND \u003d\u003d Commands.EVENT || COMMAND \u003d\u003d Commands.TODO;","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"        switch(COMMAND) {","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"            myTask \u003d executeDl(ui);","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"            break;","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"        case TODO:","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"            myTask \u003d executeTd(ui);","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"            break;","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"        case EVENT:","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"            myTask \u003d executeEvnt(ui);","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"            break;","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"        default:","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"LimAiLin"},"content":"            Ui.invalidTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"LimAiLin"},"content":"            break;","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"LimAiLin"},"content":"        tasks.add(myTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"LimAiLin"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"LimAiLin"},"content":"        return ui.add(tasks, myTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"LimAiLin"},"content":"    private Deadline executeDl(Ui ui) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"LimAiLin"},"content":"        String[] dl \u003d new String[2];","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"LimAiLin"},"content":"            dl \u003d STR[1].split(\" /by \");","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"LimAiLin"},"content":"            return new Deadline(dl[0], dl[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"LimAiLin"},"content":"            ui.missingDate();","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"LimAiLin"},"content":"        return null;","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"LimAiLin"},"content":"    private ToDo executeTd(Ui ui) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"LimAiLin"},"content":"            return new ToDo(STR[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"LimAiLin"},"content":"        return null;","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"LimAiLin"},"content":"    private Event executeEvnt(Ui ui) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"LimAiLin"},"content":"        String[] evnt \u003d new String[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":97,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"LimAiLin"},"content":"            evnt \u003d STR[1].split(\" /at \");","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"LimAiLin"},"content":"            return new Event(evnt[0], evnt[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":105,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-09-06"},{"lineNumber":107,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"LimAiLin"},"content":"        return null;","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":110}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" * Parent class of all commands the user can execute.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":15}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * Executes the commands to delete tasks from the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    private final String[] STR;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     * Creates a new DeleteCommand object.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"     * @param str The array String containing the index of the task to be deleted from the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"    public DeleteCommand(String[] str) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"        this.STR \u003d str;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"     * Executes the delete command the user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"     * @param tasks The task list in which the task is to be deleted.","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"     * @param ui The ui to deal with user interactions.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"     * @param storage The storage to be updated with the newly deleted task.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when the index is not given.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"            index \u003d Integer.parseInt(STR[1]) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"        if (index \u003e tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"            Ui.invalidTask();","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        Task myTask \u003d tasks.get(index);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"        return ui.remove(tasks, myTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":" * Executes the command to close duke.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"     * Executes the exit command the user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"     * @param ui The ui to deal with user interactions.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     * @param storage The storage containing all tasks the user has previously input.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"        return ui.exit();","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" * Executes the command to find a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    private final String[] FIND_MATCH;","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    public FindCommand(String[] str) {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"        this.FIND_MATCH \u003d str;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"        String match \u003d null;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"            match \u003d FIND_MATCH[1];","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"        ArrayList\u003cTask\u003e matching \u003d tasks.find(match);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"        return ui.match(matching);","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"LimAiLin":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":" * Executes the command to list all tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"     * Executes the list command the user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"     *  @param tasks The list containing all the tasks to be printed.","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"     * @param ui The ui to deal with user interactions.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"     * @param storage The storage containing all tasks the user has previously input.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"        return tasks.list();","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" * Executes the command to mark all tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    private final String[] STR;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    private final boolean MARK;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     * Creates a new MarkCommand object.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"     * @param str The array String of the index of the task to be marked or unmarked from the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     * @param mark The boolean specifying whether the task is to be marked or unmarked.","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    public MarkCommand(String[] str, boolean mark) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"        this.STR \u003d str;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"        this.MARK \u003d mark;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"     * Executes the mark command the user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"     * @param tasks The list containing the task to be marked or unmarked.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"     * @param ui The ui to deal with user interactions.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"     * @param storage The storage to be updated with the newly marked or unmarked object.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when the index is not given.","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"        Task myTask;","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"            index \u003d Integer.parseInt(STR[1]) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"            ui.emptyDescription();","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"        if (index \u003e tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"            Ui.invalidTask();","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"        myTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"        if (MARK) {","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"            myTask.markAsDone();","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"            storage.writeFile(tasks);","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"            return ui.complete(myTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"        } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"            myTask.markAsUndone();","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"            storage.writeFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"            return ui.incomplete(myTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"LimAiLin":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" * Represents a Deadline task with a due date.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"    private final LocalDate DATE;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    private final String BY;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"     * Creates a new unmarked Deadline task object with a due date.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     * @param description The name of the Deadline task.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"     * @param by The date by which the task should be completed by.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when the wrong date format is entered.","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/M/yyyy\");","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"        this.BY \u003d by;","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"            this.DATE \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"            throw new DukeException(\"Please enter date in the format: dd/M/yyyy\");","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"     * Gets the due date of the Deadline task.","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"    public String getBy() {","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"        return BY;","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"                + \" (by: \" + DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"LimAiLin":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":" * Represents an Event task with an event date and time.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    private final LocalDateTime DATE;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    private final String AT;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"     * Creates a new unmarked Event task object with an event date and time.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"     * @param description The name of the Event task.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"     * @param at The date and time at which the event is happening.","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"     *          Thrown when the wrong date and time format is entered.","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/M/yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"        this.AT \u003d at;","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"            this.DATE \u003d LocalDateTime.parse(at, formatter);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"            throw new DukeException(\"Please enter date and time in the format: dd/M/yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"     * Gets the date and time of the Event task.","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"     * @return The date and time of the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"    public String getAt() {","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"        return AT;","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"                + \" (at: \" + DATE.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\")) + \")\";","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"LimAiLin":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":" * Represents a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"     * Creates a new Task object.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"     * @param description The name of the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"LimAiLin"},"content":"     * Marks the task object as complete.","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"LimAiLin"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"LimAiLin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"LimAiLin"},"content":"     * Marks the task object as incomplete.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"LimAiLin"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"LimAiLin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"LimAiLin"},"content":"     * Gets the status on whether the task is complete or incomplete.","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"LimAiLin"},"content":"     * @return A String where \"1\" means that the task is complete and \"0\" means that the task is incomplete.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"LimAiLin"},"content":"    public String getStatus() {","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"LimAiLin"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"LimAiLin"},"content":"     * Gets the name of the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"LimAiLin"},"content":"     * @return The String specifying the name of the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"LimAiLin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"LimAiLin"},"content":"        return DESCRIPTION;","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"LimAiLin"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"LimAiLin"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + DESCRIPTION;","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"LimAiLin":61}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":" * Represents an ToDo task.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":" * @author Lim Ai Lin","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"     * Creates a ToDo task object.","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"     * @param description The name of the ToDo task.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"LimAiLin":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"LimAiLin":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"                   promptText\u003d\"Input your command\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"LimAiLin":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"    public void toString_undone() throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"        Deadline deadline \u003d new Deadline(\"description\", \"31/8/2022\");","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"        deadline.markAsUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"        assertEquals(\"[D][ ] description (by: Aug 31 2022)\", deadline.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"    public void toString_done() throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"        Deadline deadline \u003d new Deadline(\"description\", \"31/8/2022\");","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"        deadline.markAsDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"        assertEquals(\"[D][X] description (by: Aug 31 2022)\", deadline.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"LimAiLin":23}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"package duke.task;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"LimAiLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"LimAiLin"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"LimAiLin"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"LimAiLin"},"content":"    public void toString_undone() {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"LimAiLin"},"content":"        ToDo todo \u003d new ToDo(\"description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"LimAiLin"},"content":"        todo.markAsUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"LimAiLin"},"content":"        assertEquals(\"[T][ ] description\", todo.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"LimAiLin"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"LimAiLin"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"LimAiLin"},"content":"    public void toString_done() {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"LimAiLin"},"content":"        ToDo todo \u003d new ToDo(\"description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"LimAiLin"},"content":"        todo.markAsDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"LimAiLin"},"content":"        assertEquals(\"[T][X] description\", todo.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"LimAiLin"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"LimAiLin"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"LimAiLin":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimAiLin"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"LimAiLin"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"LimAiLin"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"LimAiLin":3}}]

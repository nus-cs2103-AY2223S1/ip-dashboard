[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"t1mzzz":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"t1mzzz":21,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"D | 0 | project | 2022-08-27","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"E | 0 | meet | 2022-08-30","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":" * Duke is a Chatbot that is able to store and keep track of tasks inputted by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"public class Duke {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * @param filePath The relative path of the location to store the tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"     * Start the Duke program.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"            } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"/data/tasks.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":55}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":" * Exception for all errors related to Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"     * @param errorMessage The message to be printed after encountering an error","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"t1mzzz":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":" * Parser deals with making sense of the user command.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     * Parse the inputted user command.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     * @param fullCommand The full user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"     * @return Command corresponding to the input.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"     * @throws DukeException If an error is encountered with a command.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        String[] split \u003d fullCommand.split(\" \" , 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"        String command \u003d split[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"            switch (command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"            case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"                throw new DukeException(\"OOPS!!! This mark command is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"                throw new DukeException(\"OOPS!!! This unmark command is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"                throw new DukeException(\"OOPS!!! This delete command is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"            case \"find\":","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"                throw new DukeException(\"OOPS!!! This find command is invalid.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"                if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"                    throw new DukeException(\"OOPS!!! The description of this task cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"t1mzzz"},"content":"            String details \u003d split[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"t1mzzz"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"t1mzzz"},"content":"                switch (command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"t1mzzz"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"t1mzzz"},"content":"                    return new MarkCommand(Integer.parseInt(details) - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"t1mzzz"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"t1mzzz"},"content":"                    return new UnmarkCommand(Integer.parseInt(details) - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"t1mzzz"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"t1mzzz"},"content":"                    return new DeleteCommand(Integer.parseInt(details) - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"t1mzzz"},"content":"                case \"find\":","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"t1mzzz"},"content":"                    return new FindCommand(details);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"t1mzzz"},"content":"                default:","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"t1mzzz"},"content":"                    return new AddCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"t1mzzz"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"t1mzzz"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"t1mzzz"},"content":"                throw new DukeException(\"OOPS!!! This command is invalid\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"t1mzzz"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":" * Storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    private static final String DIR \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Storage","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * @param filePath The relative path of the location to store the tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"     * Loads the saved tasks from filePath.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"     * @return ArrayList containing the saved tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"     * @throws IOException If the target is not found.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"        File target \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"        if (target.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"            Scanner sc \u003d new Scanner(target);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"                String[] components \u003d line.split(Pattern.quote(\" | \"));","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"                String taskType \u003d components[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"                boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"                String desc \u003d components[2];","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"                switch (taskType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"                // TODO","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"                case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"                    Todo todo \u003d new Todo(desc);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"                    tasks.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"t1mzzz"},"content":"                // DEADLINE","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"t1mzzz"},"content":"                case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"t1mzzz"},"content":"                    String dl \u003d components[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"t1mzzz"},"content":"                    Deadline deadline \u003d new Deadline(desc, dl);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"t1mzzz"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"t1mzzz"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"t1mzzz"},"content":"                // EVENT","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"t1mzzz"},"content":"                case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"t1mzzz"},"content":"                    String time \u003d components[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"t1mzzz"},"content":"                    Event event \u003d new Event(desc, time);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"t1mzzz"},"content":"                    tasks.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"t1mzzz"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"t1mzzz"},"content":"                default:","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"t1mzzz"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"t1mzzz"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"t1mzzz"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"t1mzzz"},"content":"                    tasks.get(tasks.size() - 1).markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"t1mzzz"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"t1mzzz"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"t1mzzz"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"t1mzzz"},"content":"            File parent \u003d new File(DIR + \"/data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"t1mzzz"},"content":"            boolean isFolderCreated \u003d parent.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"t1mzzz"},"content":"            boolean isFileCreated \u003d target.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"t1mzzz"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"t1mzzz"},"content":"     * Stores the tasks after closing the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks the user has inputted.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"t1mzzz"},"content":"     * @throws IOException If the named file is not a file (e.g. directory).","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"t1mzzz"},"content":"    public void store(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"t1mzzz"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"t1mzzz"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"t1mzzz"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"t1mzzz"},"content":"            String status \u003d curr.getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"t1mzzz"},"content":"            if (curr instanceof Todo) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"t1mzzz"},"content":"                writer.write(\"T | \" + status + \" | \" + curr.getDescription() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"t1mzzz"},"content":"            } else if (curr instanceof Deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"t1mzzz"},"content":"                writer.write(\"D | \" + status + \" | \" + curr.getDescription() + \" | \"","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"t1mzzz"},"content":"                        + ((Deadline) curr).getBy().toString() + \"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"t1mzzz"},"content":"            } else if (curr instanceof Event) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"t1mzzz"},"content":"                writer.write(\"E | \" + status + \" | \" + curr.getDescription() + \" | \"","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"t1mzzz"},"content":"                        + ((Event) curr).getAt().toString() + \"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"t1mzzz"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"t1mzzz"},"content":"        writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":108}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":" * TaskList is the list that contains the tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    private int size;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for TaskList, if no past data exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"        this.size \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for TaskList, if past data exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The ArrayList that contains saved tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"        this.size \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"     * @return Size of TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"        return this.size;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"     * Adds a task to the current TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"        this.tasks.add(this.tasks.size(), task);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"        this.size++;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"     * Returns task of index i from TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"     * @param i The index of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"t1mzzz"},"content":"     * @return The task corresponding to the index.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"t1mzzz"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"t1mzzz"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"t1mzzz"},"content":"     * Deletes task of index i from TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"t1mzzz"},"content":"     * @param i The index of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"t1mzzz"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"t1mzzz"},"content":"    public Task delete(int i) {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"t1mzzz"},"content":"        this.size--;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"t1mzzz"},"content":"        return this.tasks.remove(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":73}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":" * Ui deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"    private static final String BORDER \u003d \"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"    private static final String INDENT \u003d \"     \";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     * Shows the borders/outlines for Duke\u0027s messages.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"     * Shows Duke\u0027s welcome message.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        String content;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"        String logo \u003d \"      ______  ______  _    _  ______\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"                + \"     |  ____||  ____|| |  | ||  __  |\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"                + \"     | |____ | |     | |__| || |  | |\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"                + \"     |  ____|| |     |  __  || |  | |\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"                + \"     | |____ | |____ | |  | || |__| |\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"                + \"     |______||______||_|  |_||______|\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"        content \u003d logo + \"\\n\" + INDENT + \"Hello! I\u0027m Echo\\n\" + INDENT + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        System.out.print(content);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"     * Reads user\u0027s full input.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"     * @return The command inputted by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"     * Shows the error when no past task data is found.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"        showError(\"Task data not found.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"     * Shows the message when a task is added.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"t1mzzz"},"content":"     * @param size The size of the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"t1mzzz"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"t1mzzz"},"content":"    public void showAddTask(int size, String desc) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"t1mzzz"},"content":"        String plural \u003d size \u003e 1 ? \"s\" : \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"t1mzzz"},"content":"        showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"t1mzzz"},"content":"        showMessage(\"  \" + desc);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"t1mzzz"},"content":"        showMessage(\"Now you have \" + size + \" task\" + plural + \" in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"t1mzzz"},"content":"     * Shows an error message with an indentation.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"t1mzzz"},"content":"     * @param errMessage The error message to be printed.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"t1mzzz"},"content":"    public void showError(String errMessage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"t1mzzz"},"content":"        System.out.println(INDENT + errMessage);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"t1mzzz"},"content":"     * Shows the closing message when user finishes using the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"t1mzzz"},"content":"    public void showBye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"t1mzzz"},"content":"        System.out.println(INDENT + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"t1mzzz"},"content":"        sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"t1mzzz"},"content":"     * Shows a message with an indentation.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"t1mzzz"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"t1mzzz"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"t1mzzz"},"content":"        System.out.println(INDENT + message);","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":93}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":" * AddCommand is a Command when the user wants to add a Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    private String cmd;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     * @param cmd The command inputted by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    public AddCommand(String cmd) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     * Decides what type of task to be stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Adds the task with the proper type.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        String[] split \u003d cmd.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"        String type \u003d split[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        String desc \u003d split[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        switch (type) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"            new AddTodoCommand(desc).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"            new AddDeadlineCommand(desc).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"            new AddEventCommand(desc).execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"        ui.showAddTask(tasks.getSize(), tasks.get(tasks.getSize() - 1).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":55}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * AddDeadlineCommand is a Command when the user wants to add a Deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    private String details;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for AddDeadlineCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param details The details of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    public AddDeadlineCommand(String details) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        if (!details.contains(\"/by\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! The deadline is required. (/by)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        String[] split \u003d details.split(\" /\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"        String desc \u003d split[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"        if (desc.equals(\"\") || desc.equals(\" \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! Description of deadline is required.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"        String by \u003d split[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"        Deadline deadline \u003d new Deadline(desc, by);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":46}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * AddEventCommand is a Command when the user wants to add an Event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    private String details;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param details The details of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    public AddEventCommand(String details) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        if (!details.contains(\"/at\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! Time of event required. (/at)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        String[] split \u003d details.split(\"/\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"        String desc \u003d split[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"        if (desc.equals(\"\") || desc.equals(\" \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! Description of event is required.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"        String at \u003d split[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"        Event event \u003d new Event(desc, at);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"        tasks.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":46}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":" * AddTodoCommand is a Command when the user wants to add a Todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    private String desc;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for AddTodoCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    public AddTodoCommand(String desc) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     * Adds a Todo task to the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"        Todo todo \u003d new Todo(desc);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":" * Command is the order issued by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    public Command() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"     * Returns the verifier if Duke should close or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"     * @return true if Duke should exit, false if Duke should not.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * Runs the command.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * DeleteCommand is the Command when the user wants to delete a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    private int index;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Deletes the ith task.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! The index is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        Task deleted \u003d tasks.delete(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"        ui.showMessage(\" \" + deleted);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"        ui.showMessage(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":42}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":" * ExitCommand is the Command when the user wants to exit Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for ExitCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"        super();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"     * Stores the user\u0027s tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"     * Exits Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"            storage.store(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"            System.out.print(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"            ui.showBye();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * FindCommand is the Command used to find tasks with a specific keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    private String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param keyword The specific word to search throughout the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Finds a list of tasks that contains the keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"            if (curr.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"                matchingTasks.add(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! No tasks match this keyword.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"        ui.showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"            Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage((i + 1) + \".\" + task);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"t1mzzz":52}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * ListCommand is the Command when the user wants the list of the user\u0027s current tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     * Displays the user\u0027s tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! You have no tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage((i + 1) + \".\" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * MarkCommand is the Command when the user wants to mark a task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    private int index;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Marks the ith task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! The index is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        Task curr \u003d tasks.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"        if (curr.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"            curr.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"  \" + curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"This task was already done.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"  \" + curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":47}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" * UnmarkCommand is the Command when the user wants to mark a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    private int index;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * Constuctor for UnmarkCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Marks the ith task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     * @param ui The class that deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"     * @param storage The class that deals with loading and storing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! The index is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"        Task curr \u003d tasks.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"        if (curr.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"            curr.unmarkTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"  \" + curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"This task has not been done in the first place.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"            ui.showMessage(\"  \" + curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":47}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":" * Deadline is a Task that has a deadline (when the task should be finished).","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"        this.by \u003d processDate(by);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     * @return The LocalDate format of the task\u0027s deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"        return this.by;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"     * Returns a string representation of a deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"     * @return Details regarding this deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"t1mzzz":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":" * Event is a Task that has a time of occurrence.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     * @param at The task\u0027s event time.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"        this.at \u003d processDate(at);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"     * Returns the time of the event.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     * @return The LocalDate format of the task\u0027s event time.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    public LocalDate getAt() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"        return this.at;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"     * Returns a string representation of an event.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"     * @return Details regarding this event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"t1mzzz":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":" * Task stores information regarding work to be done.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"     * Returns an indicator whether task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"     * @return X if task is done, space if task is not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"t1mzzz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"t1mzzz"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"t1mzzz"},"content":"     * @return Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"t1mzzz"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"t1mzzz"},"content":"        return this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"t1mzzz"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"t1mzzz"},"content":"    public void markTask() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"t1mzzz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"t1mzzz"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"t1mzzz"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"t1mzzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"t1mzzz"},"content":"     * Returns the LocalDate representation of the given date.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"t1mzzz"},"content":"     * @param dt The string representation of the date.","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"t1mzzz"},"content":"     * @return LocalDate format of dt.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"t1mzzz"},"content":"    protected LocalDate processDate(String dt) {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"t1mzzz"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"t1mzzz"},"content":"            return LocalDate.parse(dt);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"t1mzzz"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"t1mzzz"},"content":"            throw new DukeException(\"OOPS!!! This date format is invalid. (YYYY-MM-DD)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"t1mzzz"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"t1mzzz"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"t1mzzz"},"content":"     * @return Details regarding this task.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"t1mzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"t1mzzz"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"t1mzzz":80}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":" * Todo is a basic Task, only containing description.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"     * Returns a string representation of a todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"     * @return Details regarding this todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"t1mzzz":26}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"    public void addTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(new Deadline(\"return book\", \"2022-10-29\").toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"                \"[D][ ] return book (by: Oct 29 2022)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    public void markTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2022-10-29\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"        deadline.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"                \"[D][X] return book (by: Oct 29 2022)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    public void unmarkTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2022-10-29\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"        deadline.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        deadline.unmarkTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"                \"[D][ ] return book (by: Oct 29 2022)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":30}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"public class EventTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"    public void addTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(new Event(\"project meeting\", \"2022-10-29\").toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"                \"[E][ ] project meeting (at: Oct 29 2022)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    public void markTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"        Event event \u003d new Event(\"project meeting\", \"2022-10-29\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"        event.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(event.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"                \"[E][X] project meeting (at: Oct 29 2022)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    public void unmarkTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"        Event deadline \u003d new Event(\"project meeting\", \"2022-10-29\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"        deadline.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        deadline.unmarkTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"                \"[E][ ] project meeting (at: Oct 29 2022)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":30}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"    public void addTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(new Todo(\"read book\").toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"t1mzzz"},"content":"                \"[T][ ] read book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"t1mzzz"},"content":"    public void markTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"t1mzzz"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"t1mzzz"},"content":"        todo.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(todo.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"t1mzzz"},"content":"                \"[T][X] read book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"t1mzzz"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"t1mzzz"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"t1mzzz"},"content":"    public void unmarkTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"t1mzzz"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"t1mzzz"},"content":"        todo.markTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"t1mzzz"},"content":"        todo.unmarkTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"t1mzzz"},"content":"        assertEquals(todo.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"t1mzzz"},"content":"                \"[T][ ] read book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"t1mzzz"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"t1mzzz"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"t1mzzz":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"t1mzzz"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"t1mzzz"},"content":"absaieg","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"t1mzzz"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"t1mzzz"},"content":"event project meeting /at Tomorrow","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"t1mzzz"},"content":"deadline submit project /by August 18","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"t1mzzz"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"t1mzzz"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"t1mzzz"},"content":"unmark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"t1mzzz"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"t1mzzz"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"t1mzzz":10}}]

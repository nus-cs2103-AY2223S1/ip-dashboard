[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    // For JavaFX","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"    // NOT \u00278.29\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":22,"-":41}},{"path":"saved_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"E | 0 | orbital splashdown | 2022/08/22 13:00:00","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"D | 0 | CS2103T iP Week 4 | 2022/08/27 18:00:00","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"D | 0 | CS2101 OP1 | 2022/09/08 16:00:00","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"T | 1 | read a book","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Hongyi6328":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeCommandAlreadyExecutedException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" * The only public-facing class that interacts directly with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":" * Duke is a personal time management virtual assistant, targeted at those who prefer using CLI instead of GUI.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"public class Duke {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public static final String TAB \u003d \"    \";","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"saved_list.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hi there! I\u0027 am Duke, your personal time manager.\"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"            + \"\\n\" + TAB + \"What can I help you?\";","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    private final CliUi cliUi;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * An empty constructor that will be used to initialise Duke by Launcher","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    public Duke() {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        this.cliUi \u003d new CliUi();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"        this.storage \u003d new Storage(DEFAULT_FILE_PATH);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     * The constructor to instantiate a new Duke chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"     * @param filePath A relative file path that specifies where to save the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        this.cliUi \u003d new CliUi();","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"     * Starts the main logic of the chatbot if the user chooses to use CLI.","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"     * It keeps listening to user input until an exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"        greet();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"        startListening();","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"    private void greet() {","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(GREETING_MESSAGE);","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"    private void startListening() {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"            String input \u003d cliUi.readInput();","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"            Command nextCommand \u003d parser.parse(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"            isExit \u003d nextCommand.isExit();","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"                nextCommand.execute(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"            } catch (DukeCommandAlreadyExecutedException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"                cliUi.printOutput(exception.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"     * Interacts with the user if they choose to use GUI.","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"     * @param input The user input from the dialog box.","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"     * @return A wrapper class containing  to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"        Command nextCommand \u003d parser.parse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"        String message;","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"Hongyi6328"},"content":"            message \u003d nextCommand.execute(cliUi, taskList, storage);","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"Hongyi6328"},"content":"            return new Response(message, nextCommand.isExit());","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeCommandAlreadyExecutedException exception) {","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"Hongyi6328"},"content":"            message \u003d exception.getMessage();","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"Hongyi6328"},"content":"            return new Response(message, nextCommand.isExit());","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Hongyi6328"},"content":"     * Runs a chatbot.","lastModifiedDate":"2022-09-11"},{"lineNumber":101,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"Hongyi6328"},"content":"     * @param args String arguments for starting the logic.","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"Hongyi6328"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Hongyi6328"},"content":"        Duke chatBot \u003d new Duke(DEFAULT_FILE_PATH);","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"Hongyi6328"},"content":"        chatBot.run();","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Hongyi6328":107,"-":1}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    private static final String MAIN_WINDOW_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    private Stage stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Draws a window.","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     *              the application scene can be set.","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     *              primary stages.","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(MAIN_WINDOW_PATH));","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"Hongyi6328":46}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that adds a deadline task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final DeadlineTask task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public AddDeadlineCommand(DeadlineTask task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ADD_DEADLINE);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d taskList.addNewTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d exception.getMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":48}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that adds an event task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final EventTask task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public AddEventCommand(EventTask task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ADD_EVENT);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Adds an event task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d taskList.addNewTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d exception.getMessage();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":49}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that adds a to-do task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final TodoTask task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public AddTodoCommand(TodoTask task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ADD_TODO);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Adds a to-do task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d taskList.addNewTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d exception.getMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeCommandAlreadyExecutedException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * The base class of all other command types. It has a contract that requires the execute() method","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" * to be implemented concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String COMMAND_ALREADY_EXECUTED_ERROR_MESSAGE \u003d \"Oops! This command has been executed\";","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private boolean isExecuted;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    private final CommandType commandType;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        isExecuted \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * Returns true if and only if this command is an exit command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * If true, then the main listening loop in Duke terminates.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @return A boolean that indicates whether this command is an exit command.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        return commandType \u003d\u003d CommandType.EXIT;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command. The command will follow prescribed instructions depending on their command type.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * This method will invoke the concrete method overridden by its subclasses.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     * This method itself checks if a command is executed twice.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"    public String execute(CliUi cliUi, TaskList taskList, Storage storage) throws DukeCommandAlreadyExecutedException {","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"        assert(cliUi !\u003d null \u0026\u0026 taskList !\u003d null \u0026\u0026 storage !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        if (isExecuted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeCommandAlreadyExecutedException(COMMAND_ALREADY_EXECUTED_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"        isExecuted \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"        return executeConcretely(cliUi, taskList, storage);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"     * Returns that instruction string that invokes this command, such as \"deadline\" and \"event\".","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"     * @return the string that represents the instruction that invokes this command.","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"    public String getInstruction() {","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"        return commandType.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely. The command will follow prescribed instructions depending on their command type.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"    protected abstract String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage);","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"     * Makes use of a Storage object to save the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that prints error messages in case of failure.","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList The list to be saved.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that writes the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"    protected void saveFile(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"            storage.saveFile(taskList.getFileStream());","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIoException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"            cliUi.printOutput(exception.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":89}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An enum class that lists out all command types. This can be used to determine the runtime type of a command object.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"    UNKNOWN(\"\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    ERROR(null),","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    DISPLAY_LIST(\"list\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    MARK_DONE(\"mark\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    MARK_UNDONE(\"unmark\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    ADD_EVENT(\"event\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    ADD_TODO(\"todo\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    ADD_DEADLINE(\"deadline\"),","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    SORT(\"sort\");","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    private final String commandString;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Initialises an enum value.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @param commandString The string representation of a CommandType.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    CommandType(String commandString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * Returns the string representation, also the command instruction, of a command type","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @return The string representation of a CommandType.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        return commandString;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import static duke.Duke.TAB;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" * A command class that deletes a task, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Sure, I have removed this task from the list: \\n\" + TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! Do check the index range, and the format should be \\\"delete \u003cindex\u003e\\\"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * Deletes a task, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"            String s \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"            boolean hasOnlyOneTask \u003d taskList.hasOnlyOneTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d OUTPUT_MESSAGE","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"                    + s","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"                    + TAB","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"                    + \"There \"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"                    + (hasOnlyOneTask ? \"is \" : \"are \")","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"                    + size","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"                    + (hasOnlyOneTask ? \" task\" : \" tasks\")","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"                    + \" in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIndexOutOfBoundException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d ERROR_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":65}},{"path":"src/main/java/duke/command/DisplayListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that displays all tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class DisplayListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    public DisplayListCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.DISPLAY_LIST);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d taskList.getListInfo();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":35}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that handles an error that occurs during the phase of parsing.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" * The difference between an error command and an unknown command is that the former can be interpreted by the parser,","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * but causes some errors such as index out of bound, illegal date and tiem format etc.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public ErrorCommand(String errorMessage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ERROR);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Handles an error that occurs during the phase of parsing.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * Prints the error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(errorMessage);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"        return errorMessage;","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that terminates the main listening loop of main() in Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String EXIT_OUTPUT_STRING \u003d \"Bye! See you next time!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.EXIT);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Prints the exit message.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(EXIT_OUTPUT_STRING);","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"        return EXIT_OUTPUT_STRING;","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":36}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that displays the search results from the list for a keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Here are what I found: \";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Displays the search results from the list for a keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d OUTPUT_MESSAGE + taskList.find(keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":40}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that marks a task as done, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Good to hear that! I have marked this as done: \\n\" + Duke.TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! Do check the index range, and the format should be \\\"mark \u003cindex\u003e\\\"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    public MarkDoneCommand(int taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.MARK_DONE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Marks a task as done, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d OUTPUT_MESSAGE + taskList.markTaskDone(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIndexOutOfBoundException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d ERROR_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":53}},{"path":"src/main/java/duke/command/MarkUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that marks a task as undone, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class MarkUndoneCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Sure, I have marked this as not done yet.\\n\" + Duke.TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! Do check the index range, and the format should be \\\"unmark \u003cindex\u003e\\\"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    public MarkUndoneCommand(int taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.MARK_UNDONE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Marks a task as undone, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d OUTPUT_MESSAGE + taskList.markTaskUndone(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIndexOutOfBoundException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d ERROR_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":53}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import static duke.Duke.TAB;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that sorts all tasks in the list by chronological order from earlier to later.","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Sure! I have sorted the list!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public SortCommand() {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.SORT);","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Sorts all the tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d OUTPUT_MESSAGE;","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        taskList.sort();","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        output +\u003d \"\\n\" + TAB + taskList.getListInfo();","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(output);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(cliUi, taskList, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Hongyi6328":44}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.ui.CliUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that handles every input that cannot be interpreted by the parser.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String GENERAL_ERROR_STRING \u003d \"Sorry, I don\u0027t understand that!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public UnknownCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.UNKNOWN);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Handles input that cannot be interpreted by the parser.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * Prints a message saying that the command cannot be parsed.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @param cliUi An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be displayed on the screen as a response to the user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    protected String executeConcretely(CliUi cliUi, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"        cliUi.printOutput(GENERAL_ERROR_STRING);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        return GENERAL_ERROR_STRING;","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":37}},{"path":"src/main/java/duke/exception/DukeCommandAlreadyExecutedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a Command is executed for the second time.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeCommandAlreadyExecutedException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeCommandAlreadyExecutedException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a command does not follow its expected format.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeCommandFormatException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    public DukeCommandFormatException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command has an invalid format of date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * The default input DateTime format should be \"yyyy-MM-dd HH:mm:ss\".","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * If the user enters \"MM/yyyy\", then this exception will be thrown.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class DukeDateTimeFormatException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    public DukeDateTimeFormatException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":16}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * The base class of all other Duke-specific exceptions.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"        assert(message !\u003d null \u0026\u0026 !message.isEmpty() \u0026\u0026 !message.isBlank());","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Hongyi6328":15}},{"path":"src/main/java/duke/exception/DukeIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command has an index argument, but out of bound.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * For example, if there are 5 tasks in the list, then mark 6 will invoke this exception.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public class DukeIndexOutOfBoundException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    public DukeIndexOutOfBoundException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Hongyi6328":16}},{"path":"src/main/java/duke/exception/DukeIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that wraps the built-in IOException. This occurs upon unexpected I/O errors.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeIoException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeIoException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeMissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command is missing the index.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeMissingIndexException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeMissingIndexException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeMissingTaskDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command is missing the date and time it requires.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeMissingTaskDateTimeException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeMissingTaskDateTimeException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeMissingTaskTitleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command is missing its title.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeMissingTaskTitleException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeMissingTaskTitleException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * A concrete class that represents a deadline task and implements its parent abstract class.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    private static final String LABEL \u003d \"D\";","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public DeadlineTask(String taskTitle, LocalDateTime deadline) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(taskTitle, TaskType.DEADLINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task, to be displayed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"        return super.getStringRepresentation(","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"                LABEL,","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"                super.taskTitle + \" by \" + deadline.format(Task.OUTPUT_FORMATTER)","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        );","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        return super.getFileRepresentation(LABEL, deadline.format(Task.OUTPUT_FORMATTER));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"     * A LocalDateTime getter.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"     * @return The date of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"        return deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":54}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * A concrete class that represents an event task and implements its parent abstract class.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    private static final String LABEL \u003d \"E\";","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public EventTask(String taskTitle, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(taskTitle, TaskType.EVENT);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task, to be displayed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"        return super.getStringRepresentation(","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"                LABEL,","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"                super.taskTitle + \" at \" + dateTime.format(Task.OUTPUT_FORMATTER)","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        );","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        return super.getFileRepresentation(LABEL, dateTime.format(Task.OUTPUT_FORMATTER));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"     * A LocalDateTime getter.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"     * @return The date of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"        return dateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" * An abstract class that represents a general task.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    protected static final String OUTPUT_DATE_TIME_FORMAT \u003d \"yyyy/MM/dd HH:mm:ss\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(OUTPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    private static final String FILE_WRITING_DELIMITER \u003d \"|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    protected String taskTitle;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    protected Task(String taskTitle, TaskType taskType) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        this(taskTitle, false, taskType);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    protected Task(String taskTitle, boolean done, TaskType taskType) {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        this.taskTitle \u003d taskTitle;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Changes the internal state to be done.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     * Changes the internal state to be undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"     * A LocalDateTime getter. By default, it is the max value.","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"     * @return The date of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"     * Returns the string representation of a task that gives the information about the internal state of this task.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"     * @param label A capital letter that indicates the type of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"     * @param displayedText Other text to append.","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"     * @return The string representation of a task","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"    protected String getStringRepresentation(String label, String displayedText) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + \"[\" + label + \"] \" + displayedText;","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"    public abstract String getFileRepresentation();","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task in the file.","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"     * @param label A capital letter that indicates the type of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation of the task in the file.","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"    protected String getFileRepresentation(String label, String dateTime) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d label + \" \" + FILE_WRITING_DELIMITER + \" \"","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"                + (isDone ? \"1\" : \"0\")","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"                + \" \" + FILE_WRITING_DELIMITER + \" \" + taskTitle;","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"            output +\u003d \" \" + FILE_WRITING_DELIMITER + \" \" + dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"     * Overloads getFileRepresentation()","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"     * @param label A capital letter that indicates the type of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation of the task in the file.","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"Hongyi6328"},"content":"    protected String getFileRepresentation(String label) {","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"Hongyi6328"},"content":"        return getFileRepresentation(label, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"Hongyi6328"},"content":"     * Indicates whether the task title contains a search keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"Hongyi6328"},"content":"     * @param keyword The keyword being looked up.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"Hongyi6328"},"content":"     * @return True if the task title contains that keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"Hongyi6328"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Hongyi6328"},"content":"        return taskTitle.contains(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":105}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An enum class that enumerates all possible concrete types of Task, convenient for future development.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * It can serve as reflection when we need to know the run-time type of a Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    TODO, EVENT, DEADLINE;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":9}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * A concrete class that represents a to-do task and implements its parent abstract class.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    private static final String LABEL \u003d \"T\";","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    public TodoTask(String taskTitle) {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"        super(taskTitle, TaskType.TODO);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task, to be displayed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        return super.getStringRepresentation(LABEL, super.taskTitle);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"        return super.getFileRepresentation(LABEL);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":36}},{"path":"src/main/java/duke/ui/CliUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import static duke.Duke.TAB;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A class that is responsible for reading user input and printing computed output on the command line interface (CLI).","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" * It is the frontend of the application.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"public class CliUi implements Formatter {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String HORIZONTAL_BAR \u003d \"-------------------------\";","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a new instance of Ui that makes use of a scanner reading the standard system input.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    public CliUi() {","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Takes in a raw string and formats it.","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @param input String that is raw.","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @return String formatted and is about to be printed on some screen output.","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    public String formatOutput(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"        assert(input !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"        return HORIZONTAL_BAR + \u0027\\n\u0027 + TAB + input + \u0027\\n\u0027 + HORIZONTAL_BAR + \u0027\\n\u0027 + \u0027\\n\u0027;","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     * Reads user input line by line. If the user has not entered anything yet, it will wait.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that carries what the user types.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    public String readInput() {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"     * Formats and prints a message passed from other computational process.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"     * @param output The message to be formatted and printed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"    public void printOutput(String output) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"        System.out.println(formatOutput(output));","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":50}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"Hongyi6328":60}},{"path":"src/main/java/duke/ui/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * A public interface that takes in a raw string and formats it.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * For example, \"Hi\" -\u003e \"\\n    Hi\"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public interface Formatter {","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * Takes in a raw string and formats it.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     * @param input String that is raw.","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"     * @return String formatted and is about to be printed on some screen output.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    String formatOutput(String input);","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Hongyi6328":15}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import static duke.Duke.TAB;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"public class MainWindow extends AnchorPane implements Formatter {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    private static final String DUKE_AVATAR_PATH \u003d \"/images/DaUser.png\";","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    private static final String USER_AVATAR_PATH \u003d \"/images/DaDuke.png\";","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(DUKE_AVATAR_PATH)));","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    private final Image dukeImage \u003d","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(USER_AVATAR_PATH)));","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     * Binds the object in code with the .xml file.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"     * Binds a chat bot to this window.","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"     * @param duke An instance of Duke.","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"        Response response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"                DialogBox.getDukeDialog(formatOutput(response.getMessage()), dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"        if (response.isExit()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"            close();","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"     * Takes in a raw string and formats it.","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"     * @param input String that is raw.","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"     * @return String formatted and is about to be printed on some screen output.","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"    public String formatOutput(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"        return TAB + input;","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"    private void close() {","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"        System.exit(0);","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"Hongyi6328":87}},{"path":"src/main/java/duke/util/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.Main;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"Hongyi6328":13}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import java.util.List;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.CommandType;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.DisplayListCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.MarkUndoneCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeCommandFormatException;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeDateTimeFormatException;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeMissingIndexException;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeMissingTaskDateTimeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeMissingTaskTitleException;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":" * A command parser that parses user commands. It returns the corresponding Command based on input string, employing a","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":" * range of helper methods.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    private static final String INPUT_DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm:ss\";","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    private static final String BY_DATE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"    private static final String AT_DATE_DELIMITER \u003d \"/at\";","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"    private static final String MISSING_DATE_DELIMITER_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the date and time with the delimiter \";","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"    private static final String INDEX_MISSING_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the index, starting from 1.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"    private static final String TASK_TITLE_MISSING_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the title of the task.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    private static final String TASK_DATE_TIME_MISSING_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the date and time of the task.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    private static final String DATE_TIME_FORMAT_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! The date and time should follow the format: \" + INPUT_DATE_TIME_FORMAT;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"     * A nested private class that supplies commands","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"    private static final class CommandSupplier {","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e ADD_DEADLINE_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e {","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"                    Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"                    try {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"                        String taskTitle \u003d getTaskTitle(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"                        LocalDateTime deadline \u003d getDate(commandArgument, BY_DATE_DELIMITER);","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"                        DeadlineTask task \u003d new DeadlineTask(taskTitle, deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new AddDeadlineCommand(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"                    } catch (DukeMissingTaskTitleException | DukeCommandFormatException","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"                             | DukeMissingTaskDateTimeException","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"                             | DukeDateTimeFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"                    return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"                };","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e ADD_EVENT_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e {","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"                    Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"                    try {","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"                        String taskTitle \u003d getTaskTitle(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"                        LocalDateTime dateTime \u003d getDate(commandArgument, AT_DATE_DELIMITER);","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"                        EventTask task \u003d new EventTask(taskTitle, dateTime);","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new AddEventCommand(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"                    } catch (DukeMissingTaskTitleException | DukeCommandFormatException","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"                             | DukeMissingTaskDateTimeException","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"                             | DukeDateTimeFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"Hongyi6328"},"content":"                    return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"Hongyi6328"},"content":"                };","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e ADD_TODO_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e {","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"Hongyi6328"},"content":"                    Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"Hongyi6328"},"content":"                    try {","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"Hongyi6328"},"content":"                        String taskTitle \u003d getTaskTitle(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"Hongyi6328"},"content":"                        TodoTask task \u003d new TodoTask(taskTitle);","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new AddTodoCommand(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"Hongyi6328"},"content":"                    } catch (DukeMissingTaskTitleException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"Hongyi6328"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"Hongyi6328"},"content":"                    return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"Hongyi6328"},"content":"                };","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e DELETE_COMMAND_SUPPLIER \u003d commandArgument -\u003e {","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"Hongyi6328"},"content":"            Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"Hongyi6328"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"Hongyi6328"},"content":"                int taskIndex \u003d getTaskIndexFromCommand(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"Hongyi6328"},"content":"                newCommand \u003d new DeleteCommand(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"Hongyi6328"},"content":"            } catch (DukeMissingIndexException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"Hongyi6328"},"content":"                newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"Hongyi6328"},"content":"            return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"Hongyi6328"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e DISPLAY_LIST_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e new DisplayListCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e EXIT_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e new ExitCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e FIND_COMMAND_SUPPLIER \u003d FindCommand::new;","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e MARK_DONE_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e {","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"Hongyi6328"},"content":"                    Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"Hongyi6328"},"content":"                    try {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"Hongyi6328"},"content":"                        int taskIndex \u003d getTaskIndexFromCommand(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new MarkDoneCommand(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"Hongyi6328"},"content":"                    } catch (DukeMissingIndexException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"Hongyi6328"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"Hongyi6328"},"content":"                    return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"Hongyi6328"},"content":"                };","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e MARK_UNDONE_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e {","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"Hongyi6328"},"content":"                    Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"Hongyi6328"},"content":"                    try {","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"Hongyi6328"},"content":"                        int taskIndex \u003d getTaskIndexFromCommand(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new MarkUndoneCommand(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"Hongyi6328"},"content":"                    } catch (DukeMissingIndexException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"Hongyi6328"},"content":"                        newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"Hongyi6328"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"Hongyi6328"},"content":"                    return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"Hongyi6328"},"content":"                };","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e UNKNOWN_COMMAND_SUPPLIER \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":150,"author":{"gitId":"Hongyi6328"},"content":"                commandArgument -\u003e new UnknownCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":152,"author":{"gitId":"Hongyi6328"},"content":"        private static final Function\u003c? super String, ? extends Command\u003e SORT_COMMAND_SUPPLIER \u003d x -\u003e new SortCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"Hongyi6328"},"content":"        private static final List\u003cFunction\u003c? super String, ? extends Command\u003e\u003e suppliers \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"Hongyi6328"},"content":"                List.of(","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"Hongyi6328"},"content":"                        ADD_DEADLINE_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"Hongyi6328"},"content":"                        ADD_EVENT_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"Hongyi6328"},"content":"                        ADD_TODO_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"Hongyi6328"},"content":"                        DELETE_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"Hongyi6328"},"content":"                        DISPLAY_LIST_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":161,"author":{"gitId":"Hongyi6328"},"content":"                        EXIT_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"Hongyi6328"},"content":"                        FIND_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"Hongyi6328"},"content":"                        MARK_DONE_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"Hongyi6328"},"content":"                        MARK_UNDONE_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"Hongyi6328"},"content":"                        UNKNOWN_COMMAND_SUPPLIER,","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"Hongyi6328"},"content":"                        SORT_COMMAND_SUPPLIER","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"Hongyi6328"},"content":"                );","lastModifiedDate":"2022-09-08"},{"lineNumber":168,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":169,"author":{"gitId":"Hongyi6328"},"content":"        private static final List\u003cString\u003e instructions \u003d List.of(","lastModifiedDate":"2022-09-08"},{"lineNumber":170,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.ADD_DEADLINE.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":171,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.ADD_EVENT.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":172,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.ADD_TODO.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":173,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.DELETE.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":174,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.DISPLAY_LIST.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":175,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.EXIT.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":176,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.FIND.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":177,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.MARK_DONE.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":178,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.MARK_UNDONE.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":179,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.UNKNOWN.toString(),","lastModifiedDate":"2022-09-08"},{"lineNumber":180,"author":{"gitId":"Hongyi6328"},"content":"                CommandType.SORT.toString()","lastModifiedDate":"2022-09-08"},{"lineNumber":181,"author":{"gitId":"Hongyi6328"},"content":"        );","lastModifiedDate":"2022-09-08"},{"lineNumber":182,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":183,"author":{"gitId":"Hongyi6328"},"content":"        /**","lastModifiedDate":"2022-09-08"},{"lineNumber":184,"author":{"gitId":"Hongyi6328"},"content":"         * Returns a collection of all static command suppliers.","lastModifiedDate":"2022-09-08"},{"lineNumber":185,"author":{"gitId":"Hongyi6328"},"content":"         *","lastModifiedDate":"2022-09-08"},{"lineNumber":186,"author":{"gitId":"Hongyi6328"},"content":"         * @return all static command suppliers.","lastModifiedDate":"2022-09-08"},{"lineNumber":187,"author":{"gitId":"Hongyi6328"},"content":"         */","lastModifiedDate":"2022-09-08"},{"lineNumber":188,"author":{"gitId":"Hongyi6328"},"content":"        public static List\u003cFunction\u003c? super String, ? extends Command\u003e\u003e getSuppliers() {","lastModifiedDate":"2022-09-08"},{"lineNumber":189,"author":{"gitId":"Hongyi6328"},"content":"            return suppliers;","lastModifiedDate":"2022-09-08"},{"lineNumber":190,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":191,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":192,"author":{"gitId":"Hongyi6328"},"content":"        /**","lastModifiedDate":"2022-09-08"},{"lineNumber":193,"author":{"gitId":"Hongyi6328"},"content":"         * Returns a collection of all static command instructions.","lastModifiedDate":"2022-09-08"},{"lineNumber":194,"author":{"gitId":"Hongyi6328"},"content":"         *","lastModifiedDate":"2022-09-08"},{"lineNumber":195,"author":{"gitId":"Hongyi6328"},"content":"         * @return all static command instructions.","lastModifiedDate":"2022-09-08"},{"lineNumber":196,"author":{"gitId":"Hongyi6328"},"content":"         */","lastModifiedDate":"2022-09-08"},{"lineNumber":197,"author":{"gitId":"Hongyi6328"},"content":"        public static List\u003cString\u003e getInstructions() {","lastModifiedDate":"2022-09-08"},{"lineNumber":198,"author":{"gitId":"Hongyi6328"},"content":"            return instructions;","lastModifiedDate":"2022-09-08"},{"lineNumber":199,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":200,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":201,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":202,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"Hongyi6328"},"content":"    private final Map\u003cString, Function\u003c? super String, ? extends Command\u003e\u003e commandMap;","lastModifiedDate":"2022-09-08"},{"lineNumber":204,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"Hongyi6328"},"content":"     * Initialises the commandMap that maps command instructions to their corresponding Command supplier/generator.","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":209,"author":{"gitId":"Hongyi6328"},"content":"    public Parser() {","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"Hongyi6328"},"content":"        commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"Hongyi6328"},"content":"        List\u003cFunction\u003c? super String, ? extends Command\u003e\u003e suppliers \u003d CommandSupplier.getSuppliers();","lastModifiedDate":"2022-09-08"},{"lineNumber":212,"author":{"gitId":"Hongyi6328"},"content":"        List\u003cString\u003e instructions \u003d CommandSupplier.getInstructions();","lastModifiedDate":"2022-09-08"},{"lineNumber":213,"author":{"gitId":"Hongyi6328"},"content":"        IntStream.range(0, instructions.size())","lastModifiedDate":"2022-09-08"},{"lineNumber":214,"author":{"gitId":"Hongyi6328"},"content":"                .forEach(x -\u003e commandMap.put(instructions.get(x), suppliers.get(x)));","lastModifiedDate":"2022-09-08"},{"lineNumber":215,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":216,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":217,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":218,"author":{"gitId":"Hongyi6328"},"content":"     * Transforms a command string to a real Command object, which can be subsequently executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":219,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":220,"author":{"gitId":"Hongyi6328"},"content":"     * @param input The command string read by Ui.","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"Hongyi6328"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2022-08-26"},{"lineNumber":222,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":223,"author":{"gitId":"Hongyi6328"},"content":"    public Command parse(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":224,"author":{"gitId":"Hongyi6328"},"content":"        assert (input !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":225,"author":{"gitId":"Hongyi6328"},"content":"        String instruction \u003d getCommandInstruction(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":226,"author":{"gitId":"Hongyi6328"},"content":"        String argument \u003d getCommandArgument(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":227,"author":{"gitId":"Hongyi6328"},"content":"        Function\u003c? super String, ? extends Command\u003e supplier \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":228,"author":{"gitId":"Hongyi6328"},"content":"                commandMap.getOrDefault(instruction, commandMap.get(CommandType.UNKNOWN.toString()));","lastModifiedDate":"2022-09-08"},{"lineNumber":229,"author":{"gitId":"Hongyi6328"},"content":"        Command command \u003d supplier.apply(argument);","lastModifiedDate":"2022-09-08"},{"lineNumber":230,"author":{"gitId":"Hongyi6328"},"content":"        assert (command !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":231,"author":{"gitId":"Hongyi6328"},"content":"        return command;","lastModifiedDate":"2022-09-08"},{"lineNumber":232,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":233,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":234,"author":{"gitId":"Hongyi6328"},"content":"    private static int getIndexOfFirstOccurrence(String input, String pattern) {","lastModifiedDate":"2022-08-26"},{"lineNumber":235,"author":{"gitId":"Hongyi6328"},"content":"        assert (input !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":236,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstOccurrence \u003d input.indexOf(pattern);","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"Hongyi6328"},"content":"        if (indexOfFirstOccurrence \u003d\u003d -1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":238,"author":{"gitId":"Hongyi6328"},"content":"            indexOfFirstOccurrence \u003d input.length();","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":240,"author":{"gitId":"Hongyi6328"},"content":"        return indexOfFirstOccurrence;","lastModifiedDate":"2022-08-21"},{"lineNumber":241,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":242,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":243,"author":{"gitId":"Hongyi6328"},"content":"    private static int getIndexOfFirstWhiteSpace(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":244,"author":{"gitId":"Hongyi6328"},"content":"        return getIndexOfFirstOccurrence(input, \" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":245,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":247,"author":{"gitId":"Hongyi6328"},"content":"    private static int getIndexOfFirstDelimiter(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":248,"author":{"gitId":"Hongyi6328"},"content":"        return getIndexOfFirstOccurrence(input, DELIMITER);","lastModifiedDate":"2022-08-21"},{"lineNumber":249,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"Hongyi6328"},"content":"    private static String getCommandInstruction(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":252,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstWhiteSpace \u003d getIndexOfFirstWhiteSpace(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"Hongyi6328"},"content":"        String rawInstruction \u003d input.substring(0, indexOfFirstWhiteSpace);","lastModifiedDate":"2022-08-26"},{"lineNumber":254,"author":{"gitId":"Hongyi6328"},"content":"        return rawInstruction.strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":255,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":256,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":257,"author":{"gitId":"Hongyi6328"},"content":"    private static String getCommandArgument(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":258,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstWhiteSpace \u003d getIndexOfFirstWhiteSpace(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":259,"author":{"gitId":"Hongyi6328"},"content":"        String rawArgument \u003d input.substring(indexOfFirstWhiteSpace);","lastModifiedDate":"2022-08-26"},{"lineNumber":260,"author":{"gitId":"Hongyi6328"},"content":"        return rawArgument.strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":261,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":262,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":263,"author":{"gitId":"Hongyi6328"},"content":"    private static String getTaskTitle(String... commandArgument) throws DukeMissingTaskTitleException {","lastModifiedDate":"2022-09-01"},{"lineNumber":264,"author":{"gitId":"Hongyi6328"},"content":"        assert (commandArgument[0] !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":265,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfEnd \u003d getIndexOfFirstDelimiter(commandArgument[0]);","lastModifiedDate":"2022-09-01"},{"lineNumber":266,"author":{"gitId":"Hongyi6328"},"content":"        String roughTaskTitle \u003d commandArgument[0].substring(0, indexOfEnd);","lastModifiedDate":"2022-09-01"},{"lineNumber":267,"author":{"gitId":"Hongyi6328"},"content":"        String realTaskTitle \u003d roughTaskTitle.strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":268,"author":{"gitId":"Hongyi6328"},"content":"        if (realTaskTitle.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":269,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingTaskTitleException(TASK_TITLE_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":270,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":271,"author":{"gitId":"Hongyi6328"},"content":"        return roughTaskTitle.strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":272,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":273,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":274,"author":{"gitId":"Hongyi6328"},"content":"    private static LocalDateTime getDate(String commandArgument, String delimiter)","lastModifiedDate":"2022-08-31"},{"lineNumber":275,"author":{"gitId":"Hongyi6328"},"content":"            throws DukeCommandFormatException, DukeMissingTaskDateTimeException, DukeDateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":276,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfDelimiter \u003d getIndexOfFirstOccurrence(commandArgument, delimiter);","lastModifiedDate":"2022-08-31"},{"lineNumber":277,"author":{"gitId":"Hongyi6328"},"content":"        if (indexOfDelimiter \u003d\u003d commandArgument.length()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":278,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeCommandFormatException(TASK_DATE_TIME_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-31"},{"lineNumber":279,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":280,"author":{"gitId":"Hongyi6328"},"content":"        String rawDateString \u003d commandArgument.substring(indexOfDelimiter + BY_DATE_DELIMITER.length());","lastModifiedDate":"2022-08-26"},{"lineNumber":281,"author":{"gitId":"Hongyi6328"},"content":"        String refinedDateString \u003d rawDateString.strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":282,"author":{"gitId":"Hongyi6328"},"content":"        if (refinedDateString.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":283,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingTaskDateTimeException(MISSING_DATE_DELIMITER_ERROR_MESSAGE + delimiter);","lastModifiedDate":"2022-08-31"},{"lineNumber":284,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":285,"author":{"gitId":"Hongyi6328"},"content":"        return getLocalDateTimeFromString(refinedDateString);","lastModifiedDate":"2022-08-25"},{"lineNumber":286,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":287,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":288,"author":{"gitId":"Hongyi6328"},"content":"    private static int getTaskIndexFromCommand(String... commandArgument) throws DukeMissingIndexException {","lastModifiedDate":"2022-09-02"},{"lineNumber":289,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstWhiteSpace \u003d Parser.getIndexOfFirstWhiteSpace(commandArgument[0]);","lastModifiedDate":"2022-09-02"},{"lineNumber":290,"author":{"gitId":"Hongyi6328"},"content":"        String tailSubString \u003d commandArgument[0].substring(0, indexOfFirstWhiteSpace);","lastModifiedDate":"2022-09-02"},{"lineNumber":291,"author":{"gitId":"Hongyi6328"},"content":"        tailSubString \u003d tailSubString.replace(\" \", \"\");","lastModifiedDate":"2022-08-21"},{"lineNumber":292,"author":{"gitId":"Hongyi6328"},"content":"        if (tailSubString.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":293,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingIndexException(INDEX_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":294,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":295,"author":{"gitId":"Hongyi6328"},"content":"        int taskIndex;","lastModifiedDate":"2022-08-24"},{"lineNumber":296,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":297,"author":{"gitId":"Hongyi6328"},"content":"            taskIndex \u003d Integer.parseInt(tailSubString) - 1; // Minus 1 because user input indices start from 1","lastModifiedDate":"2022-08-21"},{"lineNumber":298,"author":{"gitId":"Hongyi6328"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":299,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingIndexException(INDEX_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":300,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":301,"author":{"gitId":"Hongyi6328"},"content":"        return taskIndex;","lastModifiedDate":"2022-08-21"},{"lineNumber":302,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":303,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":304,"author":{"gitId":"Hongyi6328"},"content":"    private static LocalDateTime getLocalDateTimeFromString(String input) throws DukeDateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":305,"author":{"gitId":"Hongyi6328"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":306,"author":{"gitId":"Hongyi6328"},"content":"        LocalDateTime output;","lastModifiedDate":"2022-08-25"},{"lineNumber":307,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":308,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":309,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":310,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeDateTimeFormatException(DATE_TIME_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":311,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":312,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":313,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":314,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":314}},{"path":"src/main/java/duke/util/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * A class that wraps a string and a boolean to be passed from Duke to MainWindow.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * Thus, MainWindow knows when to stop.","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public class Response {","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    private final String message;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"     * @param message String to be printed on the window.","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * @param isExit Boolean indicating whether the window should be closed.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public Response(String message, boolean isExit) {","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Public getter of isExit.","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @return Boolean indicating whether the program should terminate after this response.","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"        return isExit;","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * Public getter of message.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     * @return String to be printed on the window.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        return message;","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Hongyi6328":39}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * This class is responsible for file saving. It plays a database-like role.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String FILE_IO_ERROR_MESSAGE \u003d \"Oops! Something went wrong when saving the file!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor of the class.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"        assert(filePath !\u003d null \u0026\u0026 !filePath.isEmpty() \u0026\u0026 !filePath.isBlank());","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * Deserializes the TaskList and saves it as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param fileStream The string to be saved in the specified path.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @throws DukeIoException This exception occurs when the file cannot be created or over-written.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    public void saveFile(String fileStream) throws DukeIoException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"            if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"                throw new DukeIoException(FILE_IO_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"            fileWriter.write(fileStream, 0, fileStream.length());","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIoException(FILE_IO_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":46}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import java.util.List;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeCommandFormatException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeDateTimeFormatException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeMissingTaskDateTimeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeMissingTaskTitleException;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":" * A wrapper class that wraps a list of Task and facilitates some fundamental operations, such as add, find, delete and","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":" * modify.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    private static final String TAB \u003d Duke.TAB;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"The list is empty.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    private static final String NOTHING_FOUND_MESSAGE \u003d \"Sorry, nothing found in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * Gives the current state of each Task saved in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * @return a readable string that represents the internal state in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    public String getListInfo() {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"            stringBuilder.append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"            if (i \u003c len - 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"                stringBuilder.append(\u0027\\n\u0027 + TAB);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"        assert(stringBuilder.length() \u003e 0);","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"     * Adds a new task to the list and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"     * @param newTask The Task to be added into the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"    public String addNewTask(Task newTask)","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"            throws DukeCommandFormatException, DukeMissingTaskTitleException, DukeMissingTaskDateTimeException,","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"            DukeDateTimeFormatException {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"        assert(newTask !\u003d null);","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"        return \"Added: \" + newTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"     * Marks the index-th Task as done and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"     * @param index The index indicating which Task to mark.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"    public String markTaskDone(int index) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIndexOutOfBoundException(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"            Task targetTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"            targetTask.markDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"            return targetTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"     * Mark the index-th Task as undone and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"     * @param index The index indicating which Task to mark.","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"Hongyi6328"},"content":"    public String markTaskUndone(int index) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Hongyi6328"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIndexOutOfBoundException(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"Hongyi6328"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"Hongyi6328"},"content":"            Task targetTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"Hongyi6328"},"content":"            targetTask.markUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Hongyi6328"},"content":"            return targetTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"Hongyi6328"},"content":"     * Remove the index-th Task from the list and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"Hongyi6328"},"content":"     * @param index The index indicating which Task to delete.","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"Hongyi6328"},"content":"    public String deleteTask(int index) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"Hongyi6328"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIndexOutOfBoundException(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"Hongyi6328"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"Hongyi6328"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"Hongyi6328"},"content":"            return removedTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a structured string that is convenient to be saved in a .txt file.","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"Hongyi6328"},"content":"     * @return A formatted string representing the internal state of the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileStream() {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"Hongyi6328"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"Hongyi6328"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"Hongyi6328"},"content":"            stringBuilder.append(tasks.get(i).getFileRepresentation()).append(\u0027\\n\u0027);","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"Hongyi6328"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"Hongyi6328"},"content":"     * Finds every Task in the list whose title contains the keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"Hongyi6328"},"content":"     * @param keyword The keyword to look up.","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string carrying all matched results.","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"Hongyi6328"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"Hongyi6328"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"Hongyi6328"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"Hongyi6328"},"content":"            return \u0027\\n\u0027 + TAB + EMPTY_LIST_MESSAGE;","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"Hongyi6328"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"Hongyi6328"},"content":"        int displayIndex \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"Hongyi6328"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"Hongyi6328"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"Hongyi6328"},"content":"            if (curr.contains(keyword)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"Hongyi6328"},"content":"                stringBuilder.append(\u0027\\n\u0027 + TAB).append(displayIndex++).append(\". \").append(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"Hongyi6328"},"content":"        if (displayIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"Hongyi6328"},"content":"            stringBuilder.append(NOTHING_FOUND_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"Hongyi6328"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":161,"author":{"gitId":"Hongyi6328"},"content":"     * Sorts the task list by chronological order from earlier to later.","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"Hongyi6328"},"content":"    public void sort() {","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"Hongyi6328"},"content":"        tasks.sort(Comparator.comparing(Task::getDate));","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"Hongyi6328"},"content":"     * Returns true if and only if there is one Task in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"Hongyi6328"},"content":"     * @return Whether there is only one Task in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"Hongyi6328"},"content":"    public boolean hasOnlyOneTask() {","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"Hongyi6328"},"content":"        return tasks.size() \u003d\u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":174,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":175,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"Hongyi6328"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"Hongyi6328"},"content":"     * @return The number of Task in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"Hongyi6328"},"content":"    public int size() {","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"Hongyi6328"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":184}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"Hongyi6328":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"Hongyi6328":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"public class DukeTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":4}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    private Parser testSubject \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    public void parse_unknownInstructionInput_unknownCommandOutput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"        Command command \u003d testSubject.parse(\"dfqwejifoasvaoief\");","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        if (!(command instanceof UnknownCommand)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    public void parse_unformattedInstructionInput_errorCommandOutput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        Command command \u003d testSubject.parse(\"event orbital splashdown /by 2022-08-26 18:00:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"        if (!(command instanceof ErrorCommand)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":30}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    public void getListInfo_emptyInput_specialHintOutput() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        assertEquals(taskList.getListInfo(), \"The list is empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"todo read a book","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"event orbital splashdown /at 2022-08-22 13:00:00","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"deadline CS2103T iP Week 4 /by 2022-08-27 18:00:00","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"mark 2","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"unmark 2","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"find book","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"find r","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"find T","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"mark 1","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"mark 2","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"mark 3","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"find or","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"delete 3","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"delete 1","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"delete 1","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"delete 0","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"mark -1","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"unmark 100","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"unknownCommand 9999","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"todo","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"event","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"deadline","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"find i","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"event orbital splashdown","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"deadline CS2103T iP Week 4 /by 2022/08/27","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"deadline CS2103T iP Week 4 /by 2022-08-27","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"bye","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hongyi6328":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"java -classpath ..\\build\\classes\\java\\main\\duke\\Duke.class \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hongyi6328":1,"-":19}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hongyi6328":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"    // NOT \u00278.29\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":6,"-":41}},{"path":"saved_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"T | 0 | reading","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeCommandAlreadyExecutedException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" * The only public-facing class that interacts directly with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" * Duke is a personal time management virtual assistant, targeted at those who prefer using CLI instead of GUI.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    public static final String TAB \u003d \"    \";","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    private static final String FILE_PATH \u003d \"saved_list.txt\";","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hi there! I\u0027 am duke.Duke, your personal time manager.\"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"            + \"\\nWhat can I help you?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * The constructor to instantiate a new Duke chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param filePath A relative file path that specifies where to save the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     * Starts the main logic of the chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"     * It keeps listening to user input until an exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"        greet();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        startListening();","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"    private void greet() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(GREETING_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"    private void startListening() {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"            String input \u003d ui.readInput();","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"            Command nextCommand \u003d parser.parse(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"            isExit \u003d nextCommand.isExit();","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"                nextCommand.execute(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"            } catch (DukeCommandAlreadyExecutedException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"                ui.printOutput(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"     * The main logic that runs a chatbot.","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"     * @param args String arguments for starting the logic.","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"        Duke chatBot \u003d new Duke(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"        chatBot.run();","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Hongyi6328":76,"-":2}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that adds a deadline task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final DeadlineTask task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public AddDeadlineCommand(DeadlineTask task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ADD_DEADLINE);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d taskList.addNewTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d exception.getMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":47}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that adds an event task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final EventTask task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public AddEventCommand(EventTask task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ADD_EVENT);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Adds an event task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d taskList.addNewTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d exception.getMessage();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":47}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that adds a to-do task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final TodoTask task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public AddTodoCommand(TodoTask task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ADD_TODO);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Adds a to-do task, displays the output, and saves the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d taskList.addNewTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d exception.getMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":47}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeCommandAlreadyExecutedException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * The base class of all other command types. It has a contract that requires the execute() method","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" * to be implemented concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String COMMAND_ALREADY_EXECUTED_ERROR_MESSAGE \u003d \"Oops! This command has been executed\";","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private boolean isExecuted;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    private final CommandType commandType;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        isExecuted \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * Returns true if and only if this command is an exit command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * If true, then the main listening loop in Duke terminates.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @return A boolean that indicates whether this command is an exit command.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        return commandType \u003d\u003d CommandType.EXIT;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command. The command will follow prescribed instructions depending on their command type.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * This method will invoke the concrete method overridden by its subclasses.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     * This method itself checks if a command is executed twice.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) throws DukeCommandAlreadyExecutedException {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        if (isExecuted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeCommandAlreadyExecutedException(COMMAND_ALREADY_EXECUTED_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"        isExecuted \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"        executeConcretely(ui, taskList, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely. The command will follow prescribed instructions depending on their command type.","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"    protected abstract void executeConcretely(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"     * Makes use of a Storage object to save the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that prints error messages in case of failure.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList The list to be saved.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that writes the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"    protected void saveFile(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"            storage.saveFile(taskList.getFileStream());","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIoException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"            ui.printOutput(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":78}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An enum class that lists out all command types. This can be used to determine the runtime type of a command object.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"    UNKNOWN(\"\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    ERROR(null),","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    DISPLAY_LIST(\"list\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    MARK_DONE(\"mark\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    MARK_UNDONE(\"unmark\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    ADD_EVENT(\"event\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    ADD_TODO(\"todo\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    ADD_DEADLINE(\"deadline\");","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    private final String commandString;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * Initialises an enum value.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * @param commandString The string representation of a CommandType.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    CommandType(String commandString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * Returns the string representation, also the command instruction, of a command type","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @return The string representation of a CommandType.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        return commandString;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":38}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import static duke.Duke.TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" * A command class that deletes a task, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Sure, I have removed this task from the list: \\n\" + TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! Do check the index range, and the format should be \\\"delete \u003cindex\u003e\\\"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * Deletes a task, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            String s \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"            boolean hasOnlyOneTask \u003d taskList.hasOnlyOneTask();","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d OUTPUT_MESSAGE","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"                    + s","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"                    + TAB","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"                    + \"There \"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"                    + (hasOnlyOneTask ? \"is \" : \"are \")","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"                    + size","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"                    + (hasOnlyOneTask ? \" task\" : \" tasks\")","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"                    + \" in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIndexOutOfBoundException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d ERROR_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":63}},{"path":"src/main/java/duke/command/DisplayListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that displays all tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class DisplayListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    public DisplayListCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.DISPLAY_LIST);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d taskList.getListInfo();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":33}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that handles an error that occurs during the phase of parsing.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" * The difference between an error command and an unknown command is that the former can be interpreted by the parser,","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * but causes some errors such as index out of bound, illegal date and tiem format etc.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public ErrorCommand(String errorMessage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.ERROR);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Handles an error that occurs during the phase of parsing.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * Prints the error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(errorMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":38}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that terminates the main listening loop of main() in Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String EXIT_OUTPUT_STRING \u003d \"Bye! See you next time!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.EXIT);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Prints the exit message.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(EXIT_OUTPUT_STRING);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that displays the search results from the list for a keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Here are what I found: \";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Displays the search results from the list for a keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d OUTPUT_MESSAGE + taskList.find(keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":38}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that marks a task as done, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Good to hear that! I have marked this as done: \\n\" + Duke.TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! Do check the index range, and the format should be \\\"mark \u003cindex\u003e\\\"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    public MarkDoneCommand(int taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.MARK_DONE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Marks a task as done, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d OUTPUT_MESSAGE + taskList.markTaskDone(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIndexOutOfBoundException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d ERROR_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":51}},{"path":"src/main/java/duke/command/MarkUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * A command class that marks a task as undone, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class MarkUndoneCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String OUTPUT_MESSAGE \u003d \"Sure, I have marked this as not done yet.\\n\" + Duke.TAB;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    private static final String ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! Do check the index range, and the format should be \\\"unmark \u003cindex\u003e\\\"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    public MarkUndoneCommand(int taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.MARK_UNDONE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * Marks a task as undone, displays the output, and saves the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        String output;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d OUTPUT_MESSAGE + taskList.markTaskUndone(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeIndexOutOfBoundException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d ERROR_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(output);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        super.saveFile(ui, taskList, storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":51}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.util.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" * A command class that handles every input that cannot be interpreted by the parser.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String GENERAL_ERROR_STRING \u003d \"Sorry, I don\u0027t understand that!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public UnknownCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(CommandType.UNKNOWN);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"     * Executes the command concretely.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Handles input that cannot be interpreted by the parser.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * Prints a message saying that the command cannot be parsed.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * @param ui An object that facilitates output that might be required by the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     * @param taskList An object that facilitates basic insert, edit, search, and delete operations","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     *                 that this command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @param storage An object that facilitates file IO and the save operation that command might need.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    protected void executeConcretely(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"        ui.printOutput(GENERAL_ERROR_STRING);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":35}},{"path":"src/main/java/duke/exception/DukeCommandAlreadyExecutedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a Command is executed for the second time.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeCommandAlreadyExecutedException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeCommandAlreadyExecutedException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a command does not follow its expected format.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeCommandFormatException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    public DukeCommandFormatException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command has an invalid format of date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * The default input DateTime format should be \"yyyy-MM-dd HH:mm:ss\".","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * If the user enters \"MM/yyyy\", then this exception will be thrown.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class DukeDateTimeFormatException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    public DukeDateTimeFormatException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":16}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * The base class of all other Duke-specific exceptions.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command has an index argument, but out of bound.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * For example, if there are 5 tasks in the list, then mark 6 will invoke this exception.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public class DukeIndexOutOfBoundException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    public DukeIndexOutOfBoundException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Hongyi6328":16}},{"path":"src/main/java/duke/exception/DukeIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that wraps the built-in IOException. This occurs upon unexpected I/O errors.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeIoException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeIoException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeMissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command is missing the index.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeMissingIndexException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeMissingIndexException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeMissingTaskDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command is missing the date and time it requires.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeMissingTaskDateTimeException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeMissingTaskDateTimeException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/exception/DukeMissingTaskTitleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An exception class that is thrown when a task command is missing its title.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class DukeMissingTaskTitleException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    public DukeMissingTaskTitleException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"Hongyi6328":14}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * A concrete class that represents a deadline task and implements its parent abstract class.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    private static final String LABEL \u003d \"D\";","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public DeadlineTask(String taskTitle, LocalDateTime deadline) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(taskTitle, TaskType.DEADLINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task, to be displayed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"        return super.getStringRepresentation(","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"                LABEL,","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"                super.taskTitle + \" by \" + deadline.format(Task.OUTPUT_FORMATTER)","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        );","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        return super.getFileRepresentation(LABEL, deadline.format(Task.OUTPUT_FORMATTER));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":44}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * A concrete class that represents an event task and implements its parent abstract class.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    private static final String LABEL \u003d \"E\";","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public EventTask(String taskTitle, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        super(taskTitle, TaskType.EVENT);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task, to be displayed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"        return super.getStringRepresentation(","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"                LABEL,","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"                super.taskTitle + \" at \" + dateTime.format(Task.OUTPUT_FORMATTER)","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        );","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"        return super.getFileRepresentation(LABEL, dateTime.format(Task.OUTPUT_FORMATTER));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * An abstract class that represents a general task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    protected static final String OUTPUT_DATE_TIME_FORMAT \u003d \"yyyy/MM/dd HH:mm:ss\";","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(OUTPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private static final String FILE_WRITING_DELIMITER \u003d \"|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    protected String taskTitle;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    protected boolean done;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    protected Task(String taskTitle, TaskType taskType) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        this(taskTitle, false, taskType);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    protected Task(String taskTitle, boolean done, TaskType taskType) {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"        this.taskTitle \u003d taskTitle;","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * Changes the internal state to be done.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        done \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     * Changes the internal state to be undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        done \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"    protected String getStringRepresentation(String label, String displayedText) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        return \"[\" + (done ? \"X\" : \" \") + \"] \" + \"[\" + label + \"] \" + displayedText;","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    public abstract String getFileRepresentation();","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    protected String getFileRepresentation(String label) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"        return getFileRepresentation(label, null);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"    protected String getFileRepresentation(String label, String dateTime) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"        String output \u003d label + \" \" + FILE_WRITING_DELIMITER + \" \"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"                + (done ? \"1\" : \"0\")","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"                + \" \" + FILE_WRITING_DELIMITER + \" \" + taskTitle;","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"            output +\u003d \" \" + FILE_WRITING_DELIMITER + \" \" + dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"     * Indicates whether the task title contains a search keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"     * @param keyword The keyword being looked up.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"     * @return True if the task title contains that keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"        return taskTitle.contains(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":76}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * An enum class that enumerates all possible concrete types of Task, convenient for future development.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" * It can serve as reflection when we need to know the run-time type of a Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    TODO, EVENT, DEADLINE;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":9}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":" * A concrete class that represents a to-do task and implements its parent abstract class.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"    private static final String LABEL \u003d \"T\";","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    public TodoTask(String taskTitle) {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"        super(taskTitle, TaskType.TODO);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation of the task, to be displayed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"        return super.getStringRepresentation(LABEL, super.taskTitle);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a string representation for file saving.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that is suitable to be saved as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"        return super.getFileRepresentation(LABEL);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":36}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.command.*;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":" * A command parser that parses user commands. It returns the corresponding Command based on input string, employing a","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":" * range of helper methods.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"    private static final String INPUT_DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm:ss\";","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    private static final String BY_DATE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    private static final String AT_DATE_DELIMITER \u003d \"/at\";","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    private static final String MISSING_AT_DELIMITER_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the date and time with the delimiter \" + AT_DATE_DELIMITER;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    private static final String MISSING_BY_DELIMITER_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the date and time with the delimiter \" + BY_DATE_DELIMITER;","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    private static final String INDEX_MISSING_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the index, starting from 1.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    private static final String TASK_TITLE_MISSING_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the title of the task.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    private static final String TASK_DATE_TIME_MISSING_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! You didn\u0027t specify the date and time of the task.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"    private static final String DATE_TIME_FORMAT_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"            \"Oops! The date and time should follow the format: \" + INPUT_DATE_TIME_FORMAT;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e addDeadlineCommandSupplier \u003d commandArgument -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"            String taskTitle \u003d getTaskTitle(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            LocalDateTime deadline \u003d getByDate(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"            DeadlineTask task \u003d new DeadlineTask(taskTitle, deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new AddDeadlineCommand(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingTaskTitleException | DukeCommandFormatException | DukeMissingTaskDateTimeException","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"                 | DukeDateTimeFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"        return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e addEventCommandSupplier \u003d commandArgument -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"        Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"            String taskTitle \u003d getTaskTitle(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"            LocalDateTime dateTime \u003d getAtDate(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"            EventTask task \u003d new EventTask(taskTitle, dateTime);","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new AddEventCommand(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingTaskTitleException | DukeCommandFormatException | DukeMissingTaskDateTimeException","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"                 | DukeDateTimeFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"        return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e addTodoCommandSupplier \u003d commandArgument -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"        Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"            String taskTitle \u003d getTaskTitle(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"            TodoTask task \u003d new TodoTask(taskTitle);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new AddTodoCommand(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingTaskTitleException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"        return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e deleteCommandSupplier \u003d commandArgument -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"        Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"            int taskIndex \u003d getTaskIndexFromCommand(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new DeleteCommand(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingIndexException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"        return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e displayListCommandSupplier \u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"Hongyi6328"},"content":"            commandArgument -\u003e new DisplayListCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e exitCommandSupplier \u003d commandArgument -\u003e new ExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e findCommandSupplier \u003d FindCommand::new;","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e markDoneCommandSupplier \u003d commandArgument -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"Hongyi6328"},"content":"        Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"Hongyi6328"},"content":"            int taskIndex \u003d getTaskIndexFromCommand(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new MarkDoneCommand(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingIndexException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"Hongyi6328"},"content":"        return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"Hongyi6328"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e markUndoneCommandSupplier \u003d commandArgument -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"Hongyi6328"},"content":"        Command newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"Hongyi6328"},"content":"            int taskIndex \u003d getTaskIndexFromCommand(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new MarkUndoneCommand(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingIndexException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"Hongyi6328"},"content":"            newCommand \u003d new ErrorCommand(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"Hongyi6328"},"content":"        return newCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"Hongyi6328"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"Hongyi6328"},"content":"    private static final Function\u003cString, Command\u003e unknownCommandSupplier \u003d commandArgument -\u003e new UnknownCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"Hongyi6328"},"content":"    private final Map\u003cString, Function\u003cString, Command\u003e\u003e commandMap;","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"Hongyi6328"},"content":"     * Initialises the commandMap that maps command instructions to their corresponding Command supplier/generator.","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"Hongyi6328"},"content":"    public Parser() {","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"Hongyi6328"},"content":"        commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.ADD_DEADLINE.toString(), addDeadlineCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.ADD_EVENT.toString(), addEventCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.ADD_TODO.toString(), addTodoCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.DELETE.toString(), deleteCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.DISPLAY_LIST.toString(), displayListCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.EXIT.toString(), exitCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.FIND.toString(), findCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.MARK_DONE.toString(), markDoneCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"Hongyi6328"},"content":"        commandMap.put(CommandType.MARK_UNDONE.toString(), markUndoneCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"Hongyi6328"},"content":"     * Transforms a command string to a real Command object, which can be subsequently executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"Hongyi6328"},"content":"     * @param input The command string read by Ui.","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"Hongyi6328"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"Hongyi6328"},"content":"    public Command parse(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"Hongyi6328"},"content":"        String instruction \u003d getCommandInstruction(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"Hongyi6328"},"content":"        String argument \u003d getCommandArgument(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"Hongyi6328"},"content":"        Function\u003cString, Command\u003e supplier \u003d commandMap.getOrDefault(instruction, unknownCommandSupplier);","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"Hongyi6328"},"content":"        return supplier.apply(argument);","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"Hongyi6328"},"content":"    private static int getIndexOfFirstOccurrence(String input, String pattern) {","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstOccurrence \u003d input.indexOf(pattern);","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"Hongyi6328"},"content":"        if (indexOfFirstOccurrence \u003d\u003d -1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"Hongyi6328"},"content":"            indexOfFirstOccurrence \u003d input.length();","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"Hongyi6328"},"content":"        return indexOfFirstOccurrence;","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"Hongyi6328"},"content":"    private static int getIndexOfFirstWhiteSpace(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"Hongyi6328"},"content":"        return getIndexOfFirstOccurrence(input, \" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"Hongyi6328"},"content":"    private static int getIndexOfFirstDelimiter(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"Hongyi6328"},"content":"        return getIndexOfFirstOccurrence(input, DELIMITER);","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"Hongyi6328"},"content":"    private static String getCommandInstruction(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstWhiteSpace \u003d getIndexOfFirstWhiteSpace(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":171,"author":{"gitId":"Hongyi6328"},"content":"        String rawInstruction \u003d input.substring(0, indexOfFirstWhiteSpace);","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"Hongyi6328"},"content":"        return removeHeadingAndTailingWhiteSpaces(rawInstruction);","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"Hongyi6328"},"content":"    private static String getCommandArgument(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstWhiteSpace \u003d getIndexOfFirstWhiteSpace(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"Hongyi6328"},"content":"        String rawArgument \u003d input.substring(indexOfFirstWhiteSpace);","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"Hongyi6328"},"content":"        return removeHeadingAndTailingWhiteSpaces(rawArgument);","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"Hongyi6328"},"content":"    private static String getTaskTitle(String commandArgument) throws DukeMissingTaskTitleException {","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfEnd \u003d getIndexOfFirstDelimiter(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"Hongyi6328"},"content":"        String roughTaskTitle \u003d commandArgument.substring(0, indexOfEnd);","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"Hongyi6328"},"content":"        String realTaskTitle \u003d removeHeadingAndTailingWhiteSpaces(roughTaskTitle);","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"Hongyi6328"},"content":"        if (realTaskTitle.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingTaskTitleException(TASK_TITLE_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"Hongyi6328"},"content":"        return removeHeadingAndTailingWhiteSpaces(roughTaskTitle);","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"Hongyi6328"},"content":"    private static LocalDateTime getByDate(String commandArgument)","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"Hongyi6328"},"content":"            throws DukeCommandFormatException, DukeMissingTaskDateTimeException, DukeDateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfDelimiter \u003d getIndexOfFirstOccurrence(commandArgument, BY_DATE_DELIMITER);","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"Hongyi6328"},"content":"        if (indexOfDelimiter \u003d\u003d commandArgument.length()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeCommandFormatException(MISSING_BY_DELIMITER_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":196,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":197,"author":{"gitId":"Hongyi6328"},"content":"        String rawDateString \u003d commandArgument.substring(indexOfDelimiter + BY_DATE_DELIMITER.length());","lastModifiedDate":"2022-08-26"},{"lineNumber":198,"author":{"gitId":"Hongyi6328"},"content":"        String refinedDateString \u003d removeHeadingAndTailingWhiteSpaces(rawDateString);","lastModifiedDate":"2022-08-25"},{"lineNumber":199,"author":{"gitId":"Hongyi6328"},"content":"        if (refinedDateString.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":200,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingTaskDateTimeException(TASK_DATE_TIME_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":201,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"Hongyi6328"},"content":"        return getLocalDateTimeFromString(refinedDateString);","lastModifiedDate":"2022-08-25"},{"lineNumber":203,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":204,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":205,"author":{"gitId":"Hongyi6328"},"content":"    private static LocalDateTime getAtDate(String commandArgument)","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"Hongyi6328"},"content":"            throws DukeCommandFormatException, DukeMissingTaskDateTimeException, DukeDateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfDelimiter \u003d getIndexOfFirstOccurrence(commandArgument, AT_DATE_DELIMITER);","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"Hongyi6328"},"content":"        if (indexOfDelimiter \u003d\u003d commandArgument.length()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":209,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeCommandFormatException(MISSING_AT_DELIMITER_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":211,"author":{"gitId":"Hongyi6328"},"content":"        String rawDateString \u003d commandArgument.substring(indexOfDelimiter + AT_DATE_DELIMITER.length());","lastModifiedDate":"2022-08-26"},{"lineNumber":212,"author":{"gitId":"Hongyi6328"},"content":"        String refinedDateString \u003d removeHeadingAndTailingWhiteSpaces(rawDateString);","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"Hongyi6328"},"content":"        if (refinedDateString.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingTaskDateTimeException(TASK_DATE_TIME_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":215,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":216,"author":{"gitId":"Hongyi6328"},"content":"        return getLocalDateTimeFromString(refinedDateString);","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":218,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":219,"author":{"gitId":"Hongyi6328"},"content":"    private static int getTaskIndexFromCommand(String commandArgument) throws DukeMissingIndexException {","lastModifiedDate":"2022-08-26"},{"lineNumber":220,"author":{"gitId":"Hongyi6328"},"content":"        int indexOfFirstWhiteSpace \u003d Parser.getIndexOfFirstWhiteSpace(commandArgument);","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"Hongyi6328"},"content":"        String tailSubString \u003d commandArgument.substring(0, indexOfFirstWhiteSpace);","lastModifiedDate":"2022-08-26"},{"lineNumber":222,"author":{"gitId":"Hongyi6328"},"content":"        tailSubString \u003d tailSubString.replace(\" \", \"\");","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"Hongyi6328"},"content":"        if (tailSubString.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingIndexException(INDEX_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":225,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"Hongyi6328"},"content":"        int taskIndex;","lastModifiedDate":"2022-08-24"},{"lineNumber":227,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":228,"author":{"gitId":"Hongyi6328"},"content":"            taskIndex \u003d Integer.parseInt(tailSubString) - 1; // Minus 1 because user input indices start from 1","lastModifiedDate":"2022-08-21"},{"lineNumber":229,"author":{"gitId":"Hongyi6328"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":230,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeMissingIndexException(INDEX_MISSING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":231,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"Hongyi6328"},"content":"        return taskIndex;","lastModifiedDate":"2022-08-21"},{"lineNumber":233,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":234,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":235,"author":{"gitId":"Hongyi6328"},"content":"    private static String removeHeadingAndTailingWhiteSpaces(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":236,"author":{"gitId":"Hongyi6328"},"content":"        int start \u003d 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":237,"author":{"gitId":"Hongyi6328"},"content":"        int end \u003d input.length();","lastModifiedDate":"2022-08-24"},{"lineNumber":238,"author":{"gitId":"Hongyi6328"},"content":"        while (start \u003c input.length() \u0026\u0026 Character.isWhitespace(input.charAt(start))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":239,"author":{"gitId":"Hongyi6328"},"content":"            start++;","lastModifiedDate":"2022-08-24"},{"lineNumber":240,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":241,"author":{"gitId":"Hongyi6328"},"content":"        while (end \u003e start \u0026\u0026 Character.isWhitespace(input.charAt(end - 1))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":242,"author":{"gitId":"Hongyi6328"},"content":"            end--;","lastModifiedDate":"2022-08-24"},{"lineNumber":243,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":244,"author":{"gitId":"Hongyi6328"},"content":"        return input.substring(start, end);","lastModifiedDate":"2022-08-24"},{"lineNumber":245,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":246,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":247,"author":{"gitId":"Hongyi6328"},"content":"    private static LocalDateTime getLocalDateTimeFromString(String input) throws DukeDateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":248,"author":{"gitId":"Hongyi6328"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_TIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":249,"author":{"gitId":"Hongyi6328"},"content":"        LocalDateTime output;","lastModifiedDate":"2022-08-25"},{"lineNumber":250,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":251,"author":{"gitId":"Hongyi6328"},"content":"            output \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":252,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":253,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeDateTimeFormatException(DATE_TIME_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":254,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":255,"author":{"gitId":"Hongyi6328"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":256,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":257,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":257}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":" * This class is responsible for file saving. It plays a database-like role.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    private static final String FILE_IO_ERROR_MESSAGE \u003d \"Oops! Something went wrong when saving the file!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor of the class.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Deserializes the TaskList and saves it as plain text.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @param fileStream The string to be saved in the specified path.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     * @throws DukeIoException This exception occurs when the file cannot be created or over-written.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"    public void saveFile(String fileStream) throws DukeIoException {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"                if (!file.createNewFile()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"                    throw new DukeIoException(FILE_IO_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"            fileWriter.write(fileStream, 0, fileStream.length());","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIoException(FILE_IO_ERROR_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":47}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":" * A wrapper class that wraps a list of Task and facilitates some fundamental operations, such as add, find, delete and","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":" * modify.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    private static final String TAB \u003d Duke.TAB;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"The list is empty.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"    private static final String NOTHING_FOUND_MESSAGE \u003d \"Sorry, nothing found in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"     * The standard constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"     * Gives the current state of each Task saved in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"     * @return a readable string that represents the internal state in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"    public String getListInfo() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"            stringBuilder.append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"Hongyi6328"},"content":"            if (i \u003c len - 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Hongyi6328"},"content":"                stringBuilder.append(\u0027\\n\u0027 + TAB);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Hongyi6328"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"Hongyi6328"},"content":"     * Adds a new task to the list and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"Hongyi6328"},"content":"     * @param newTask The Task to be added into the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"Hongyi6328"},"content":"    public String addNewTask(Task newTask) throws DukeCommandFormatException, DukeMissingTaskTitleException, DukeMissingTaskDateTimeException, DukeDateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"Hongyi6328"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Hongyi6328"},"content":"        return \"Added: \" + newTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"Hongyi6328"},"content":"     * Mark the index-th Task as done and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"Hongyi6328"},"content":"     * @param index The index indicating which Task to mark.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"Hongyi6328"},"content":"    public String markTaskDone(int index) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Hongyi6328"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIndexOutOfBoundException(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"Hongyi6328"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Hongyi6328"},"content":"            Task targetTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Hongyi6328"},"content":"            targetTask.markDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Hongyi6328"},"content":"            return targetTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"Hongyi6328"},"content":"     * Mark the index-th Task as undone and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"Hongyi6328"},"content":"     * @param index The index indicating which Task to mark.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"Hongyi6328"},"content":"    public String markTaskUndone(int index) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Hongyi6328"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIndexOutOfBoundException(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"Hongyi6328"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"Hongyi6328"},"content":"            Task targetTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Hongyi6328"},"content":"            targetTask.markUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Hongyi6328"},"content":"            return targetTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"Hongyi6328"},"content":"     * Remove the index-th Task from the list and returns a string as a follow-up of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"Hongyi6328"},"content":"     * @param index The index indicating which Task to delete.","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string as a response of the operation.","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"Hongyi6328"},"content":"    public String deleteTask(int index) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Hongyi6328"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Hongyi6328"},"content":"            throw new DukeIndexOutOfBoundException(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"Hongyi6328"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Hongyi6328"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"Hongyi6328"},"content":"            return removedTask.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a structured string that is convenient to be saved in a .txt file.","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"Hongyi6328"},"content":"     * @return A formatted string representing the internal state of the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"Hongyi6328"},"content":"    public String getFileStream() {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"Hongyi6328"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Hongyi6328"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"Hongyi6328"},"content":"            stringBuilder.append(tasks.get(i).getFileRepresentation()).append(\u0027\\n\u0027);","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"Hongyi6328"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"Hongyi6328"},"content":"     * Finds every Task in the list whose title contains the keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"Hongyi6328"},"content":"     * @param keyword The keyword to look up.","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string carrying all matched results.","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"Hongyi6328"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"Hongyi6328"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"Hongyi6328"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"Hongyi6328"},"content":"            return \u0027n\u0027 + TAB + EMPTY_LIST_MESSAGE;","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"Hongyi6328"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"Hongyi6328"},"content":"        int displayIndex \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"Hongyi6328"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"Hongyi6328"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"Hongyi6328"},"content":"            if (curr.contains(keyword)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"Hongyi6328"},"content":"                stringBuilder.append(\u0027\\n\u0027 + TAB).append(displayIndex++).append(\". \").append(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"Hongyi6328"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"Hongyi6328"},"content":"        if (displayIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"Hongyi6328"},"content":"            stringBuilder.append(NOTHING_FOUND_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"Hongyi6328"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"Hongyi6328"},"content":"     * Returns true if and only if there is one Task in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"Hongyi6328"},"content":"     * @return Whether there is only one Task in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"Hongyi6328"},"content":"    public boolean hasOnlyOneTask() {","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"Hongyi6328"},"content":"        return tasks.size() \u003d\u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"Hongyi6328"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"Hongyi6328"},"content":"     * @return The number of Task in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"Hongyi6328"},"content":"    public int size() {","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"Hongyi6328"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":168}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":" * A class that is responsible for reading user input and printing computated output.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":" * It is the frontend of the application.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    private static final String HORIZONTAL_BAR \u003d \"-------------------------\";","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    private static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"     * Returns a new instance of Ui that makes use of a scanner reading the standard system input.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"    public Ui() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"    private static String formatOutput(String output) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"        return HORIZONTAL_BAR + \u0027\\n\u0027 + INDENTATION + output + \u0027\\n\u0027 + HORIZONTAL_BAR + \u0027\\n\u0027 + \u0027\\n\u0027;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"     * Reads user input line by line. If the user has not entered anything yet, it will wait.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"Hongyi6328"},"content":"     * @return A string that carries what the user types.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"Hongyi6328"},"content":"    public String readInput() {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"Hongyi6328"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"Hongyi6328"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"Hongyi6328"},"content":"     * Formats and prints a message passed from other computational process.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"Hongyi6328"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"Hongyi6328"},"content":"     * @param output The message to be formatted and printed on the screen.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"Hongyi6328"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"Hongyi6328"},"content":"    public void printOutput(String output) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Hongyi6328"},"content":"        System.out.println(formatOutput(output));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hongyi6328":42}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"public class DukeTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":4}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import duke.exception.DukeMissingTaskDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"    Parser testSubject \u003d new Parser();","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"    public void getByDate_missingTimeInput_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"        String input \u003d \"todo read book /by    \";","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Hongyi6328"},"content":"            Parser.getByDate(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Hongyi6328"},"content":"        } catch (DukeMissingTaskDateTimeException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"Hongyi6328"},"content":"            // Test passed","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"Hongyi6328"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Hongyi6328"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Hongyi6328"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Hongyi6328"},"content":"    */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":26}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hongyi6328"},"content":"package duke.util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Hongyi6328"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Hongyi6328"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Hongyi6328"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Hongyi6328"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Hongyi6328"},"content":"    TaskList testSubject \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Hongyi6328"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Hongyi6328"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Hongyi6328"},"content":"    public void getListInfo_emptyInput_specialHintOutput() {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Hongyi6328"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Hongyi6328"},"content":"        assertEquals(taskList.getListInfo(), \"The list is empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Hongyi6328"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Hongyi6328"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Hongyi6328":17}}]

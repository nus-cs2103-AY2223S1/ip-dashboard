[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":" * Deadline class has a by field","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"    protected String by;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"        String status;","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"            status \u003d String.format(\"[D][âœ“] %s\", this.description);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"            status \u003d String.format(\"[D][ ] %s (by: %s)\", this.description, by);","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"        return status;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"    private static ArrayList\u003cTask\u003e userInputHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"    enum CommandType {TODO, MARK, UNMARK, DEADLINE, EVENT, BYE, LIST};","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"    private static void greetUser() {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"        String logo \u003d \"_______     _\\n\" +","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"                \"|  ___|    | |\\n\" +","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"                \"|  |_  ____| |_____ ____  _  __\\n\" +","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"                \"|   _|/ _  \\\\ | ___|/  _ \\\\| |/  \\\\\\n\"+","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"                \"|  | | |_| | | |___| |_| |  / \\\\ |\\n\" +","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"                \"|__|  \\\\__|_|_|____|\\\\____/|_|  |_|\\n\";","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.println(\"Hello from\" );","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"        // prompt user","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.println(\"Where would you like to go next?\");","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"     * Method to add Task to history","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"     * @param s String description to add to userInputHistory","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"    private static void addTaskToHistory(String s) {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"        Task newTask \u003d new Task(s);","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"        userInputHistory.add(newTask);","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"        //echo request","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.printf(\"Noted down: %s\\n There are %d items on your list now. \\n\", s, userInputHistory.size());","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e\");","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"     * Method to add Event to userInputHistory","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"     * @param description","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"     * @param at","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"    private static void addEventToHistory(String description, String at) {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"        Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"        userInputHistory.add(newEvent);","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"        //echo request","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.printf(\"Noted down: %s\\n There are %d items on your list now. \\n\", description, userInputHistory.size());","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e\");","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"     * Method to add Event to userInputHistory","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"     * @param description","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"     * @param by","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"    private static void addDeadlineToHistory(String description, String by) {","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"        userInputHistory.add(newDeadline);","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"Thing1Thing2"},"content":"        //echo request","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.printf(\"Noted down: %s\\n There are %d items on your list now. \\n\", description, userInputHistory.size());","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e\");","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"     * Method to show history","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"Thing1Thing2"},"content":"    private static void showHistory() {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"______\\n\");","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.println(\"Tasks in your list are: \");","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"Thing1Thing2"},"content":"        for (Task t: userInputHistory) {","lastModifiedDate":"2022-08-13"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"            System.out.printf(\"%d. %s\\n\",count, t);","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"            count ++;","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"        userInputHistory.forEach(input -\u003e {","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"Thing1Thing2"},"content":"        });","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.printf(\"Total: %d\\n\", userInputHistory.size());","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"______\\n\");","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e\");","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"     * Mark Task at index n in list.","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"Thing1Thing2"},"content":"     * No checks performed to check if task is already marked.","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"Thing1Thing2"},"content":"     * @param n task to mark as done (n - 1) index in actual list","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"    public static void markTask(int n) {","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"Thing1Thing2"},"content":"        Task taskToModify \u003d userInputHistory.get(n - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"Thing1Thing2"},"content":"        taskToModify.markAsDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.printf(\"Marked task %d \\n%s\\n\", n, taskToModify);","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e\");","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"     * Un-mark task at index n in list.","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"     * No checks performed to check if task is already unmarked.","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"     * @param n task to mark as not done (n - 1) index in actual list","lastModifiedDate":"2022-08-14"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"    public static void unmarkTask(int n)  {","lastModifiedDate":"2022-08-13"},{"lineNumber":97,"author":{"gitId":"Thing1Thing2"},"content":"        Task taskToModify \u003d userInputHistory.get(n - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"        taskToModify.markAsNotDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":99,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.printf(\"Unmarked task %d \\n%s\\n\", n, taskToModify);","lastModifiedDate":"2022-08-14"},{"lineNumber":100,"author":{"gitId":"Thing1Thing2"},"content":"        System.out.print(\"\u003e\u003e\");","lastModifiedDate":"2022-08-14"},{"lineNumber":101,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":103,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"     * Extract task number from string input","lastModifiedDate":"2022-08-13"},{"lineNumber":105,"author":{"gitId":"Thing1Thing2"},"content":"     * @param s extracts task number from user input","lastModifiedDate":"2022-08-14"},{"lineNumber":106,"author":{"gitId":"Thing1Thing2"},"content":"     * @return index of the task in the list plus one","lastModifiedDate":"2022-08-14"},{"lineNumber":107,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":108,"author":{"gitId":"Thing1Thing2"},"content":"    private static int getTaskNumber(String s) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":109,"author":{"gitId":"Thing1Thing2"},"content":"        // credit: https://stackoverflow.com/questions/14974033/extract-digits-from-string-stringutils-java","lastModifiedDate":"2022-08-13"},{"lineNumber":110,"author":{"gitId":"Thing1Thing2"},"content":"        String numberOnly\u003d s.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2022-08-13"},{"lineNumber":111,"author":{"gitId":"Thing1Thing2"},"content":"        int n;","lastModifiedDate":"2022-08-15"},{"lineNumber":112,"author":{"gitId":"Thing1Thing2"},"content":"        if (numberOnly.length() \u003c\u003d 0) {","lastModifiedDate":"2022-08-15"},{"lineNumber":113,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException(\"no number given\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":114,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"Thing1Thing2"},"content":"            n \u003d Integer.parseInt(numberOnly);","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"Thing1Thing2"},"content":"            if (n \u003e userInputHistory.size()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":117,"author":{"gitId":"Thing1Thing2"},"content":"                throw new DukeException(\"task does not exist is list\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":118,"author":{"gitId":"Thing1Thing2"},"content":"            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":119,"author":{"gitId":"Thing1Thing2"},"content":"                return n;","lastModifiedDate":"2022-08-15"},{"lineNumber":120,"author":{"gitId":"Thing1Thing2"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":121,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":122,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":123,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":124,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":125,"author":{"gitId":"Thing1Thing2"},"content":"     * Filter userInput and call addEventToHistory","lastModifiedDate":"2022-08-14"},{"lineNumber":126,"author":{"gitId":"Thing1Thing2"},"content":"     * @param event","lastModifiedDate":"2022-08-14"},{"lineNumber":127,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":128,"author":{"gitId":"Thing1Thing2"},"content":"    private static void handleEvent(String event) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"Thing1Thing2"},"content":"        String description, at;","lastModifiedDate":"2022-08-14"},{"lineNumber":130,"author":{"gitId":"Thing1Thing2"},"content":"        description \u003d getDescription(event, \"event\");","lastModifiedDate":"2022-08-15"},{"lineNumber":131,"author":{"gitId":"Thing1Thing2"},"content":"        at \u003d getDate(event);","lastModifiedDate":"2022-08-15"},{"lineNumber":132,"author":{"gitId":"Thing1Thing2"},"content":"        addEventToHistory(description, at);","lastModifiedDate":"2022-08-14"},{"lineNumber":133,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":134,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":135,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":136,"author":{"gitId":"Thing1Thing2"},"content":"     * Filter userInput and call addDeadlineToHistory","lastModifiedDate":"2022-08-14"},{"lineNumber":137,"author":{"gitId":"Thing1Thing2"},"content":"     * @param deadline","lastModifiedDate":"2022-08-14"},{"lineNumber":138,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":139,"author":{"gitId":"Thing1Thing2"},"content":"    private static void handleDeadline(String deadline) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":140,"author":{"gitId":"Thing1Thing2"},"content":"        String description, by;","lastModifiedDate":"2022-08-15"},{"lineNumber":141,"author":{"gitId":"Thing1Thing2"},"content":"        description \u003d getDescription(deadline, \"deadline\");","lastModifiedDate":"2022-08-15"},{"lineNumber":142,"author":{"gitId":"Thing1Thing2"},"content":"        by \u003d getDate(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"Thing1Thing2"},"content":"        addDeadlineToHistory(description, by);","lastModifiedDate":"2022-08-14"},{"lineNumber":144,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":145,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":146,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":147,"author":{"gitId":"Thing1Thing2"},"content":"     * Filter userInput and call addDeadlineToHistory","lastModifiedDate":"2022-08-15"},{"lineNumber":148,"author":{"gitId":"Thing1Thing2"},"content":"     * @param task","lastModifiedDate":"2022-08-15"},{"lineNumber":149,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":150,"author":{"gitId":"Thing1Thing2"},"content":"    private static void handleTask(String task) throws DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":151,"author":{"gitId":"Thing1Thing2"},"content":"        String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":152,"author":{"gitId":"Thing1Thing2"},"content":"        description \u003d getDescription(task, \"todo\");","lastModifiedDate":"2022-08-15"},{"lineNumber":153,"author":{"gitId":"Thing1Thing2"},"content":"        addTaskToHistory(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":154,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":156,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":157,"author":{"gitId":"Thing1Thing2"},"content":"     * Return enum command type used","lastModifiedDate":"2022-08-15"},{"lineNumber":158,"author":{"gitId":"Thing1Thing2"},"content":"     * @param userInput","lastModifiedDate":"2022-08-15"},{"lineNumber":159,"author":{"gitId":"Thing1Thing2"},"content":"     * @return","lastModifiedDate":"2022-08-15"},{"lineNumber":160,"author":{"gitId":"Thing1Thing2"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":161,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":162,"author":{"gitId":"Thing1Thing2"},"content":"    private static CommandType getCommand(String userInput) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":163,"author":{"gitId":"Thing1Thing2"},"content":"        int firstWhiteSpace \u003d userInput.trim().indexOf(\" \");","lastModifiedDate":"2022-08-15"},{"lineNumber":164,"author":{"gitId":"Thing1Thing2"},"content":"        String command;","lastModifiedDate":"2022-08-15"},{"lineNumber":165,"author":{"gitId":"Thing1Thing2"},"content":"        CommandType commandGiven;","lastModifiedDate":"2022-08-15"},{"lineNumber":166,"author":{"gitId":"Thing1Thing2"},"content":"        command \u003d firstWhiteSpace \u003c 0 ? userInput: userInput.trim().substring(0, firstWhiteSpace);","lastModifiedDate":"2022-08-15"},{"lineNumber":167,"author":{"gitId":"Thing1Thing2"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":168,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException(\"no command given\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":169,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":170,"author":{"gitId":"Thing1Thing2"},"content":"            for (CommandType c : CommandType.values()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":171,"author":{"gitId":"Thing1Thing2"},"content":"                if(c.name().equalsIgnoreCase(command)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":172,"author":{"gitId":"Thing1Thing2"},"content":"                    return c;","lastModifiedDate":"2022-08-15"},{"lineNumber":173,"author":{"gitId":"Thing1Thing2"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":174,"author":{"gitId":"Thing1Thing2"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":175,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":176,"author":{"gitId":"Thing1Thing2"},"content":"        return null;","lastModifiedDate":"2022-08-15"},{"lineNumber":177,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":178,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":179,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":180,"author":{"gitId":"Thing1Thing2"},"content":"     * Menu handler","lastModifiedDate":"2022-08-14"},{"lineNumber":181,"author":{"gitId":"Thing1Thing2"},"content":"     * @param userInput","lastModifiedDate":"2022-08-14"},{"lineNumber":182,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":183,"author":{"gitId":"Thing1Thing2"},"content":"    private static void handleInput(String userInput) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":184,"author":{"gitId":"Thing1Thing2"},"content":"        CommandType command \u003d getCommand(userInput);","lastModifiedDate":"2022-08-15"},{"lineNumber":185,"author":{"gitId":"Thing1Thing2"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2022-08-15"},{"lineNumber":186,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException( \"Enter a valid command (todo, event, deadline, list, mark, unmark, bye)\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":187,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":188,"author":{"gitId":"Thing1Thing2"},"content":"            switch (command) {","lastModifiedDate":"2022-08-15"},{"lineNumber":189,"author":{"gitId":"Thing1Thing2"},"content":"                case BYE:","lastModifiedDate":"2022-08-15"},{"lineNumber":190,"author":{"gitId":"Thing1Thing2"},"content":"                    System.out.println(\"Thank you for swinging by :)\");","lastModifiedDate":"2022-08-13"},{"lineNumber":191,"author":{"gitId":"Thing1Thing2"},"content":"                    System.exit(0);","lastModifiedDate":"2022-08-13"},{"lineNumber":192,"author":{"gitId":"Thing1Thing2"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":193,"author":{"gitId":"Thing1Thing2"},"content":"                case LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":194,"author":{"gitId":"Thing1Thing2"},"content":"                    showHistory();","lastModifiedDate":"2022-08-13"},{"lineNumber":195,"author":{"gitId":"Thing1Thing2"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":196,"author":{"gitId":"Thing1Thing2"},"content":"                case MARK:","lastModifiedDate":"2022-08-15"},{"lineNumber":197,"author":{"gitId":"Thing1Thing2"},"content":"                    markTask(getTaskNumber(userInput));","lastModifiedDate":"2022-08-13"},{"lineNumber":198,"author":{"gitId":"Thing1Thing2"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":199,"author":{"gitId":"Thing1Thing2"},"content":"                    case UNMARK:","lastModifiedDate":"2022-08-15"},{"lineNumber":200,"author":{"gitId":"Thing1Thing2"},"content":"                        unmarkTask(getTaskNumber(userInput));","lastModifiedDate":"2022-08-13"},{"lineNumber":201,"author":{"gitId":"Thing1Thing2"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":202,"author":{"gitId":"Thing1Thing2"},"content":"                case TODO:","lastModifiedDate":"2022-08-15"},{"lineNumber":203,"author":{"gitId":"Thing1Thing2"},"content":"                    handleTask(userInput);","lastModifiedDate":"2022-08-15"},{"lineNumber":204,"author":{"gitId":"Thing1Thing2"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":205,"author":{"gitId":"Thing1Thing2"},"content":"                case EVENT:","lastModifiedDate":"2022-08-15"},{"lineNumber":206,"author":{"gitId":"Thing1Thing2"},"content":"                    handleEvent(userInput);","lastModifiedDate":"2022-08-14"},{"lineNumber":207,"author":{"gitId":"Thing1Thing2"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":208,"author":{"gitId":"Thing1Thing2"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-15"},{"lineNumber":209,"author":{"gitId":"Thing1Thing2"},"content":"                    handleDeadline(userInput);","lastModifiedDate":"2022-08-15"},{"lineNumber":210,"author":{"gitId":"Thing1Thing2"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":211,"author":{"gitId":"Thing1Thing2"},"content":"                default:","lastModifiedDate":"2022-08-15"},{"lineNumber":212,"author":{"gitId":"Thing1Thing2"},"content":"                    handleDeadline(userInput);","lastModifiedDate":"2022-08-14"},{"lineNumber":213,"author":{"gitId":"Thing1Thing2"},"content":"                    throw new DukeException(\"Enter a valid command (todo, event, deadline, list, mark, unmark, bye)\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":214,"author":{"gitId":"Thing1Thing2"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":215,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":216,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":217,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":218,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":219,"author":{"gitId":"Thing1Thing2"},"content":"     * Grabs description from string which is expected to have format:","lastModifiedDate":"2022-08-15"},{"lineNumber":220,"author":{"gitId":"Thing1Thing2"},"content":"     * \u003ccommand\u003e \u003cdescription\u003e...","lastModifiedDate":"2022-08-15"},{"lineNumber":221,"author":{"gitId":"Thing1Thing2"},"content":"     * @param command","lastModifiedDate":"2022-08-15"},{"lineNumber":222,"author":{"gitId":"Thing1Thing2"},"content":"     * @param commandUsed","lastModifiedDate":"2022-08-15"},{"lineNumber":223,"author":{"gitId":"Thing1Thing2"},"content":"     * @return","lastModifiedDate":"2022-08-15"},{"lineNumber":224,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":225,"author":{"gitId":"Thing1Thing2"},"content":"    private static String getDescription(String command, String commandUsed) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":226,"author":{"gitId":"Thing1Thing2"},"content":"        String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":227,"author":{"gitId":"Thing1Thing2"},"content":"        int startDescriptionIndex \u003d command.indexOf(commandUsed) + commandUsed.length();","lastModifiedDate":"2022-08-15"},{"lineNumber":228,"author":{"gitId":"Thing1Thing2"},"content":"        int endDescriptionIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2022-08-15"},{"lineNumber":229,"author":{"gitId":"Thing1Thing2"},"content":"        if (startDescriptionIndex \u003c 0) {","lastModifiedDate":"2022-08-15"},{"lineNumber":230,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException(\"Command does not follow pattern \u003ccommand\u003e \u003cdescription\u003e...\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":231,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":232,"author":{"gitId":"Thing1Thing2"},"content":"            if (commandUsed \u003d\u003d \"event\" || commandUsed \u003d\u003d \"deadline\") {","lastModifiedDate":"2022-08-15"},{"lineNumber":233,"author":{"gitId":"Thing1Thing2"},"content":"                if (endDescriptionIndex \u003c 0) {","lastModifiedDate":"2022-08-15"},{"lineNumber":234,"author":{"gitId":"Thing1Thing2"},"content":"                    throw new DukeException(\"Command does not follow pattern  ... /\u003cat/by\u003e \u003cdate in HH:MM DD:MM:YYYY\u003e\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":235,"author":{"gitId":"Thing1Thing2"},"content":"                } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":236,"author":{"gitId":"Thing1Thing2"},"content":"                    description \u003d command.substring(startDescriptionIndex, endDescriptionIndex).trim();","lastModifiedDate":"2022-08-15"},{"lineNumber":237,"author":{"gitId":"Thing1Thing2"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":238,"author":{"gitId":"Thing1Thing2"},"content":"            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":239,"author":{"gitId":"Thing1Thing2"},"content":"                description \u003d command.substring(startDescriptionIndex).trim();","lastModifiedDate":"2022-08-15"},{"lineNumber":240,"author":{"gitId":"Thing1Thing2"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":241,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":242,"author":{"gitId":"Thing1Thing2"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":243,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException(\"Empty description field\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":244,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":245,"author":{"gitId":"Thing1Thing2"},"content":"        return description;","lastModifiedDate":"2022-08-15"},{"lineNumber":246,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":247,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":248,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":249,"author":{"gitId":"Thing1Thing2"},"content":"     * Grabs date from string which is expected to have format:","lastModifiedDate":"2022-08-15"},{"lineNumber":250,"author":{"gitId":"Thing1Thing2"},"content":"     * ... /\u003cat/by\u003e \u003cdate in HH:MM DD:MM:YYYY\u003e","lastModifiedDate":"2022-08-15"},{"lineNumber":251,"author":{"gitId":"Thing1Thing2"},"content":"     * @param command - string to extract date from","lastModifiedDate":"2022-08-15"},{"lineNumber":252,"author":{"gitId":"Thing1Thing2"},"content":"     * @return \u003cdate\u003e component of command","lastModifiedDate":"2022-08-15"},{"lineNumber":253,"author":{"gitId":"Thing1Thing2"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":254,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":255,"author":{"gitId":"Thing1Thing2"},"content":"    private static String getDate(String command) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":256,"author":{"gitId":"Thing1Thing2"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-08-15"},{"lineNumber":257,"author":{"gitId":"Thing1Thing2"},"content":"        int startDateIndex \u003d command.indexOf(\"/\") + 2;","lastModifiedDate":"2022-08-15"},{"lineNumber":258,"author":{"gitId":"Thing1Thing2"},"content":"        if (startDateIndex \u003c 0) {","lastModifiedDate":"2022-08-15"},{"lineNumber":259,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException(\"Command does not follow pattern ... /\u003cat/by\u003e \u003cdate in HH:MM DD:MM:YYYY\u003e\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":260,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":261,"author":{"gitId":"Thing1Thing2"},"content":"            date \u003d command.substring(startDateIndex).trim();","lastModifiedDate":"2022-08-15"},{"lineNumber":262,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":263,"author":{"gitId":"Thing1Thing2"},"content":"        if (date.equals(\"\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":264,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DukeException(\"Empty date field\\n\u003e\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":265,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":266,"author":{"gitId":"Thing1Thing2"},"content":"        return date;","lastModifiedDate":"2022-08-15"},{"lineNumber":267,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":268,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-13"},{"lineNumber":270,"author":{"gitId":"Thing1Thing2"},"content":"        greetUser();","lastModifiedDate":"2022-08-13"},{"lineNumber":271,"author":{"gitId":"Thing1Thing2"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-13"},{"lineNumber":272,"author":{"gitId":"Thing1Thing2"},"content":"        String s;","lastModifiedDate":"2022-08-13"},{"lineNumber":273,"author":{"gitId":"Thing1Thing2"},"content":"        while(true) {","lastModifiedDate":"2022-08-13"},{"lineNumber":274,"author":{"gitId":"Thing1Thing2"},"content":"            try {","lastModifiedDate":"2022-08-14"},{"lineNumber":275,"author":{"gitId":"Thing1Thing2"},"content":"                s \u003d in.nextLine();","lastModifiedDate":"2022-08-13"},{"lineNumber":276,"author":{"gitId":"Thing1Thing2"},"content":"                handleInput(s);","lastModifiedDate":"2022-08-13"},{"lineNumber":277,"author":{"gitId":"Thing1Thing2"},"content":"            } catch (InputMismatchException ime) {","lastModifiedDate":"2022-08-14"},{"lineNumber":278,"author":{"gitId":"Thing1Thing2"},"content":"                System.out.print(ime);","lastModifiedDate":"2022-08-15"},{"lineNumber":279,"author":{"gitId":"Thing1Thing2"},"content":"                System.exit(0);","lastModifiedDate":"2022-08-14"},{"lineNumber":280,"author":{"gitId":"Thing1Thing2"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-08-15"},{"lineNumber":281,"author":{"gitId":"Thing1Thing2"},"content":"                System.out.print(de);","lastModifiedDate":"2022-08-15"},{"lineNumber":282,"author":{"gitId":"Thing1Thing2"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":283,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Thing1Thing2":281,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"     DukeException(String errorMessage) {","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"        super(\"DUKEERROR: \" + errorMessage);","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"    DukeException(String command, String errorMessage) {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"         super(\"DUKEERROR: \" + command + \" : \" + errorMessage);","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"        return getMessage();","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"Thing1Thing2":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":" * Event class has a date field.","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"    protected String date;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"        String status;","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"            status \u003d String.format(\"[E][âœ“] %s\", this.description);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"            status \u003d String.format(\"[E][ ] %s (at: %s)\", this.description, date);","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"        return status;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":" * Class to encapsulate Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"public class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"    protected String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"     * String encapsulates Task description and isDone status.","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"     * @return String representing Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"        String status;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"            status \u003d String.format(\"[T][âœ“] %s\", this.description);","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"        } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"            status \u003d String.format(\"[T][ ] %s\", this.description);","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"        return status;","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":1}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"todo home","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":3}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"event Welcome Tea /at 2oclock","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":3}},{"path":"text-ui-test/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"deadline CS2103T Week 2 iP /by next tutorial","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":3}},{"path":"text-ui-test/input4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"todo buy milk","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":4}},{"path":"text-ui-test/input5.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"deadline send email /by afternoon","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"todo have lunch","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"unmark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Thing1Thing2":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":" REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":" if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":" del ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":" REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"         exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         )","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"REM no error here, errorLevel \u003d\u003d 0","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"REM run the program, feed command from inputn.txt file and redirect the output to the ACTUAL.txt","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"         java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"         java -classpath ..\\bin Duke \u003c input1.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"         java -classpath ..\\bin Duke \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"         java -classpath ..\\bin Duke \u003c input3.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"         java -classpath ..\\bin Duke \u003c input4.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"         java -classpath ..\\bin Duke \u003c input5.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\t REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"         FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Thing1Thing2":8,"-":17}}]

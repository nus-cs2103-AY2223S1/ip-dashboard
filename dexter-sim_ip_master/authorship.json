[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dexter-sim":1,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":" * The main class for the Duke program.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     * Creates a Duke object with specified file path to load and store tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @param filePath The file path to the local file responsible for loading and saving.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"     * Runs the Duke program.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    public void run() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        ui.printGreeting();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"                String userInput \u003d ui.read();","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"                Command command \u003d Parser.parseInput(userInput);","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"                command.execute(storage, taskList, ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"                isExit \u003d command.canExit();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dexter-sim":50,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":" * Class for handling exceptions of Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"     * Creates a DukeException with specified error message.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"     * @param message The error message for the exception.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"        super(message);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"dexter-sim":18}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.command.*;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Class for parsing input string into commands to execute.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"public class Parser {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     * Returns a command based on the specified user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * @param userInput Represents the user input into the system.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @return A command based on the user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * @throws DukeException If user input is an invalid string command.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public static Command parseInput(String userInput) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"        if (userInput.equals(\"bye\") \u0026\u0026 split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"        if (userInput.equals(\"list\") \u0026\u0026 split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        if (split[0].equals(\"mark\") \u0026\u0026 split.length \u003d\u003d 2 \u0026\u0026 isNumeric(split[1])) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"            return new MarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        if (split[0].equals(\"unmark\") \u0026\u0026 split.length \u003d\u003d 2 \u0026\u0026 isNumeric(split[1])) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"            return new UnmarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        if (split[0].equals(\"delete\") \u0026\u0026 split.length \u003d\u003d 2 \u0026\u0026 isNumeric(split[1])) {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"            return new DeleteCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        if (split[0].equals(\"find\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"            String keyword \u003d userInput.substring(4).trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"            if (keyword.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"                throw new DukeException(\"OOPS!!! The keyword cannot be empty :-(\");","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"        if (split[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"            String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"            return new ToDoCommand(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"            if (split[0].equals(\"deadline\") \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"                int index \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"                String description \u003d userInput.substring(8, index).trim();","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"                return new DeadlineCommand(description, LocalDate.parse(userInput.substring(index + 3).trim()));","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"            if (split[0].equals(\"event\") \u0026\u0026 userInput.contains(\"/at\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"                int index \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"                String description \u003d userInput.substring(5, index).trim();","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"                return new EventCommand(description, LocalDate.parse(userInput.substring(index + 3).trim()));","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"Please format date in YYYY-MM-DD.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"    private static boolean isNumeric(String input) {","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"        for (char c : input.toCharArray()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"            if (c \u003c 48 || c \u003e 57) {","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"                return false;","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"        return true;","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":93}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import java.io.File;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":" * Class for loading and saving tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"public class Storage {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    private String filePath;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    private File file;","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * Creates a storage object of the specified file path.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param filePath Path from root directory to the file.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     * @throws DukeException If unable to create file.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"            // Does not overwrite directory or file if it already exists.","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"            file.getParentFile().mkdir();","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"Directory or file cannot be located. New file is created.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"     * Returns a list of tasks from storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"     * @return A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"     * @throws DukeException If file is inaccessible.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"                tasks.add(parse(scanner.nextLine()));","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"            scanner.close();","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"            return tasks;","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"File is inaccessible\");","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"     * Saves specified list of tasks to local file.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"     * @param tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"            data.add(task.stringify());","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"            fw.write(String.join(System.lineSeparator(), data));","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"            fw.close();","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"    private Task parse(String str) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"            String[] entry \u003d str.split(\" \\\\| \");","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"            if (entry[0].equals(\"T\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"                return new ToDo(entry[2], entry[1].equals(\"1\"));","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"            if (entry[0].equals(\"D\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"                return new Deadline(entry[2], entry[1].equals(\"1\"), LocalDate.parse(entry[3]));","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"            if (entry[0].equals(\"E\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"                return new Event(entry[2], entry[1].equals(\"1\"), LocalDate.parse(entry[3]));","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"Invalid string in file.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        throw new DukeException(\"Invalid string in file.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Class for storing a list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"public class TaskList {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskList with an empty ArrayList.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskList with specified input list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"     * Returns a list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * @return A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * Returns the size of the list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     * @return Size of the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"    public int size() {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"     * Marks task at specified index as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"     * @param index 0-indexed position of the task in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"     * @return The task at specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"     * @throws DukeException If index is negative or greater than size of list.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"Task number does not exist.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"        task.mark();","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"     * Marks task at specified index as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"     * @param index 0-indexed position of the task in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"     * @return The task at specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"     * @throws DukeException If index is negative or greater than size of list.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"        if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"Task number does not exist.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"        task.unmark();","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"     * Removes a task at specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"     * @param index 0-indexed position of the task in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"     * @return The task at specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"     * @throws DukeException If index is negative or greater than size of list.","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"        if (index \u003c 0 || index \u003e\u003d this.size()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"            throw new DukeException(\"Task number does not exist.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"        return tasks.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"     * Adds specified task into the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"     * @param task The specified task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"     * @return Task from input parameter.","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"     * Returns a TaskList with a specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"     * @param keyword The string to be checked.","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"     * @return A TaskList containing the tasks that match with the keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"    public TaskList findMatchingTasks(String keyword) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"            if (task.match(keyword)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"dexter-sim"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"dexter-sim"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"dexter-sim"},"content":"            result.append(String.format(\"%d. %s\\n\", 1 + i, tasks.get(i).toString()));","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"dexter-sim"},"content":"        return result.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":132}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * Class interacting with user input and printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public class Ui {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"            + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     * Creates ui object to handle input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public Ui() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"     * Prints Duke logo and greeting message.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"     * Returns a string read from input.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * @return A line of user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    public String read() {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"     * Closes the scanner for reading input.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"    public void close() {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"        scanner.close();","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"     * Prints a message with the specified list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"     * @param list A list of tasks in string.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"    public void printList(String list) {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(list);","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"     * Prints a message with the size of specified list.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"     * @param size The size of the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"    public void printSizeOfList(int size) {","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", size));","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"     * Prints a message of marking of specified task as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"     * @param task The task that is marked as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"    public void printMarkTask(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        printTask(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"     * Prints a message of marking of specified task as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"     * @param task The task that is marked as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"    public void printUnmarkTask(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"        printTask(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"     * Prints a message of deleting specified task.","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"     * @param task The task that is deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"    public void printDeleteTask(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"        printTask(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"     * Prints a message of adding specified task.","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"     * @param task The task that is added.","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"    public void printAddTask(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"        printTask(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"     * Prints a specified error message.","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"     * @param message The error message","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"    private void printTask(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"dexter-sim"},"content":"        System.out.println(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":128}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * Command to end the Duke program.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     * Returns true.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * @return True.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public boolean canExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        return true;","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     * Closes the ui input reader.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        ui.close();","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * Abstract class for a command.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public abstract void execute(Storage storage, TaskList taskList, Ui ui);","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if the Duke program is closing, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     * @return False.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public boolean canExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":31}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * Command to create a deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    private String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    private LocalDate by;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     * Creates a deadline command.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     * @param by The date for the deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to create a deadline task and add it to specified task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"     * It calls the ui to print the deadline task and the storage to save the new task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        ui.printAddTask(taskList.addTask(new Deadline(description, by)));","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        ui.printSizeOfList(taskList.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Command to delete a task from task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private int index;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * Creates a delete command of specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * @param index The 1-indexed position of the task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to delete a task from the specified task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"            ui.printDeleteTask(taskList.deleteTask(index - 1));","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"            ui.printSizeOfList(taskList.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":43}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * Command to create an event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    private String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     * Creates an event command.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     * @param at The date for the event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    public EventCommand(String description, LocalDate at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to create an event task and add it to specified task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"     * It calls the ui to print the event task and the storage to save the new task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        ui.printAddTask(taskList.addTask(new Event(description, at)));","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        ui.printSizeOfList(taskList.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * Command to find matching tasks with a keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    private String keyword;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     * Creates a find command.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @param keyword The keyword to look for matching tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to find tasks with the specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * It calls the ui to print the matching task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        TaskList matchingTaskList \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        ui.printList(matchingTaskList.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"dexter-sim":38}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * Command to print a task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to print the specified list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        ui.printList(taskList.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Command to mark a task as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private int index;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * Creates a mark command with specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * @param index The 1-indexed position of the task in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to mark a task as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"            ui.printMarkTask(taskList.markTask(index - 1));","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":42}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Command to create a todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * Creates a todo command.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to create a todo task and add it to specified task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     * It calls the ui to print the todo task and the storage to save the new task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        ui.printAddTask(taskList.addTask(new ToDo(description)));","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        ui.printSizeOfList(taskList.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":40}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Command to mark a task as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private int index;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * Creates an unmark command with specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * @param index The 1-indexed position of the task in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Executes the command to mark a task as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param storage Storage handling the file IO.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param taskList A list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param ui A ui to handle printing output.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"            ui.printUnmarkTask(taskList.unmarkTask(index - 1));","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dexter-sim":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":" * Class for a deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    private LocalDate by;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     * Creates a deadline with specified description and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the deadline to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Creates a deadline with specified description, completeness and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the deadline to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param isDone If the deadline is completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    private String printDate() {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        return DateTimeFormatter.ofPattern(\"MMM dd yyyy\").format(by);","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    public String stringify() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"%s | %s | %s\", \"D\", super.stringify(), by);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), printDate());","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"dexter-sim":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":" * Class for an event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     * Creates an event with specified description and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the event to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * @param at The date of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Creates an event with specified description, completeness and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the event to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     * @param isDone If the event is completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"     * @param at The date of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    public Event(String description, boolean isDone, LocalDate at) {","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    private String printDate() {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        return DateTimeFormatter.ofPattern(\"MMM dd yyyy\").format(at);","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    public String stringify() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"%s | %s | %s\", \"E\", super.stringify(), at);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), printDate());","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"dexter-sim":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":" * Abstract class for a task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"    private String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"     * Creates a task with specified description.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the task to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     * Creates a task with specified description and completeness.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the task to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * @param isDone If the task is completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"     * Returns a boolean if the description contains specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * @param keyword A string to be checked.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     * @return If description contains specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public boolean match(String keyword) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"    public void mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"     * Returns the task in a string format to be saved in a local file.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"     * @return A string corresponding to the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"    public String stringify() {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"dexter-sim":75}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":" * Class for a toDo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":" * @author dexter-sim","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":" * @version 0.1","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"     * Creates a ToDo with specified description.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the toDo to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * Creates a ToDo with specified description and completeness.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description of the toDo to be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"     * @param isDone If the toDo is completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    public String stringify() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"%s | %s\", \"T\", super.stringify());","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"dexter-sim":38}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"    public void parseValidDeadlineTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"            Parser.parseInput(\"deadline Valid Deadline /by 2022-08-21\");","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"            assertTrue(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"            assertEquals(\"Supposed to be a valid deadline\", \"Exception thrown\");","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    public void parseInvalidDeadlineTest1() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"            Parser.parseInput(\"deadline /by 2022-08-21\");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"            assertEquals(\"OOPS!!! The description of a deadline cannot be empty :-(\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    public void parseInvalidDeadlineTest2() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"            Parser.parseInput(\"deadline Invalid Deadline /by 2022\");","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"            assertEquals(\"Please format date in YYYY-MM-DD.\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    public void parseInvalidDeadlineTest3() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"            Parser.parseInput(\"deadline Invalid Deadline 2022\");","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"dexter-sim":49}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"public class EventTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"    public void addEventTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"        Event event \u003d new Event(\"Event Test 1\", LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"        assertEquals(\"[E][ ] Event Test 1 (at: Aug 21 2022)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    public void saveEventTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        Event event \u003d new Event(\"Event Test 1\", LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"        assertEquals(\"E | 0 | Event Test 1 | 2022-08-21\", event.stringify());","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"dexter-sim":26}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"    public void addToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"        ToDo toDo \u003d new ToDo(\"ToDo 1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"        assertEquals(\"[T][ ] ToDo 1\", toDo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    public void saveToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"        ToDo toDo \u003d new ToDo(\"ToDo 1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"        assertEquals(\"T | 0 | ToDo 1\", toDo.stringify());","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"dexter-sim":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"todo first task","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"deadline second task /by 2022-09-20","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"event third task /at 2022-11-03","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"unmark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"delete 1","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"blah","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"mark 66","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"unmark 99","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"delete 42","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"todo","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"deadline fourth task /by","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"event /at date","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"dexter-sim":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"if  ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dexter-sim":1,"-":37}}]

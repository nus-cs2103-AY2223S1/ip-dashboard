[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"# DukeProgram project template","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"3. After that, locate the `src/main/java/DukeProgram/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rui-han-crh":2,"-":22}},{"path":"src/main/java/DukeProgram/Checklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import Utilities.StringUtilities;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import static DukeProgram.Duke.*;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"public class Checklist {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    private static final int ALL \u003d -1;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    private static final ArrayList\u003cJob\u003e checklist \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    /***","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * Provides functionality to use a checklist in Duke.","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    public static void Use() {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        String[] input \u003d askForInput(\"\").split(\" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        while (!input[0].toLowerCase(Locale.ROOT).equals(\"bye\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"            switch (input[0]) {","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"                case \"list\":","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                    listChecklist();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                case \"mark\": case \"unmark\":","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                    markChecklist(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                    deleteFromChecklist(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                default:","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                    try {","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                        addToChecklist(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"                    } catch (InvalidJobException ex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                        printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"                    }","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"            input \u003d askForInput(\"\").split(\" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"    private static void listChecklist() {","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        printInStyle(IntStream","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                .range(0, checklist.size())","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"                .mapToObj(i -\u003e String.format(\"%d: %s\", i + 1, checklist.get(i).toString()))","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    /***","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"     * Takes in a command in the format from System.in and mark or unmarks","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"     * jobs on the checklist","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"     * @param input the command given from System.in","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    private static void markChecklist(String[] input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(\"Please specify which task you want to mark or unmark \" +","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"                    \"after the command. Otherwise, you may also specify all.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        if (input[1].equals(\"all\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"            if (input[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"                for (Job job : checklist) {","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"                    job.MarkJobState(true);","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(\"Ok, I\u0027ve marked all items as completed!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"            } else if (input[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                for (Job job : checklist) {","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"                    job.MarkJobState(false);","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(\"Ok, I\u0027ve unmarked all items as undone.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        int index;","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"            index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(String.format(\"I cannot understand what %s means in this context.\", input[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"        if (index \u003c checklist.size() \u0026\u0026 index \u003e\u003d 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"            boolean isMark \u003d input[0].equals(\"mark\");","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"            checklist.get(index).MarkJobState(isMark);","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"            String response \u003d isMark ?","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"                    \"Nice! I\u0027ve marked this task as done:\" :","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"                    \"Ok, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"                    response,","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"                    checklist.get(index).toString()","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        } else if (checklist.isEmpty()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(String.format(\"%d is out of range, \" +","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"                    \"you need to first add some items into the To-Do List\", index + 1));","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"                    String.format(\"%d is out of range, please choose an integer between 1 to %d\",","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"                            index + 1,","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"                            checklist.size()));","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"     * Takes in a command in the format from System.in","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"     * and deletes the job with the associated index.","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"     * @param input command input from system","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"    private static void deleteFromChecklist(String[] input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"        if (input.length \u003c 1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(\"Please specify the index of the job you want to delete.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"        if (input[1].equals(\"all\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"            checklist.clear();","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(\"Alright. I\u0027ve cleared all your tasks from the checklist\");","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"        int index;","lastModifiedDate":"2022-08-19"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"            index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(\"Please only specify numbers starting from 1!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"        if (index \u003c\u003d -1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(\"Sorry, the number can only be more than or equals to 1!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"        if (index \u003e\u003d checklist.size()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(String.format(\"You wanted to delete task %d but there were only %d jobs in the list.\",","lastModifiedDate":"2022-08-19"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"                    index + 1, checklist.size()));","lastModifiedDate":"2022-08-19"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":150,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":151,"author":{"gitId":"rui-han-crh"},"content":"        Job jobRemoved \u003d checklist.get(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":152,"author":{"gitId":"rui-han-crh"},"content":"        checklist.remove(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"rui-han-crh"},"content":"        printInStyle(\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2022-08-19"},{"lineNumber":154,"author":{"gitId":"rui-han-crh"},"content":"                jobRemoved.toString(),","lastModifiedDate":"2022-08-19"},{"lineNumber":155,"author":{"gitId":"rui-han-crh"},"content":"                String.format(\"Now you have %d tasks in the list.\", checklist.size()));","lastModifiedDate":"2022-08-19"},{"lineNumber":156,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"    /***","lastModifiedDate":"2022-08-19"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"     * Takes in a command in the format from System.in and add","lastModifiedDate":"2022-08-19"},{"lineNumber":160,"author":{"gitId":"rui-han-crh"},"content":"     * jobs on the checklist based on their type","lastModifiedDate":"2022-08-19"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"     * @param input the command given from System.in","lastModifiedDate":"2022-08-19"},{"lineNumber":162,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":163,"author":{"gitId":"rui-han-crh"},"content":"    private static void addToChecklist(String[] input) throws InvalidJobException{","lastModifiedDate":"2022-08-19"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"        Job job;","lastModifiedDate":"2022-08-19"},{"lineNumber":165,"author":{"gitId":"rui-han-crh"},"content":"        String[][] nameAndDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":167,"author":{"gitId":"rui-han-crh"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-08-19"},{"lineNumber":168,"author":{"gitId":"rui-han-crh"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-19"},{"lineNumber":169,"author":{"gitId":"rui-han-crh"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":170,"author":{"gitId":"rui-han-crh"},"content":"                    job \u003d new ToDo(concatName(input));","lastModifiedDate":"2022-08-19"},{"lineNumber":171,"author":{"gitId":"rui-han-crh"},"content":"                } catch (JobNameException ex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":172,"author":{"gitId":"rui-han-crh"},"content":"                    printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":173,"author":{"gitId":"rui-han-crh"},"content":"                    return;","lastModifiedDate":"2022-08-19"},{"lineNumber":174,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":175,"author":{"gitId":"rui-han-crh"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":176,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":177,"author":{"gitId":"rui-han-crh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-19"},{"lineNumber":178,"author":{"gitId":"rui-han-crh"},"content":"                nameAndDate \u003d StringUtilities.splitStringArray(input, \"/by\");","lastModifiedDate":"2022-08-19"},{"lineNumber":179,"author":{"gitId":"rui-han-crh"},"content":"                if (nameAndDate.length !\u003d 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":180,"author":{"gitId":"rui-han-crh"},"content":"                    printInStyle(\"Please use /by to set a time\");","lastModifiedDate":"2022-08-19"},{"lineNumber":181,"author":{"gitId":"rui-han-crh"},"content":"                    return;","lastModifiedDate":"2022-08-19"},{"lineNumber":182,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":183,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":184,"author":{"gitId":"rui-han-crh"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":185,"author":{"gitId":"rui-han-crh"},"content":"                    job \u003d new Deadline(concatName(nameAndDate[0]), String.join(\" \", nameAndDate[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":186,"author":{"gitId":"rui-han-crh"},"content":"                } catch (JobNameException ex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":187,"author":{"gitId":"rui-han-crh"},"content":"                    printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":188,"author":{"gitId":"rui-han-crh"},"content":"                    return;","lastModifiedDate":"2022-08-19"},{"lineNumber":189,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":190,"author":{"gitId":"rui-han-crh"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":191,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":192,"author":{"gitId":"rui-han-crh"},"content":"            case \"event\":","lastModifiedDate":"2022-08-19"},{"lineNumber":193,"author":{"gitId":"rui-han-crh"},"content":"                nameAndDate \u003d StringUtilities.splitStringArray(input, \"/at\");","lastModifiedDate":"2022-08-19"},{"lineNumber":194,"author":{"gitId":"rui-han-crh"},"content":"                if (nameAndDate.length !\u003d 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":195,"author":{"gitId":"rui-han-crh"},"content":"                    printInStyle(\"Please use /at to set a time\");","lastModifiedDate":"2022-08-19"},{"lineNumber":196,"author":{"gitId":"rui-han-crh"},"content":"                    return;","lastModifiedDate":"2022-08-19"},{"lineNumber":197,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":198,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":199,"author":{"gitId":"rui-han-crh"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":200,"author":{"gitId":"rui-han-crh"},"content":"                    job \u003d new Event(concatName(nameAndDate[0]), String.join(\" \", nameAndDate[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":201,"author":{"gitId":"rui-han-crh"},"content":"                } catch (JobNameException ex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":202,"author":{"gitId":"rui-han-crh"},"content":"                    printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":203,"author":{"gitId":"rui-han-crh"},"content":"                    return;","lastModifiedDate":"2022-08-19"},{"lineNumber":204,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":205,"author":{"gitId":"rui-han-crh"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":206,"author":{"gitId":"rui-han-crh"},"content":"            default:","lastModifiedDate":"2022-08-19"},{"lineNumber":207,"author":{"gitId":"rui-han-crh"},"content":"                throw new InvalidJobException();","lastModifiedDate":"2022-08-19"},{"lineNumber":208,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":209,"author":{"gitId":"rui-han-crh"},"content":"        checklist.add(job);","lastModifiedDate":"2022-08-19"},{"lineNumber":210,"author":{"gitId":"rui-han-crh"},"content":"        printInStyle(","lastModifiedDate":"2022-08-19"},{"lineNumber":211,"author":{"gitId":"rui-han-crh"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2022-08-19"},{"lineNumber":212,"author":{"gitId":"rui-han-crh"},"content":"                job.toString(),","lastModifiedDate":"2022-08-19"},{"lineNumber":213,"author":{"gitId":"rui-han-crh"},"content":"                String.format(\"Now you have %d tasks in the list\", checklist.size()));","lastModifiedDate":"2022-08-19"},{"lineNumber":214,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":215,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":216,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":217,"author":{"gitId":"rui-han-crh"},"content":"     * A helper method to concat a string array given in the format from System.in","lastModifiedDate":"2022-08-19"},{"lineNumber":218,"author":{"gitId":"rui-han-crh"},"content":"     * @param input The string array given in the format from System.in","lastModifiedDate":"2022-08-19"},{"lineNumber":219,"author":{"gitId":"rui-han-crh"},"content":"     * @return the actual name of the job to be created","lastModifiedDate":"2022-08-19"},{"lineNumber":220,"author":{"gitId":"rui-han-crh"},"content":"     * @throws JobNameException if there is no name provided","lastModifiedDate":"2022-08-19"},{"lineNumber":221,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":222,"author":{"gitId":"rui-han-crh"},"content":"    private static String concatName(String[] input) throws JobNameException {","lastModifiedDate":"2022-08-19"},{"lineNumber":223,"author":{"gitId":"rui-han-crh"},"content":"        String name \u003d Arrays.stream(input).skip(1).collect(Collectors.joining(\" \"));","lastModifiedDate":"2022-08-19"},{"lineNumber":224,"author":{"gitId":"rui-han-crh"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":225,"author":{"gitId":"rui-han-crh"},"content":"            throw new JobNameException(input[0]);","lastModifiedDate":"2022-08-19"},{"lineNumber":226,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":227,"author":{"gitId":"rui-han-crh"},"content":"        return name;","lastModifiedDate":"2022-08-19"},{"lineNumber":228,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":229,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":229}},{"path":"src/main/java/DukeProgram/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"public class Deadline extends TimedJobs {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"    public Deadline(String name, String dueString) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"        super(name, dueString, \"by\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":13}},{"path":"src/main/java/DukeProgram/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.*;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class Duke {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"    private static final String DECORATOR \u003d \"\\t\" + \"-\".repeat(50);","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"    private static final List\u003cJob\u003e toDoList \u003d new ArrayList\u003cJob\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        Checklist.Use();","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        printInStyle(\"Goodbye! Hope to see you again soon!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given strings in a fancy format","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"     * @param stringsToPrint the strings to print","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(String... stringsToPrint) {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : stringsToPrint) {","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given collection of items and strings in a fancy format","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"     * @param itemsToPrint the collection of items to print","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"     * @param others the strings to print","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(Iterable\u003c?\u003e itemsToPrint, String... others) {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        for (Object item : itemsToPrint) {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : others) {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given collection of items and strings in a fancy format","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"     * @param itemsToPrint the collection of items to print","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"     * @param others the strings to print","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(Stream\u003c?\u003e itemsToPrint, String... others) {","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        itemsToPrint.forEach(item -\u003e System.out.println(\"\\t\\t\" + item.toString()));","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : others) {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"     * Requests user for input using the scanner","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"     * @param prompt the prompt to show the user","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"     * @return the given input from the user","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    public static String askForInput(String prompt) {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"        System.out.print(prompt + \" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"            return scanner.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"            return \"bye\";","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":84}},{"path":"src/main/java/DukeProgram/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"public class Event extends TimedJobs {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"    public Event(String name, String dueString) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"        super(name, dueString, \"at\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":13}},{"path":"src/main/java/DukeProgram/InvalidJobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"public class InvalidJobException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"    public InvalidJobException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":7}},{"path":"src/main/java/DukeProgram/Job.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"public class Job {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"    public enum JobState {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"        Done,","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"        NotDone","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    private final String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    private JobState jobState;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"    public Job(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"        this.jobState \u003d JobState.NotDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    public Job(String name, boolean done) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        this(name);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"        this.jobState \u003d JobState.Done;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    public void MarkJobState(boolean isComplete) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        this.jobState \u003d isComplete ? JobState.Done : JobState.NotDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"       return String.format(\"[%s] \", jobState.equals(JobState.Done) ? \"X\" : \" \") + name;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"rui-han-crh":29}},{"path":"src/main/java/DukeProgram/JobNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"public class JobNameException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"    public JobNameException(String jobType) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"        super(String.format(\"☹ OOPS!!! The description of %s %s cannot be empty.\",","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"                \"aeiou\".contains(jobType.toLowerCase(Locale.ROOT).charAt(0) + \"\") ? \"an\" : \"a\",","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"                jobType));","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/DukeProgram/TimedJobs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"public class TimedJobs extends Job {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"    private final String timeString;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"    private final String prefix;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"    public TimedJobs(String name, String timeString, String prefix) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"        this.timeString \u003d timeString;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        return super.toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"                + \" (\" + prefix + \": \" + timeString + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":18}},{"path":"src/main/java/DukeProgram/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package DukeProgram;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"public class ToDo extends Job {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":12}},{"path":"src/main/java/Testing/StringUtilityTests.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package Testing;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import Utilities.StringUtilities;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.Test;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.Assert.*;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"public class StringUtilityTests {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    public void splitGenericStringArray() {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"b\", \"c\", \"b\", \"d\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\"}, {\"c\"}, {\"d\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayWithRepeatedDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"e\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayEndingWithDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\", \"e\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayEndingWithRepeatedDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayStartingWithDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"b\", \"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\", \"e\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayStartingWithRepeatedDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"b\", \"b\", \"b\", \"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\", \"e\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"    public void splittingWithNonexistentDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"e\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"q\")","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"    public void splittingAnEmptyArray() {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {};","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {},","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"o\")","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":80}},{"path":"src/main/java/Utilities/StringUtilities.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package Utilities;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"public class StringUtilities {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"     * Helper method to split a String array by a delimiter.","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"     * If two delimiters sit adjacent, an empty array is returned.","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"     * @param input The string array to split","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"     * @param delimiter The string to split by","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * @return A nested array containing string arrays that are","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     * partitioned by the delimiter, excluding all instances of the delimiter","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public static String[][] splitStringArray(String[] input, String delimiter) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        if (input.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"            return new String[0][];","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        int splitStart \u003d 0;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        int splitEnd \u003d input.length - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        while (input[splitStart].equals(delimiter)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"            splitStart++;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        while(input[splitEnd].equals(delimiter)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"            splitEnd--;","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        int[] splitIndices \u003d IntStream","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                .range(splitStart, splitEnd + 1)","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                .filter(i -\u003e input[i].equals(delimiter))","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                .toArray();","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        String[][] splitArrays \u003d new String[","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                (int)IntStream","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"                .range(0, splitIndices.length)","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                .filter(i -\u003e i \u003d\u003d 0 || splitIndices[i] - 1 !\u003d splitIndices[i-1])","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                .count() + 1][];","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"        int startingIndex \u003d splitStart;","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        int j \u003d 0;","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        for (int splitIndex : splitIndices) {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"            if (startingIndex !\u003d splitIndex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"                splitArrays[j] \u003d new String[splitIndex - startingIndex];","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"                System.arraycopy(input, startingIndex, splitArrays[j], 0, splitArrays[j].length);","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"                j++;","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"            startingIndex \u003d splitIndex + 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        splitArrays[splitArrays.length - 1] \u003d new String[splitEnd + 1 - startingIndex];","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        System.arraycopy(input, startingIndex, splitArrays[splitArrays.length - 1],","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"                0, splitArrays[splitArrays.length - 1].length);","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        return splitArrays;","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"todo buy cheese","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"event attend water party /at 12 noon on Monday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"deadline bake cake /by Saturday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"list","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"::javac  -cp ..\\src\\main\\java\\Utilities -Xlint:none -d ..\\bin ..\\src\\main\\java\\Utilities\\*.java","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"::javac  -cp ..\\src\\main\\java\\DukeProgram -Xlint:none -d ..\\bin ..\\src\\main\\java\\DukeProgram\\*.java","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"pause","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"\tpause \u003enul","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"java -classpath ..\\out\\production\\ip\\ DukeProgram.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"pause \u003enul","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":6,"-":19}}]

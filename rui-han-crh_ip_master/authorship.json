[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"# dukeprogram project template","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"3. After that, locate the `src/main/java/dukeprogram/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rui-han-crh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rui-han-crh":6,"-":41}},{"path":"src/main/java/dukeProgram/commands/Task/Annotations/AnnotateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task.annotations;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * AnnotateTaskCommand is an abstract class that provides functionalities","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * to update the completion status of Tasks without defining what to mark","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * them as.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"public abstract class AnnotateTaskCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    protected boolean annotationState;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    public AnnotateTaskCommand(boolean annotationState) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        this.annotationState \u003d annotationState;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     * Parses a task number and annotates the task with that index","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * @param commandString the index of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     * @return a new Command to annotate the task","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"     * @throws InvalidCommandException if","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        String[] fullCommandParameters \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        if (fullCommandParameters.length \u003c 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(\"You have to specify which task index you want to mark!\")","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        return new Command() {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"            @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"            public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"                if (fullCommandParameters[1].equals(\"all\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"                    for (Task task : TaskList.current().getAllTasks()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"                        task.markJobState(annotationState);","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                    UserInterface.printInStyle(","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"                            String.format(\"Ok, I\u0027ve annotated all the items in %s.\", TaskList.current().getName())","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"                    );","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"                    int index \u003d Integer.parseInt(fullCommandParameters[1]) - 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"                    Task task \u003d TaskList.current().get(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"                    task.markJobState(annotationState);","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"                    UserInterface.printInStyle(","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"                            \"Okay, I\u0027ve annotated this task as requested:\",","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"                            task.toString()","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"                    );","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":67}},{"path":"src/main/java/dukeProgram/commands/Task/Annotations/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task.annotations;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * MarkTaskCommand marks a task as complete","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class MarkTaskCommand extends AnnotateTaskCommand {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    public MarkTaskCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"        super(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/dukeProgram/commands/Task/Annotations/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task.annotations;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * MarkTaskCommand marks a task as incomplete","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class UnmarkTaskCommand extends AnnotateTaskCommand {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    public UnmarkTaskCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"        super(false);","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/dukeProgram/commands/Task/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * FindTaskCommand is capable of finding a task by querying substrings of the task name.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" * As a standalone command, this will print all the task lists. Otherwise, if a command","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" * string is passed, FindTaskCommand will find all tasks that contain the string as a","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":" * substring of its task name.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.printInStyle(TaskList.current().getAllTasks());","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        Pattern pattern \u003d Pattern.compile(String.format(\"(.*)%s(.*)\", commandString));","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"        return new Command() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"            @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"            public boolean execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                for (Task task : TaskList.current().getAllTasks()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"                    if (pattern.matcher(task.getName()).matches()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                        matches.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                UserInterface.printInStyle(matches);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        };","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"rui-han-crh":47}},{"path":"src/main/java/dukeprogram/DatedJob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * DatedJob describes any form of Task that is associated with a date","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"public abstract class DatedJob extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    private String timeString;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    private LocalDateTime localDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    private final String prefix;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a DatedJob with the given name and dateString.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * The prefix string describes how to join the name and the dateString","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * @param name name of the DatedJob","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     * @param dateString the string that describes when the task is due by","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     * @param prefix a label that will be between the name and date to aid interpretation","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    public DatedJob(String name, String dateString, String prefix) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        super(name);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        setDate(dateString);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * Sets the date of the DatedJob","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     * @param dateString the string that describes the date,","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"     *                   either in any valid format or none at all","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    private void setDate(String dateString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        this.localDate \u003d DateTimeParser.parse(dateString);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        this.timeString \u003d localDate \u003d\u003d null","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                ? dateString","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                : localDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     * Retrieves the LocalDateTime of this DatedJob","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        return localDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"     * Returns a String that describes the DatedJob","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"     * If the DatedJob has a date with a parsable time format,","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"     * then it will print as dd MMM YYYY hh:mm (AM/PM). Otherwise,","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"     * if the date string could not be interpreted, then the original date string is printed,","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"     * followed by a tag \"[Informal Format]\".","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"     * @return a string in the format \"task_name (prefix: dateTimeString)\"","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        String formality \u003d localDate \u003d\u003d null ? \" [Informal Format]\" : \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        return super.toString()","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"                + String.format(\" (%s: %s%s)\", prefix, timeString, formality);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"rui-han-crh":62}},{"path":"src/main/java/dukeprogram/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * A Deadline task with a date that describes when the task is due","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class Deadline extends DatedJob {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a Deadline class with the given name","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"     * and a date string that it is due by","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * @param name the name of this task","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     * @param dueString the due date of this string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public Deadline(String name, String dueString) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        super(name, dueString, \"by\");","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a string tagged with the Deadline tag","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     * @return a string that in the format \"[D][status] task_name /by date_format\"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":27}},{"path":"src/main/java/dukeprogram/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.storage.SaveManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.KeyNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import utilities.SerializedNamesFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * This is the main Duke Program","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"public class Duke {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    private static User user;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * Runs the main program.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * @param args","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        String userName \u003d UserInterface.askForInput(\"Who are you?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        if (SaveManager.deserialize(","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                SerializedNamesFormatter.createFileNameForUser(userName)","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        )) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"            user \u003d loadCurrentUser();","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            beginNewUser(userName);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        initialiseFacilities();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.advanceLocation(\"Home\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        //main loop","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.requestCommands();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        // on exit","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.retreatLocation();","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.printInStyle(\"Goodbye! Hope to see you again soon!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"            SaveManager.serialize(SerializedNamesFormatter.createFileNameForUser(userName));","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"     * Loads the current user from existing deserialized data","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     * @return The User profile that has been loaded","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"    private static User loadCurrentUser() {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"            user \u003d SaveManager.load(\"user\");","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(String.format(\"Welcome back %s\", user.getName()));","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        } catch (KeyNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"                    \"Hmm...\",","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"                    \"I can\u0027t seem to remember your name. Can you remind me?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"            String userName \u003d UserInterface.askForInput(\"What is your name?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"            user.setName(userName);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"            SaveManager.save(\"user\", user);","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        return user;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"     * Begins a new user profile","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"     * @param userName the user\u0027s name that the profile is created for","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"    private static void beginNewUser(String userName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.printInStyle(","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"                String.format(\"This is the first time we\u0027ve met, %s!\", userName),","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"                \"Nice to meet you!\"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"        user \u003d new User(userName);","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        SaveManager.save(\"user\", user);","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"     * Initialises the facilities of the program","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"    private static void initialiseFacilities() {","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"        TaskList.initialise();","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"     * Returns the current user profile loaded in this profile","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"     * @return the current user profile using the program","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"    public static User getUser() {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        return user;","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":105}},{"path":"src/main/java/dukeprogram/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * Event class for creating an event","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class Event extends DatedJob {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new Event","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"     * @param name name of the event","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * @param dueString a date that describes the occurrence date of the event","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    public Event(String name, String dueString) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"        super(name, dueString, \"at\");","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * Returns a formatted string beginning with the event tag","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * followed by the task data","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     * @return a string that begins with \"[E]\" followed by the task data","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":26}},{"path":"src/main/java/dukeprogram/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * A serializable Task class that describes a task in a tasklist","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * States the task could be in","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    public enum TaskState {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"        Done,","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        NotDone","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    private final String name;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    private TaskState taskState;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new task with the given name","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     * @param name task name","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        this.taskState \u003d TaskState.NotDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a task with the given name and completion status","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     * @param name the task\u0027s name","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"     * @param isDone the completion status describing whether the task is done or not","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        this(name);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        this.taskState \u003d TaskState.Done;","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"     * Returns the name of this task","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"     * @return the name of this task","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    public String getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        return name;","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"     * Annotates this task as either complete or incomplete","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"     * @param isComplete the state to annotate this task with","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"    public void markJobState(boolean isComplete) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        this.taskState \u003d isComplete ? TaskState.Done : TaskState.NotDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"     * Returns a string describing the state of completion of this task followed","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"     * by the name of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"     * @return a string formatted as \"[state] task_name\"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        return String.format(\"[%s] \", taskState.equals(TaskState.Done) ? \"X\" : \" \") + name;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":64}},{"path":"src/main/java/dukeprogram/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * Todo is a type of Task that only possess a name and status of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a Todo task with the given name","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"     * @param name name of the todo task","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     * Returns a string with the todo tag, followed by task data","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * @return a string in the format \"[T][status] task_name\"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":24}},{"path":"src/main/java/dukeprogram/UiMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * The UiMessage class records messages to be shown to the user at a later time.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"public class UiMessage {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    private final String[] messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new UiMessage with any amount of given message inputs","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     * @param messages the given messages to record","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    public UiMessage(String... messages) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"        this.messages \u003d Arrays.stream(messages).toArray(String[]::new);","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     * Retrieves the collection of recorded messages","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     * @return an array of Strings that were recorded","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    public String[] getMessages() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        return messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"     * Returns a string that separates each recorded message with a new line","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     * @return messages separated with a newline between each message","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        return String.join(\"\\n\", messages);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":35}},{"path":"src/main/java/dukeprogram/User.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * A user profile for the current user of the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" * Each User is associated with their own program data.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"public class User implements Serializable {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    private String userName;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     * Constructs a new user profile with the given userName","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"     * @param userName the user\u0027s name","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    public User(String userName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     * Retrieves the name of this user","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     * @return name of the user","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    public String getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        return userName;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     * Renames the name of this user","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * @param userName the new name of this user","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    public void setName(String userName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":35}},{"path":"src/main/java/dukeprogram/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" * A general purpose Command that allows the executing without additional","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" * input or parsing additional input to create other commands for execution.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     * Executes the command. Usually, this command has a looping flow within it and indicates","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"     * a nested state that may require different choices of input. This will repeat until a","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"     * terminating command is given.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"     * For example, in Task Lists selection, we can choose to add, load, delete, etc. These are","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     * different paths we can choose, so there is a loop expected to lock the state of the program","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * to this current process, until an ExitCommand is given to terminate from this loop and exit","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * the state.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     * @return whether this command is expected to continue the loop from which it was called","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    public abstract boolean execute();","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"     * Interprets a string command and provides a list of comparisons to return an appropriate","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"     * command to continue the state transitions. All commands that require additional input may","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"     * call upon parse to interpret the next few commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"     * For example, the load command should be followed by the name of the object to load, so we","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     * may expect to call new LoadCommand().parse(objectName) to understand the entire command.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * @param commandString the command to be interpreted, its meaning varies with context","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     * @return a new Command object that is appropriate for the parsed command","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"     * @throws InvalidCommandException if the command string could not be correctly parsed","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        throw new InvalidCommandException(this, commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"                new UiMessage(String.format(\"I cannot understand %s\", commandString))","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":39}},{"path":"src/main/java/dukeprogram/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.storage.SaveManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import utilities.SerializedNamesFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * The ExitCommand is a general command issued to break out of a currently looping","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * process within Duke. Executing this command automatically serializes the file","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" * to disk as well.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":" * The ExitCommand does not accept any parsable commands at all.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        throw new InvalidCommandException(this, commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"                new UiMessage(\"ExitCommand accepts no other commands\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"            SaveManager.serialize(","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                    SerializedNamesFormatter.createFileNameForUser(","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                            Duke.getUser().getName()","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                    )","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"I could not write the file\");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":38}},{"path":"src/main/java/dukeprogram/commands/FactoryResetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Random;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.storage.SaveManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * FactoryResetCommand is capable of wiping the save data of this current user.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * Executing this command causes Duke to completely erase all data related to this user","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" * only. It will still remember other user profiles and their data.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"public class FactoryResetCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        throw new InvalidCommandException(this, commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"                new UiMessage(\"FactoryResetCommand accepts no other commands\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.printInStyle(","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                String.format(\"If you are sure you want to do this, \"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                        + \"%s, please input the following numbers...\", Duke.getUser().getName())","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"        int key \u003d new Random()","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                .nextInt((50000 - 10000) + 1) + 10000;","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"            if (key \u003d\u003d Integer.parseInt(UserInterface.askForInput(String.format(\"Type in %d\", key)))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                UserInterface.printInStyle(String.format(\"Goodbye %s\", Duke.getUser().getName()));","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                if (SaveManager.wipeData()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"                    System.exit(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                    UserInterface.printInStyle(\"I couldn\u0027t delete the file.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                UserInterface.printInStyle(\"Terminating last command...\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(\"Terminating last command...\");","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":49}},{"path":"src/main/java/dukeprogram/commands/HomepageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.tasklist.SelectTaskListsCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" * HomepageCommand is a process that is able to redirect users to facilities of","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * Duke. It requests input from the user to redirect them to the various facilities.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"public class HomepageCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        switch (commandString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        case \"tasks\":","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"            return new SelectTaskListsCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        case \"factory reset\":","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"            return new FactoryResetCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        case \"exit\":","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(\"I can only understand commands in the square brackets here!\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":34}},{"path":"src/main/java/dukeprogram/commands/task/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static dukeprogram.ui.UserInterface.printInStyle;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ToDo;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.JobNameException;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import utilities.StringUtilities;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":" * AddTaskCommand is capable of adding a new task to the current task list","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":" * only if a valid string that describes the task type, task name and extra","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":" * parameters are provided to be parsed. As a standalone command, it will not","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":" * be able to do anything","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        String[] fullCommandParameters \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        if (fullCommandParameters.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                            \"Usage: add todo task_name\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                                    + \"\\t\\tExample: add todo mytask\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"                                    + \"\\t\\tUsage: add [event | deadline] task_name /at date\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                                    + \"\\t\\tExample: add event myevent /at 22 Aug\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        switch (fullCommandParameters[1]) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"            return new CreateToDoTask(fullCommandParameters);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"            return new CreateDeadlineTask(fullCommandParameters);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        case \"event\":","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"            return new CreateEventTask(fullCommandParameters);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"                            String.format(\"Hmm... %s does not seem to be a valid task type\",","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"                                    fullCommandParameters[1])","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"                    )","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"    private static String concatName(String[] input) throws JobNameException {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        String name \u003d Arrays.stream(input).skip(2).collect(Collectors.joining(\" \"));","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"            throw new JobNameException(input[0]);","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        return name;","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"    private abstract static class CreateTaskCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        protected Task task;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"        protected final String[] fullCommandParameters;","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"        public CreateTaskCommand(String[] fullCommandParameters) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"            this.fullCommandParameters \u003d fullCommandParameters;","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"                    \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"                    task.toString(),","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"                    String.format(\"Now you have %d tasks in the list\", TaskList.current().getSize()));","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"        public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(this, commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(\"I can\u0027t understand more commands from Create!\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"    private class CreateToDoTask extends CreateTaskCommand {","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"        public CreateToDoTask(String[] fullCommandParameters) {","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"            super(fullCommandParameters);","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"        public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"                task \u003d new ToDo(concatName(fullCommandParameters));","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"                TaskList.current().add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"                super.execute();","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"            } catch (JobNameException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"    private class CreateDeadlineTask extends CreateTaskCommand {","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"        public CreateDeadlineTask(String[] fullCommandParameters) {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"            super(fullCommandParameters);","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"        public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"            String[][] nameAndDate \u003d StringUtilities","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"                    .splitStringArray(fullCommandParameters, \"/by\");","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"            if (nameAndDate.length !\u003d 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(\"Please use /by to set a time\");","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"                task \u003d new Deadline(concatName(nameAndDate[0]),","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"                        String.join(\" \", nameAndDate[1]));","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"                TaskList.current().add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"                super.execute();","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"            } catch (JobNameException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"    private class CreateEventTask extends CreateTaskCommand {","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"        public CreateEventTask(String[] fullCommandParameters) {","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"            super(fullCommandParameters);","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"rui-han-crh"},"content":"        public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"rui-han-crh"},"content":"            String[][] nameAndDate \u003d StringUtilities.splitStringArray(fullCommandParameters, \"/at\");","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"rui-han-crh"},"content":"            if (nameAndDate.length !\u003d 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(\"Please use /at to set a time\");","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"rui-han-crh"},"content":"                task \u003d new Event(concatName(nameAndDate[0]),","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"                        String.join(\" \", nameAndDate[1]));","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"rui-han-crh"},"content":"                TaskList.current().add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"rui-han-crh"},"content":"                super.execute();","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"rui-han-crh"},"content":"            } catch (JobNameException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(ex.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":171}},{"path":"src/main/java/dukeprogram/commands/task/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * DeleteTaskCommand is capable of deleting tasks in the current task list","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * only if it is able to parse a valid task name. Otherwise, it will not do anything.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        String[] fullCommandParameters \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        if (fullCommandParameters.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                            \"You have to specify which task index you want to delete!\")","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        TaskList currentTaskList \u003d TaskList.current();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        int index;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        if (fullCommandParameters[1].equals(\"all\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"            index \u003d -1;","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                index \u003d Integer.parseInt(fullCommandParameters[1]) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                throw new InvalidCommandException(new UiMessage(","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"                        \"I couldn\u0027t understand what you wanted to delete.\"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                ));","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"            if (index \u003e\u003d currentTaskList.getSize() || index \u003c 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"                throw new InvalidCommandException(new UiMessage(","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"                        \"Sorry!\",","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"                        \"You\u0027ve specified a task number that\u0027s out of bounds!\",","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"                        currentTaskList.getSize() \u003d\u003d 0","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"                                ? \"You have no tasks in this list.\"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                                : String.format(\"Please only choose numbers between 1 and %d\",","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"                                currentTaskList.getSize())","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"                ));","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        return new Command() {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"            @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"            public boolean execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"                if (index \u003d\u003d -1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"                    String response \u003d UserInterface.askForInput(\"Are you sure you want to delete all tasks?\");","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"                    if (response.equals(\"yes\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"                        TaskList.current().clear();","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"                        UserInterface.printInStyle(","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"                                String.format(\"Ok, I\u0027ve deleted all the items in %s.\",","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"                                        TaskList.current().getName())","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"                        );","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"                    } else if (!response.equals(\"no\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"                        UserInterface.printInStyle(\"Please only input \\\"yes\\\" or \\\" no\\\"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"                    Task task \u003d TaskList.current().get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"                    currentTaskList.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                    UserInterface.printInStyle(","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"                            \"Okay, I\u0027ve removed this task as requested:\",","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"                            task.toString()","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"                    );","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"        };","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"rui-han-crh":83}},{"path":"src/main/java/dukeprogram/commands/task/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static dukeprogram.ui.UserInterface.printInStyle;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.DatedJob;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":" * ListTasksCommand is capable of listing all the tasks stored in the current task list","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":" * only if a valid name of an existing task list is provided to be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    private final String[] fullCommandParameters;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    public ListTasksCommand(String[] fullCommandParameters) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        this.fullCommandParameters \u003d fullCommandParameters;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        if (fullCommandParameters.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"            TaskList currentTaskList \u003d TaskList.current();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(IntStream","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                    .range(0, currentTaskList.getSize())","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                    .mapToObj(i -\u003e String.format(\"%d: %s\", i + 1, currentTaskList.get(i).toString()))","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"            return parse(fullCommandParameters[1]).execute();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(e.getUiMessage().toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        switch (commandString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        case \"date\":","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"            return new ListTasksByDateCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        case \"alphabet\":","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"            return new ListTasksByAlphabetCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(this, commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"                            String.format(\"Sorry! I don\u0027t know how to sort by %s\", commandString)","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"                    )","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"    private static class ListTasksByDateCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"        public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(Arrays.stream(TaskList.current()","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"                    .getAllTasks())","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"                    .filter(e -\u003e e instanceof DatedJob)","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                    .sorted(Comparator.comparing(e -\u003e ((DatedJob) e).getDate()))","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"    private static class ListTasksByAlphabetCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        public boolean execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"            printInStyle(Arrays.stream(TaskList.current().getAllTasks())","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"                    .sorted(Comparator.comparing(Task::getName))","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":89}},{"path":"src/main/java/dukeprogram/commands/task/TaskPageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.ExitCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.task.annotations.MarkTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.task.annotations.UnmarkTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" * TaskPageCommand is a page directory, which is able to parse various commands","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":" * related to a single task list. It can execute additional task related actions,","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":" * like adding new tasks, annotating tasks and deleting tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"public class TaskPageCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.advanceLocation(TaskList.current().getName());","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        boolean continueLoop \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        while (continueLoop) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printCurrentLocation();","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                String response \u003d UserInterface.askForInput(","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                        \"[add | delete | list | find | mark | unmark | back]\");","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                continueLoop \u003d parse(response).execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"                UserInterface.printInStyle(e.getUiMessage().toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.retreatLocation();","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        String[] separatedCommands \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        switch (separatedCommands[0]) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        case \"list\":","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"            return new ListTasksCommand(separatedCommands);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        case \"find\":","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"            return new FindTaskCommand().parse(String.join(\" \",","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                    Arrays.copyOfRange(separatedCommands, 1, separatedCommands.length))","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        case \"add\":","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"            return new AddTaskCommand().parse(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"            return new MarkTaskCommand().parse(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"            return new UnmarkTaskCommand().parse(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"            return new DeleteTaskCommand().parse(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        case \"back\":","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(this, commandString,","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"                            String.format(\"I can\u0027t don\u0027t know how to %s, \"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"                                    + \"please use the commands from the square brackets!\",","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"                                    separatedCommands[0])","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                    )","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":78}},{"path":"src/main/java/dukeprogram/commands/tasklist/AddNewTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.tasklist;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" * AddNewTaskListCommand is capable of adding new Task Lists to the already","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * existing collection of task lists only if a parsable task list name is provided","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"public class AddNewTaskListCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        return new Command() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"            @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"            public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"                TaskList.addNewTaskList(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":29}},{"path":"src/main/java/dukeprogram/commands/tasklist/LoadTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.tasklist;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.task.TaskPageCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.KeyNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * LoadTaskListCommand is capable to loading task lists from the","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * stored task lists only if a parsable task list name is provided","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"public class LoadTaskListCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        return new Command() {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"            @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"            public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                try {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"                    TaskList.changeTaskList(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                } catch (KeyNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                    UserInterface.printInStyle(","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                            \"I cannot find a task list called \" + commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                    return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                return new TaskPageCommand().execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":39}},{"path":"src/main/java/dukeprogram/commands/tasklist/RemoveTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.tasklist;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.KeyNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" * RemoveTaskListCommand is capable to removing task lists from","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * the stored task lists if a parsable task list name is provided","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"public class RemoveTaskListCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        return new Command() {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"            @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"            public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"                try {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                    TaskList.removeTaskList(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                } catch (KeyNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"                    UserInterface.printInStyle(commandString + \" does not exist.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":34}},{"path":"src/main/java/dukeprogram/commands/tasklist/SelectTaskListsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.tasklist;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.ExitCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * SelectTaskListsCommand is a menu page that allows the user to select a task list","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * from the currently available task lists, or perform auxiliary actions related to","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" * task lists like deleting and adding new ones.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"public class SelectTaskListsCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.advanceLocation(\"Task Lists\");","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        boolean continueLoop \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        while (continueLoop) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printCurrentLocation();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"            String response \u003d UserInterface.askForInput(\"[add | delete | list | load | exit]\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                continueLoop \u003d parse(response).execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                UserInterface.printInStyle(e.getUiMessage().toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        UserInterface.retreatLocation();","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    public Command parse(String commandString) throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        String[] commandParameters \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        String command \u003d commandParameters[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        switch (commandParameters[0]) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        case \"exit\":","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        case \"add\":","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"            return new AddNewTaskListCommand().parse(createTaskName(commandParameters));","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"            return new RemoveTaskListCommand().parse(createTaskName(commandParameters));","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        case \"list\":","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"            return new ShowAllTaskListsCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        case \"load\":","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"            return new LoadTaskListCommand().parse(createTaskName(commandParameters));","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(String.format(\"I don\u0027t know how to %s.\"","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"                                    + \" Please use only commands from within the square brackets!\",","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"                            commandParameters[0])","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"                    )","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    private String createTaskName(String[] commandParameters)","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        if (commandParameters.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"                    new UiMessage(","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"                            String.format(\"Usage: %s tasklist_name\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"                                            + \"\\t\\tExample: %s MyTaskList\",","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"                                    commandParameters[0], commandParameters[0])","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"                    )","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"        return String.join(\" \",","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"                Arrays.copyOfRange(commandParameters,","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"                        1,","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"                        commandParameters.length));","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":90}},{"path":"src/main/java/dukeprogram/commands/tasklist/ShowAllTaskListsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.commands.tasklist;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.facilities.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.ui.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" * ShowAllTaskListsCommand is capable of showing all the task lists","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * that were ever created","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"public class ShowAllTaskListsCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public boolean execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        if (TaskList.getNumberOfTaskLists() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(\"NO TASK LISTS CREATED\");","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printInStyle(TaskList.getAllTaskListNames());","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"rui-han-crh":22}},{"path":"src/main/java/dukeprogram/facilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.facilities;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.storage.SaveManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.KeyNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * TaskList is a class that encapsulates the required functionalities","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * of each task list. It also organises all the collected task lists.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    private static HashMap\u003cString, TaskList\u003e taskListsMapping;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    private static TaskList current;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    private final ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    private String name;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    private TaskList(String name) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        taskListsMapping.put(name, this);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * Initialises a new task list from the saved objects","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    public static void initialise() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        if (taskListsMapping \u003d\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                taskListsMapping \u003d SaveManager.load(\"taskListsMapping\");","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            } catch (KeyNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                taskListsMapping \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"TRIED TO INITIALISE TASKLIST WHEN IT ALREADY EXISTS\");","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public static TaskList current() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        return current;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"    public static TaskList getTaskList(String name) throws KeyNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        if (!taskListsMapping.containsKey(name)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"            throw new KeyNotFoundException(name, \"taskListMapping\");","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        return taskListsMapping.get(name);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"     * Changes the current task list","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"     * @param name the new name to change to","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"     * @throws KeyNotFoundException if the name of the task list cannot be found","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    public static void changeTaskList(String name) throws KeyNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        if (current !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"            SaveManager.save(\"taskListsMapping\", taskListsMapping);","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        current \u003d getTaskList(name);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    public static int getNumberOfTaskLists() {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"        return taskListsMapping.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"    public static String[] getAllTaskListNames() {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        return taskListsMapping.keySet().toArray(new String[0]);","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"     * Adds a new task list to the collection of task lists","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"     * @param name the name to associate this task list with","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"     * @return the new task list that was added","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"    public static TaskList addNewTaskList(String name) {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        TaskList taskList \u003d new TaskList(name);","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"        taskListsMapping.put(taskList.name, taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"        SaveManager.save(\"taskListsMapping\", taskListsMapping);","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        return taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"     * Removes a task list from the collection of task lists","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"     * @param name the name to associate this task list with","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"    public static void removeTaskList(String name) throws KeyNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"        if (!taskListsMapping.containsKey(name)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"            throw new KeyNotFoundException(name, \"taskListsMapping\");","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"        taskListsMapping.remove(name);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        SaveManager.save(\"taskListsMapping\", taskListsMapping);","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    public String getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"        return name;","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"     * Changes the name of this current task list","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"     * @param newName the new name to rename this task list to","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"    public void changeName(String newName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"        taskListsMapping.remove(name);","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        this.name \u003d newName;","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"        taskListsMapping.put(name, this);","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"        SaveManager.save(\"taskListsMapping\", taskListsMapping);","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"    public Task[] getAllTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"        return taskArrayList.toArray(new Task[0]);","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"     * Retrieves the size of all the stored task lists","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"     * @return the size of all task lists","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"        return taskArrayList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"        return taskArrayList.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"    public void clear() {","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"        taskArrayList.clear();","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"        return taskArrayList.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"        return taskArrayList.remove(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":148}},{"path":"src/main/java/dukeprogram/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" * DateTimeParser is able to convert several string date formats to","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * actual LocalDateTime objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    private static final int CURRENT_YEAR \u003d LocalDateTime.now().getYear();","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    private static final DateTimeFormatter[] DATE_TIME_FORMATTERS \u003d {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"            new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"                    .parseCaseInsensitive()","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\"d MMM\")","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" yyyy\")","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HH mm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" hh:mm a\")","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 12)","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.YEAR, CURRENT_YEAR)","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"                    .toFormatter(),","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"            new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"                    .parseCaseInsensitive()","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" MMM d\")","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" yyyy\")","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HHmm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" hh:mm a\")","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 12)","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.YEAR, CURRENT_YEAR)","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"                    .toFormatter(),","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"            new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\"d MM\")","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" yyyy\")","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HHmm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" hh:mm a\")","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 12)","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.YEAR, CURRENT_YEAR)","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"                    .toFormatter(),","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"            new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HHmm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalStart()","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"                    .appendPattern(\" hh:mm a\")","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"                    .optionalEnd()","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 12)","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"                    .toFormatter()","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"    };","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"     * Formats a dateTime string to a LocalDateTime object if it is within","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"     * any of the possible string formats. Otherwise, returns nothing.","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"     * @param dateTime a date time expressed as a string","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"     * @return either a LocalDateTime object if the string is valid, or null if it is not valid.","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"    public static LocalDateTime parse(String dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"        for (DateTimeFormatter format : DATE_TIME_FORMATTERS) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"                return LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"            } catch (DateTimeException ignored) {","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"                return null;","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"        return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"rui-han-crh":127}},{"path":"src/main/java/dukeprogram/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" * Parser will parse a command string in any given command context.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     * Parses a command string within the given context.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     * @param contextCommand the current context for the command","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"     * @param commandString the string to be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"     * @return a new command that is valid within the current context","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"     * @throws InvalidCommandException if no such command is possible in this context","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public static Command parse(Command contextCommand, String commandString)","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        return contextCommand.parse(commandString);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"rui-han-crh":22}},{"path":"src/main/java/dukeprogram/storage/SaveManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.KeyNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"import utilities.SerializedNamesFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":" * SaveManager manages all the save functionalities","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"public class SaveManager {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    private static Storage dataInMemory;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    private static final String DATA_FOLDER \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    private static final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"            DATA_FOLDER,","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"            \"RUIHAN\",","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"            \"Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    );","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * Saves to the storage object","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     * @param header the name of the variable to associate the saved object with","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"     * @param obj the saved object","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    public static void save(String header, Serializable obj) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(\"SAVED \" + header);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        dataInMemory.put(header, obj);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"     * Loads to the storage object","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"     * @param header the name of the variable to associate the saved object with","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     * @return a Serializable object if possible","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"     * @throws KeyNotFoundException if no such header name exists","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    public static \u003cT extends Serializable\u003e T load(String header) throws KeyNotFoundException {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        return (T) dataInMemory.get(header);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"     * Serializes a file to disk under the path","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"     * @param fileName the file name to serialize to under the folder path","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"    public static void serialize(String fileName) throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        FileOutputStream fileOutputStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        File saveFile \u003d new File(PATH.toString(), fileName);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        fileOutputStream \u003d new FileOutputStream(saveFile);","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        ObjectOutputStream objOutputStream \u003d new ObjectOutputStream(","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"                fileOutputStream","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        objOutputStream.writeObject(dataInMemory);","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"        objOutputStream.flush();","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        objOutputStream.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        fileOutputStream.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"     * Deserializes a file from disk under the path","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"     * @param fileName the file name to deserialize from","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"     * @return whether deserialization was successful","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    public static boolean deserialize(String fileName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"            File file \u003d new File(PATH.toString(), fileName);","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(file);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(fileInputStream);","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"            ObjectInputStream objInputStream \u003d new ObjectInputStream(","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"                    fileInputStream","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"            );","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"                dataInMemory \u003d (Storage) objInputStream.readObject();","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"            } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"                System.out.println(\"FATAL ERROR: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"            fileInputStream.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"            dataInMemory \u003d new Storage();","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"            return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"     * Erases all the data of this current save file.","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"     * @return","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    public static boolean wipeData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"        File saveFile \u003d new File(PATH.toString(),","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"                SerializedNamesFormatter.createFileNameForUser(Duke.getUser().getName()));","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"        return saveFile.delete();","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"rui-han-crh":109}},{"path":"src/main/java/dukeprogram/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.KeyNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * Storages stores a hashmap of data mapping a variable header name","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" * to a Serializable object. Objects saved can be retrieved from and loaded","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * to this Storage object.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * This object is intermittently saved to disk when serialize is called.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"public class Storage implements Serializable {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    private final HashMap\u003cString, Serializable\u003e dataObjectsInMemory;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new storage object","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    public Storage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        dataObjectsInMemory \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"     * Adds a new variable header associated with a","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"     * serializable object intended to be saved","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"     * @param header the header name used to save and retrieve the serializable object","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     * @param obj the serializable object to store","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"    public void put(String header, Serializable obj) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        dataObjectsInMemory.put(header, obj);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"     * Retrieves from this Storage a saved Serializable object only if it exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"     * @param header the name associated with this Serializable object","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"     * @return the Serializable object that was retrieved","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"     * @throws KeyNotFoundException if the given header name could not be identified","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    public Serializable get(String header) throws KeyNotFoundException {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        if (!dataObjectsInMemory.containsKey(header)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"            throw new KeyNotFoundException(header, \"dataObjectsInMemory\");","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"            return dataObjectsInMemory.get(header);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"rui-han-crh":48}},{"path":"src/main/java/dukeprogram/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package dukeprogram.ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.HomepageCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.parser.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" * UserInterface manages all the inputs from the user and outputs to the console","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"public class UserInterface {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    private static final String DECORATOR \u003d \"\\t\" + \"-\".repeat(50);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    private static final List\u003cString\u003e location \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"     * Requests a command in the form of a string from the user","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    public static void requestCommands() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        boolean canContinue \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        while (canContinue) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"            UserInterface.printCurrentLocation();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"                Command command \u003d Parser.parse(","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                        new HomepageCommand(),","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"                        askForInput(\"[tasks | exit]\")","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                );","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"                canContinue \u003d command.execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                printInStyle(e.getUiMessage().toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"     * Advances the location of the current path","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"     * @param locationName the location name to advance to","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    public static void advanceLocation(String locationName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        location.add(locationName);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"     * Retreats from the previously advanced location","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"    public static void retreatLocation() {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        location.remove(location.size() - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the current location the user is at","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"    public static void printCurrentLocation() {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(\"\\t Location | \" + String.join(\" -\u003e \", location));","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given strings without any formatting, each on a new line","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"     * @param stringsToPrint the strings to print","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    public static void print(String... stringsToPrint) {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"        for (String stringToPrint : stringsToPrint) {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(stringToPrint);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given strings in a fancy format","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"     * @param stringsToPrint the strings to print","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(String... stringsToPrint) {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : stringsToPrint) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given collection of items and strings in a fancy format","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"     * @param itemsToPrint the collection of items to print","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"     * @param others the strings to print","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(Iterable\u003c?\u003e itemsToPrint, String... others) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"        for (Object item : itemsToPrint) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + item.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : others) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given collection of items and strings in a fancy format","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"     * @param itemsToPrint the collection of items to print","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"     * @param others the strings to print","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(Object[] itemsToPrint, String... others) {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"        for (Object item : itemsToPrint) {","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + item.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : others) {","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"     * Prints the given collection of items and strings in a fancy format","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"     * @param itemsToPrint the collection of items to print","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"     * @param others the strings to print","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"    public static void printInStyle(Stream\u003c?\u003e itemsToPrint, String... others) {","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"        itemsToPrint.forEach(item -\u003e System.out.println(\"\\t\\t\" + item.toString()));","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"        for (String string : others) {","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"            System.out.println(\"\\t\\t\" + string);","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"        System.out.println(DECORATOR);","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"     * Requests user for input using the scanner","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"     * @param prompt the prompt to show the user","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"     * @return the given input from the user","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"    public static String askForInput(String prompt) {","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"        System.out.print(prompt + \" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"            return scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"            return \"bye\";","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"rui-han-crh"},"content":"     * Requests user for input using the scanner","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"rui-han-crh"},"content":"     * @param prompt the prompt to show the user","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"rui-han-crh"},"content":"     * @return the given input from the user","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"rui-han-crh"},"content":"    public static String askForInput(String prompt, boolean noLinebreak) {","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"        if (!noLinebreak) {","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"            return askForInput(prompt);","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"        System.out.print(prompt + \" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"rui-han-crh"},"content":"        if (scanner.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"rui-han-crh"},"content":"            return scanner.next();","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"rui-han-crh"},"content":"            return \"bye\";","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":168}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.UiMessage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import dukeprogram.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" * InvalidCommandException is thrown when no such command is valid","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    private final UiMessage uiMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new invalid command exception","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"     * @param presentCommand the current command context","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"     * @param givenCommandString the string given to be parsed as a command","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"     * @param message the ui message to show to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public InvalidCommandException(Command presentCommand, String givenCommandString, UiMessage message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        super(String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"                \"%s was unable to interpret the command \\\"%s\\\"\",","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"                presentCommand.toString(),","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"                givenCommandString)","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        uiMessage \u003d message;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new invalid command exception","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     * @param givenCommandString the string given to be parsed as a command","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"     * @param message the ui message to show to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    public InvalidCommandException(String givenCommandString, UiMessage message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        super(String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                \"Unable to interpret the command \\\"%s\\\"\",","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                givenCommandString)","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        uiMessage \u003d message;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new invalid command exception","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     * @param uiMessage the ui message to show to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public InvalidCommandException(UiMessage uiMessage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        super(\"Invalid command given\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        this.uiMessage \u003d uiMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    public UiMessage getUiMessage() {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"        return uiMessage;","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":52}},{"path":"src/main/java/exceptions/InvalidJobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * InvalidJobException is thrown if there is no such job at all","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class InvalidJobException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    public InvalidJobException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/exceptions/JobNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * JobNameException is thrown if there is an invalid job name","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"public class JobNameException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new JobNameException","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     * @param jobType the type of job","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public JobNameException(String jobType) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        super(String.format(\"☹ OOPS!!! The description of %s %s cannot be empty.\",","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"                \"aeiou\".contains(jobType.toLowerCase(Locale.ROOT).charAt(0) + \"\") ? \"an\" : \"a\",","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"                jobType));","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":19}},{"path":"src/main/java/exceptions/KeyNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * KeyNotFoundException is thrown if the key is not found in a mapping","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class KeyNotFoundException extends Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new KeyNotFoundException","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"     * @param keyName the given key name","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * @param collectionName the collection to find the key in","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    public KeyNotFoundException(String keyName, String collectionName) {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"        super(String.format(\"%s was not found in %s\", keyName, collectionName));","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    public KeyNotFoundException() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"        super();","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"rui-han-crh":20}},{"path":"src/main/java/exceptions/UserDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * UserDoesNotExistException is thrown if the user does not exist","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class UserDoesNotExistException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"    public UserDoesNotExistException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"        super(\"The requested user does not exist\");","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":10}},{"path":"src/main/java/utilities/SerializedNamesFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package utilities;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * SerializedNamesFormatter formats a string name for serialisable objects","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class SerializedNamesFormatter {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    public static String createFileNameForUser(String userName) {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"        return String.format(\"Duke_%s\", userName);","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/utilities/StringUtilities.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package utilities;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * StringUtilities provides utilities for strings and collections containing strings","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"public class StringUtilities {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"     * Helper method to split a String array by a delimiter.","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"     * If two delimiters sit adjacent, an empty array is returned.","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"     * @param input The string array to split","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"     * @param delimiter The string to split by","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"     * @return A nested array containing string arrays that are","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"     *      partitioned by the delimiter, excluding all instances of the delimiter","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public static String[][] splitStringArray(String[] input, String delimiter) {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        if (input.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"            return new String[0][];","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        int splitStart \u003d 0;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        int splitEnd \u003d input.length - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        while (input[splitStart].equals(delimiter)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"            splitStart++;","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        while (input[splitEnd].equals(delimiter)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"            splitEnd--;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        int[] splitIndices \u003d IntStream","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                .range(splitStart, splitEnd + 1)","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                .filter(i -\u003e input[i].equals(delimiter))","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"                .toArray();","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"        String[][] splitArrays \u003d new String[","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"                (int) IntStream","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"                .range(0, splitIndices.length)","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                .filter(i -\u003e i \u003d\u003d 0 || splitIndices[i] - 1 !\u003d splitIndices[i - 1])","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"                .count() + 1][];","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        int startingIndex \u003d splitStart;","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        int j \u003d 0;","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        for (int splitIndex : splitIndices) {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"            if (startingIndex !\u003d splitIndex) {","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"                splitArrays[j] \u003d new String[splitIndex - startingIndex];","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"                System.arraycopy(input, startingIndex, splitArrays[j], 0, splitArrays[j].length);","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                j++;","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"            startingIndex \u003d splitIndex + 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        splitArrays[splitArrays.length - 1] \u003d new String[splitEnd + 1 - startingIndex];","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        System.arraycopy(input, startingIndex, splitArrays[splitArrays.length - 1],","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"                0, splitArrays[splitArrays.length - 1].length);","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        return splitArrays;","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":61}},{"path":"src/test/java/Testing/StringUtilityTests.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package Testing;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import utilities.StringUtilities;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" * Testcases that involve the StringUtilties class","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"public class StringUtilityTests {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a character","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public void splitGenericStringArray() {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"b\", \"c\", \"b\", \"d\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\"}, {\"c\"}, {\"d\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a character","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"     * when two delimiters are next to each other with nothing in between","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayWithRepeatedDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"e\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a character","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"     * when the entire array ends with a delimiter","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayEndingWithDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\", \"e\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a character","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"     * when the entire array ends with multiple delimiters","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayEndingWithRepeatedDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a character","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"     * when it begins with a delimiter","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayStartingWithDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"b\", \"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\", \"e\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a character","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"     * when it begins with multiple delimiters","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"    public void splitStringArrayStartingWithRepeatedDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"b\", \"b\", \"b\", \"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"b\", \"b\", \"e\", \"b\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\"}, {\"d\"}, {\"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"b\")","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can split a generic string array by a","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"     * non-existent character as a delimiter","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"    public void splittingWithNonexistentDelimiter() {","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"e\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {{\"a\", \"c\", \"b\", \"d\", \"b\", \"b\", \"e\"}},","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"q\")","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if splitStringArray can operate without failure on","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"     * an empty array","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"    public void splittingAnEmptyArray() {","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"        String[] arr \u003d {};","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"                new String[][] {},","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"                StringUtilities.splitStringArray(arr, \"o\")","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rui-han-crh":116}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"todo buy cheese","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"event attend water party /at 12 noon on Monday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"deadline bake cake /by Saturday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"list","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"::javac  -cp ..\\src\\main\\java\\utilities -Xlint:none -d ..\\bin ..\\src\\main\\java\\utilities\\*.java","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"::javac  -cp ..\\src\\main\\java\\dukeprogram -Xlint:none -d ..\\bin ..\\src\\main\\java\\dukeprogram\\*.java","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"pause","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"\tpause \u003enul","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"java -classpath ..\\out\\production\\ip\\ dukeprogram.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"pause \u003enul","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"rui-han-crh":6,"-":19}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"    private String date;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"    public Deadline (String s , boolean isCompleted) {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"        super(s.split(\"/by\")[0].substring(8).strip(), isCompleted);","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"        date \u003d s.split(\"/by\")[1].strip();","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"[✓]\" : \"[✗]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"        return \"[D]\" + completion + \" \" +this.getTaskName() + \" (by: \" + date + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"        return \"D | \" + completion + \" | \" + this.getTaskName() + \" | \" + date;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jgyj123":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"        Scanner nextCommand \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"        Duke.checkDirectory();","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"        Duke.createFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Duke.readFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"        while (true) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"            String command \u003d nextCommand.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"            boolean taskAdded \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jgyj123"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jgyj123"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"jgyj123"},"content":"                //if command is list","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"jgyj123"},"content":"                if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jgyj123"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jgyj123"},"content":"                        Task nextTask \u003d tasks.get(i);","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jgyj123"},"content":"                        System.out.println((i + 1) + \". \" + nextTask.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jgyj123"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"jgyj123"},"content":"                    //else if command is done","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"jgyj123"},"content":"                } else if (command.startsWith(\"done\")){","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jgyj123"},"content":"                    int completedIndex \u003d Character.getNumericValue(command.charAt(5));","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jgyj123"},"content":"                    Task currentTask \u003d tasks.get(completedIndex - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"jgyj123"},"content":"                    currentTask.setComplete(true);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"jgyj123"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: [✓] \" + currentTask.getTaskName());","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"jgyj123"},"content":"                    //delete task","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"jgyj123"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jgyj123"},"content":"                    int deleteIndex \u003d Character.getNumericValue(command.charAt(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"jgyj123"},"content":"                    Task deletedTask \u003d tasks.get(deleteIndex - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"jgyj123"},"content":"                    tasks.remove(deleteIndex - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jgyj123"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\" + deletedTask.toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"jgyj123"},"content":"                    + \"\\nNow you have \" +  tasks.size() +  \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"jgyj123"},"content":"                    //save the tasks in hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"jgyj123"},"content":"                    Duke.writeFile(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"jgyj123"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"jgyj123"},"content":"                else {","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"jgyj123"},"content":"                    //Add a todo","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"jgyj123"},"content":"                    if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jgyj123"},"content":"                        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"jgyj123"},"content":"                            if (command.length() \u003d\u003d 4) {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"jgyj123"},"content":"                                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"jgyj123"},"content":"                            }","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"jgyj123"},"content":"                            Task newTask \u003d new Todo(command, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"jgyj123"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"jgyj123"},"content":"                            taskAdded \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"jgyj123"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"jgyj123"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"jgyj123"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"jgyj123"},"content":"                        //event","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"jgyj123"},"content":"                    } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jgyj123"},"content":"                        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"jgyj123"},"content":"                            if (command.length() \u003d\u003d 5) {","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"jgyj123"},"content":"                                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"jgyj123"},"content":"                            }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"jgyj123"},"content":"                            Task newTask \u003d new Event(command, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"jgyj123"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"jgyj123"},"content":"                            taskAdded \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"jgyj123"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"jgyj123"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"jgyj123"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"jgyj123"},"content":"                        //deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"jgyj123"},"content":"                    } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"jgyj123"},"content":"                        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"jgyj123"},"content":"                            if (command.length() \u003d\u003d 8) {","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"jgyj123"},"content":"                                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"jgyj123"},"content":"                            }","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"jgyj123"},"content":"                            Task newTask \u003d new Deadline(command, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"jgyj123"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"jgyj123"},"content":"                            taskAdded \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"jgyj123"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"jgyj123"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"jgyj123"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"jgyj123"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"jgyj123"},"content":"                        throw new DukeException(\"Sorry, I don\u0027t know what that means\");","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"jgyj123"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"jgyj123"},"content":"               if (taskAdded) {","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"jgyj123"},"content":"                   Task addedTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"jgyj123"},"content":"                   System.out.println(\"Got it. I\u0027ve added this task: \\n\" + addedTask.toString() +","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"jgyj123"},"content":"                           \"\\nNow you have \" +  tasks.size() +  \" tasks in the list.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"jgyj123"},"content":"                   //save the tasks in hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"jgyj123"},"content":"                   Duke.writeFile(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"jgyj123"},"content":"               }","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"jgyj123"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"jgyj123"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"jgyj123"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"jgyj123"},"content":"    public static void checkDirectory() {","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"jgyj123"},"content":"        String PATH \u003d \"./data\";","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"jgyj123"},"content":"        File directory \u003d new File(PATH);","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"jgyj123"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"jgyj123"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"jgyj123"},"content":"    public static void createFile() {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"jgyj123"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"jgyj123"},"content":"            File myObj \u003d new File(\"data/filename.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"jgyj123"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"jgyj123"},"content":"                System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"jgyj123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"jgyj123"},"content":"            System.out.println(\"An error has occured\");","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"jgyj123"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"jgyj123"},"content":"    public static ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"jgyj123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"jgyj123"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"jgyj123"},"content":"            File myObj \u003d new File(\"data/filename.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"jgyj123"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"jgyj123"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"jgyj123"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"jgyj123"},"content":"                String[] taskBreakdown \u003d data.split(\"\\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"jgyj123"},"content":"                String taskType \u003d taskBreakdown[0].trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"jgyj123"},"content":"                boolean isTaskCompleted \u003d taskBreakdown[1].trim().equals(\"1\");","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"jgyj123"},"content":"                String taskMessage \u003d taskBreakdown[2].trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"jgyj123"},"content":"                String taskDate \u003d taskBreakdown.length \u003e 3 ? taskBreakdown[3].trim(): \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"jgyj123"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"jgyj123"},"content":"                    tasks.add(new Todo(\"todo \" + taskMessage, isTaskCompleted));","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"jgyj123"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"jgyj123"},"content":"                else if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"jgyj123"},"content":"                    tasks.add(new Event(\"event \" + taskMessage + \"/at \" + taskDate, isTaskCompleted));","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"jgyj123"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"jgyj123"},"content":"                else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"jgyj123"},"content":"                    tasks.add(new Deadline(\"deadline\" + taskMessage + \"/by \" + taskDate, isTaskCompleted));","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"jgyj123"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"jgyj123"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"jgyj123"},"content":"            myReader.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"jgyj123"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"jgyj123"},"content":"            System.out.println(\"An error occurred. File is not found.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"jgyj123"},"content":"        return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"jgyj123"},"content":"    public static void writeFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"jgyj123"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"jgyj123"},"content":"            FileWriter myWriter \u003d new FileWriter(\"data/filename.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"jgyj123"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"jgyj123"},"content":"                Task nextTask \u003d tasks.get(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"jgyj123"},"content":"                myWriter.write(( nextTask.toFormattedString()) + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"jgyj123"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"jgyj123"},"content":"            myWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"jgyj123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"jgyj123"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"jgyj123"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"jgyj123"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jgyj123":164,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"   public DukeException (String s) {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"       super(s);","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"   }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jgyj123":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"    private String date;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"    public Event (String s, boolean isCompleted) {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"        super(s.split(\"/at\")[0].substring(5).strip(),isCompleted);","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"        date \u003d s.split(\"/at\")[1].strip();","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"[✓]\" : \"[✗]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"        return \"[E]\" + completion + \" \" + this.getTaskName() + \" (at: \" + date + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"        return \"E | \" + completion + \" | \" + this.getTaskName() + \" | \" + date;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jgyj123":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"    private String taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"    public Task (String s, boolean isComplete) {","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"        this.taskName \u003d s;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"        return taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"        return isComplete;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"    public void setComplete(boolean status) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"jgyj123"},"content":"        isComplete \u003d status;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"jgyj123"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"jgyj123"},"content":"        return \"- | \" + completion + \" | \" + this.getTaskName();","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jgyj123":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"    public Todo (String s, boolean isCompleted) {","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"        super(s.substring(5), isCompleted);","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"[✓]\" : \"[✗]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jgyj123"},"content":"        return \"[T]\" + completion + \" \" + this.getTaskName();","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jgyj123"},"content":"        String completion \u003d this.isComplete() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jgyj123"},"content":"        return \"T | \" + completion + \" | \" + this.getTaskName();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jgyj123"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jgyj123"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jgyj123":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jgyj123"},"content":"todo eat rice","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jgyj123"},"content":"deadline submit this project /by tonight","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jgyj123"},"content":"event go to class /at 6","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jgyj123"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jgyj123"},"content":"done 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jgyj123"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jgyj123"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jgyj123":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jgyj123"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jgyj123":1,"-":20}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"        return \"D | \" + super.encode() + \"| \" + this.deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadline.format(Task.DATE_TIME_DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Ugholaf":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"    private static Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"        final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"        final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"        final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"        printTextWithDivider(GREETING_MESSAGE);","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"        taskList \u003d storage.loadTasks();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"            // Quit when user enters \"bye\"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"                printTextWithDivider(GOODBYE_MESSAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"            // Execute the command","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"            executeCommand(command);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"     * Prints out the given text with dividers to the console","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"     * @param text The specified text to be printed to the console","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"    public static void printTextWithDivider(String text) {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"        final String divider \u003d \"-\".repeat(100) + \"\\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        System.out.println(divider + text + divider);","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"     * Execute the command entered by user","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"     * @param command The specified command","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"    private static void executeCommand(String command) {","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"        // Limit the words to 2","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"        String[] inputs \u003d command.trim().split(\" \", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"             // List out all tasks","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"            case (\"list\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"                listCommand(inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"            // Add todo task","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"            case (\"todo\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"                addTaskCommand(TaskType.TODO, inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"            // Add deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"            case (\"deadline\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"                addTaskCommand(TaskType.DEADLINE, inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"            // Add event task","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"            case (\"event\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"                addTaskCommand(TaskType.EVENT, inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"            // Mark task as done","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"            case (\"mark\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"                markTaskCommand(inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"Ugholaf"},"content":"            // Mark task as undone","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"            case (\"unmark\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"Ugholaf"},"content":"                unmarkTaskCommand(inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"            // Delete task","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"            case (\"delete\"):","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"                deleteTaskCommand(inputs);","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"            default:","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"            printTextWithDivider(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"    private static void listCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"Ugholaf"},"content":"        if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"Ugholaf"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"        str.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"            // Display task as 1-index","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"            str.append(i + 1).append(\".\").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"Ugholaf"},"content":"        printTextWithDivider(str.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"Ugholaf"},"content":"    private static void addTaskCommand(TaskType taskType, String[] inputs) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"Ugholaf"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The description of \" + taskType.getTaskType() + \" cannot be empty.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"Ugholaf"},"content":"        Task task;","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"Ugholaf"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"Ugholaf"},"content":"            case TODO:","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"Ugholaf"},"content":"                task \u003d new Todo(inputs[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"Ugholaf"},"content":"            case DEADLINE:","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"Ugholaf"},"content":"                String[] deadlineInputs \u003d inputs[1].split(\"/by \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"Ugholaf"},"content":"                if (deadlineInputs.length \u003d\u003d 1 || deadlineInputs[1].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"Ugholaf"},"content":"                    throw new DukeException(\"OOPS!!! The date of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"Ugholaf"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"Ugholaf"},"content":"                task \u003d new Deadline(deadlineInputs[0], LocalDateTime.parse(deadlineInputs[1], Task.DATE_TIME_FORMATTER));","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"Ugholaf"},"content":"            case EVENT:","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"Ugholaf"},"content":"                String[] eventInputs \u003d inputs[1].split(\"/at \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"Ugholaf"},"content":"                if (eventInputs.length \u003d\u003d 1 || eventInputs[1].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"Ugholaf"},"content":"                    throw new DukeException(\"OOPS!!! The date and time of an event cannot be empty.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"Ugholaf"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"Ugholaf"},"content":"                task \u003d new Event(eventInputs[0], LocalDateTime.parse(eventInputs[1], Task.DATE_TIME_FORMATTER));","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"Ugholaf"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":146,"author":{"gitId":"Ugholaf"},"content":"            default:","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"Ugholaf"},"content":"                throw new DukeException(\"OOPS!!! Invalid task type.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"Ugholaf"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":150,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! Invalid datetime format, input a valid date and time in the format \" +","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"Ugholaf"},"content":"                    \"YYYY-MM-DD HH:MM. \\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"Ugholaf"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":155,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"Ugholaf"},"content":"        storage.appendTaskToFile(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"Ugholaf"},"content":"        String addTaskMessage \u003d  \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"Ugholaf"},"content":"                \"  \" + task + \"\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"Ugholaf"},"content":"                \"Now you have \" + taskList.size() + \" task(s) in the list.\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"Ugholaf"},"content":"        printTextWithDivider(addTaskMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"Ugholaf"},"content":"    private static void markTaskCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"Ugholaf"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The task index cannot be empty.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"Ugholaf"},"content":"            // Tasks are stored as 0-index but display as 1-index","lastModifiedDate":"2022-08-18"},{"lineNumber":171,"author":{"gitId":"Ugholaf"},"content":"            // Minus 1 to get the correct task in the taskList","lastModifiedDate":"2022-08-18"},{"lineNumber":172,"author":{"gitId":"Ugholaf"},"content":"            int taskIndex \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"Ugholaf"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":174,"author":{"gitId":"Ugholaf"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":175,"author":{"gitId":"Ugholaf"},"content":"            storage.writeAllTasksToFile(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":177,"author":{"gitId":"Ugholaf"},"content":"            String str \u003d \"Nice! I\u0027ve marked this as done:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"Ugholaf"},"content":"                    task + \"\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"Ugholaf"},"content":"            printTextWithDivider(str);","lastModifiedDate":"2022-08-18"},{"lineNumber":180,"author":{"gitId":"Ugholaf"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The task index specified is not valid.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":182,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":184,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":185,"author":{"gitId":"Ugholaf"},"content":"    private static void unmarkTaskCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":186,"author":{"gitId":"Ugholaf"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The task index cannot be empty.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":188,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":190,"author":{"gitId":"Ugholaf"},"content":"            // Tasks are stored as 0-index but display as 1-index","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"Ugholaf"},"content":"            // Minus 1 to get the correct task in the taskList","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"Ugholaf"},"content":"            int taskIndex \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"Ugholaf"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":194,"author":{"gitId":"Ugholaf"},"content":"            task.maskUndone();","lastModifiedDate":"2022-08-17"},{"lineNumber":195,"author":{"gitId":"Ugholaf"},"content":"            storage.writeAllTasksToFile(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":196,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":197,"author":{"gitId":"Ugholaf"},"content":"            String str \u003d \"Ok, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"Ugholaf"},"content":"                    task + \"\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"Ugholaf"},"content":"            printTextWithDivider(str);","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"Ugholaf"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The task index specified is not valid.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"Ugholaf"},"content":"    private static void deleteTaskCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"Ugholaf"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":207,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The task index cannot be empty.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":208,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"Ugholaf"},"content":"            // Tasks are stored as 0-index but display as 1-index","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"Ugholaf"},"content":"            // Minus 1 to get the correct task in the taskList","lastModifiedDate":"2022-08-18"},{"lineNumber":212,"author":{"gitId":"Ugholaf"},"content":"            int taskIndex \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":213,"author":{"gitId":"Ugholaf"},"content":"            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"Ugholaf"},"content":"            taskList.remove(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"Ugholaf"},"content":"            storage.writeAllTasksToFile(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":217,"author":{"gitId":"Ugholaf"},"content":"            String str \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":218,"author":{"gitId":"Ugholaf"},"content":"                    \"  \" + task + \"\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":219,"author":{"gitId":"Ugholaf"},"content":"                    \"Now you have \" + taskList.size() + \" task(s) in the list.\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":220,"author":{"gitId":"Ugholaf"},"content":"            printTextWithDivider(str);","lastModifiedDate":"2022-08-18"},{"lineNumber":221,"author":{"gitId":"Ugholaf"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":222,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"OOPS!!! The task index specified is not valid.\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":223,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ugholaf":216,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"    public DukeException(String errMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"        super(errMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Ugholaf":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"    protected LocalDateTime eventTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"        return \"E | \" + super.encode() + \"| \" + this.eventTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"        return \"[E]\" + super.toString() + \"(on: \" + eventTime.format(Task.DATE_TIME_DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Ugholaf":20}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"    private static final String DIR_NAME \u003d \"data\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    private static final Path FILE_PATH \u003d Paths.get(HOME, DIR_NAME, FILE_NAME);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"    private static final Path DIR_PATH \u003d Paths.get(HOME, DIR_NAME);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    public Storage() {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"        initialize();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    private void initialize() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"            if (!isDirectoryPresent()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"                Files.createDirectory(DIR_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"Unable to create new data folder!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"            if (!isFilePresent()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"                Files.createFile(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"Unable to create new data file!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    private boolean isDirectoryPresent() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        return Files.exists(DIR_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    private boolean isFilePresent() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"        return Files.exists(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"            List\u003cString\u003e tasks \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"            for (String task : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"                Task decodedTask \u003d decodeTaskFromString(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"                taskList.add(decodedTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"Unable to read from file!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"    public void appendTaskToFile(Task task) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH.toString(), true);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"            fw.write(encodeTaskToString(task));","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"            fw.write(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"            fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"Unable write to file!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"    public void writeAllTasksToFile(List\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"            List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"                list.add(encodeTaskToString(task));","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"            Files.write(FILE_PATH, list);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"            throw new DukeException(\"Unable write to file!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"    private Task decodeTaskFromString(String encodedTask) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"        String[] components \u003d encodedTask.split(\" \\\\| \", 3);","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"        Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Ugholaf"},"content":"        switch (components[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"        case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Ugholaf"},"content":"            task \u003d new Todo(components[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Ugholaf"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"        case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"            String[] deadlineInputs \u003d components[2].split(\" \\\\| \",2);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"            task \u003d new Deadline(deadlineInputs[0], LocalDateTime.parse(deadlineInputs[1]));","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"Ugholaf"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"        case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"            String[] eventInputs \u003d components[2].split(\" \\\\| \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"            task \u003d new Event(eventInputs[0], LocalDateTime.parse(eventInputs[1]));","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"            task \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"        // \"1\" indicates task is done","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"Ugholaf"},"content":"        if (components[1].equals(\"1\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"Ugholaf"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"    private String encodeTaskToString(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"        return task.encode();","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Ugholaf":116}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"    public static final DateTimeFormatter DATE_TIME_DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yy HH:mm\");","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    public void maskUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        String encodedStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"        return encodedStatus + \" | \" + this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Ugholaf":36}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"    TODO,","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"    EVENT;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"        switch (this) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"            case TODO: return \"a todo\";","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"            case DEADLINE: return \"a deadline\";","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"            case EVENT: return \"an event\";","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"        return null;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Ugholaf":14}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"        return \"T | \" + super.encode();","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Ugholaf":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"testing","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Ugholaf":15}}]

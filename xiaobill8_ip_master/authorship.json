[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"xiaobill8":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"javafx {","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"checkstyle {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"xiaobill8":28}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"# `Duke` User Guide","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"![Duke Ui](./Ui.png)","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"`Duke` is task manager that helps you keep track of **Todos**, **Deadlines** and **Events** so that you don\u0027t need to.","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"## Quick start","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"1. Ensure you have Java `11` or above installed.","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/xiaobill8/ip/releases).","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"3. Copy the file to the folder you want to use as the home folder for Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"5. Enter a command in the command box to execute it.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"### Type of Tasks supported","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"- `todo`: A simple todo task.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"- `deadline`: A task that must be done by a \"by\" date.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"- `event`: An event that happens at an \"at\" date.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"- Recurring `event`: An event that when completed, generates a new event in specified interval.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"### Adding a `Todo`","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"- Add a todo to your task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"Command format: `todo \u003ctodo description\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"### Adding a `Deadline`","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"- Add a deadline to your task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"Command format: `deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"### Adding a `Event`","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"- Add an event to your task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"Command format: `event \u003cdescription\u003e /at \u003cyyyy-MM-dd\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"### Adding a recurring `Deadline`/`Event`","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"- Adds a recurring event to your task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"- Append `/r \u003crecurring interval\u003e` to respectice Command format.","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"- Recurring interval options","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"  - Daily - `D`","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"  - Weekly - `W`","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"  - Monthly - `M`","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"Command format: `[event/deadline] \u003cdescription\u003e /at \u003cyyyy-MM-dd\u003e /r \u003c[D|W|M]\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"## Operations","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"### `list` - shows your current Task List","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"- Display your current Task List","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"Command format: `list`","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"Example of usage:","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"Expected Output : ","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    list","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][X] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"2. [D][ ][ ] art submission (by: 12 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"#### Understanding the Checkboxes","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"In order from left to right:","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"1. Task type `T/D/E`","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"2. Recurring Interval `D/W/M/\u003cempty\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"3. Completion Status `X/\u003cempty\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"### `mark` - marks a Task as completed","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"- Marks a completed Task with a cross in the 3rd checkbox","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"Command format:  `mark \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"Example of usage:","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"Expected Output : ","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"Before ","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][ ] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"    mark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"After","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][X] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"#### Marking a recurring Task","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"- Marking a recurring Task adds a cross in the 3rd checkbox","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"- It also generates a new unmarked recurring Task at `date + specified interval`","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"Command format: `mark \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"Example of usage:","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"Expected Output : ","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"Before ","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"1. [T][W][ ] Piano Lesson (at: 20 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"    mark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"After","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"xiaobill8"},"content":"1. [T][W][X] Piano Lesson (at: 20 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"2. [T][W][ ] Piano Lesson (at: 27 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"### `unmark` - revert status of a completed Task","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"xiaobill8"},"content":"- unmarks a completed Task by removing the cross in the checkbox","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"xiaobill8"},"content":"Command format:  `unmark \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"Example of usage:","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"Expected Output : ","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"Before ","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][X] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"xiaobill8"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"    unmark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"xiaobill8"},"content":"    ","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"After","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][ ] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"xiaobill8"},"content":"### `delete` - remove a task from the Task List","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"- completely remove a task from the List","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"xiaobill8"},"content":"Command format:  `delete \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"xiaobill8"},"content":"Example of usage:","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"xiaobill8"},"content":"Expected Output : ","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"xiaobill8"},"content":"Before ","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][X] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":152,"author":{"gitId":"xiaobill8"},"content":"2. [D][ ][ ] art submission (by: 12 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":154,"author":{"gitId":"xiaobill8"},"content":"    delete 1","lastModifiedDate":"2022-09-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":156,"author":{"gitId":"xiaobill8"},"content":"After","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"xiaobill8"},"content":"1. [D][ ][ ] art submission (by: 12 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":158,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"xiaobill8"},"content":"### `find` - search for task with corresponding key letters","lastModifiedDate":"2022-09-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"xiaobill8"},"content":"- search for tasks that matches user\u0027s input","lastModifiedDate":"2022-09-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"xiaobill8"},"content":"Command format:  `find \u003cdescription\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"},{"lineNumber":169,"author":{"gitId":"xiaobill8"},"content":"Expected Output : ","lastModifiedDate":"2022-09-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"xiaobill8"},"content":"Before ","lastModifiedDate":"2022-09-19"},{"lineNumber":172,"author":{"gitId":"xiaobill8"},"content":"1. [T][ ][X] buy pen","lastModifiedDate":"2022-09-19"},{"lineNumber":173,"author":{"gitId":"xiaobill8"},"content":"2. [D][ ][ ] art submission (by: 12 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"xiaobill8"},"content":"    find art","lastModifiedDate":"2022-09-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":177,"author":{"gitId":"xiaobill8"},"content":"After","lastModifiedDate":"2022-09-19"},{"lineNumber":178,"author":{"gitId":"xiaobill8"},"content":"1. [D][ ][ ] art submission (by: 12 May 2022)","lastModifiedDate":"2022-09-19"},{"lineNumber":179,"author":{"gitId":"xiaobill8"},"content":"````","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"-":19,"xiaobill8":160}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    private Text dialog;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"xiaobill8":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.data.LocalStorage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.handlers.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.models.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import duke.services.Parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":" * Main class that encompasses Duke\u0027s control flow.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    private final LocalStorage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    private TaskList list;","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"     * Constructor for Duke instance.","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"    public Duke() {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        storage \u003d new LocalStorage();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     * Gets the next Response for the current Duke instance.","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"     * @param input User input for Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"     * @return Duke\u0027s next response.","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        list \u003d storage.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        String response;","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        Commands command \u003d parser.parseCommand(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"        String[] fullCommand \u003d parser.parseFullCommand(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"            switch (command) {","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"            case BYE:","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"                response \u003d ByeHandler.getResponse();","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"            case LIST:","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"                response \u003d ListHandler.getResponse(list);","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"            case TODO:","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"                response \u003d TodoHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"            case DEADLINE:","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"                response \u003d DeadlineHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"            case EVENT:","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"                response \u003d EventHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"            case MARK:","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"                response \u003d MarkHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"            case UNMARK:","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"                response \u003d UnmarkHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"            case FIND:","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"                response \u003d FindHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"            case DELETE:","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"                response \u003d DeleteHandler.getResponse(list, fullCommand[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"            default:","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"                response \u003d \"Unknown Command, please try again.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"            System.out.print(list);","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"            storage.write(list);","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"            response \u003d (dukeException.getMessage());","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"            response \u003d \"Invalid Command format, please try again.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"        return response;","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"xiaobill8":96}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"public class Launcher {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"xiaobill8":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"xiaobill8":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"xiaobill8":51}},{"path":"src/main/java/duke/data/LocalStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.data;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.io.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import duke.models.*;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.IntervalUtil;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":" * Storage class that loads and writes to local storage ./data/duke.txt","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"public class LocalStorage {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    private static final String DIR_PATH \u003d \"./data\";","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    private static final Pattern TASK_REGEX \u003d Pattern.compile(","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"            \"^\\\\[(T|D|E)\\\\]\\\\[(D|W|M| )\\\\]\\\\[(X| )\\\\] (.*?)(?: \\\\(.*: (.*)\\\\))?$\");","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     * Writes a list of tasks into a .txt file as specified by FILE_PATH.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     * @param tasklist The ArrayList of tasks to be written.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    public void write(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"            File dukeFile \u003d new File(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"            dukeFile.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            System.out.printf(\"Error creating file at path %s%n\", FILE_PATH);","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"            FileWriter myWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"            for (Task task: tasklist) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"                myWriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"            myWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"            System.out.printf(\"Unable to write to file: %s%n\", FILE_PATH);","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"     * Loads Tasks from a .txt file as specified by FILE_PATH into a TaskList.","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"     * Tasks should follow the following REGEX \"^\\\\[(T|D|E)\\\\]\\\\[(X| )\\\\] (.*?)(?: \\\\(.*: (.*)\\\\))?$\".","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"     * @return TaskList: TaskList generated from the Tasks in the file.","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"            File storageDirectory \u003d new File(DIR_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"            if (!storageDirectory.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"                storageDirectory.mkdirs();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"            return loadTasks(reader);","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"            return new TaskList();","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"     * Loads Tasks from a BufferedReader into a TaskList.","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"     * @param reader BufferedReader containing tasks in individual lines.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"     * @return TaskList: TaskList generated from the Tasks in the BufferedReader.","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"    private TaskList loadTasks(BufferedReader reader) throws IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        String line;","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"                Matcher m \u003d TASK_REGEX.matcher(line);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"                m.find();","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"                String taskType \u003d m.group(1);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"                String taskInterval \u003d m.group(2);","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"                String taskDone \u003d m.group(3);","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"                String taskName \u003d m.group(4);","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"                String taskDate \u003d m.group(5);","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"                FormattedDate formattedTaskDate \u003d null;","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"                if (taskDate !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"                    formattedTaskDate \u003d new FormattedDate(taskDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"                switch (taskType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"                case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"                    taskList.add(new Todo(taskName, taskDone.equalsIgnoreCase(\"X\")));","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"                case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"                    taskList.add(new Deadline(taskName, taskDone.equalsIgnoreCase(\"X\"), formattedTaskDate));","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"                case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"                    Interval interval \u003d IntervalUtil.getInterval(taskInterval);","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"                    taskList.add(new Event(taskName, taskDone.equalsIgnoreCase(\"X\"), formattedTaskDate, interval));","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"                default:","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"                    throw new DukeException(\"Unknown Task type parsed from duke.txt\");","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"                lineNumber++;","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"            } catch (IllegalStateException | DukeException ex) {","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"                System.out.printf(\"Invalid line found at line %d%n\", lineNumber);","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"        return taskList;","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"xiaobill8":110}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * A subclass of class Exception that indicates conditions","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" * that the Duke application might want to catch.","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"xiaobill8":11}},{"path":"src/main/java/duke/handlers/ByeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * A Handler class for BYE command.","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"public class ByeHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"     * Handles the BYE Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"     * Quits the running Duke instance.","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse() {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"        return (\"Bye. Duke doesn\u0027t miss you.\");","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":14}},{"path":"src/main/java/duke/handlers/DeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import duke.models.FormattedDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.IntervalUtil;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Deadline commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"public class DeadlineHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    private static final Pattern RECURRING_DEADLINE \u003d Pattern.compile(\"^(.+?(?\u003d\\\\/by))\\\\/by(.+?(?\u003d\\\\/r))\\\\/r(.+)\");","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"     * Handles the DEADLINE Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"     * Adds a Deadline into the provided list containing description and at date provided in input.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the Deadline in.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * @param input Deadline description and date.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed Deadline Command.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        if (input.contains(\"/r\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            return createRecurringDeadline(list, input);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"            return createNonRecurringDeadline(list, input);","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     * Creates a non-recurring Deadline from user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the Deadline in.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"     * @param input Deadline description and date.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of non-recurring Deadline.","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    public static String createNonRecurringDeadline(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        String[] deadlineInputs \u003d input.split(\" /by \", 2);","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        if (deadlineInputs.length \u003c 2 || deadlineInputs[1].trim().equals(\"\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"Invalid Deadline Command format, please try again.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        assert deadlineInputs.length \u003d\u003d 2;","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate byDate \u003d new FormattedDate(deadlineInputs[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        Task newTask \u003d new Deadline(deadlineInputs[0], byDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        list.add(newTask);","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        return (\"Deadline Added!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     * Creates a recurring Deadline from user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the Deadline in.","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"     * @param input Deadline description and date.","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of recurring Deadline.","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"    public static String createRecurringDeadline(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        System.out.println(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        Matcher m \u003d RECURRING_DEADLINE.matcher(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        if (m.find()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            String deadlineDescription \u003d m.group(1).trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"            System.out.println(deadlineDescription);","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"            FormattedDate byDate \u003d new FormattedDate(m.group(2).trim());","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"            Interval deadlineInterval \u003d IntervalUtil.getInterval(m.group(3).trim());","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"            Task newTask \u003d new Deadline(deadlineDescription, false, byDate, deadlineInterval);","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"            list.add(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"            return (String.format(\"Recurring Deadline every %s added!\", deadlineInterval.toString()));","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"            return (\"Invalid Deadline Command format, please try again.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":77}},{"path":"src/main/java/duke/handlers/DeleteHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Delete commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"public class DeleteHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"     * Handles the DELETE Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     * Deletes a Task from the provided list based on position index provided in input.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList containing the Tasks to delete.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * @param input Task number in the given list to delete.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed DELETE command.","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        int taskNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"            Task t \u003d list.remove(taskNum);","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"            String tasksLeft \u003d String.format(\"Now you have %d task(s) in the list.\", list.size());","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"            String response \u003d String.join(\"\\n\",","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"                    \"Got it. I\u0027ve deleted this task:\",","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"                    t.toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"                    tasksLeft);","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"            return (response);","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"            int listSize \u003d list.size();","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            return (String.format(\"Please enter a valid number from 1 to %d.%n\", listSize));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":33}},{"path":"src/main/java/duke/handlers/EventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import duke.models.*;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.IntervalUtil;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Event commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"public class EventHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    private static final Pattern RECURRING_EVENT \u003d Pattern.compile(\"^(.+?(?\u003d\\\\/at))\\\\/at(.+?(?\u003d\\\\/r))\\\\/r(.+)\");","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     * Handles the EVENT Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"     * Adds an Event into the provided list containing description and at date provided in input.","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the Event in.","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"     * @param input Event description and date.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed EVENT Command.","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        if (input.contains(\"/r\")) {","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"            return createRecurringEvent(list, input);","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        } else {","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"            return createNonRecurringEvent(list, input);","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"     * Creates a non-recurring event from user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the Event in.","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     * @param input Event description and date.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of non-recurring event.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    public static String createNonRecurringEvent(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        String[] eventInputs \u003d input.split(\" /at \", 2);","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        if (eventInputs.length \u003c 2 || eventInputs[1].trim().equals(\"\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"Invalid Event Command format, please try again.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        assert eventInputs.length \u003d\u003d 2;","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate atDate \u003d new FormattedDate(eventInputs[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        Task newTask \u003d new Event(eventInputs[0], atDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        list.add(newTask);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        return (\"Event Added!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"     * Creates a recurring event from user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the Event in.","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     * @param input Event description and date.","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of recurring event.","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    public static String createRecurringEvent(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        System.out.println(input);","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        Matcher m \u003d RECURRING_EVENT.matcher(input);","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        if (m.find()) {","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"            String eventDescription \u003d m.group(1).trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"            System.out.println(eventDescription);","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"            FormattedDate atDate \u003d new FormattedDate(m.group(2).trim());","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            Interval eventInterval \u003d IntervalUtil.getInterval(m.group(3).trim());","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"            Task newTask \u003d new Event(eventDescription, false, atDate, eventInterval);","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"            list.add(newTask);","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"            return (String.format(\"Recurring Event every %s added!\", eventInterval.toString()));","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        } else {","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"            return (\"Invalid Event Command format, please try again.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":74}},{"path":"src/main/java/duke/handlers/FindHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Find commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class FindHandler {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * Handles the FIND Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * Finds Tasks containing the specified String in given input.","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList containing the Tasks to unmark.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     * @param input Task number to unmark as done, in String format.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed FIND Command.","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        boolean isTaskFound \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        ArrayList\u003cTask\u003e foundTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"☹ OOPS!!! Tasklist is empty!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        for (Task task: list) {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"            if (task.toString().contains(input)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"                foundTasksList.add(task);","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"                isTaskFound \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        if (isTaskFound) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"            assert foundTasksList.size() \u003e 0;","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"            StringBuilder response \u003d new StringBuilder((\"Here are the tasks found\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"            for (int i \u003d 0; i \u003c foundTasksList.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"                response.append(i).append(1).append(\". \").append(foundTasksList.get(i)).append(\"\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"            return response.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"            return (\"Tasks not found with given keyword\");","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"xiaobill8":44}},{"path":"src/main/java/duke/handlers/ListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" * A handler class for List Commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"public class ListHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"     * Handles the LIST Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"     * Returns the list of Tasks from the param list.","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList containing Tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed LIST Command.","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list) {","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"            response.append(i + 1).append(\". \").append(list.get(i)).append(\"\\n\");","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        return response.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":23}},{"path":"src/main/java/duke/handlers/MarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.models.*;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Mark Commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public class MarkHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     * Handles the MARK Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     * Marks a Task as done from the provided list based on position index provided in input.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList containing the Tasks to mark.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     * @param input Task number to mark as done, in String format.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed MARK Command.","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"            int taskNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"            Task t \u003d list.get(taskNum);","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"            if (t.getIsRecurring()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"                String newTask \u003d markRecurringTask(list, t);","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"                String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"                        + t","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"                        + \"\\n\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"                        + \"A new recurring task has been created:\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"                        + newTask;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"                return response;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"                markNonRecurringTask(t);","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"                return (\"Nice! I\u0027ve marked this task as done:\\n\" + t);","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"            int listSize \u003d list.size();","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"            return (String.format(\"Please enter a valid number from 1 to %d.%n\", listSize));","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"            return exception.getMessage();","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     * Marks a non-recurring Task as complete.","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"     * @param task Task to be marked complete.","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    public static void markNonRecurringTask(Task task) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"     * Marks a recurring Task as complete, and adds subsequent recurring Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add the next recurring task to.","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     * @param task Recurring task to marked complete.","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"    public static String markRecurringTask(TaskList list, Task task) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        Interval interval \u003d task.getInterval();","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"            FormattedDate formattedDate \u003d ((Event) task).getEventDate();","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"            System.out.println(interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"            FormattedDate nextRecurringDate \u003d FormattedDate.addIntervalToDate(formattedDate, interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            Event nextRecurringEvent \u003d new Event(description, false, nextRecurringDate, interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"            list.add(nextRecurringEvent);","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"            return nextRecurringEvent.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"            FormattedDate formattedDate \u003d ((Deadline) task).getDeadlineDate();","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"            System.out.println(interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"            FormattedDate nextRecurringDate \u003d FormattedDate.addIntervalToDate(formattedDate, interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"            Deadline nextRecurringEvent \u003d new Deadline(description, false, nextRecurringDate, interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"            list.add(nextRecurringEvent);","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"            return nextRecurringEvent.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        throw new DukeException(\"Unable to mark recurring task.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":80}},{"path":"src/main/java/duke/handlers/TodoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Todo Commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"public class TodoHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     * Handles the Todo Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * Adds a Todo into the provided list containing description provided in input.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList to add a todo in.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     * @param input Todo Description.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed Todo Command.","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        Task newTask \u003d new Todo(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        list.add(newTask);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        return (\"Todo Added!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":28}},{"path":"src/main/java/duke/handlers/UnmarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * A handler class for Unmark Commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public class UnmarkHandler {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     * Handles the UNMARK Duke command.","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     * Unmarks a Task as done from the provided list based on position index provided in input.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * @param list TaskList containing the Tasks to unmark.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     * @param input Task number to unmark as done, in String format.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     * @return Response of the executed UNMARK Command.","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    public static String getResponse(TaskList list, String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        int taskNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"            Task t \u003d list.get(taskNum);","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"            t.unmarkAsDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"            return (\"I\u0027ve unmarked this tasks as done:\\n\" + t);","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"            int listSize \u003d list.size();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"            return (String.format(\"Please enter a valid number from 1 to %d.%n\", listSize));","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"            return exception.getMessage();","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":32}},{"path":"src/main/java/duke/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.models;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" * A class representing a deadline to be completed byDate a specified date.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    protected FormattedDate byDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     * Deadline Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * @param description Deadline description.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * @param byDate Date to be completed byDate.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    public Deadline(String description, FormattedDate byDate) {","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     * Deadline Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * @param description Deadline description.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"     * @param byDate Date to be completed by.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    public Deadline(String description, boolean isDone, FormattedDate byDate) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"     * Deadline Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     * @param description Deadline description.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"     * @param byDate Date to be completed by.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"     * @param interval Recurring interval.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    public Deadline(String description, boolean isDone, FormattedDate byDate, Interval interval) {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        super(description, isDone, interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"     * Gets the formatted date of the Deadline.","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"     * @return Deadline byDate date.","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    public FormattedDate getDeadlineDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        return this.byDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        return String.format(\"[D]%s (byDate: %s)\", super.toString(), this.byDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"xiaobill8":60}},{"path":"src/main/java/duke/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.models;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" * A class representing an Event task with an \"at\" date.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    protected FormattedDate atDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     * Event Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * @param description Event description.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * @param at Date at which the event occurs.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    public Event(String description, FormattedDate at) {","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        this.atDate \u003d at;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     * Event Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * @param description Event description.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"     * @param atDate Date at which the event occurs.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"     * @param interval Interval at which the event recurs.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    public Event(String description, boolean isDone, FormattedDate atDate, Interval interval) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        super(description, isDone, interval);","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"     * Gets the at date of the Event.","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     * @return Date of Event.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    public FormattedDate getEventDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        return this.atDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.atDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"xiaobill8":48}},{"path":"src/main/java/duke/models/FormattedDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.models;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":" * A standardised date class.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"public class FormattedDate {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    protected DateTimeFormatter parserOptionalFormats \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"            .appendOptional(DateTimeFormatter.ISO_LOCAL_DATE)","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"            .toFormatter();","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     * FormattedDate Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * @param str Date.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     * @throws DukeException Invalid Date format Exception.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    public FormattedDate(String str) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            this.date \u003d LocalDate.parse(str, parserOptionalFormats);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"Invalid Date format, please try again.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    public FormattedDate(LocalDate date) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        return this.date;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"     * Creates a new FormattedDate that is the specified interval","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"     * after the given formattedDate.","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"     * @param formattedDate Reference datae to generate next FormattedDate.","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"     * @param interval Interval between given date and new FormattedDate.","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * @return FormattedDate that is a specified interval after given date.","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    public static FormattedDate addIntervalToDate(FormattedDate formattedDate, Interval interval) {","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        LocalDate newDate \u003d formattedDate.getDate();","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        System.out.println(newDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        switch (interval) {","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        case Day:","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"            newDate \u003d newDate.plusDays(1);","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        case Week:","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"            newDate \u003d newDate.plusWeeks(1);","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        case Month:","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"            newDate \u003d newDate.plusMonths(1);","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        default:","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        return new FormattedDate(newDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"xiaobill8":75}},{"path":"src/main/java/duke/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.models;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" * A class representing a Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    protected boolean isRecurring \u003d false;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    protected Interval recurringInterval \u003d Interval.None;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     * Task Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     * @param description Task description.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     * Task Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"     * @param description Task description.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     * Task Constructor.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"     * @param description Task description.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"     * @param isDone Completion status.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"     * @param interval Interval at which the task recurs.","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    public Task(String description, boolean isDone, Interval interval) {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        this.recurringInterval \u003d interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.isRecurring \u003d interval !\u003d Interval.None;","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"     * Gets the description of the Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"     * @return Task description.","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        return description;","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"     * Gets the status icon of the current Task.","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"     * Task has a status icon of \"X\" if marked as done, and \" \" otherwise.","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"     * @return Status icon of the current Task.","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"     * Gets the status icon of the current Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"     * Task has a status icon of \"X\" if marked as done, and \" \" otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"     * @return Status icon of the current Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    public String getIntervalIcon() {","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        return this.recurringInterval.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"     * Gets the status icon of the current Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"     * Task has a status icon of \"X\" if marked as done, and \" \" otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"     * @return Status icon of the current Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"    public Interval getInterval() {","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"        return this.recurringInterval;","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"     * Gets whether the current Task is recurring.","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"     * @return isRecurring.","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"    public boolean getIsRecurring() {","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        return this.isRecurring;","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"     * Gets whether the current Task is done.","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"     * @return isDone.","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"        return this.isDone;","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"     * Marks the current Task as completed.","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"    public void markAsDone() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"This task is already marked.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"     * Unmarks the current Task as completed.","lastModifiedDate":"2022-09-11"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":120,"author":{"gitId":"xiaobill8"},"content":"    public void unmarkAsDone() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"xiaobill8"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"This task is already unmarked.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"        return String.format(\"[%s][%s] %s\", getIntervalIcon(), getStatusIcon(), this.description);","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"xiaobill8":131}},{"path":"src/main/java/duke/models/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.models;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" * A class representing a list of Tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":10}},{"path":"src/main/java/duke/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.models;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * A class representing a Todo task.","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"xiaobill8":19}},{"path":"src/main/java/duke/services/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.services;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static duke.utils.Commands.UNKNOWN;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Commands;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * A class that handles parsing of user inputs.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public class Parser {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"     * Parses and returns an array of Duke Command components from user input.","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"     * @param input User input to parse.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"     * @return Components of the Duke Command from given user input.","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    public String[] parseFullCommand(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"     * Parses and returns the type of Duke Command from an input.","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     * @param input User input to parse for Duke Command.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * @return Respective Commands ENUM.","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     **/","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    public Commands parseCommand(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        String[] fullCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        Commands command;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            command \u003d Commands.valueOf(fullCommand[0].toUpperCase());","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"            command \u003d UNKNOWN;","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        return command;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":37}},{"path":"src/main/java/duke/utils/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.utils;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * An enum for supported Duke Commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"public enum Commands {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, UNKNOWN","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"xiaobill8":8}},{"path":"src/main/java/duke/utils/Interval.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.utils;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * An enum class containing interval enums of a Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"public enum Interval {","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"    Day,","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"    Week,","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    Month,","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"    None;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        switch(this) {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"        case Day: return \"D\";","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        case Week: return \"W\";","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        case Month: return \"M\";","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        case None: return \" \";","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        default: throw new IllegalArgumentException();","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"xiaobill8":22}},{"path":"src/main/java/duke/utils/IntervalUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.utils;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" * A class containing common util functions for Intervals.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"public class IntervalUtil {","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    public static Interval getInterval(String taskInterval) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"        switch (taskInterval) {","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"        case \"D\":","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"            return Interval.Day;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"        case \"W\":","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"            return Interval.Week;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"        case \"M\":","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"            return Interval.Month;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        case \" \":","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"            return Interval.None;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        default:","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"            throw new DukeException(\"Invalid Interval format, please try again.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"xiaobill8":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" wrappingWidth\u003d\"250\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"xiaobill8":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.control.Accordion?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"      \u003cAccordion /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"      \u003cAccordion /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"xiaobill8":22}},{"path":"src/test/java/duke/DeadlineTest/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.DeadlineTest;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.models.FormattedDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import duke.utils.Interval;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    public void nonRecurringDeadline() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate testDate \u003d new FormattedDate(\"2000-09-15\");","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        Task nonRecurringDeadline \u003d new Deadline(\"Testing\", testDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(\"[D][ ][ ] Testing (by: Sep 15 2000)\", nonRecurringDeadline.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    public void recurringDeadline() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate testDate \u003d new FormattedDate(\"2000-09-16\");","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        Task recurringDeadline \u003d new Deadline(\"Recurring Test\", false, testDate, Interval.Week);","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(\"[D][W][ ] Testing (by: Sep 16 2000)\", recurringDeadline.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    public void markNonRecurringDeadline() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate testDate \u003d new FormattedDate(\"2000-09-15\");","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        Task nonRecurringDeadline \u003d new Deadline(\"Testing\", testDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        nonRecurringDeadline.markAsDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(\"[D][ ][X] Testing (by: Sep 15 2000)\", nonRecurringDeadline.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    public void markRecurringDeadline() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate testDate \u003d new FormattedDate(\"2000-09-16\");","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        Task recurringDeadline \u003d new Deadline(\"Recurring Test\", false, testDate, Interval.Week);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        recurringDeadline.markAsDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(\"[D][W][X] Testing (by: Sep 16 2000)\", recurringDeadline.toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"xiaobill8":42}},{"path":"src/test/java/duke/TaskListTest/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package duke.TaskListTest;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import duke.models.FormattedDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    public void addTask() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate testDate \u003d new FormattedDate(\"2000-09-15\");","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        Task deadline \u003d new Deadline(\"Testing\", testDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        list.add(deadline);","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(\"[D][ ][ ] Testing (by: Sep 15 2000)\", list.get(0).toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    public void deleteTask() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        FormattedDate testDate \u003d new FormattedDate(\"2000-09-16\");","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        Task deadline \u003d new Deadline(\"Testing\", testDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        Task deadline2 \u003d new Deadline(\"Testing2\", testDate);","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        list.add(deadline);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        list.add(deadline2);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        list.remove(0);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(\"[D][ ][ ] Testing2 (by: Sep 16 2000)\", list.get(0).toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"xiaobill8":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"xiaobill8":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"xiaobill8":1}}]

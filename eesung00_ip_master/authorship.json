[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"run {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    mainClassName \u003d \"duke.ui.Launcher\"","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eesung00":25,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"[E] __ false __ attend group project meeting __ Sep 11 2022 21:00 __ ","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"[D] __ false __ project submission __ Sep 16 2022 23:59 __ ","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"[T] __ false __ sleep early __ ","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"eesung00":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"Duke is a dedicated task manager chatBot app that helps you **record and manage your tasks.** It is designed to free user mind and **ease them in remembering all the different tasks and crucial dates in their life.** It uses **Command Line Interface (CLI)** to operate and **integrates with Graphical User Interfaces (GUI)** to enhance user experiences.\u003cbr\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"\u003cbr\u003e\u003cimg src\u003d\"Ui.png\" height \u003d \"400\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"## Quick start","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"1. Download the latest release of **duke.jar** from [here](https://github.com/eesung00/ip/releases).","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"2. Move the duke.jar folder to your desire home folder.","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"3. Double click to run it.","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"4. **Sample data** are available for new user.","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"5. Have fun!","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"To know all `command` to use this app, user can simply send anything to the bot. Duke will respond the list of `command`. They are simple and easy to use!","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"Add Tasks: add task according to format. See [below](#feature-add).\u003cbr/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"Delete Task: `delete`\u003cbr/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"Mark Task as \"done\": `mark`\u003cbr/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"Mark Task as \"undone\": `unmark`\u003cbr/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"Find Task: `find`\u003cbr/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"Show all Tasks: `list`\u003cbr/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"Stop using app: `bye` \u003cbr/\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"Extension: Duke is able to detect anomalies of task to be added. Confirmation will be needed from user if two tasks happen in very close timing or task to be added is already added before. `(Y/N)`","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"### Feature-add","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"Adds any three type of tasks into the list shown in sample below:","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"- todo tasks: `todo visit Singapore`","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"- event tasks: `event go birthday party /at 2022-09-10 2214`","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"- deadline tasks: `deadline final year project /by 2022-09-10 2215`","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003e\u003cmark\u003eTips!\u003c/mark\u003e\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"Please follow the format shown above! Every first word in the input line is a command. (Case-sensitive) \u003cbr\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"The second section of the input line is the tasks detail.\u003cbr\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"The third section after /at and /by is the date and time of the task. Please follow the format.(YYYY-MM-DD HHmm)","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"### Feature-`delete`","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"* Use command `delete [number of task in the list]` to delete the task u wish to eliminate.","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003e\u003cmark\u003eTips!\u003c/mark\u003e\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"Use list command to show the current tasks list you have if you are not sure what is your tasks\u0027 number.","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"### Feature-`mark/unmark`","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"* Use command `mark [number of task in the list]` to mark the task u wish to mark as \"done\".","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"* Use command `unmark [number of task in the list]` to unmark the task u wish to mark as \"undone\".","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"### Feature-`find`","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"* Use command `find [search keyword]` to find the task according to the search keyword. (Case-sensitive)","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"### Feature-`list`","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"* Use command `list` to show all the tasks and their current status.","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"### Feature-`bye`","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"* Use command `bye` to stop using the program. User text field and send button will be disabled.","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"\u003csub\u003eThis section covers some sample usage of duke app.\u003c/sub\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"### `event` - adding an event task","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eEvent task is added with a correct format and duke response user the command success status\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"    \u003ccode\u003eevent go for final exam /at 2022-11-04 1000\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~~~-----DUKE-----~~~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"  New task is registered as you wish, you can come back to check if you wish!:","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"    [E][ ] go for final exam (at: Nov 04 2022 10:00)","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"  Now you have 1 tasks in your list.\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e There is currently 1 task in user\u0027s list and the adding command performed successfully.\u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"### `todo` - adding a todo task","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eToDo task is added with a correct format and duke response user the command success status\u003c/summary\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"    \u003ccode\u003etodo workout tomorrow morning.\u003c/code\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-15"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-15"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"  New task is registered as you wish, you can come back to check if you wish!:","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"    [T][ ] workout tomorrow morning.","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"  Now you have 1 tasks on your list.\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e There is currently 1 task in user\u0027s list and the adding command performed successfully.\u003c/li\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"### `deadline` - adding a deadline task","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eDeadline task is added with a correct format and duke response user the command success status\u003c/summary\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"    \u003ccode\u003edeadline ip project /by 2022-09-15 2359\u003c/code\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-15"},{"lineNumber":119,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"eesung00"},"content":"  New task is registered as you wish, you can come back to check if you wish!:","lastModifiedDate":"2022-09-15"},{"lineNumber":121,"author":{"gitId":"eesung00"},"content":"    [D][ ] ip project (by: Sep 15 2022 23:59)","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"eesung00"},"content":"  Now you have 2 tasks on your list.\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e There are currently 2 tasks in user\u0027s list and the adding command performed successfully.\u003c/li\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":126,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":127,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":128,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":129,"author":{"gitId":"eesung00"},"content":"### `delete` - deleting a task","lastModifiedDate":"2022-09-11"},{"lineNumber":130,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":131,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eEvent task is deleted and there are currently 0 task in the list\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":132,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":134,"author":{"gitId":"eesung00"},"content":"    \u003ccode\u003edelete 1\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":135,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":138,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":139,"author":{"gitId":"eesung00"},"content":"  Ching Ching Poof~~ This task is removed:","lastModifiedDate":"2022-09-11"},{"lineNumber":140,"author":{"gitId":"eesung00"},"content":"  [E][ ] go for final exam (at: Nov 04 2022 10:00)","lastModifiedDate":"2022-09-11"},{"lineNumber":141,"author":{"gitId":"eesung00"},"content":"  Now you have 0 tasks on your list.\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":142,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":143,"author":{"gitId":"eesung00"},"content":"  ","lastModifiedDate":"2022-09-11"},{"lineNumber":144,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e There is currently 0 task in user\u0027s list and the deleting command performed successfully.\u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":145,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":146,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":147,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":148,"author":{"gitId":"eesung00"},"content":"### `find` - finding a task with search keyword.","lastModifiedDate":"2022-09-11"},{"lineNumber":149,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":150,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eFind a task which contain \u003ccode\u003eexam\u003c/code\u003e word in it\u0027s detail\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":151,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":152,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExample of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":153,"author":{"gitId":"eesung00"},"content":"  \u003ccode\u003efind exam\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":154,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":155,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":156,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":157,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":158,"author":{"gitId":"eesung00"},"content":"  Here you go! your matching tasks in your list","lastModifiedDate":"2022-09-11"},{"lineNumber":159,"author":{"gitId":"eesung00"},"content":"  [T][ ] exam preparation","lastModifiedDate":"2022-09-11"},{"lineNumber":160,"author":{"gitId":"eesung00"},"content":"  [E][ ] exam at Utown (at: Nov 12 2022 19:00) \u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":161,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":162,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":163,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e There are currently 2 tasks in user\u0027s list with \"exam\" detail.\u003c/li\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":164,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":165,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":166,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":167,"author":{"gitId":"eesung00"},"content":"### `list` - listing all the tasks in the tasks list","lastModifiedDate":"2022-09-11"},{"lineNumber":168,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":169,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eShow all tasks added in the tasks list\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":170,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":171,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":172,"author":{"gitId":"eesung00"},"content":"  \u003ccode\u003elist\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":173,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":174,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":175,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":176,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":177,"author":{"gitId":"eesung00"},"content":"  Weeeee, your current list is as follow:","lastModifiedDate":"2022-09-11"},{"lineNumber":178,"author":{"gitId":"eesung00"},"content":"  1. [E][ ] dummyEvent (at: Sep 11 2011 11:30)","lastModifiedDate":"2022-09-11"},{"lineNumber":179,"author":{"gitId":"eesung00"},"content":"  2. [D][ ] dummyDeadline (by: Jan 28 2011 09:00)","lastModifiedDate":"2022-09-11"},{"lineNumber":180,"author":{"gitId":"eesung00"},"content":"  3. [T][ ] dummyTodo","lastModifiedDate":"2022-09-11"},{"lineNumber":181,"author":{"gitId":"eesung00"},"content":"  4. [T][ ] exam preparation","lastModifiedDate":"2022-09-11"},{"lineNumber":182,"author":{"gitId":"eesung00"},"content":"  5. [E][ ] exam at Utown (at: Nov 12 2022 19:00)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":183,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":184,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":185,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e There are currently 6 tasks in user\u0027s list and all of them are undone.\u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":186,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":187,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":188,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":189,"author":{"gitId":"eesung00"},"content":"### `mark/unmark` - mark tasks as \"done\" or \"undone\"","lastModifiedDate":"2022-09-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eMark and unmark a task\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":192,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":193,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of usage:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":194,"author":{"gitId":"eesung00"},"content":"    \u003ccode\u003emark 1\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":195,"author":{"gitId":"eesung00"},"content":"    \u003ccode\u003eunmark 1\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":196,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Expected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":199,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":200,"author":{"gitId":"eesung00"},"content":"  Nice! this task is marked as done. Good Job!","lastModifiedDate":"2022-09-11"},{"lineNumber":201,"author":{"gitId":"eesung00"},"content":"  [E][X] dummyEvent (at: Sep 11 2011 11:30)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":202,"author":{"gitId":"eesung00"},"content":"  ","lastModifiedDate":"2022-09-11"},{"lineNumber":203,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":204,"author":{"gitId":"eesung00"},"content":"  This task is marked as not done. Keep it up!","lastModifiedDate":"2022-09-11"},{"lineNumber":205,"author":{"gitId":"eesung00"},"content":"  [E][ ] dummyEvent (at: Sep 11 2011 11:30)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":206,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":207,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":208,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e \u003cb\u003eDescription:\u003c/b\u003e The event task is mark as \"done\" and unmark as \"undone\" respectively. \"X\" in the second brackets indicate the task is marked.\u003c/li\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":209,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":210,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":211,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":212,"author":{"gitId":"eesung00"},"content":"### Anomalies detection","lastModifiedDate":"2022-09-11"},{"lineNumber":213,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":214,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eTasks date and time is close\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":215,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":216,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of input: \u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":217,"author":{"gitId":"eesung00"},"content":"  \u003ccode\u003eevent attend party /at 2011-09-11 1300\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":218,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":219,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":220,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":221,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":222,"author":{"gitId":"eesung00"},"content":"  Hey, these two tasks timing are quite close, are you sure to proceed? (Y/N)","lastModifiedDate":"2022-09-11"},{"lineNumber":223,"author":{"gitId":"eesung00"},"content":"  New Task: [E][ ] attend party (at: Sep 11 2011 13:00)","lastModifiedDate":"2022-09-11"},{"lineNumber":224,"author":{"gitId":"eesung00"},"content":"  Existing Task: [E][ ] dummyEvent (at: Sep 11 2011 11:30)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":225,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e   ","lastModifiedDate":"2022-09-11"},{"lineNumber":226,"author":{"gitId":"eesung00"},"content":"  ","lastModifiedDate":"2022-09-11"},{"lineNumber":227,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e \u003cb\u003eDescription:\u003c/b\u003e This happens because there is another event task in the task list occur at close timing. Please respond `Y` to proceed adding task or `N` to cancel the previous add task command.\u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":228,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":229,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":230,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":231,"author":{"gitId":"eesung00"},"content":"### Other Responses","lastModifiedDate":"2022-09-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":233,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eRandom Input\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":234,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":235,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of random input:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":236,"author":{"gitId":"eesung00"},"content":"  \u003ccode\u003ehi\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":237,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":239,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Expected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":240,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e  ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":241,"author":{"gitId":"eesung00"},"content":"  Based on my understanding, your command didn\u0027t follow the format","lastModifiedDate":"2022-09-11"},{"lineNumber":242,"author":{"gitId":"eesung00"},"content":"  todo              : todo [task description]","lastModifiedDate":"2022-09-11"},{"lineNumber":243,"author":{"gitId":"eesung00"},"content":"  deadline          : deadline [task description] /by [YYYY-MM-DD HHmm]","lastModifiedDate":"2022-09-11"},{"lineNumber":244,"author":{"gitId":"eesung00"},"content":"  event             : event [task description] /at [YYYY-MM-DD HHmm]","lastModifiedDate":"2022-09-11"},{"lineNumber":245,"author":{"gitId":"eesung00"},"content":"  single command    : | bye | list |","lastModifiedDate":"2022-09-11"},{"lineNumber":246,"author":{"gitId":"eesung00"},"content":"  mark/unmark/delete: [command] [number of task in list you wish to modify]","lastModifiedDate":"2022-09-11"},{"lineNumber":247,"author":{"gitId":"eesung00"},"content":"  find              : find [search keyword]\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":248,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":250,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e \u003cb\u003eDescription:\u003c/b\u003e Duke will not understand any random input. It will show the available input if it does not recognise the input.\u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":251,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":252,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":254,"author":{"gitId":"eesung00"},"content":"\u003cdetails\u003e\u003csummary\u003eIncorrect date format\u003c/summary\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":255,"author":{"gitId":"eesung00"},"content":"\u003cul\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":256,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e Example of incorrect date format:\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":257,"author":{"gitId":"eesung00"},"content":"  \u003ccode\u003edeadline some deadline /by 09-01-2022 0900\u003c/code\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":258,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":260,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003eExpected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":261,"author":{"gitId":"eesung00"},"content":"  \u003cpre\u003e\u003ccode\u003e ~~~~~-----DUKE-----~~~~~","lastModifiedDate":"2022-09-11"},{"lineNumber":262,"author":{"gitId":"eesung00"},"content":"  Date and time format should be [YYYY-MM-DD HHmm]!","lastModifiedDate":"2022-09-11"},{"lineNumber":263,"author":{"gitId":"eesung00"},"content":"  (eg. 2022-08-21 1300)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":264,"author":{"gitId":"eesung00"},"content":"  \u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":266,"author":{"gitId":"eesung00"},"content":"  \u003cli\u003e\u003cb\u003eDescription:\u003c/b\u003e Duke will show the correct date format that user should use while interacting with the app.\u003c/li\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":267,"author":{"gitId":"eesung00"},"content":"\u003c/ul\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":268,"author":{"gitId":"eesung00"},"content":"\u003c/details\u003e","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"eesung00":246,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.storage.FileManager;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" * Represents the class of the duke bot program.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object consists of BotUI and TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    private final BotUI ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    private final AnomaliesManager anomaliesManger;","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     * Constructs Duke object.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * The taskList is assigned to the previous duke chatBot data if the file is found.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * TaskList will be initialised to an empty taskList if file is not found.","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        this.ui \u003d new BotUI();","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        this.anomaliesManger \u003d new AnomaliesManager();","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        this.taskList \u003d FileManager.read();","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    //Runs the duke chatBot program.","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    private void runBot() {","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        System.out.println(ui.sayHello());","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        boolean isExitDuke \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        while (!isExitDuke) {","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"                System.out.print(BotUI.userSpeak());","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"                Command c \u003d Parser.parse(ui.readCommand(), anomaliesManger);","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"                String output \u003d c.execute(taskList, ui, anomaliesManger);","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"                System.out.println(output);","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"                FileManager.write(this.taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"                isExitDuke \u003d c.isExit();","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"                System.out.println(de.getMessage());","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"                System.out.println(\"Error while Saving File!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"                System.out.println(ex.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     * Represents the main method of the program.","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     * For text-based UI execution.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"        new Duke().runBot();","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"     * Returns the response of the bot according to user input in GUI.","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     * @param input String of user raw input in GUI.","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     * @return String of the resulting bot response from the GUI input.","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"            Command c \u003d Parser.parse(input, anomaliesManger);","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"            String response \u003d c.execute(this.taskList, ui, anomaliesManger);","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"            FileManager.write(this.taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"            return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException | IOException de) {","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"            return de.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"eesung00":76,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":" * Represents the specific Exception to the duke chatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"     * Constructs the DukeException Object.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"        super(errorMsg);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":13}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.DEADLINE_ID;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.EVENT_ID;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":" * Represents an adding command of task. A \u003ccode\u003eAddCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":" * the details of the task BEFORE filtering/extracting the date e.g. (someEvent /at 2022-01-05 1900).","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    private static final int MIN_HOUR_DIFFERENCE \u003d 4;","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    private final String detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    private final boolean isAnomalyResolved;","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Constructs AddCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @param detail detail of the user input AFTER command is filtered.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public AddCommand(String command, String detail) {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        this.isAnomalyResolved \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    private AddCommand(String command, String detail, boolean isAnomalyResolved) {","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        this.isAnomalyResolved \u003d isAnomalyResolved;","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    private boolean taskHasTime(Task task) {","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        return task.getId().equals(DEADLINE_ID) || task.getId().equals(EVENT_ID);","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    private boolean isSameDay(Task oldTask, Task newTask) {","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"        return oldTask.getTime().toLocalDate().isEqual(newTask.getTime().toLocalDate());","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    private boolean isTimeClose(Task oldTask, Task newTask) {","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"        return Math.abs(oldTask.getTime().getHour() - newTask.getTime().getHour()) \u003c MIN_HOUR_DIFFERENCE;","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    private boolean checkTimeClash(TaskList taskList, Task newTask) {","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"            if (taskHasTime(t) \u0026\u0026 isSameDay(t, newTask) \u0026\u0026 isTimeClose(t, newTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"                return true;","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"    private Task getSameTask(Task newTask, TaskList taskList) {","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"            boolean bothTaskHasTime \u003d taskHasTime(t) \u0026\u0026 taskHasTime(newTask);","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"            if (t.equals(newTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"                return t;","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"            } else if (bothTaskHasTime \u0026\u0026 isSameDay(t, newTask) \u0026\u0026 isTimeClose(t, newTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"                return t;","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"        assert false : \"@AddCommand.getSameTask(): the process should not reach here.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"        return newTask;","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"    private String checkAnomalies(Task newTask, TaskList taskList,","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"                                  AnomaliesManager anomaliesManager, BotUI ui) {","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"        if (taskList.getList().contains(newTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"            anomaliesManager.raiseAnomalies(this);","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"            return ui.sameTaskDetected(newTask, this.getSameTask(newTask, taskList));","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"        } else if (taskHasTime(newTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"            if (checkTimeClash(taskList, newTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"                anomaliesManager.raiseAnomalies(this);","lastModifiedDate":"2022-09-06"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"                return ui.closeTimeDetected(newTask, this.getSameTask(newTask, taskList));","lastModifiedDate":"2022-09-06"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"        return \"Something went wrong in anomaliesManager if this response is showed!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"     * Adds Task into the TaskList. Anomaly will be checked before adding task into taskList.","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"     * @param ui       Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"     *                 to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-06"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown from Parser.extractDateTime methods.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"     * @see Parser - the details of the extractDateTime method throw DukeException.","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"            String taskCommand \u003d super.getCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"            Task newTask;","lastModifiedDate":"2022-09-06"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"            switch (taskCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"                newTask \u003d new ToDo(detail);","lastModifiedDate":"2022-09-06"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"                break;","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"                String deadlineDetail \u003d Parser.extractDetail(detail, \" /by \");","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"eesung00"},"content":"                LocalDateTime deadlineDateTime \u003d Parser.extractDateTime(detail, \" /by \");","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"eesung00"},"content":"                newTask \u003d new Deadline(deadlineDetail, deadlineDateTime);","lastModifiedDate":"2022-09-06"},{"lineNumber":120,"author":{"gitId":"eesung00"},"content":"                break;","lastModifiedDate":"2022-09-06"},{"lineNumber":121,"author":{"gitId":"eesung00"},"content":"            case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"eesung00"},"content":"                String eventDetail \u003d Parser.extractDetail(detail, \" /at \");","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"eesung00"},"content":"                LocalDateTime eventDateTime \u003d Parser.extractDateTime(detail, \" /at \");","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"eesung00"},"content":"                newTask \u003d new Event(eventDetail, eventDateTime);","lastModifiedDate":"2022-09-06"},{"lineNumber":125,"author":{"gitId":"eesung00"},"content":"                break;","lastModifiedDate":"2022-09-06"},{"lineNumber":126,"author":{"gitId":"eesung00"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"eesung00"},"content":"                assert false : \"task command does not match with any add command but parsed as AddCommand\";","lastModifiedDate":"2022-09-14"},{"lineNumber":128,"author":{"gitId":"eesung00"},"content":"                return \"\";","lastModifiedDate":"2022-09-04"},{"lineNumber":129,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":131,"author":{"gitId":"eesung00"},"content":"            if (!isAnomalyResolved) {","lastModifiedDate":"2022-09-11"},{"lineNumber":132,"author":{"gitId":"eesung00"},"content":"                String anomaliesOutput \u003d checkAnomalies(newTask, taskList, anomaliesManager, ui);","lastModifiedDate":"2022-09-06"},{"lineNumber":133,"author":{"gitId":"eesung00"},"content":"                if (anomaliesManager.isRaised()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":134,"author":{"gitId":"eesung00"},"content":"                    return anomaliesOutput;","lastModifiedDate":"2022-09-06"},{"lineNumber":135,"author":{"gitId":"eesung00"},"content":"                }","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":137,"author":{"gitId":"eesung00"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-09-06"},{"lineNumber":138,"author":{"gitId":"eesung00"},"content":"            return ui.addStatus(taskList, newTask);","lastModifiedDate":"2022-09-06"},{"lineNumber":139,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.invalidDateFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":155,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":156,"author":{"gitId":"eesung00"},"content":"     * Returns the new AddCommand after anomaly has been approved by user.","lastModifiedDate":"2022-09-06"},{"lineNumber":157,"author":{"gitId":"eesung00"},"content":"     * The new AddCommand object stores a true boolean attribute in anomalyResolved.","lastModifiedDate":"2022-09-06"},{"lineNumber":158,"author":{"gitId":"eesung00"},"content":"     * Check Anomaly steps will be skipped in execute method.","lastModifiedDate":"2022-09-06"},{"lineNumber":159,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":160,"author":{"gitId":"eesung00"},"content":"     * @return new AddCommand object with anomalyResolved set to true.","lastModifiedDate":"2022-09-06"},{"lineNumber":161,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":162,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":163,"author":{"gitId":"eesung00"},"content":"    public AddCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":164,"author":{"gitId":"eesung00"},"content":"        return new AddCommand(this.getCommand(), this.detail, true);","lastModifiedDate":"2022-09-06"},{"lineNumber":165,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":166,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":167,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":167}},{"path":"src/main/java/duke/command/CancelCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Represents a CancelCommand.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Utilizes when user reject to proceed with the anomaly detected.","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class CancelCommand extends Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"     * Constructs AddCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public CancelCommand(String command) {","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     * Returns a String to inform user about the cancellation of the previous command.","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * @param ui       Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     *                 to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) {","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        return ui.cancelCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to CancelCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    public CancelCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"eesung00":59}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Encapsulates the user Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * It stores a command (String) of the user input (the first word of the input)","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" * ,and it provides the skeletal implementation of all user command.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" * Every user command should be the child-class of this abstract class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    private final String command;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    Command(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    String getCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        return this.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    public abstract String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) throws DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    public abstract Command resolveAnomaly();","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"eesung00":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Represents a delete command of task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * the details of the task as a String type Integer. eg. \"1\"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    private final String detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Constructs DeleteCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param detail Detail of the user input as String type Integer.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    public DeleteCommand(String command, String detail) {","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * Deletes Task from the TaskList.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - Thrown when NumberFormatException or IndexOutOfBoundsException is","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     *     catch cause by invalid user input. e.g. delete1 or delete someNonIntegerText.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"            int taskIdx \u003d Integer.parseInt(detail) - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            return ui.successRemoveTask(taskList, taskList.delete(taskIdx));","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.invalidCheckFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.taskNotExist(taskList));","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to DeleteCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"    public DeleteCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":74}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Represents an exit command of task. A \u003ccode\u003eExitCommand\u003c/code\u003e object","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * will allow user to exit from duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"     * Constructs ExitCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     * Returns the \"bye\" message through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * @return String of \"bye\" response through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) {","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"        return ui.sayBye();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to ExitCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    public ExitCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":58}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Represents a find command of task. A \u003ccode\u003eFindCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * the details of the task as a String type Integer. eg. \"1\".","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final String detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs FindCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param detail Detail of the user input as String type Integer.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    public FindCommand(String command, String detail) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     * Finds and returns task\u0027s detail consisting the keyword from the FindCommand detail attribute.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) {","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        TaskList foundList \u003d new TaskList();","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        boolean hasFound \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            if (t.getDetail().contains(this.detail)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"                foundList.addTask(t);","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"                hasFound \u003d true;","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        if (hasFound) {","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            return ui.taskFound(foundList);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            return ui.taskNotFound();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to FindCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"    public FindCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"eesung00":75}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Represents a list command of task. A \u003ccode\u003eListCommand\u003c/code\u003e object","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * will show users the detail of tasks recorded in the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     * Constructs ListCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     * Returns list of Tasks in the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * @return String of number-formatted tasks through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) {","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to ListCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    public ListCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":59}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * Represents a marking command of task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" * the details of the task as a String type Integer. eg. \"1\".","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    private final String detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Constructs MarkCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param detail Detail of the user input as String type Integer.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    public MarkCommand(String command, String detail) {","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * Marks or Un-marks Tasks from the TaskList.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - Thrown when NumberFormatException or IndexOutOfBoundsException is","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     *     catch cause by invalid user input. e.g. delete1 or delete someNonIntegerText.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"            int taskIdx \u003d Integer.parseInt(detail) - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            Task currTask \u003d taskList.get(taskIdx);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            currTask \u003d (super.getCommand().equals(\"mark\")) ? currTask.markDone() : currTask.unmarkDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            taskList.addTask(currTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"            return ui.informMarkStatus(taskList.get(taskIdx));","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.invalidCheckFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.taskNotExist(taskList));","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to MarkCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"    public MarkCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":76}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Represents an unknown command. Utilises when user input is not recognised by duke.","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final boolean isQuestionRaised;","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs UnknownCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public UnknownCommand(String command) {","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        this.isQuestionRaised \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * Constructs UnknownCommand object.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * @param isPreviousAnomalies A boolean value to check whether the unknown command is after anomaly raised.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    public UnknownCommand(String command, boolean isPreviousAnomalies) {","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        this.isQuestionRaised \u003d isPreviousAnomalies;","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * Returns string to inform user unknown input is key-in.","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     * @param taskList Stores the list of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface.","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"     * @param anomaliesManager Responsible to handle anomaly and store command with anomalies.","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskList taskList, BotUI ui, AnomaliesManager anomaliesManager) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        if (this.isQuestionRaised) {","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            return ui.unknownResponseDetected();","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"            return ui.invalidFormat();","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     * will allow user to stop using Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"     * @return The true/false of the command exit status.","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     * Returns the same object.","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"     * This is because this method is temporary used for AddCommand only.","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"     * Provides flexibility to UnknownCommand class for future anomaly checking.","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"     * @return The same object.","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"     * @see AddCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"    public UnknownCommand resolveAnomaly() {","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"        return this;","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"eesung00":77}},{"path":"src/main/java/duke/common/AnomaliesManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Represents an AnomaliesManager class.","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Responsible in storing anomaly status and command that detected anomaly.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * The attributes are mutable.","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class AnomaliesManager {","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    private final Command[] previousCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final boolean[] isRaised;","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs AnomaliesManager object.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public AnomaliesManager() {","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        this.previousCommand \u003d new Command[]{new UnknownCommand(\"No Question is raised by Anomalies yet!\")};","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        this.isRaised \u003d new boolean[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * Modifies the isRaised status and store new command that detected anomalies.","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    public void raiseAnomalies(Command anomaliesCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"        this.isRaised[0] \u003d true;","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        this.previousCommand[0] \u003d anomaliesCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * Modifies the isRaised status to false.","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * Indicates that no anomaly in user input command.","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    public void resolveAnomalies() {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        this.isRaised[0] \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    public boolean isRaised() {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"        return this.isRaised[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    public Command getPrevCommand() {","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        return this.previousCommand[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"eesung00":46}},{"path":"src/main/java/duke/common/InputChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Responsible in the initial checks of Adding tasks\u0027 input","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * is in the correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"public class InputChecker {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    private static final int DETAIL_DATE_SPLITTER_LENGTH \u003d 3;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    private static final int TODO_MINIMUM_SPLIT_SECTION \u003d 2;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    //check whether input can be split to three sections ([detail], [detailDateSplitter] and [dateTime information])","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    private static void checkDeadlineAndEvent(String trimmedInput, String command,","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"                                              String detailDateSplitter) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        String description \u003d trimmedInput.replace(command, \"\").trim();","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        boolean isSplittable \u003d description.contains(detailDateSplitter);","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        if (!isSplittable) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        boolean hasDetail \u003d !description.substring(0, description.indexOf(detailDateSplitter)).isEmpty();","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"        int splitterIdx \u003d description.indexOf(detailDateSplitter);","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"        boolean hasDateTimeInfo \u003d !(description.substring(splitterIdx).length() \u003d\u003d DETAIL_DATE_SPLITTER_LENGTH);","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        if (!hasDetail || !hasDateTimeInfo) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    private static void checkTodo(String trimmedInput) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        boolean isValidFormat \u003d trimmedInput.split(\" \").length \u003e\u003d TODO_MINIMUM_SPLIT_SECTION;","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        if (!isValidFormat) {","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"     * Checks the input of command with adding common as follow:","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"     * ToDo tasks: Checks the details of tasks is exists in the raw user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"     * Event/Deadline tasks: Checks the details and date are exists in the raw user input with correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"     * @param rawInput String of the user rawInput.","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - Thrown when the format is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    public static void checkInput(String rawInput) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"        String trimmedInput \u003d rawInput.trim();","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"        if (trimmedInput.startsWith(\"todo\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"            checkTodo(trimmedInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        } else if (trimmedInput.startsWith(\"deadline\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"            checkDeadlineAndEvent(trimmedInput, \"deadline\", \"/by\");","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"        } else if (trimmedInput.startsWith(\"event\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"            checkDeadlineAndEvent(trimmedInput, \"event\", \"/at\");","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":59}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":" * Stores the general messages to show the users.","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":" * The messages are utilise in BotUI class.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"public class Messages {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"    public static final String BYE \u003d \"Goodbye, Hope to see you soon!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    public static final String HI \u003d \"Hello! I\u0027m Duke\\n\" + \"I\u0027m ready to serve you!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    public static final String BOT_RESPONSE \u003d \"~~~~~-----DUKE-----~~~~~\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    public static final String USER_SAY \u003d \"~~~~~-----YOU-----~~~~~~\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    public static final String NOTHING_IN_LIST \u003d \"Nothing is added to the list!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    public static final String MARK_SUCCESS \u003d \"Nice! this task is marked as done. Good Job!\\n%s\";","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    public static final String UNMARK_SUCCESS \u003d \"This task is marked as not done. Keep it up!\\n%s\";","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public static final String ADD_SUCCESS \u003d \"New task is registered as you wish,\"","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"            + \" you can come back to check if you wish!:\\n %s\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"            + \"Now you have %d tasks on your list.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public static final String DELETE_SUCCESS \u003d \"Ching Ching Poof~~ This task is removed:\\n %s\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"            + \"Now you have %d tasks on your list.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public static final String SHOW_FORMAT \u003d \"Based on my understanding,\"","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"            + \" your command didn\u0027t follow the format\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"            + \"todo              : todo [task description]\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"            + \"deadline          : deadline [task description] /by [YYYY-MM-DD HHmm]\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"            + \"event             : event [task description] /at [YYYY-MM-DD HHmm]\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"            + \"single command    : | bye | list |\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"            + \"mark/unmark/delete: [command] [number of task in list you wish to modify]\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"            + \"find              : find [search keyword]\";","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public static final String TASK_NOT_EXIST \u003d \"Opps! we only have %d tasks in the list :(\";","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    public static final String REQUIRE_INTEGER \u003d \"Sorry, last character after mark/unmark/delete\"","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            + \" command should be integer!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    public static final String INVALID_DATE_FORMAT \u003d \"Date and time format should be [YYYY-MM-DD HHmm]!\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"            + \"(eg. 2022-08-21 1300)\";","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    public static final String FOUND_TASK \u003d \"Here you go! your matching tasks in your list\";","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public static final String NOT_FOUND \u003d \"Nothing in the list match your search keyword!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    public static final String SHOW_LIST_DESCRIPTION \u003d \"Weeeee, your current list is as follow:\\n\";","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    public static final String TODO_ID \u003d \"[T]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    public static final String EVENT_ID \u003d \"[E]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    public static final String DEADLINE_ID \u003d \"[D]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    public static final String UNKNOWN_RESPONSE \u003d \"Haizz, unknown response detected, try again la.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    public static final String SAME_TASK_DETECTED \u003d \"YO! these two tasks have same detail, task date and \"","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            + \"time will be reset or nothing will change if the task is (todo) type. \"","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            + \"Are you Sure? (Y/N)\\n\" + \"New Task: %s\\nExisting Task: %s\";","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    public static final String SAME_DATE_DETECTED \u003d \"Hey, these two tasks timing are quite close,\"","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"            + \" are you sure to proceed? (Y/N)\\n\" + \"New Task: %s\\nExisting Task: %s\";","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public static final String COMMAND_CANCELED \u003d \"Alright! the previous command is canceled.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"eesung00":47}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.DATE_TIME_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import duke.command.CancelCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"import duke.common.AnomaliesManager;","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"import duke.common.InputChecker;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":" * Deals with making sense of the user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":" * Contains methods that return Command for execution in Duke class and extracting information from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    private static final int NUMBER_OF_SECTION_SPLIT \u003d 2;","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    private static final int MINIMUM_COMMAND_SECTION \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    private static final int FIRST_ITEM_AFTER_SPLIT \u003d 0;","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    private static final int SECOND_ITEM_AFTER_SPLIT \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    private static final int HOURS_IN_TIME \u003d 100;","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    private static final int MINUTES_IN_TIME \u003d 100;","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    private static String[] splitInput(String input, String regex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"        return input.split(regex, NUMBER_OF_SECTION_SPLIT);","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    private static int extractHours(int time) {","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        return time / HOURS_IN_TIME;","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    private static int extractMinutes(int time) {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"        return time % MINUTES_IN_TIME;","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    private static Command checkValidAnswer(String rawInput, AnomaliesManager anomaliesManager) {","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        String trimInput \u003d rawInput.trim();","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        switch (trimInput) {","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"        case \"Y\":","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"            return anomaliesManager.getPrevCommand().resolveAnomaly();","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        case \"N\":","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"            return new CancelCommand(trimInput);","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"            return new UnknownCommand(trimInput, true);","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"     * Returns different type of Command according to the user raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     * @param rawInput User\u0027s raw input.","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"     * @return Command to be executed in Duke class.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - Thrown if user command is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"    public static Command parse(String rawInput, AnomaliesManager anomaliesManager) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"            if (anomaliesManager.isRaised()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"                anomaliesManager.resolveAnomalies();","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"                return checkValidAnswer(rawInput, anomaliesManager);","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"            String[] commandAndDetail \u003d rawInput.split(\" \", NUMBER_OF_SECTION_SPLIT);","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"            String command \u003d commandAndDetail[FIRST_ITEM_AFTER_SPLIT];","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"            if (commandAndDetail.length \u003d\u003d MINIMUM_COMMAND_SECTION) {","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"                if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"                    return new ListCommand(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"                } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"                    return new ExitCommand(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"            String detail \u003d commandAndDetail[SECOND_ITEM_AFTER_SPLIT];","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"            if (command.equals(\"todo\") || command.equals(\"event\") || command.equals(\"deadline\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"                InputChecker.checkInput(rawInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"                return new AddCommand(command, detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"            } else if (command.equals(\"mark\") || command.equals(\"unmark\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"                return new MarkCommand(command, detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"                return new DeleteCommand(command, detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"                return new FindCommand(command, detail);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"                return new UnknownCommand(command);","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"     * Returns LocalDateTime for Event and Deadline tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"     * @param filteredInput User\u0027s filtered input which command is extracted (e.g. someDetails /by 2022-08-25 1800).","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"     * @return LocalDateTime of the filtered input.","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - Thrown if the date/time format is invalid (e.g. 2022-08-251800) which","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"     *                       cause DateTimeException and IndexOutOfBoundsException during the process.","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"    public static LocalDateTime extractDateTime(String filteredInput, String detailDateSplitter) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"        boolean isValidSplitter \u003d detailDateSplitter.trim().equals(\"/by\") || detailDateSplitter.trim().equals(\"/at\");","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"        assert isValidSplitter : \"invalid Splitter\";","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"            String filterDate \u003d splitInput(filteredInput, detailDateSplitter)[SECOND_ITEM_AFTER_SPLIT];","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"eesung00"},"content":"            String[] dateAndTime \u003d filterDate.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"eesung00"},"content":"            int time \u003d Integer.parseInt(dateAndTime[SECOND_ITEM_AFTER_SPLIT]);","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"eesung00"},"content":"            int hours \u003d extractHours(time);","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"eesung00"},"content":"            int minutes \u003d extractMinutes(time);","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"eesung00"},"content":"            String[] splitDate \u003d dateAndTime[FIRST_ITEM_AFTER_SPLIT].split(\"-\");","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"eesung00"},"content":"            ArrayList\u003cInteger\u003e dateInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"eesung00"},"content":"            for (String s : splitDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"eesung00"},"content":"                dateInfo.add(Integer.parseInt(s));","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"eesung00"},"content":"            return LocalDateTime.of(dateInfo.get(0), dateInfo.get(1), dateInfo.get(2),","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"eesung00"},"content":"                    hours, minutes);","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"eesung00"},"content":"        } catch (DateTimeException | IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidDateFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"eesung00"},"content":"     * Returns detail for Events and Deadlines tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"eesung00"},"content":"     * @param filteredInput User\u0027s filtered input which command is extracted (e.g. someDetails /by 2022-08-25 1800).","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"eesung00"},"content":"     * @param detailDateSplitter Detail and date splitter of Event and Deadline tasks (\"/by\" or \"/at).","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"eesung00"},"content":"     * @return String of task\u0027s detail.","lastModifiedDate":"2022-09-04"},{"lineNumber":140,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"eesung00"},"content":"    public static String extractDetail(String filteredInput, String detailDateSplitter) {","lastModifiedDate":"2022-09-04"},{"lineNumber":142,"author":{"gitId":"eesung00"},"content":"        boolean isValidSplitter \u003d detailDateSplitter.trim().equals(\"/by\") || detailDateSplitter.trim().equals(\"/at\");","lastModifiedDate":"2022-09-04"},{"lineNumber":143,"author":{"gitId":"eesung00"},"content":"        assert isValidSplitter : \"invalid Splitter\";","lastModifiedDate":"2022-09-04"},{"lineNumber":144,"author":{"gitId":"eesung00"},"content":"        return splitInput(filteredInput, detailDateSplitter)[FIRST_ITEM_AFTER_SPLIT];","lastModifiedDate":"2022-09-04"},{"lineNumber":145,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"eesung00"},"content":"     * Returns LocalDateTime converted from the tasks wrote in previous running of duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"eesung00"},"content":"     * @param timeString Date/Time String stored in the .txt file.","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"eesung00"},"content":"     * @return LocalDateTime of the stored String in the .txt file.","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"eesung00"},"content":"     * @see duke.storage.FileManager For the usage of this method.","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"eesung00"},"content":"    public static LocalDateTime convertTime(String timeString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"eesung00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2022-09-04"},{"lineNumber":156,"author":{"gitId":"eesung00"},"content":"        return LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":159}},{"path":"src/main/java/duke/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.DATE_TIME_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.DEADLINE_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.EVENT_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.TODO_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":" * Deals with the saving and loading of TaskList data.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":" * Contains two read and write static method to perform saving and loading operation.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"public class FileManager {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    private static final String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    private static final java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"data\", \"duke.txt\");","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    private static final String SECTION_DIVIDER \u003d \" __ \";","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    private static final int ID_POS \u003d 0;","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    private static final int IS_DONE_POS \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    private static final int DETAIL_POS \u003d 2;","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    private static final int DATE_TIME_POS \u003d 3;","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    private static TaskList initialise() {","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"            File newDirectory \u003d new File(path.getParent().toUri());","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"            File newFile \u003d new File(path.toUri());","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            if (!newDirectory.exists()) {","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"                newDirectory.mkdir();","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"                newFile.createNewFile();","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            return sampleTaskList();","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"            assert false : \"error in initialise\";","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            return new TaskList();","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    private static TaskList sampleTaskList() {","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        ToDo todoTask \u003d new ToDo(\"sleep early\");","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"        Event eventTask \u003d new Event(\"attend group project meeting\",","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"                LocalDateTime.of(2022, 9, 11, 21, 0));","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        Deadline deadlineTask \u003d new Deadline(\"project submission\",","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"                LocalDateTime.of(2022, 9, 16, 23, 59));","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"        TaskList initialList \u003d new TaskList();","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"        initialList.addTask(todoTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        initialList.addTask(eventTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        initialList.addTask(deadlineTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        return initialList;","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    private static String taskListToString(TaskList taskList) {","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"            content.append(t.getId()).append(SECTION_DIVIDER)","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"                    .append(t.isDone()).append(SECTION_DIVIDER)","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"                    .append(t.getDetail()).append(SECTION_DIVIDER);","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"            if (!t.getId().equals(TODO_ID)) {","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"                content.append(t.getTime().format(formatter)).append(SECTION_DIVIDER);","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"            content.append(\"\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"        return content.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"     * Reads the data of TaskRecords saved from the previous duke operation at the start of duke bot operation.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"     * @return TaskRecords of the saved task list information.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"    public static TaskList read() {","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"            TaskList savedList \u003d new TaskList();","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"            File previousCache \u003d new File(path.toUri());","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"            Scanner scn \u003d new Scanner(previousCache);","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"            while (scn.hasNextLine()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"                String[] info \u003d scn.nextLine().split(SECTION_DIVIDER);","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"                if (info.length \u003c 3) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"                String taskID \u003d info[ID_POS];","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"                switch (taskID) {","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"                case TODO_ID:","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"                    savedList.addTask(new ToDo(info[DETAIL_POS], Boolean.parseBoolean(info[IS_DONE_POS])));","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"                    break;","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"                case EVENT_ID:","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"                    savedList.addTask(new Event(info[DETAIL_POS], Boolean.parseBoolean(info[IS_DONE_POS]),","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"                             Parser.convertTime(info[DATE_TIME_POS])));","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"                    break;","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"                case DEADLINE_ID:","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"                    savedList.addTask(new Deadline(info[DETAIL_POS], Boolean.parseBoolean(info[IS_DONE_POS]),","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"                            Parser.convertTime(info[DATE_TIME_POS])));","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"                    break;","lastModifiedDate":"2022-09-04"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"                default:","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"                    assert false : \"Something when wrong while reading data!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"            return savedList;","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"            return FileManager.initialise();","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"eesung00"},"content":"     * Writes the data of TaskRecords to text file whenever changes is made.","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"eesung00"},"content":"     * @throws IOException - thrown if the writing process has fail.","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"eesung00"},"content":"    public static void write(TaskList taskList) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"eesung00"},"content":"        String content \u003d taskListToString(taskList);","lastModifiedDate":"2022-09-14"},{"lineNumber":125,"author":{"gitId":"eesung00"},"content":"        FileWriter writer \u003d new FileWriter(path.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"eesung00"},"content":"        writer.write(content);","lastModifiedDate":"2022-09-14"},{"lineNumber":127,"author":{"gitId":"eesung00"},"content":"        writer.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"eesung00":129}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Acts as the storage of the Tasks of the users.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * This class contain an ArrayList as attribute which stores the Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class TaskList {","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     * Constructs TaskList object.","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Creates and assigns an empty ArrayList to lst attribute.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     * Adds the Task into the attribute of TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * @param task The task to be added as per request by user\u0027s input.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        if (!this.taskList.contains(task)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"            this.taskList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"            this.taskList.set(taskList.indexOf(task), task);","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     * Deletes the Task into the attribute of TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     * @param idx The index position of to-be-deleted task in ArrayList.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     * @return The deleted tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    public Task delete(int idx) {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        Task currTask \u003d this.taskList.get(idx);","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        this.taskList.remove(idx);","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        return currTask;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"        return this.taskList.get(idx);","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        return this.taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.DEADLINE_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Represents a Deadline task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * Contains LocalDateTime information.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs Deadline object.","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Allows the program to change isDone status and LocalDateTime of Events.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param isDone True/False of the task\u0027s done status.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Deadlines object.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    public Deadline(String detail, boolean isDone, LocalDateTime time) {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        super(detail, isDone);","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Constructs Deadline object.","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * isDone is set to false by default using super class constructor.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Events object.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    public Deadline(String detail, LocalDateTime time) {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        super(detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    public Task markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        return new Deadline(super.getDetail(), true, this.time);","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        return new Deadline(super.getDetail(), false, this.time);","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public String getId() {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        return DEADLINE_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        return this.time;","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        return DEADLINE_ID + super.toString()","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"                + String.format(\" (by: %s)\", this.time.format(formatter));","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":66}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.EVENT_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Represents an Event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * Contains LocalDateTime information.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs Event object.","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Allows the program to change isDone status and LocalDateTime of Events.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param isDone True/False of the task\u0027s done status.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Events object.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    public Event(String detail, boolean isDone, LocalDateTime time) {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        super(detail, isDone);","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Constructs Event object.","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * isDone is set to false by default using super class constructor.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Events object.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    public Event(String detail, LocalDateTime time) {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        super(detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    public String getId() {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        return EVENT_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        return this.time;","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public Task markDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        return new Event(super.getDetail(), true, this.time);","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        return new Event(super.getDetail(), false, this.time);","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        return EVENT_ID + super.toString()","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"                + String.format(\" (at: %s)\", this.time.format(formatter));","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":" * Encapsulates the user Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * It stores a detail (String) of the user input (String after command of user input)","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * ,and it provides the skeletal implementation of all user task.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * It also stores the status of done/undone of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * Every user task should be the child-class of this abstract class.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final String detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Constructor of Task class.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     * Calls by its child-classes.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * Initialises isDone attribute as false(Undone).","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    Task(String detail) {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Constructs Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * Calls by its child-classes.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * Allows the changes of done/undone status of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     * @param isDone True/False of the task\u0027s done status.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    Task(String detail, boolean isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    public abstract Task markDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    public abstract Task unmarkDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    public abstract String getId();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public abstract LocalDateTime getTime();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    public String getDetail() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        return this.detail;","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    public boolean equals(Object otherTask) {","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"        if (otherTask instanceof Task) {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"            return ((Task) otherTask).getDetail().equals(this.detail);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \") + this.detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"eesung00":68}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.TODO_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Represents an ToDo task.","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    public ToDo(String detail, boolean isDone) {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"        super(detail, isDone);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public ToDo(String detail) {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"        super(detail);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        assert false : \"Todo task time is not callable in code.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    public String getId() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"        return TODO_ID;","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    public Task markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        return new ToDo(super.getDetail(), true);","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        return new ToDo(super.getDetail(), false);","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"        return TODO_ID + super.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":42}},{"path":"src/main/java/duke/ui/BotUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.ADD_SUCCESS;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.BOT_RESPONSE;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.BYE;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.COMMAND_CANCELED;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.DELETE_SUCCESS;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.FOUND_TASK;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.HI;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.INVALID_DATE_FORMAT;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MARK_SUCCESS;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.NOTHING_IN_LIST;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.NOT_FOUND;","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.REQUIRE_INTEGER;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.SAME_DATE_DETECTED;","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.SAME_TASK_DETECTED;","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.SHOW_FORMAT;","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.SHOW_LIST_DESCRIPTION;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.TASK_NOT_EXIST;","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.UNKNOWN_RESPONSE;","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.UNMARK_SUCCESS;","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.USER_SAY;","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":" * Represents the user interface of duke chatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":" * Contains necessary messages to respond to the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":" * Contains method that format the responses to more interactive.","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"public class BotUI {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    private String botSpeak(String phrase) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        return BOT_RESPONSE + phrase;","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    public static String userSpeak() {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        return USER_SAY;","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"     * Reads the user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"     * @return the String of user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        Scanner scn \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"        return scn.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     * Returns hello message.","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"     * @return hello message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    public String sayHello() {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        return botSpeak(HI);","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"     * Returns bye message.","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     * @return hello message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"    public String sayBye() {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"        return botSpeak(BYE);","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"     * Returns the tasks contain in the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"     * @param taskList TaskList that store the tasks registered by user.","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"     * @return Numbering-formatted String of the tasks in the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"            return botSpeak(NOTHING_IN_LIST);","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"            StringBuilder listFormat \u003d new StringBuilder();","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"                listFormat.append(i).append(\". \").append(list.get(i - 1).toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"                listFormat.append((i \u003d\u003d list.size()) ? \"\" : \"\\n\");","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"            return botSpeak(SHOW_LIST_DESCRIPTION + listFormat);","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"     * Returns mark/unmark status of the task.","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"     * @param task Task that have been mark/unmark after the user command.","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"     * @return The String of completed task.","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"    public String informMarkStatus(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"        return botSpeak((task.isDone()) ? String.format(MARK_SUCCESS, task)","lastModifiedDate":"2022-09-06"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"               : String.format(UNMARK_SUCCESS, task));","lastModifiedDate":"2022-09-06"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"     * Returns task added into the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"     * @param task Task that have been added by user.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"     * @param taskList the updated TaskList to show user the updated number of tasks in it.","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"     * @return The String of task added.","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"    public String addStatus(TaskList taskList, Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(ADD_SUCCESS, task, list.size()));","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"     * Returns task removed from the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"     * @param task Task that have been removed by user.","lastModifiedDate":"2022-09-14"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"     * @param taskList the updated TaskList to show user the updated number of tasks in it.","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"     * @return The String of task removed.","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"    public String successRemoveTask(TaskList taskList, Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(DELETE_SUCCESS, task, list.size()));","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"eesung00"},"content":"     * Returns the list of tasks found in the TaskList according to user find command keyword.","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"eesung00"},"content":"     * @param foundTaskList the updated TaskList to show user the updated number of tasks in it.","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"eesung00"},"content":"     * @return The String task found.","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"eesung00"},"content":"    public String taskFound(TaskList foundTaskList) {","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"eesung00"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"eesung00"},"content":"        for (Task t : foundTaskList.getList()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"eesung00"},"content":"            taskString.append(t).append(\"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"eesung00"},"content":"        String responseString \u003d taskString.substring(0, taskString.lastIndexOf(\"\\n\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"eesung00"},"content":"        return botSpeak(FOUND_TASK + \"\\n\" + responseString);","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"eesung00"},"content":"     * Returns the message of no task is found.","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"eesung00"},"content":"     * @return String of \"no task found\" message.","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"eesung00"},"content":"    public String taskNotFound() {","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"eesung00"},"content":"        return botSpeak(NOT_FOUND);","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"eesung00"},"content":"     * Returns the format of the input that user should follow.","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"eesung00"},"content":"    public String invalidFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"eesung00"},"content":"        return botSpeak(SHOW_FORMAT);","lastModifiedDate":"2022-09-06"},{"lineNumber":143,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"eesung00"},"content":"     * Returns the message of task not exist.","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"eesung00"},"content":"     * Uses when user trying to modify task that does not exist in the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":147,"author":{"gitId":"eesung00"},"content":"     * @param taskList current taskList to show user the number of tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"eesung00"},"content":"    public String taskNotExist(TaskList taskList) {","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(TASK_NOT_EXIST,","lastModifiedDate":"2022-09-06"},{"lineNumber":152,"author":{"gitId":"eesung00"},"content":"                taskList.getList().size()));","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"eesung00"},"content":"     * Returns the message of error when user type invalid mark/unmark/delete input format.","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"eesung00"},"content":"     * Informs user the these command require integer information.","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"eesung00"},"content":"    public String invalidCheckFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"eesung00"},"content":"        return botSpeak(REQUIRE_INTEGER);","lastModifiedDate":"2022-09-06"},{"lineNumber":161,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"eesung00"},"content":"     * Returns the message of error when user type invalid date input format.","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"eesung00"},"content":"     * Informs user the correct date format for the input.","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"eesung00"},"content":"    public String invalidDateFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"eesung00"},"content":"        return botSpeak(INVALID_DATE_FORMAT);","lastModifiedDate":"2022-09-06"},{"lineNumber":169,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":170,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":171,"author":{"gitId":"eesung00"},"content":"     * Returns the message of error when user type invalid response after anomaly raised.","lastModifiedDate":"2022-09-14"},{"lineNumber":172,"author":{"gitId":"eesung00"},"content":"     * Informs user to try again.","lastModifiedDate":"2022-09-14"},{"lineNumber":173,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-09-14"},{"lineNumber":174,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":175,"author":{"gitId":"eesung00"},"content":"    public String unknownResponseDetected() {","lastModifiedDate":"2022-09-06"},{"lineNumber":176,"author":{"gitId":"eesung00"},"content":"        return botSpeak(UNKNOWN_RESPONSE);","lastModifiedDate":"2022-09-06"},{"lineNumber":177,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":178,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":179,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":180,"author":{"gitId":"eesung00"},"content":"     * Returns the message of anomaly detection.","lastModifiedDate":"2022-09-14"},{"lineNumber":181,"author":{"gitId":"eesung00"},"content":"     * Informs user which two tasks has same task detail.","lastModifiedDate":"2022-09-14"},{"lineNumber":182,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-09-14"},{"lineNumber":183,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":184,"author":{"gitId":"eesung00"},"content":"    public String sameTaskDetected(Task newTask, Task oldTask) {","lastModifiedDate":"2022-09-06"},{"lineNumber":185,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(SAME_TASK_DETECTED, newTask.toString(), oldTask.toString()));","lastModifiedDate":"2022-09-06"},{"lineNumber":186,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":187,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":188,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":189,"author":{"gitId":"eesung00"},"content":"     * Returns the message of  detection.","lastModifiedDate":"2022-09-14"},{"lineNumber":190,"author":{"gitId":"eesung00"},"content":"     * Informs user which two tasks has close task timing.","lastModifiedDate":"2022-09-14"},{"lineNumber":191,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-09-14"},{"lineNumber":192,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":193,"author":{"gitId":"eesung00"},"content":"    public String closeTimeDetected(Task newTask, Task oldTask) {","lastModifiedDate":"2022-09-06"},{"lineNumber":194,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(SAME_DATE_DETECTED, newTask.toString(), oldTask.toString()));","lastModifiedDate":"2022-09-06"},{"lineNumber":195,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":196,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":197,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":198,"author":{"gitId":"eesung00"},"content":"     * Returns the message of command cancellation.","lastModifiedDate":"2022-09-14"},{"lineNumber":199,"author":{"gitId":"eesung00"},"content":"     * Informs user that the previous anomaly detected command is cancelled.","lastModifiedDate":"2022-09-14"},{"lineNumber":200,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-09-14"},{"lineNumber":201,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":202,"author":{"gitId":"eesung00"},"content":"    public String cancelCommand() {","lastModifiedDate":"2022-09-06"},{"lineNumber":203,"author":{"gitId":"eesung00"},"content":"        return botSpeak(COMMAND_CANCELED);","lastModifiedDate":"2022-09-06"},{"lineNumber":204,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":205,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"eesung00":205}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":" * A class that composed ImageView and Label control.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    //ImageView.setClip solution reference from","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    //https://www.programcreek.com/java-api-examples/?api\u003djavafx.scene.shape.Circle","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        Circle clip \u003d new Circle(displayPicture.getFitWidth() / 2.3);","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        clip.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        clip.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        var ub \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        ub.changeUserBackgroundColor();","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        return ub;","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"        db.changeDukeBackgroundColor();","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"    //Method below reference from https://www.tabnine.com/code/java/methods/javafx.scene.layout.HBox/setBackground","lastModifiedDate":"2022-09-11"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"    private void changeDukeBackgroundColor() {","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"        Background dukeBackground \u003d new Background(new BackgroundFill(Color.LAVENDER, null, null));","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"        super.setBackground(dukeBackground);","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"    //Method below reference from https://www.tabnine.com/code/java/methods/javafx.scene.layout.HBox/setBackground","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"    private void changeUserBackgroundColor() {","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"        Background userBackground \u003d new Background(new BackgroundFill(Color.LIGHTCYAN, null, null));","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"        super.setBackground(userBackground);","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":84}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":12}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":33}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.PNG\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.PNG\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * Creates initial layout and response of duke.","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new BotUI().sayHello(), dukeImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"                DialogBox.getUserDialog(BotUI.userSpeak() + input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        //@@author jhchee18-reused","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        //Adopted idea of handle bye command","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        //https://github.com/jhchee18/ip/blob/master/src/main/java/duke/frontend/MainWindow.java","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (response.contains(\"Goodbye\")) {","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":56,"-":8}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"89.0\" fitWidth\u003d\"89.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Enter command here\"/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" AnchorPane.bottomAnchor\u003d\"1.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42\" AnchorPane.topAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" style\u003d\"-fx-background-color: #FFFFF0;\" AnchorPane.bottomAnchor\u003d\"42\" AnchorPane.topAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":19}},{"path":"src/test/java/duke/common/InputCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class InputCheckerTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public void testToDoInput_invalidToDo_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_eventWithoutTime_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event dummyEvent /at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_eventWithoutDetail_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event /at 2022-01-01 1900\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_eventWithDoubleAt_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event /at /at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_onlyEvent_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event\");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_deadlineWithoutTime_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline dummyEvent /by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_deadlineWithoutDetail_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline /at 2011-01-01 1900\");","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_deadlineWithDoubleBy_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline /by /by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_onlyDeadline_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline\");","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"    public void testCorrectInput_correctInput_nothingHappen() {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline dummyDeadline /by 2022-08-25 1700\");","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"todo dummyToDo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event dummyEvent /at 2022-08-25 1700\");","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"            assertEquals(\"pass\", \"pass\");","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"            System.out.println(\"fail\");","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"eesung00":106}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_dayNotExist_exceptionThrown() {","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 2022-14-32 2300\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidDateFormat(), ex.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_timeNotExist_exceptionThrown() {","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 2022-02-11 2500\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidDateFormat(), ex.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_onlyYear_exceptionThrown() {","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 2022\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidDateFormat(), ex.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_onlyTime_exceptionThrown() {","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 1800\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidDateFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_validFilteredInput_dateExtracted() {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"            assertEquals(LocalDateTime.of(2022, 5, 1, 23, 0),","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"                    Parser.extractDateTime(\"dummyDetail /at 2022-05-01 2300\", \" /at \"));","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"            System.out.println(\"fail\");","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    public void testExtractDetail_validFilteredInput_detailExtracted() {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        assertEquals(\"dummyDetail\",","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"                    Parser.extractDetail(\"dummyDetail /by 2022-05-01 2300\", \" /by \"));","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"    public void testConvertTime_validInput_convertSuccess() {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"        assertEquals(LocalDateTime.of(2011, 1, 1, 19, 0),","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"                Parser.convertTime(\"Jan 01 2011 19:00\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"eesung00":75}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    private final LocalDateTime dummyDateTime \u003d LocalDateTime.of(","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"            2022, 9, 21, 9, 0);","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    public void testMarkDone_executeMarkDone_deadlineIsDone() {","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        assertTrue(new Deadline(\"dummy\", dummyDateTime).markDone().isDone());","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    public void testUnmarkDone_executeUnmarkDone_deadlineIsNotDone() {","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        assertFalse(new Deadline(\"dummy\", dummyDateTime).unmarkDone().isDone());","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    public void testToString_executeToString_outputStringIsCorrect() {","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        assertEquals(new Deadline(\"dummy\", dummyDateTime).toString(),","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"                \"[D][ ] dummy (by: Sep 21 2022 09:00)\");","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"eesung00":33}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class EventTest {","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    private final LocalDateTime dummyDateTime \u003d LocalDateTime.of(","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"            2022, 9, 21, 9, 0);","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    public void testMarkDone_executeMarkDone_deadlineIsDone() {","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        assertTrue(new Event(\"dummy\", dummyDateTime).markDone().isDone());","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    public void testUnmarkDone_executeUnmarkDone_deadlineIsNotDone() {","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        assertFalse(new Event(\"dummy\", dummyDateTime).unmarkDone().isDone());","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    public void testToString_executeToString_outputStringIsCorrect() {","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"        assertEquals(new Event(\"dummy\", dummyDateTime).toString(),","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"                \"[E][ ] dummy (at: Sep 21 2022 09:00)\");","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"eesung00":30}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"public class ToDoTest {","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    public void testMarkDone_executeMarkDone_deadlineIsDone() {","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"        assertTrue(new ToDo(\"dummy\").markDone().isDone());","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    public void testUnmarkDone_executeUnmarkDone_deadlineIsNotDone() {","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        assertFalse(new ToDo(\"dummy\").unmarkDone().isDone());","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    public void testToString_executeToString_outputStringIsCorrect() {","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        assertEquals(new ToDo(\"dummy\").toString(),","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"                \"[T][ ] dummy\");","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"eesung00":25}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"[T] __ false __ sleep early __ ","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"[E] __ false __ attend group project meeting __ Sep 11 2022 21:00 __ ","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"[D] __ false __ project submission __ Sep 16 2022 23:59 __ ","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"eesung00":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"mark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"delete 1","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"todo sleep early","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"find sleep","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"event attend meeting /at 2022","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"todo","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\common\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\ui\\BotUI.java","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eesung00":4,"-":19}}]

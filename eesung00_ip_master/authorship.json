[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"run {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eesung00":25,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.storage.FileManager;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" * Represents the class of the duke bot program.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object consists of BotUI and TaskRecords.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    private final BotUI ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    private final TaskRecords taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     * Constructs Duke object.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     * The taskList is assigned to the previous duke chatBot data if the file is found.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * TaskRecords will be initialised to an empty taskList if file is not found.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"        this.ui \u003d new BotUI();","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        TaskRecords temp;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            temp \u003d FileManager.read();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"            temp \u003d new TaskRecords();","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        this.taskList \u003d temp;","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     * Runs the duke chatBot program.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     * Shows the text-based UI","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    void runBot() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        System.out.println(ui.sayHello());","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        boolean exitDuke \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        while (!exitDuke) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"                System.out.print(BotUI.userSpeak());","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"                Command c \u003d Parser.parse(ui.readCommand());","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"                System.out.println(c.execute(taskList, ui));","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"                FileManager.write(this.taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"                exitDuke \u003d c.isExit();","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"                System.out.print(de.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"                System.out.println(\"Error while Saving File!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"     * Main method of the program.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"     * For text-based UI execution.","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"        new Duke().runBot();","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"     * Returns the response of the bot according to user input in GUI","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"     * @param input String of user raw input in GUI.","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"     * @return String of the resulting bot response from the GUI input","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"            String response \u003d c.execute(this.taskList, ui);","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"            FileManager.write(this.taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"            return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"            return de.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"            return \"Error while Saving File!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"eesung00":83,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":" * Represents the specific Exception to the duke chatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"     * Constructs the DukeException Object.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"        super(errorMsg);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":12}},{"path":"src/main/java/duke/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":" * The first testing class in the start of duke chatBot development.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"public class Echo {","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"    private final String echoText;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    Echo(String echoText) {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"        this.echoText \u003d echoText;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"        return this.echoText;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"eesung00":18}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.task.Events;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":" * Represents an adding command of task. A \u003ccode\u003eAddCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":" * the details of the task BEFORE filtering/extracting the date e.g. (someEvent /at 2022-01-05 1900)","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    private final String details;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * Constructs AddCommand object","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     * @param details details of the user input AFTER command is filtered","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    public AddCommand(String command, String details) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     * Adds Tasks into the TaskRecords","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     * @param ui       Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     *                 to print on the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown from Parser.extractDateTime methods.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"     * @see Parser - the details of the extratDateTime method throw DukeException","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskRecords taskList, BotUI ui) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"            String taskCommand \u003d super.getCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            switch (taskCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"                Task taskToDo \u003d new ToDos(details);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"                taskList.addProcess(taskToDo);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"                return ui.addStatus(taskList, taskToDo);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"                String deadlineDetail \u003d Parser.extractDetail(details, \" /by \");","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"                LocalDateTime deadlineDateTime \u003d Parser.extractDateTime(details, \" /by \");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"                Task taskDeadline \u003d new Deadlines(deadlineDetail, deadlineDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"                taskList.addProcess(taskDeadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"                return ui.addStatus(taskList, taskDeadline);","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"            case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"                String eventDetail \u003d Parser.extractDetail(details, \" /at \");","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"                LocalDateTime eventDateTime \u003d Parser.extractDateTime(details, \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"                Task taskEvent \u003d new Events(eventDetail, eventDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"                taskList.addProcess(taskEvent);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"                return ui.addStatus(taskList, taskEvent);","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"                return \"Adding process fail!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.invalidDateFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"     * will cause duke stop running","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":83}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Encapsulates the user Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * It stores a command (String) of the user input (the first word of the input)","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * ,and it provides the skeletal implementation of all user command.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" * Every user command should be the child-class of this abstract class.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    private final String command;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    Command(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    String getCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        return this.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    public abstract String execute(TaskRecords taskList, BotUI ui) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"eesung00":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Represents a deleting command of task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * the details of the task as a String type Integer. eg. \"1\"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final String details;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs DeleteCommand object","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param details details of the user input as String type Integer","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    public DeleteCommand(String command, String details) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     * Deletes Tasks from the TaskRecords","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown when NumberFormatException or IndexOutOfBoundsException is","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     *     catch cause by invalid user input. e.g. delete1 or delete someNonIntegerText.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskRecords taskList, BotUI ui) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"            int taskIdx \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            return ui.successRemoved(taskList, taskList.delete(taskIdx));","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.invalidCheckFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.taskNotExist(taskList));","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"     * will cause duke stop running","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Represents an exit command of task. A \u003ccode\u003eExitCommand\u003c/code\u003e object","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * will allow user to exit from duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"     * Constructs ExitCommand object","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     * Returns the \"bye\" message through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     * @return String of \"bye\" response through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskRecords taskList, BotUI ui) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        return ui.sayBye();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     * will cause duke stop running","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Represents a find command of task. A \u003ccode\u003eFindCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * the details of the task as a String type Integer. eg. \"1\"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    private final String details;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Constructs DeleteCommand object","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param details details of the user input as String type Integer","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    public FindCommand(String command, String details) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * Finds and returns task\u0027s detail consisting the keyword from the FindCommand detail attribute.","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskRecords taskList, BotUI ui) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        TaskRecords foundList \u003d new TaskRecords();","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        boolean found \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            if (t.getDetail().contains(this.details)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"                foundList.addProcess(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"                found \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        if (found) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            return ui.taskFound(foundList);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            return ui.taskNotFound();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     * will cause duke stop running","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"eesung00":62}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Represents a list command of task. A \u003ccode\u003eListCommand\u003c/code\u003e object","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * will show users the detail of tasks recorded in the TaskRecords.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"     * Constructs ListCommand object","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     * Returns Tasks in the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * @return String of number-formatted tasks through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskRecords taskList, BotUI ui) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     * will cause duke stop running","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":43}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * Represents a marking command of task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object stores","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * the details of the task as a String type Integer. eg. \"1\"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    private final String details;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Constructs MarkCommand object","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param command command of the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param details details of the user input as String type Integer","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    public MarkCommand(String command, String details) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        super(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * Marks or Un-marks Tasks from the TaskRecords","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * @param taskList stores the list of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @param ui Object that responsible in returning necessary formatted String","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     *           to print on the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @return String of suitable response according to the user input through BotUI object.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown when NumberFormatException or IndexOutOfBoundsException is","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     *     catch cause by invalid user input. e.g. delete1 or delete someNonIntegerText.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    public String execute(TaskRecords taskList, BotUI ui) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            int taskIdx \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"            Task currTask \u003d taskList.get(taskIdx);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            currTask \u003d (super.getCommand().equals(\"mark\")) ? currTask.markDone() : currTask.unmarkDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            taskList.addProcess(currTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            return ui.informMarkStatus(taskList.get(taskIdx));","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.invalidCheckFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(ui.taskNotExist(taskList));","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"     * Returns the true/false of the command exit status that","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"     * will cause duke stop running","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     * @return the true/false of the command exit status","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":62}},{"path":"src/main/java/duke/common/InputChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Responsible in the initial checks of Adding tasks\u0027 input","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * is in the correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class InputChecker {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    private static void checkDeadlineAndEvent(String input, String phrase, String taskSplitter) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"        String description \u003d input.replace(phrase, \"\").replace(\" \", \"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        if (!description.contains(taskSplitter) || description.substring(0, description.indexOf(taskSplitter)).isEmpty()","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"                || description.substring(description.indexOf(taskSplitter)).length() \u003d\u003d 3) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * Checks the input of command with adding common as follow:","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     * ToDo tasks: Checks the details of tasks is exists in the raw user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * Event/Deadline tasks: Checks the details and date are exists in the raw user input with correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * @param input command of the user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown when the format is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    public static void checkInput(String input) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"            if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"                throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"            checkDeadlineAndEvent(input, \"deadline\", \"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            checkDeadlineAndEvent(input, \"event\", \"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":43}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":" * Stores the general messages to show the users.","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":" * The messages are utilise in BotUI class.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"public class Messages {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_BYE \u003d \"Goodbye, Hope to see you soon!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_HI \u003d \"Hello! I\u0027m Duke\\n\" + \"I\u0027m ready to serve you!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_BOT_RESPONSE \u003d \"Duke:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_USER_SAY \u003d \"You:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_NOTHING_IN_LIST \u003d \"Nothing is added to the list!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_MARK_SUCCESS \u003d \"Nice! this task is marked as done. Good Job!\\n%s\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_UNMARK_SUCCESS \u003d \"This task is marked as not done. Keep it up!\\n%s\";","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"New task is registered as you wish,\"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"            + \" you can come back to check if you wish!:\\n %s\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"            + \"Now you have %d tasks on your list.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Ching Ching Poof~~ This task is removed:\\n %s\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"            + \"Now you have %d tasks on your list.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_SHOW_FORMAT \u003d \"Based on my understanding,\"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"            + \" your command didn\u0027t follow the format\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"            + \"todo              : todo [task description]\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"            + \"deadline         : deadline [task description] /by [YYYY-MM-DD HHmm]\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"            + \"event            : event [task description] /at [YYYY-MM-DD HHmm]\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"            + \"single command: | bye | list |\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"            + \"mark/unmark/delete: [command] [number of task in list you wish to modify]\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"            + \"find              : find [search keyword]\";","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_TASK_NOT_EXIST \u003d \"Opps! we only have %d tasks in the list :(\";","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_REQUIRE_INTEGER \u003d \"Sorry, last character after mark/unmark/delete\"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            + \" command should be integer!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Date and time format should be [YYYY-MM-DD HHmm]!\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"            + \"(eg. 2022-08-21 1300)\";","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_FOUND_TASK \u003d \"Here you go! your matching tasks in your list\";","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public static final String MESSAGE_NOT_FOUND \u003d \"Nothing in the list match your search keyword!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"eesung00":35}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import duke.common.InputChecker;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":" * Deals with making sense of the user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":" * Contains methods that return Command for execution in Duke class and extracting information from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    private static String[] splitInput(String input, String regex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        return input.split(regex, 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * Returns different type of Command according to the user raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     * @param rawInput user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"     * @return Command to be executed in Duke class.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown if user command is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    public static Command parse(String rawInput) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"            String[] commandAndDetail \u003d rawInput.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            String command \u003d commandAndDetail[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            if (commandAndDetail.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"                if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"                    return new ListCommand(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"                } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"                    return new ExitCommand(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"            String detail \u003d commandAndDetail[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"            if (command.equals(\"todo\") || command.equals(\"event\") || command.equals(\"deadline\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"                InputChecker.checkInput(rawInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"                return new AddCommand(command, detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"            } else if (command.equals(\"mark\") || command.equals(\"unmark\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"                return new MarkCommand(command, detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"                return new DeleteCommand(command, detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"                return new FindCommand(command, detail);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"                throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"     * Returns LocalDateTime for Events and Deadlines tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"     * @param filteredInput user\u0027s filtered input which command is extracted (e.g. someDetails /by 2022-08-25 1800)","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"     * @return LocalDateTime of the filtered input.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"     * @throws DukeException - thrown if the date/time format is invalid (e.g. 2022-08-251800) which","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"     *                       cause DateTimeException and IndexOutOfBoundsException during the process.","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"    public static LocalDateTime extractDateTime(String filteredInput, String timeIdentifier) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"            String filterDate \u003d splitInput(filteredInput, timeIdentifier)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"            String[] dateAndTime \u003d filterDate.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"            int time \u003d Integer.parseInt(dateAndTime[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"            int hours \u003d time / 100;","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"            int minutes \u003d time % 100;","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"            String[] splitDate \u003d dateAndTime[0].split(\"-\");","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"            ArrayList\u003cInteger\u003e dateInfo \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"            for (String s : splitDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"                dateInfo.add(Integer.parseInt(s));","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"            return LocalDateTime.of(dateInfo.get(0), dateInfo.get(1), dateInfo.get(2),","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"                    hours, minutes);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"        } catch (DateTimeException | IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"            throw new DukeException(UI.invalidDateFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"     * Returns detail for Events and Deadlines tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"     * @param filteredInput user\u0027s filtered input which command is extracted (e.g. someDetails /by 2022-08-25 1800)","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"     * @return String of task\u0027s detail","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"    public static String extractDetail(String filteredInput, String timeIdentifier) {","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"        return splitInput(filteredInput, timeIdentifier)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"     * Returns LocalDateTime converted from the tasks wrote in previous running of duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"     * @param timeString date/time String stored in the .txt file.","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"     * @return LocalDateTime of the stored String in the .txt file.","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"     * @see duke.storage.FileManager for the usage of this method.","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"    public static LocalDateTime convertTime(String timeString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"        return LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"eesung00":117}},{"path":"src/main/java/duke/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import duke.task.Events;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":" * Deals with the saving and loading of TaskRecords data.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":" * Contains two read and write static method to perform saving and loading operation.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"public class FileManager {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    private static final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    private static final java.nio.file.Path path \u003d java.nio.file.Paths.get(home,","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"            \"CS2103\", \"ip\", \"src\", \"main\", \"java\", \"data\", \"duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    private static final String SECTION_DIVIDER \u003d \" __ \";","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Reads the data of TaskRecords saved from the previous duke operation at the start of duke bot operation.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @return TaskRecords of the saved task list information.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @throws FileNotFoundException - thrown if there is no data saved in the text file or the file does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public static TaskRecords read() throws FileNotFoundException {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        TaskRecords savedList \u003d new TaskRecords();","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        File previousCache \u003d new File(path.toUri());","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        Scanner scn \u003d new Scanner(previousCache);","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        while (scn.hasNextLine()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"            String[] info \u003d scn.nextLine().split(SECTION_DIVIDER);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"            if (info.length \u003c 3) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"            if (info[0].equals(\"[T]\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"                savedList.addProcess(new ToDos(info[2], Boolean.parseBoolean(info[1])));","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"            } else if (info[0].equals(\"[E]\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"                savedList.addProcess(new Events(info[2], Boolean.parseBoolean(info[1]),","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"                        Parser.convertTime(info[3])));","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"                savedList.addProcess(new Deadlines(info[2], Boolean.parseBoolean(info[1]),","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"                        Parser.convertTime(info[3])));","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        return savedList;","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     * Writes the data of TaskRecords to text file whenever changes is made.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"     * @throws IOException - thrown if the writing process has fail.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    public static void write(TaskRecords taskList) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"            content.append(t.getId()).append(SECTION_DIVIDER)","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"                    .append(t.isDone()).append(SECTION_DIVIDER)","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"                    .append(t.getDetail()).append(SECTION_DIVIDER);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"            if (!t.getId().equals(\"[T]\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"                content.append(t.getTime().format(formatter)).append(SECTION_DIVIDER);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"            content.append(\"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"        FileWriter writer \u003d new FileWriter(path.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"        writer.write(content.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"        writer.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"eesung00":78}},{"path":"src/main/java/duke/storage/TaskRecords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Acts as the storage of the Tasks of the users.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * This class contain an ArrayList as attribute which stores the Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class TaskRecords {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs TaskRecords object.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Creates and assigns an empty ArrayList to lst attribute.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    public TaskRecords() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"     * Adds the Task into the attribute of TaskRecords.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"     * @param task the task to be added as per request by user\u0027s input","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public void addProcess(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        if (!this.lst.contains(task)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            this.lst.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"            this.lst.set(lst.indexOf(task), task);","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"     * Adds the Task into the attribute of TaskRecords.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"     * @param idx the index position of to-be-deleted task in ArrayList.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * @return the deleted tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    public Task delete(int idx) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        Task currTask \u003d this.lst.get(idx);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        this.lst.remove(idx);","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        return currTask;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        return this.lst.get(idx);","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        return this.lst;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":55}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Represents a Deadline task.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Contains LocalDateTime information.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    private static final String ID \u003d \"[D]\";","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Constructs Deadlines object.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Allows the program to change isDone status and LocalDateTime of Events.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param isDone true/false of the task\u0027s done status.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Deadlines object.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    public Deadlines(String detail, boolean isDone, LocalDateTime time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        super(detail, isDone);","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Constructs Deadlines object.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * isDone is set to false by default using super class constructor.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Events object.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    public Deadlines(String detail, LocalDateTime time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        super(detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    public Task markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"        return new Deadlines(super.getDetail(), true, this.time);","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        return new Deadlines(super.getDetail(), false, this.time);","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public String getId() {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        return ID;","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        return this.time;","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        return ID + super.toString()","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"                + String.format(\"(at: %s)\", this.time.format(formatter));","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":66}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * Represents an Event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * Contains LocalDateTime information.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"public class Events extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    private static final String ID \u003d \"[E]\";","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"     * Constructs Events object.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"     * Allows the program to change isDone status and LocalDateTime of Events.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * @param isDone true/false of the task\u0027s done status.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Events object.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    public Events(String detail, boolean isDone, LocalDateTime time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"        super(detail, isDone);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"     * Constructs Events object.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * isDone is set to false by default using super class constructor.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     * @param time LocalDateTime of the Events object.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    public Events(String detail, LocalDateTime time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        super(detail);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    public String getId() {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"        return ID;","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        return this.time;","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    public Task markDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"        return new Events(super.getDetail(), true, this.time);","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        return new Events(super.getDetail(), false, this.time);","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"        return ID + super.toString()","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"                + String.format(\"(at: %s)\", this.time.format(formatter));","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":65}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":" * Encapsulates the user Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" * It stores a detail (String) of the user input (String after command of user input)","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":" * ,and it provides the skeletal implementation of all user task.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":" * It also stores the status of done/undone of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":" * Every user task should be the child-class of this abstract class.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private final String detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"     * Constructor of Task class.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"     * Calls by its child-classes.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"     * Initialises isDone attribute as false. (Undone)","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    Task(String detail) {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"     * Constructs Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"     * Calls by its child-classes.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"     * Allows the changes of done/undone status of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"     * @param detail String of detail extracted from user\u0027s raw input.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"     * @param isDone true/false of the task\u0027s done status.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    Task(String detail, boolean isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    public abstract Task markDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    public abstract Task unmarkDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    public abstract String getId();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    public abstract LocalDateTime getTime();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    public String getDetail() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"        return this.detail;","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    public boolean equals(Object otherTask) {","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"        if (otherTask instanceof Task) {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"            return ((Task) otherTask).getDetail().equals(this.detail);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        return false;","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \") + this.detail;","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"eesung00":68}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":" * Represents an ToDos task.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    private static final String ID \u003d \"[T]\";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    public ToDos(String detail, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"        super(detail, isDone);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public ToDos(String detail) {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"        super(detail);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    public String getId() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        return ID;","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public Task markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        return new ToDos(super.getDetail(), true);","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        return new ToDos(super.getDetail(), false);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        return ID + super.toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":41}},{"path":"src/main/java/duke/ui/BotUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_ADD_SUCCESS;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_BOT_RESPONSE;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_BYE;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_DELETE_SUCCESS;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_FOUND_TASK;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_HI;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_INVALID_DATE_FORMAT;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_MARK_SUCCESS;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_NOTHING_IN_LIST;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_NOT_FOUND;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_REQUIRE_INTEGER;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_SHOW_FORMAT;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_TASK_NOT_EXIST;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_UNMARK_SUCCESS;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"import static duke.common.Messages.MESSAGE_USER_SAY;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"import duke.storage.TaskRecords;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":" * Represents the user interface of duke chatBot.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":" * Contains necessary messages to respond to the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":" * Contains method that format the responses to more interactive.","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"public class BotUI {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    private String botSpeak(String phrase) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        return MESSAGE_BOT_RESPONSE + phrase;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"    public static String userSpeak() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        return MESSAGE_USER_SAY;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * Reads the user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     * @return the String of user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"        Scanner scn \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        return scn.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"     * Returns hello message.","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"     * @return hello message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public String sayHello() {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_HI);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"     * Returns bye message.","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"     * @return hello message from Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"    public String sayBye() {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_BYE);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"     * Returns the tasks contain in the TaskRecords.","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"     * @param taskList TaskRecords that store the tasks registered by user.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"     * @return Numbering-formatted String of the tasks in the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"    public String showList(TaskRecords taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"        ArrayList\u003cTask\u003e lst \u003d taskList.getList();","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"        if (lst.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"            return botSpeak(MESSAGE_NOTHING_IN_LIST);","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"            StringBuilder lstFormat \u003d new StringBuilder();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"            for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"                lstFormat.append(i).append(\". \").append(lst.get(i - 1).toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"                lstFormat.append((i \u003d\u003d lst.size()) ? \"\" : \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"            return botSpeak(lstFormat.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"     * Returns complete status of the task.","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"     * @param task Task that have been mark after the user command.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"     * @return The String of completed task.","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"    public String informMarkStatus(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"        String response \u003d botSpeak((task.isDone()) ? String.format(MESSAGE_MARK_SUCCESS, task)","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"               : String.format(MESSAGE_UNMARK_SUCCESS, task));","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"     * Returns task added into the TaskRecords.","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"     * @param task Task that have been added by user.","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"     * @param taskList the updated TaskRecords to show user the updated number of tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"     * @return The String of task added.","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"    public String addStatus(TaskRecords taskList, Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"        ArrayList\u003cTask\u003e lst \u003d taskList.getList();","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(MESSAGE_ADD_SUCCESS, task, lst.size()));","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"     * Returns task removed from the TaskRecords.","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"     * @param task Task that have been added by user.","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"     * @param taskList the updated TaskRecords to show user the updated number of tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"     * @return The String of task added.","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"    public String successRemoved(TaskRecords taskList, Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"        ArrayList\u003cTask\u003e lst \u003d taskList.getList();","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(MESSAGE_DELETE_SUCCESS, task, lst.size()));","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"eesung00"},"content":"     * Returns the list of tasks found in the TaskRecords according to user find command.","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"eesung00"},"content":"     * @param foundTaskList the updated TaskRecords to show user the updated number of tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"eesung00"},"content":"     * @return The String task found.","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"eesung00"},"content":"    public String taskFound(TaskRecords foundTaskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"eesung00"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"eesung00"},"content":"        for (Task t : foundTaskList.getList()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"eesung00"},"content":"            taskString.append(t).append(\"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"eesung00"},"content":"        String responseString \u003d taskString.substring(0, taskString.lastIndexOf(\"\\n\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_FOUND_TASK + \"\\n\" + responseString);","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"eesung00"},"content":"     * Returns the message of no task is found.","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"eesung00"},"content":"     * @return String of \"no task found\" message.","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"eesung00"},"content":"    public String taskNotFound() {","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_NOT_FOUND);","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"eesung00"},"content":"     * Returns the format of the input that user should follow.","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"eesung00"},"content":"    public String invalidFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_SHOW_FORMAT);","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"eesung00"},"content":"     * Returns the message of task not exist.","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"eesung00"},"content":"     * Uses when user trying to modify task that does not exist in the TaskRecords.","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"eesung00"},"content":"     * @param taskList current taskList to show user the number of tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"eesung00"},"content":"    public String taskNotExist(TaskRecords taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"eesung00"},"content":"        return botSpeak(String.format(MESSAGE_TASK_NOT_EXIST,","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"eesung00"},"content":"                taskList.getList().size()));","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"eesung00"},"content":"     * Returns the message of error when user type invalid mark/unmark/delete input format.","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"eesung00"},"content":"     * Informs user the these command require integer information.","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"eesung00"},"content":"    public String invalidCheckFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_REQUIRE_INTEGER);","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"eesung00"},"content":"     * Returns the message of error when user type invalid date input format.","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"eesung00"},"content":"     * Informs user the correct date format for the input.","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"eesung00"},"content":"     * @return String of correct input format wrapped by the bot and user divider.","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"eesung00"},"content":"    public String invalidDateFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"eesung00"},"content":"        return botSpeak(MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"eesung00":162}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":" * A class that composed ImageView and Label control.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":60}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":12}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":33}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new BotUI().sayHello(), dukeImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"                DialogBox.getUserDialog(BotUI.userSpeak() + input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"210.0\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"eesung00":19}},{"path":"src/test/java/duke/common/InputCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.common;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"public class InputCheckerTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    public void testToDoInput_invalidToDo_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_eventWithoutTime_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event dummyEvent /at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_eventWithoutDetail_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event /at 2022-01-01 1900\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_eventWithDoubleAt_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event /at /at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"    public void testEventInput_onlyEvent_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event\");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_deadlineWithoutTime_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline dummyEvent /by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_deadlineWithoutDetail_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline /at 2011-01-01 1900\");","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_deadlineWithDoubleBy_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline /by /by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"eesung00"},"content":"    public void testDeadlineInput_onlyDeadline_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline\");","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"eesung00"},"content":"    public void testCorrectInput_correctInput_nothingHappen() {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"deadline dummyDeadline /by 2022-08-25 1700\");","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"todo dummyToDo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"eesung00"},"content":"            InputChecker.checkInput(\"event dummyEvent /at 2022-08-25 1700\");","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"eesung00"},"content":"            assertEquals(\"pass\", \"pass\");","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"eesung00"},"content":"            System.out.println(\"fail\");","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"eesung00":106}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"import duke.ui.BotUI;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"eesung00"},"content":"    private static final BotUI UI \u003d new BotUI();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 2022-14-32 2300\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 2022-02-11 2500\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 2022\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"eesung00"},"content":"            Parser.extractDateTime(\"dummyDetail /at 1800\", \" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"eesung00"},"content":"            assertEquals(UI.invalidDateFormat(), ex.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"eesung00"},"content":"    public void testExtractDate_validFilteredInput_dateExtracted() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"eesung00"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"eesung00"},"content":"            assertEquals(LocalDateTime.of(2022, 5, 1, 23, 0),","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"eesung00"},"content":"                    Parser.extractDateTime(\"dummyDetail /at 2022-05-01 2300\", \" /at \"));","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"eesung00"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"eesung00"},"content":"            System.out.println(\"fail\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"eesung00"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"eesung00"},"content":"    public void testExtractDetail_validFilteredInput_detailExtracted() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"eesung00"},"content":"        assertEquals(\"dummyDetail\",","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"eesung00"},"content":"                    Parser.extractDetail(\"dummyDetail /by 2022-05-01 2300\", \" /by \"));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"eesung00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"eesung00"},"content":"    public void testConvertTime_validInput_convertSuccess() {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"eesung00"},"content":"        assertEquals(LocalDateTime.of(2011, 1, 1, 19, 0),","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"eesung00"},"content":"                Parser.convertTime(\"Jan 01 2011 19:00\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"eesung00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"eesung00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"eesung00":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eesung00"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"eesung00"},"content":"mark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"eesung00"},"content":"mark 4","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"eesung00"},"content":"mark 0","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"eesung00"},"content":"unmark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"eesung00"},"content":"event addEvent /at alkdjasld","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"eesung00"},"content":"event addEvent /at 2011-01-05 1900","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"eesung00"},"content":"todo","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"eesung00"},"content":"todo addTodo","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"delete 5","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"eesung00":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"eesung00"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"eesung00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eesung00":3,"-":20}}]

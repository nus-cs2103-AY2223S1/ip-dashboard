{"authorDailyContributionsMap":{"lfrostbytee":[{"date":"2022-08-14","commitResults":[{"hash":"8cab208e573dbdf9ea760a6a9c8e77404f95974a","messageTitle":"Level-1 Added","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":6}}},{"hash":"db43e836f0237ba145585eccc255ba4937028ca5","messageTitle":"Renamed Duke.java to Poolsheen.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"9d3106f40db5745fbd2660625242861ed6ca351a","messageTitle":"Rewrote code to follow Java Style Guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":26}}},{"hash":"61537352ef98d13a6bb0fd6d43f5279ae827e041","messageTitle":"Added \"add and list\" feature","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":4}}},{"hash":"36088969fe8ba943d14582416436aa6333d4ef10","messageTitle":"Changed variable names and re-formatted \"list\" command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}},{"hash":"811be8c0e3cba81c42767217e7d1c1debcfd67da","messageTitle":"Submission for Level-3. * Added mark command. * Added unmark command. * Created a new class called \"Task\". * \"list\" now displays the status of each task.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":10}}}]},{"date":"2022-08-16","commitResults":[{"hash":"52bce51e9acd263f094ab9f3d3e493e2210158ae","messageTitle":"Add Deadline, Event, and ToDo","messageBody":"Tasks can be added through any non-keyword message\n\nWe want to create more categories for tasks to add more details\ninto our list.\n\nLet\u0027s create a parent class called Task and create 3 other\nsubclasses: ToDo, Deadline and, Event.\n\nUsing inheritance is preferable because every task shares some\nsimilar properties like a IsDone status and the description of the\ntask.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":55}}},{"hash":"63116135fb1d52008189a4ecbe625727f10f3a94","messageTitle":"Add automated testing","messageBody":"There is currently no automated testing in-place.\n\nWe want to ensure the Poolsheen program runs as expected without\nneeding to manually test every time a change is made.\n\nLet\u0027s,\n* create an input and expected file\n* create a runtest.bat file which can be executed to run the tests\n\nThe INPUT.txt will be represent the inputs into the program.\nThe EXPECTED.TXT will be what the program should print and will be\ncompared with ACTUAL.TXT, the actual lines that our program will\nprint.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"java":{"insertions":1,"deletions":6},"bat":{"insertions":2,"deletions":2},"sh":{"insertions":1,"deletions":1}}},{"hash":"1348154d4382a25bcc909b4c339f88caa07871f6","messageTitle":"Add error handling","messageBody":"There is currently no handling of edge cases when wrong\nor incomplete inputs are entered.\n\nWe want Poolsheen to prompt the user on how they can fix their\nwrong or incomplete inputs if an error occurs.\n\nLet\u0027s,\n*create an IncompleteCommandException class for incomplete commands\n*create an UnknownCommandException class for unknown commands\n*catch runtime errors with IndexOutOfBoundsException\nand NumberFormatException\n*catch unexpected errors using Exception\n\nThe IncompleteCommandException when caught will let the user know\nwhat part of the command they are missing. The\nUnknownCommandException lets the user know that the command does not\ncurrently exist.\n","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"java":{"insertions":140,"deletions":48}}}]},{"date":"2022-08-17","commitResults":[{"hash":"ddf809371a87b516b822610bf71ff6d5adfebf65","messageTitle":"Add delete task","messageBody":"There is currently no way to remove tasks that a user has\naccidentally added into their Poolsheen program.\n\nWe want Poolsheen to include a \"delete\" command to delete a task\nof position x from the list of tasks that Poolsheen remembers.\n\nLet\u0027s create a new method called deleteTask which removes the task\nof position x.\n\nThe position x will be fed after the input has been parsed. If\n\"delete 5\" is inputted and the list of tasks has a size greater\nthan 5, the task of position 5 will be removed.\n","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":18,"deletions":1}}},{"hash":"22c61837ed5830e20190976ac3802e6fbc14d334","messageTitle":"Add enum types for commands","messageBody":"Commands are now only distinguished by the string commands that\nthey are assigned to.\n\nWe want each command to have a type using the Java enum type.\n\nLet\u0027s create a new enum type for each command type.\n\nThe switch cases for processing the input will now compare using\nthe value of the string which will be converted to an enum type if\nthat enum type exists.\n","tags":["A-Inheritance","A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":10}}}]},{"date":"2022-08-24","commitResults":[{"hash":"202706bc85add136a63827d521445f7aafef983b","messageTitle":"Add saving and loading","messageBody":"Poolsheen currently does not remember tasks from when it was\npreviously run.\n\nPoolsheen should remember tasks from previous runs because a user\nmay need to log off from Poolsheen to do other tasks.\n\nLet\u0027s create a SAVE.TXT file which retains all information from\nwhenever Poolsheen runs and refer to it every time Poolsheen runs.\n\nA .TXT file is static which allows information to be saved even\nwhen Poolsheen stops running.\n\nConstant names changed to follow Java Coding Standard.\n.gitignore and runtest.bat modified to ignore SAVE.TXT files.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":211,"deletions":66},"bat":{"insertions":3,"deletions":0}}},{"hash":"3bb20a0c1cc05966f34b83620b753d6236b30091","messageTitle":"Add understanding of dates and times.","messageBody":"Currently, random strings can be inputted for the dates and times\nof deadlines and events.\n\nUsers may use Poolsheen ineffectively by inputting the wrong format\nof date and time for deadlines and events.\n\nThe LocalDate class is introduced to replace the type of time from\nString to LocalDate.\n\nLocalDate offers several methods which allow us to compare dates\nproperly. Relying on LocalDate allows us to parse dates and times\nproperly as well.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":2},"java":{"insertions":31,"deletions":5}}},{"hash":"09b2adc60275ee891eaa33b9a8ed463c16227a08","messageTitle":"Add Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2022-08-25","commitResults":[{"hash":"7256b42ebd2b764e4665ea9dbef379ead1ac3711","messageTitle":"Add more OOP","messageBody":"Currently most of the code resides in the Poolsheen.java file.\n\nAs the Poolsheen program expands, it becomes harder to maintain if\neverything is kept inside one file. So, we can split what Poolsheen\ncan do into 4 classes.\n\nLet\u0027s,\n- create a Ui, Storage, Parser, and, TaskList class\n- create an abstract Command class and its subclasses\n\nWe can now test the Poolsheen functionality based on each class\nrather than the whole class. It is easier to change each command\nas well.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":574,"deletions":357},"bat":{"insertions":1,"deletions":1}}},{"hash":"b0c161fdd2bc007a2728826b60e6f4b9a8ed3097","messageTitle":"Add packaging","messageBody":"Currently, all the code resides in one directory\n\nThe code is difficult to maintain because it is difficult to\nnavigate and manage classes.\n\nLet\u0027s,\n- create a poolsheen package to encapsulate all classes\n- create a command package to encapsulate all command classes\n- create a task package to encapsulate all task classes\n\nWe can now separate Poolsheen\u0027s main functionalities from the\nrespective commands and types of tasks.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":2},"bat":{"insertions":1,"deletions":1}}},{"hash":"c83c04efb17dfd24b0a24d550f418c9edfe3cd04","messageTitle":"Add JUnit tests","messageBody":"Currently, there is only automated UI text testing.\n\nMore forms of automated testing need to be included to ensure the\nmaintainability of the program.\n\nLet\u0027s create unit tests for most classes of the Poolsheen program.\n\nUnit tests allow developers of the Poolsheen program to isolate\nbugs to their respective classes, making it easier to debug code.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":192,"deletions":3}}},{"hash":"7fe3e01d15f09042246441d83845faa4d626d1f8","messageTitle":"Package the Poolsheen App as a JAR file","messageBody":"The Poolsheen program can only be run on IntelliJ Idea by using the\nin-built run button.\n\nPoolsheen should also be able to be used by other users who do not\nhave IntelliJ Idea.\n\nLet\u0027s make the Poolsheen program an executable file.\n\nBy making the Poolshen program a JAR file, it can be executed by\nany other users who have a JDK.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":2,"deletions":1}}},{"hash":"3a6ebbeb3110a921daa2339f867f310a57af8218","messageTitle":"Add JavaDocs for all files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":139,"deletions":39}}},{"hash":"cd6e1ce7f528584c46fa8232c04d2005f6c13060","messageTitle":"Add Coding standard to all files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":28}}},{"hash":"3d4a20b1e56f0969583d963d8d30826b299f0729","messageTitle":"Add Find Command","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":90,"deletions":10},"bat":{"insertions":1,"deletions":1}}}]},{"date":"2022-09-02","commitResults":[{"hash":"d27143aafeb11306e71108020d9febfcfe34fd88","messageTitle":"Correct mistakes pointed out by reviewers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":15}}},{"hash":"2b3267f6ef4ecbea03a9d110788e8379d3fe28c2","messageTitle":"Add checkstyle","messageBody":"Currently, there are not many tools that can detect coding style\nviolations.\n\nThis needs to change as coding style standard and quality is\nimportant for maintaining the project.\n\nLet\u0027s add the Checkstyle tool.\n\nThe Checkstyle tool is a static analysis tool that can detect\nerrors in code before compilation. It prevents errors early.\n\nRefer to this link for how the Checkstyle tool is implemented\nhttps://se-education.org/guides/tutorials/checkstyle.html#configuring-checkstyle\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":105,"deletions":97}}}]}]},"authorFileTypeContributionMap":{"lfrostbytee":{"java":1332,"md":0,"fxml":0,"sh":1,"bat":5,"gradle":7,"txt":33}},"authorContributionVariance":{"lfrostbytee":119634.92},"authorDisplayNameMap":{"lfrostbytee":"CS2103-F09-2 ONG ..RCUS"}}

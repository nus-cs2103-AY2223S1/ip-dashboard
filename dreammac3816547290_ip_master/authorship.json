[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"# User Guide","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"![Duke](docs/Ui.png)","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"## How to Start","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"1. Download the latest version of duke.jar [here](https://github.com/dreammac3816547290/ip/releases).","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"2. Open command prompt and navigate to the download folder.","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"3. Run `java -jar duke.jar`.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"4. The Duke GUI will open, and you can type in commands in the command box.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"## Command","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"### `bye` exits Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"\u003e bye","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"### `list` lists all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"\u003e list","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"### `free`  finds the nearest date without task","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"\u003e free","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"### `mark` marks a task as done","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e mark \u003ctask index\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"\u003e mark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"### `unmark` marks a task as not done","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e unmark \u003ctask index\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"\u003e unmark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"### `find` finds all tasks which description matches a string","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e find \u003cstring\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"\u003e find read book","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"### `todo` creates a todo task","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"\u003e todo read book at the library","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"### `deadline` creates a task with deadline","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e deadline \u003cdescription\u003e /by \u003cdeadline YYYY-MM-DD\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"\u003e deadline finish math homework /by 2022-09-19","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"### `event` creates a task with time","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e event \u003cdescription\u003e /at \u003ctime YYYY-MM-DD\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"\u003e event go fishing /at 2022-09-20","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"### `delete` deletes a task","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e delete \u003ctask index\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"\u003e delete 1","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"dreammac3816547290":35}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"plugins {","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"checkstyle {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"repositories {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    mavenCentral()","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"dependencies {","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"test {","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"    testLogging {","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        showExceptions true","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"        showCauses true","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"        showStackTraces true","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"application {","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"shadowJar {","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"run{","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":61}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"![Duke](Ui.png)","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"## How to Start","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"1. Download the latest version of duke.jar [here](https://github.com/dreammac3816547290/ip/releases).","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"2. Open command prompt and navigate to the download folder.","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"3. Run `java -jar duke.jar`.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"4. The Duke GUI will open, and you can type in commands in the command box.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"## Command","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"### `bye` exits Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"\u003e bye","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"### `list` lists all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"\u003e list","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"### `free`  finds the nearest date without task","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"\u003e free","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"### `mark` marks a task as done","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e mark \u003ctask index\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"\u003e mark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"### `unmark` marks a task as not done","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e unmark \u003ctask index\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"\u003e unmark 1","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"### `find` finds all tasks which description matches a string","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e find \u003cstring\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"\u003e find read book","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"### `todo` creates a todo task","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"\u003e todo read book at the library","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"### `deadline` creates a task with deadline","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e deadline \u003cdescription\u003e /by \u003cdeadline YYYY-MM-DD\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"\u003e deadline finish math homework /by 2022-09-19","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"### `event` creates a task with time","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e event \u003cdescription\u003e /at \u003ctime YYYY-MM-DD\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"\u003e event go fishing /at 2022-09-20","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"### `delete` deletes a task","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"`\u003e delete \u003ctask index\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"\u003e delete 1","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"dreammac3816547290":34,"-":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"@rem","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"@rem Find java.exe","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"goto fail","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"echo.","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"goto fail","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":":execute","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"@rem Setup the command line","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":":end","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":":fail","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"dreammac3816547290"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"dreammac3816547290"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"dreammac3816547290"},"content":"exit /b 1","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"dreammac3816547290"},"content":":mainEnd","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"dreammac3816547290"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"dreammac3816547290"},"content":":omega","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":89}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to add a task to Duke, either a ToDo, a Deadline, or an Event.","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    protected char type;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"    protected String description;","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    protected String detail;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of AddCommand with type and description.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     * @param type Type of Task to add.","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of Task to add.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    public AddCommand(char type, String description) {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of AddCommand with type, description, and detail.","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"     * @param type Type of Task to add.","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of Task to add.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"     * @param detail Additional detail of Task to add (deadline for Deadline and time for Event).","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    public AddCommand(char type, String description, String detail) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"        this(type, description);","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the AddCommand, add a Task to Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the AddCommand at.","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If the type does not exist in Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"        Task task;","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"        switch (type) {","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"            break;","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"            task \u003d new Deadline(description, detail);","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"            break;","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"            task \u003d new Event(description, detail);","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"            break;","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"        default:","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"        duke.addTask(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"        AddCommand that \u003d (AddCommand) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"        return type \u003d\u003d that.type \u0026\u0026 Objects.equals(description, that.description) \u0026\u0026 Objects.equals(detail, that.detail);","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":75}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents the abstract concept of a Command, which could be run in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Abstract method to run the Command.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the Command at.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If run is unsuccessful.","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    public abstract void run(Duke duke) throws DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     * @param obj Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"        return this \u003d\u003d obj || (obj instanceof Command \u0026\u0026 getClass() \u003d\u003d obj.getClass());","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":25}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Deadline, which is a Task with a deadline.","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    protected final LocalDate deadline;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Deadline with description and deadline.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     * @param deadline Deadline of the Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If date format is incorrect.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Incorrect date format!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"        type \u003d \u0027D\u0027;","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Deadline with description, boolean to set the Deadline as done or not done, and deadline.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     * @param isDone Boolean to set the Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     * @param deadline Deadline of the Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If date format is incorrect.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"    public Deadline(String description, boolean isDone, String deadline) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        this(description, deadline);","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the Deadline for UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the Deadline for UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"        assert deadline !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        return super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the Deadline for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the Deadline for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"    public String toData() {","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"        return super.toData() + \", \" + deadline;","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"        Deadline deadline1 \u003d (Deadline) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"        return Objects.equals(deadline, deadline1.deadline);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"dreammac3816547290":79}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to delete a Task from Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    protected int index;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of DeleteCommand with index of Task to delete.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"     * @param index Index of Task to delete.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the DeleteCommand, delete a Task from Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the Command at.","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If delete is unsuccessful.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"        duke.deleteTask(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        DeleteCommand that \u003d (DeleteCommand) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"        return index \u003d\u003d that.index;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of DialogBox, with text and image to put inside the DialogBox.","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"     * @param text Text to put in the DialogBox.","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     * @param img Image to put in the DialogBox.","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"    private void flip() {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"     * Takes user input as text and user image as img and returns user\u0027s DialogBox, which is left-aligned.","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"     * @param text User input.","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"     * @param img User image.","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"     * @return User\u0027s DialogBox, left-aligned.","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"        db.flip();","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"        return db;","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"     * Takes output from Duke as text and Duke image as img and returns Duke\u0027s DialogBox, which is right-aligned.","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"     * @param text Duke output.","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"     * @param img Duke image.","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"     * @return Duke\u0027s DialogBox, right-aligned.","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-18"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-18"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":" * Represents Duke, a Personal Assistant Chatterbot that helps a person to keep track of various things.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    protected Storage storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    protected Ui ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    protected boolean isActive \u003d true;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Duke.","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"    public Duke() {","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"            storage \u003d new Storage(\"./duke.txt\");","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"     * Add a Task to Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"     * @param task Task to add.","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If task description is empty.","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"        if (task.description.isBlank()) {","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Task description is empty!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"        tasks.add(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"        ui.addTask(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"        ui.infoCount(tasks.size());","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"     * Print all current tasks to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"    public void printTasks() {","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"     * Mark a Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"     * @param index Index of Task to mark.","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"     * @param isDone Boolean to mark the Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If index is out of bound.","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"    public void markTask(int index, boolean isDone) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Index out of bound!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"dreammac3816547290"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":86,"author":{"gitId":"dreammac3816547290"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"dreammac3816547290"},"content":"            task.markAsDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"dreammac3816547290"},"content":"            ui.markAsDone(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"dreammac3816547290"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"dreammac3816547290"},"content":"            task.markNotDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"dreammac3816547290"},"content":"            ui.markNotDone(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"dreammac3816547290"},"content":"     * Delete a Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"dreammac3816547290"},"content":"     * @param index Index of Task to delete.","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If index is out of bound.","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"dreammac3816547290"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"dreammac3816547290"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":103,"author":{"gitId":"dreammac3816547290"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Index out of bound!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"dreammac3816547290"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"dreammac3816547290"},"content":"        ui.deleteTask(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"dreammac3816547290"},"content":"        ui.infoCount(tasks.size());","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"dreammac3816547290"},"content":"     * Print all tasks that matches the keyword to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"dreammac3816547290"},"content":"     * @param keyword Keyword to match.","lastModifiedDate":"2022-09-16"},{"lineNumber":116,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"dreammac3816547290"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"dreammac3816547290"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":119,"author":{"gitId":"dreammac3816547290"},"content":"        TaskList matches \u003d (TaskList) tasks.clone();","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"dreammac3816547290"},"content":"        assert matches !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":121,"author":{"gitId":"dreammac3816547290"},"content":"        matches.removeIf(task -\u003e !task.toString().toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"dreammac3816547290"},"content":"        ui.findTasks(matches);","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints the nearest date without task to the UI.","lastModifiedDate":"2022-09-18"},{"lineNumber":127,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"dreammac3816547290"},"content":"    public void findFreeTimes() {","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"dreammac3816547290"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"dreammac3816547290"},"content":"        ArrayList\u003cLong\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"dreammac3816547290"},"content":"        tasks.forEach(task -\u003e {","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"dreammac3816547290"},"content":"            if (task.type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-09-18"},{"lineNumber":133,"author":{"gitId":"dreammac3816547290"},"content":"                distances.add(((Deadline) task).deadline.toEpochDay() - now.toEpochDay());","lastModifiedDate":"2022-09-18"},{"lineNumber":134,"author":{"gitId":"dreammac3816547290"},"content":"            } else if (task.type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-09-18"},{"lineNumber":135,"author":{"gitId":"dreammac3816547290"},"content":"                distances.add(((Event) task).time.toEpochDay() - now.toEpochDay());","lastModifiedDate":"2022-09-18"},{"lineNumber":136,"author":{"gitId":"dreammac3816547290"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":137,"author":{"gitId":"dreammac3816547290"},"content":"        });","lastModifiedDate":"2022-09-18"},{"lineNumber":138,"author":{"gitId":"dreammac3816547290"},"content":"        distances.sort((a, b) -\u003e (int) (a - b));","lastModifiedDate":"2022-09-18"},{"lineNumber":139,"author":{"gitId":"dreammac3816547290"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-09-18"},{"lineNumber":140,"author":{"gitId":"dreammac3816547290"},"content":"        for (Long distance : distances) {","lastModifiedDate":"2022-09-18"},{"lineNumber":141,"author":{"gitId":"dreammac3816547290"},"content":"            if (distance \u003e counter) {","lastModifiedDate":"2022-09-18"},{"lineNumber":142,"author":{"gitId":"dreammac3816547290"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":143,"author":{"gitId":"dreammac3816547290"},"content":"            } else if (distance \u003d\u003d counter) {","lastModifiedDate":"2022-09-18"},{"lineNumber":144,"author":{"gitId":"dreammac3816547290"},"content":"                counter++;","lastModifiedDate":"2022-09-18"},{"lineNumber":145,"author":{"gitId":"dreammac3816547290"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":146,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":147,"author":{"gitId":"dreammac3816547290"},"content":"        ui.findFreeTimes(now.plusDays(counter));","lastModifiedDate":"2022-09-18"},{"lineNumber":148,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":149,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":150,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"dreammac3816547290"},"content":"     * Exit the Duke Chatterbot.","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"dreammac3816547290"},"content":"    public void exit() {","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"dreammac3816547290"},"content":"        assert isActive;","lastModifiedDate":"2022-09-18"},{"lineNumber":155,"author":{"gitId":"dreammac3816547290"},"content":"        isActive \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"dreammac3816547290"},"content":"        ui.close();","lastModifiedDate":"2022-09-18"},{"lineNumber":157,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":160,"author":{"gitId":"dreammac3816547290"},"content":"     * Clears tasks in Duke and the storage.","lastModifiedDate":"2022-09-19"},{"lineNumber":161,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":162,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If tasks in Duke or storage can not be cleared.","lastModifiedDate":"2022-09-19"},{"lineNumber":163,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"dreammac3816547290"},"content":"    public void clear() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":165,"author":{"gitId":"dreammac3816547290"},"content":"        tasks.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":166,"author":{"gitId":"dreammac3816547290"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":167,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":168,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":169,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":170,"author":{"gitId":"dreammac3816547290"},"content":"     * Starts the Duke GUI.","lastModifiedDate":"2022-09-18"},{"lineNumber":171,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":172,"author":{"gitId":"dreammac3816547290"},"content":"     * @param stage Stage to show the GUI elements.","lastModifiedDate":"2022-09-18"},{"lineNumber":173,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":174,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":175,"author":{"gitId":"dreammac3816547290"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":176,"author":{"gitId":"dreammac3816547290"},"content":"        // Step 1. Setting up required components","lastModifiedDate":"2022-09-18"},{"lineNumber":177,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":178,"author":{"gitId":"dreammac3816547290"},"content":"        // The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-18"},{"lineNumber":179,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-18"},{"lineNumber":180,"author":{"gitId":"dreammac3816547290"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-18"},{"lineNumber":181,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-18"},{"lineNumber":182,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":183,"author":{"gitId":"dreammac3816547290"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-18"},{"lineNumber":184,"author":{"gitId":"dreammac3816547290"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-18"},{"lineNumber":185,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":186,"author":{"gitId":"dreammac3816547290"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-18"},{"lineNumber":187,"author":{"gitId":"dreammac3816547290"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-18"},{"lineNumber":188,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":189,"author":{"gitId":"dreammac3816547290"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-18"},{"lineNumber":190,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":191,"author":{"gitId":"dreammac3816547290"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-18"},{"lineNumber":192,"author":{"gitId":"dreammac3816547290"},"content":"        stage.show();","lastModifiedDate":"2022-09-18"},{"lineNumber":193,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":194,"author":{"gitId":"dreammac3816547290"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-09-18"},{"lineNumber":195,"author":{"gitId":"dreammac3816547290"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-18"},{"lineNumber":196,"author":{"gitId":"dreammac3816547290"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-18"},{"lineNumber":197,"author":{"gitId":"dreammac3816547290"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":198,"author":{"gitId":"dreammac3816547290"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":199,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":200,"author":{"gitId":"dreammac3816547290"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":201,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":202,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-18"},{"lineNumber":203,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-18"},{"lineNumber":204,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-18"},{"lineNumber":205,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":206,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":207,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-18"},{"lineNumber":208,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":209,"author":{"gitId":"dreammac3816547290"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-18"},{"lineNumber":210,"author":{"gitId":"dreammac3816547290"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-18"},{"lineNumber":211,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":212,"author":{"gitId":"dreammac3816547290"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":213,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":214,"author":{"gitId":"dreammac3816547290"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":215,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":216,"author":{"gitId":"dreammac3816547290"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":217,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":218,"author":{"gitId":"dreammac3816547290"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":219,"author":{"gitId":"dreammac3816547290"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":220,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":221,"author":{"gitId":"dreammac3816547290"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":222,"author":{"gitId":"dreammac3816547290"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-18"},{"lineNumber":223,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":224,"author":{"gitId":"dreammac3816547290"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-09-18"},{"lineNumber":225,"author":{"gitId":"dreammac3816547290"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-18"},{"lineNumber":226,"author":{"gitId":"dreammac3816547290"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-18"},{"lineNumber":227,"author":{"gitId":"dreammac3816547290"},"content":"        });","lastModifiedDate":"2022-09-18"},{"lineNumber":228,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":229,"author":{"gitId":"dreammac3816547290"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-18"},{"lineNumber":230,"author":{"gitId":"dreammac3816547290"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-18"},{"lineNumber":231,"author":{"gitId":"dreammac3816547290"},"content":"        });","lastModifiedDate":"2022-09-18"},{"lineNumber":232,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":233,"author":{"gitId":"dreammac3816547290"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-18"},{"lineNumber":234,"author":{"gitId":"dreammac3816547290"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-18"},{"lineNumber":235,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":236,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":237,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":238,"author":{"gitId":"dreammac3816547290"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-18"},{"lineNumber":239,"author":{"gitId":"dreammac3816547290"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-18"},{"lineNumber":240,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":241,"author":{"gitId":"dreammac3816547290"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-18"},{"lineNumber":242,"author":{"gitId":"dreammac3816547290"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2022-09-18"},{"lineNumber":243,"author":{"gitId":"dreammac3816547290"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2022-09-18"},{"lineNumber":244,"author":{"gitId":"dreammac3816547290"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-18"},{"lineNumber":245,"author":{"gitId":"dreammac3816547290"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2022-09-18"},{"lineNumber":246,"author":{"gitId":"dreammac3816547290"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2022-09-18"},{"lineNumber":247,"author":{"gitId":"dreammac3816547290"},"content":"        );","lastModifiedDate":"2022-09-18"},{"lineNumber":248,"author":{"gitId":"dreammac3816547290"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-18"},{"lineNumber":249,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":250,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":251,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":252,"author":{"gitId":"dreammac3816547290"},"content":"     * Takes user input and returns Duke\u0027s response to the input.","lastModifiedDate":"2022-09-18"},{"lineNumber":253,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":254,"author":{"gitId":"dreammac3816547290"},"content":"     * @param input User input.","lastModifiedDate":"2022-09-18"},{"lineNumber":255,"author":{"gitId":"dreammac3816547290"},"content":"     * @return Duke\u0027s response to the input.","lastModifiedDate":"2022-09-18"},{"lineNumber":256,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":257,"author":{"gitId":"dreammac3816547290"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2022-09-18"},{"lineNumber":258,"author":{"gitId":"dreammac3816547290"},"content":"        assert input !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":259,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":260,"author":{"gitId":"dreammac3816547290"},"content":"            Command command \u003d Parser.parseInput(input);","lastModifiedDate":"2022-09-18"},{"lineNumber":261,"author":{"gitId":"dreammac3816547290"},"content":"            command.run(this);","lastModifiedDate":"2022-09-18"},{"lineNumber":262,"author":{"gitId":"dreammac3816547290"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-09-18"},{"lineNumber":263,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":264,"author":{"gitId":"dreammac3816547290"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2022-09-18"},{"lineNumber":265,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":266,"author":{"gitId":"dreammac3816547290"},"content":"        return ui.collect();","lastModifiedDate":"2022-09-18"},{"lineNumber":267,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dreammac3816547290":267,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents an Exception in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of DukeException with message.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param message Message explaining the Exception.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"     * @param obj Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"        return this \u003d\u003d obj || (obj instanceof DukeException \u0026\u0026 getMessage().equals(((DukeException) obj).getMessage()));","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"dreammac3816547290":26}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":" * Represents an Event, which is a Task with time.","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    protected final LocalDate time;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Event with description and time.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     * @param time Time of the Event.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If date format is incorrect.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    public Event(String description, String time) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"            this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Incorrect date format!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"        type \u003d \u0027E\u0027;","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Event with description, boolean to set the Event as done or not done, and time.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     * @param isDone Boolean to set the Event as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     * @param time Time of the Event.","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If date format is incorrect.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"    public Event(String description, boolean isDone, String time) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        this(description, time);","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the Event for UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the Event for UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"        assert time !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        return super.toString() + \" (at: \" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the Event for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the Event for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"    public String toData() {","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"        return super.toData() + \", \" + time;","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"        return Objects.equals(time, event.time);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"dreammac3816547290":79}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to exit Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the ExitCommand, exit Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the ExitCommand at.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"        duke.exit();","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":16}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to find tasks in Duke that matches a certain keyword.","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    protected String keyword;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of FindCommand with keyword to match.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"     * @param keyword Keyword to match.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the FindCommand, print all tasks in Duke that matches the keyword to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the AddCommand at.","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) {","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"        duke.findTasks(keyword);","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"        FindCommand that \u003d (FindCommand) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        return Objects.equals(keyword, that.keyword);","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":45}},{"path":"src/main/java/duke/FreeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to find free times (the nearest date without task).","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public class FreeCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the FreeCommand, prints the nearest date without task in Duke.","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the Command at.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) {","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"        duke.findFreeTimes();","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"public class Launcher {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to print all tasks in Duke to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the ListCommand, print all tasks in Duke to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the ListCommand at.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"        duke.printTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"     * Starts the Duke GUI.","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"     * @param stage Stage to show the GUI elements.","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"            stage.show();","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"     * Initializes the MainWindow.","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"     * Sets the associated Duke instance.","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"     * @param d Duke instance to be associated.","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"        );","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":60}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Command to mark a task as done or not done in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    protected int index;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of MarkCommand with index of Task to mark and boolean to mark the Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     * @param index Index of Task to mark.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     * @param isDone Boolean to mark the Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    public MarkCommand(int index, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"     * Run the MarkCommand, mark a task as done or not done in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"     * @param duke Duke instance to run the MarkCommand at.","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If mark is unsuccessful.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"    public void run(Duke duke) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"        duke.markTask(index, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"        MarkCommand that \u003d (MarkCommand) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        return index \u003d\u003d that.index \u0026\u0026 isDone \u003d\u003d that.isDone;","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":48}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Parser to parse the input and return an Object corresponding to it.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public class Parser {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns a Task which results from parsing the data input from Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param input Data input from Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     * @return Task corresponding to the data input from Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If storage data can not be parsed.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    public static Task parseStorageTask(String input) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"        String[] inputParts \u003d input.split(\", \");","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"        String type \u003d inputParts[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"        boolean isDone \u003d inputParts[1].equals(\"X\");","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"        String description \u003d inputParts[2];","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"        switch (type) {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        case \"T\":","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"        case \"D\":","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"            return new Deadline(description, isDone, inputParts[3]);","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"        case \"E\":","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"            return new Event(description, isDone, inputParts[3]);","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"        default:","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Load unsuccessful!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns a Command which results from parsing the user input.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"     * @param input Text input from user.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     * @return Command corresponding to the user input.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If user input is not recognized or has incorrect syntax.","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"    public static Command parseInput(String input) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"            assert input !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"            String[] inputParts;","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"            inputParts \u003d splitFirst(input, \" \");","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"            assert inputParts.length \u003c\u003d 2;","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"            switch (inputParts[0]) {","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"            case \"bye\":","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"            case \"list\":","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"                return new ListCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"            case \"free\":","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"                return new FreeCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"                return new MarkCommand(Integer.parseInt(inputParts[1]) - 1, true);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"                return new MarkCommand(Integer.parseInt(inputParts[1]) - 1, false);","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"            case \"find\":","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"                return new FindCommand(inputParts[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"                return new AddCommand(\u0027T\u0027, inputParts[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"                inputParts \u003d splitFirst(inputParts[1], \" /by \");","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"                return new AddCommand(\u0027D\u0027, inputParts[0], inputParts[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"            case \"event\":","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"                inputParts \u003d splitFirst(inputParts[1], \" /at \");","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"                return new AddCommand(\u0027E\u0027, inputParts[0], inputParts[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"                return new DeleteCommand(Integer.parseInt(inputParts[1]) - 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"            default:","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Incorrect syntax!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns a String array with at most 2 elements, which results from splitting the String once with the substring (regex).","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"     * @param string Original String.","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"     * @param regex Substring used to split the String.","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String array with at most 2 elements, which results from splitting the String once with the substring.","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"dreammac3816547290"},"content":"    public static String[] splitFirst(String string, String regex) {","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"dreammac3816547290"},"content":"        return string.split(regex, 2);","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":85}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.io.File;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Storage to load and save the data of Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"public class Storage {","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    protected String path;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Storage with path name to the Storage file.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * @param path Path name to the Storage file.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns a TaskList which results from loading the data in the Storage file.","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"     * @return TaskList from the data in the Storage file.","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If storage data can not be parsed.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"        Scanner sc;","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"            file.createNewFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"            return tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"            tasks.add(Parser.parseStorageTask(sc.nextLine()));","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"        return tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"     * Saves the current Duke data to the Storage file.","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"     * @param tasks TaskList which represents the current Duke data.","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"     * @throws DukeException If save is unsuccessful.","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"            FileWriter fw \u003d new FileWriter(\"./duke.txt\");","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"            fw.write(tasks.toData());","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"            fw.close();","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"            throw new DukeException(\"Save unsuccessful!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":60}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a Task with description, boolean to set the Task as done or not done, and type (ToDo \u003d \u0027T\u0027,","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" * Deadline \u003d \u0027D\u0027, Event \u003d \u0027E\u0027).","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"    protected String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    protected char type;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Task with description.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of Task with description and boolean to set the Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"     * @param isDone Boolean to set the Task as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"        this(description);","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"     * Marks Task as done.","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"     * Marks Task as not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the status icon of the Task, \u0027X\u0027 if done and \u0027 \u0027 if not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"     * @return Status icon of the Task, \u0027X\u0027 if done and \u0027 \u0027 if not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"        return isDone ? \u0027X\u0027 : \u0027 \u0027; // done \u003d X","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the Task for UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the Task for UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"    public String toString() {","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"        return String.format(\"[%c][%c] %s\", type, getStatusIcon(), description);","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the Task for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the Task for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"    public String toData() {","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"        return String.format(\"%c, %c, %s\", type, getStatusIcon(), description);","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"     * Checks equality to another Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":"     * @param o Other Object.","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"     * @return true if equal, false otherwise.","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"dreammac3816547290"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"dreammac3816547290"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"dreammac3816547290"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"dreammac3816547290"},"content":"            return true;","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"dreammac3816547290"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"dreammac3816547290"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"dreammac3816547290"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"dreammac3816547290"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 type \u003d\u003d task.type \u0026\u0026 Objects.equals(description, task.description);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"dreammac3816547290":94}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * Returns the String representation of the TaskList for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"     * @return String representation of the TaskList for Storage.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    public String toData() {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"        String acc \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"        for (Task task : this) {","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"            acc +\u003d task.toData() + \u0027\\n\u0027;","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"        return acc;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":21}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":" * Represents a ToDo, which is a Task.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of ToDo with description.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the ToDo.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"        super(description);","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"        type \u003d \u0027T\u0027;","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     * Constructor of ToDo with description and boolean to set the ToDo as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"     * @param description Description of the ToDo.","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"     * @param isDone Boolean to set the ToDo as done or not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"        this(description);","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":" * Represents the UI component of Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"public class Ui {","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    protected Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    protected String output \u003d \"\";","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a String to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"     * @param string String to print.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    public void print(String string) {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        output +\u003d string + \u0027\\n\u0027;","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a greeting message to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    public void greet() {","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"What can I do for you?\");","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"     * Reads a line of user input and returns it.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"     * @return A line of user input that is read.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"    public String read() {","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a response from adding a Task in Duke to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"     * @param task Task added in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"        print(task.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints all tasks in the TaskList to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"     * @param tasks List of tasks to print.","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"            print((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a response from marking a Task as done in Duke to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"     * @param task Task marked as done in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"    public void markAsDone(Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"        print(task.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a response from marking a Task as not done in Duke to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"     * @param task Task marked as not done in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":"    public void markNotDone(Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":82,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"dreammac3816547290"},"content":"        print(task.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints an information about the current number of tasks in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"dreammac3816547290"},"content":"     * @param count Number of tasks in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"dreammac3816547290"},"content":"    public void infoCount(int count) {","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"dreammac3816547290"},"content":"        assert count \u003e\u003d 0;","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a response from deleting a Task in Duke to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"dreammac3816547290"},"content":"     * @param task Task deleted in Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"dreammac3816547290"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"dreammac3816547290"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":103,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"dreammac3816547290"},"content":"        print(task.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"dreammac3816547290"},"content":"     * Print all matching tasks to the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"dreammac3816547290"},"content":"     * @param tasks List of matching tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"dreammac3816547290"},"content":"    public void findTasks(TaskList tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"dreammac3816547290"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"dreammac3816547290"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":116,"author":{"gitId":"dreammac3816547290"},"content":"            print((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":121,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints the nearest date without task to the UI.","lastModifiedDate":"2022-09-18"},{"lineNumber":122,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":123,"author":{"gitId":"dreammac3816547290"},"content":"     * @param date Nearest date without task.","lastModifiedDate":"2022-09-18"},{"lineNumber":124,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":125,"author":{"gitId":"dreammac3816547290"},"content":"    public void findFreeTimes(LocalDate date) {","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"The nearest date without task is \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \".\");","lastModifiedDate":"2022-09-18"},{"lineNumber":127,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"dreammac3816547290"},"content":"     * Collects the output accumulated by the UI, returns it, and resets the UI output.","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"dreammac3816547290"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"dreammac3816547290"},"content":"     * @return Output accumulated in the UI.","lastModifiedDate":"2022-09-18"},{"lineNumber":133,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":134,"author":{"gitId":"dreammac3816547290"},"content":"    public String collect() {","lastModifiedDate":"2022-09-18"},{"lineNumber":135,"author":{"gitId":"dreammac3816547290"},"content":"        String temp \u003d output;","lastModifiedDate":"2022-09-18"},{"lineNumber":136,"author":{"gitId":"dreammac3816547290"},"content":"        output \u003d \"\";","lastModifiedDate":"2022-09-18"},{"lineNumber":137,"author":{"gitId":"dreammac3816547290"},"content":"        return temp;","lastModifiedDate":"2022-09-18"},{"lineNumber":138,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":139,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":140,"author":{"gitId":"dreammac3816547290"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"dreammac3816547290"},"content":"     * Prints a goodbye message and closes the UI.","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"dreammac3816547290"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"dreammac3816547290"},"content":"    public void close() {","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"dreammac3816547290"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"dreammac3816547290"},"content":"        sc.close();","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":147}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"500.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"95.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"752.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"dreammac3816547290":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    public void deadlineTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Sep 16 2022\", new Deadline(\"Deadline\", \"2022-09-16\").deadline","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"    public void toStringTest() throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"[D][ ] Deadline (by: Dec 16 2022)\",","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"                new Deadline(\"Deadline\", \"2022-12-16\").toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    public void toDataTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"D,  , Deadline, 2022-09-16\", new Deadline(\"Deadline\", \"2022-09-16\").toData());","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":26}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"public class DukeTest {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"    public void addTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n[D][ ] assignment (by: Sep 19 2022)\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"                + \"Now you have 1 tasks in the list.\\n\", duke.getResponse(\"deadline assignment /by 2022-09-19\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    public void exceptionTest1() {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Task description is empty!\\n\", new Duke().getResponse(\"todo \"));","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    public void listTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Here are the tasks in your list:\\n1. [T][ ] read book\\n2. [T][ ] watch movies\\n\",","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"                duke.getResponse(\"list\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"    public void markTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[T][X] read book\\n\", duke.getResponse(\"mark 1\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"    public void exceptionTest2() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Index out of bound!\\n\", duke.getResponse(\"mark 3\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"    public void deleteTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n[T][ ] watch movies\\nNow you have 1 tasks in the list.\\n\",","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"                duke.getResponse(\"delete 2\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"    public void exceptionTest3() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Index out of bound!\\n\", duke.getResponse(\"delete 0\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"    public void findTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read magazine\");","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n1. [T][ ] read book\\n2. [T][ ] read magazine\\n\",","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"                duke.getResponse(\"find read\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"dreammac3816547290"},"content":"    public void freeTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read magazine\");","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"The nearest date without task is \"","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"dreammac3816547290"},"content":"                + LocalDate.now().plusDays(1).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \".\\n\",","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"dreammac3816547290"},"content":"                duke.getResponse(\"free\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"dreammac3816547290"},"content":"    public void exitTest() {","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Bye. Hope to see you again soon!\\n\", new Duke().getResponse(\"bye\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"dreammac3816547290"},"content":"    public void clearTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"dreammac3816547290"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read book\");","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo read magazine\");","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"dreammac3816547290"},"content":"        duke.getResponse(\"todo watch movies\");","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"dreammac3816547290"},"content":"        duke.clear();","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(0, duke.tasks.size());","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"dreammac3816547290":108}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"public class EventTest {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    public void timeTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"Dec 31 2022\", new Event(\"Event\", \"2022-12-31\").time","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"    public void toStringTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"[E][ ] Event (at: Dec 31 2022)\",","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"                new Event(\"Event\", \"2022-12-31\").toString());","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    public void toDataTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"E,  , Event, 2022-12-31\", new Event(\"Event\", \"2022-12-31\").toData());","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"dreammac3816547290":26}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    public void exitTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new ExitCommand(), Parser.parseInput(\"bye\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    public void listTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new ListCommand(), Parser.parseInput(\"list\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"dreammac3816547290"},"content":"    public void freeTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new FreeCommand(), Parser.parseInput(\"free\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"dreammac3816547290"},"content":"    public void markTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new MarkCommand(99, true), Parser.parseInput(\"mark 100\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"dreammac3816547290"},"content":"    public void unmarkTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new MarkCommand(49, false), Parser.parseInput(\"unmark 50\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"dreammac3816547290"},"content":"    public void findTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new FindCommand(\"study\"), Parser.parseInput(\"find study\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"dreammac3816547290"},"content":"    public void toDoTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new AddCommand(\u0027T\u0027, \"study with friends\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"dreammac3816547290"},"content":"                Parser.parseInput(\"todo study with friends\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"dreammac3816547290"},"content":"    public void deadlineTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new AddCommand(\u0027D\u0027, \"submit assignment\", \"2022-09-19\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"dreammac3816547290"},"content":"                Parser.parseInput(\"deadline submit assignment /by 2022-09-19\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"dreammac3816547290"},"content":"    public void eventTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new AddCommand(\u0027E\u0027, \"go to the beach\", \"2022-09-30\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"dreammac3816547290"},"content":"                Parser.parseInput(\"event go to the beach /at 2022-09-30\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"dreammac3816547290"},"content":"    public void deleteTest() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(new DeleteCommand(0), Parser.parseInput(\"delete 1\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"dreammac3816547290"},"content":"    public void exceptionTest1() {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"dreammac3816547290"},"content":"            Parser.parseInput(\"hello\");","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"dreammac3816547290"},"content":"            assertEquals(new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"), e);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"dreammac3816547290"},"content":"    public void exceptionTest2() {","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"dreammac3816547290"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"dreammac3816547290"},"content":"            Parser.parseInput(\"deadline new task\");","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"dreammac3816547290"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"dreammac3816547290"},"content":"            assertEquals(new DukeException(\"Incorrect syntax!\"), e);","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"dreammac3816547290"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"dreammac3816547290":78}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dreammac3816547290"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"dreammac3816547290"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"dreammac3816547290"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"dreammac3816547290"},"content":"public class ToDoTest {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"dreammac3816547290"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"[T][ ] ToDo\", new ToDo(\"ToDo\").toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"dreammac3816547290"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"dreammac3816547290"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"dreammac3816547290"},"content":"    public void descriptionTest() {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"dreammac3816547290"},"content":"        assertEquals(\"ToDo\", new ToDo(\"ToDo\").description);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"dreammac3816547290"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"dreammac3816547290"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"dreammac3816547290":17}}]

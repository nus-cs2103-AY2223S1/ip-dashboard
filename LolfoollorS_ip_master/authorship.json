[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"    mainClassName \u003d \"CleverNotBot\"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"    archiveBaseName \u003d \"cleverNotBot\"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"LolfoollorS":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":85,"LolfoollorS":4}},{"path":"src/main/java/AddCommandDeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class AddCommandDeadLine extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public AddCommandDeadLine(String commandName, boolean exit) {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName, exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"        String[] desc \u003d getCommandName().split(\" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"            if (desc.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"                throw new CleverNotBotException(\"Please fill in the description of Deadline!\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            } else if (!getCommandName().contains(\"/by\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"                throw new CleverNotBotException(\"Please include a /by in your description of Deadline! \", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"                String searchWord \u003d \" /by\";","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"                int start \u003d \"deadline \".length();","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"                int mid \u003d getCommandName().indexOf(searchWord);","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"                //deadline desc /by datetime -\u003e \"desc\"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"                String commandName \u003d getCommandName().substring(start, mid);","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"                String dateTime \u003d getCommandName().substring(mid + searchWord.length() + 1); // to remove the space","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"                Deadline.validDateTime(dateTime);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"                Task newTask \u003d new Deadline(commandName, false, dateTime);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"                storage.writeToFile(tasks.getTaskList());","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"                textBox.chat(String.format(","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"                        \"Got it. I\u0027ve added this task:\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"                                \"\\n  %s\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"                                \"\\nNow you have %d tasks in the list.\"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"                        , newTask.toString(), tasks.getSize()));","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        } catch (CleverNotBotException e){","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"            throw new CleverNotBotException(\"Deadline description must not be empty or must contain /by!\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"        } catch (Exception ex){","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"            throw new CleverNotBotException(\"Incorrect date format! Please enter DD-MM-YYYY HH:mm\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"                    \"\\nFor example, 22-09-2022 19:40\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":41}},{"path":"src/main/java/AddCommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class AddCommandEvent extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public AddCommandEvent(String commandName, boolean exit) {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName, exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"        String[] desc \u003d getCommandName().split(\" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        try{","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"            if (desc.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"                throw new CleverNotBotException(\"Please fill in the description of Event!\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            } else if (!getCommandName().contains(\"/at\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"                throw new CleverNotBotException(\"Please include a /at in your description of Deadline! \", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"                String searchWord \u003d \" /at\";","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"                int start \u003d \"event \".length();","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"                int mid \u003d getCommandName().indexOf(searchWord);","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"                String commandName \u003d getCommandName().substring(start, mid);","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"                String at \u003d getCommandName().substring(mid + searchWord.length() + 1); // to remove the space;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"                Task newTask \u003d new Event(commandName, false, at);","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"                storage.writeToFile(tasks.getTaskList());","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"                textBox.chat(String.format(","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"                        \"Got it. I\u0027ve added this task:\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"                                \"\\n  %s\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"                                \"\\nNow you have %d tasks in the list.\"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"                        , newTask.toString(), tasks.getSize()));","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"        } catch(CleverNotBotException e){","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"            throw new CleverNotBotException(\"Event description must not be empty or must contain /at!\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":35}},{"path":"src/main/java/AddCommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"public class AddCommandToDo extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    public AddCommandToDo(String commandName, boolean exit) {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName, exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        String[] desc \u003d getCommandName().split(\" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            if (desc.length !\u003d 1) {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"                //removes the command name \"todo\" eg. [todo,borrow,book] -\u003e [borrow,book]","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"                String[] descOnly \u003d Arrays.copyOfRange(desc, 1, desc.length);","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"                String joinDesc \u003d String.join(\" \", descOnly);","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"                Task newTask \u003d new ToDo(joinDesc, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"                storage.writeToFile(tasks.getTaskList());","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"                textBox.chat(String.format(","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"                        \"Got it. I\u0027ve added this task:\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"                                \"\\n  %s\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"                                \"\\nNow you have %d tasks in the list.\"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"                        , newTask.toString(), tasks.getSize()));","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"            } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"                throw new CleverNotBotException(\"Please fill in the description of ToDo!\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"        } catch(CleverNotBotException e){","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"            throw new CleverNotBotException(\"Please fill in the description of ToDo!\", textBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":33}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public ByeCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException{","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        textBox.chat(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":11}},{"path":"src/main/java/CleverNotBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"public class CleverNotBot {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"    public static void main(String[] args) throws CleverNotBotException {","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"        UI textBox \u003d new UI();","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"        TaskList tasks \u003d new TaskList(storage.getTasksFromFile());","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        Parser hl \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"        hl.parseText(\"greet\").run(tasks, textBox, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            String ip \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"            Command nxtStep \u003d hl.parseText(ip);","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"            nxtStep.run(tasks, textBox, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"            if (nxtStep.isExitingProgram()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"                break;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":24}},{"path":"src/main/java/CleverNotBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class CleverNotBotException extends Exception{","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"    private String errorMessage;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    private UI textBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    public CleverNotBotException(String errorMessage, UI textBox){","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"        this.textBox \u003d textBox;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"    /*public String toString(){","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"        return textBox.coverText(errorMessage);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    public String toString(){","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"        return errorMessage;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":18}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"    private String commandName;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    private boolean exit;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    public Command(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    public String getCommandName(){","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        return commandName;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    public boolean isExitingProgram(){","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"        return exit;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"    public abstract void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":19}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    private String dateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public Deadline(String name, boolean completed, String dateTime) {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        super(name, completed);","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        applyDate(dateTime);","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"        return dateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        return \"D\";","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    private void applyDate(String dateTime) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"        this.date \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"    public String getDateTime(){","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"    public String getDateTime(String format){","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"        return date.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    public String getDate(){","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    public Task toggleCompleted(){","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"        return new Deadline(getName(),!isCompleted(), dateTime);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"    public static void validDateTime(String date) throws Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"        LocalDateTime d \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"    public String toString(){","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",checkMarked(),getName(),getDateTime());","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":58}},{"path":"src/main/java/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class DefaultCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public DefaultCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException{","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        textBox.chat(\"This command doesn\u0027t exist!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":11}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public DeleteCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"        try{","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"            String[] desc \u003d getCommandName().split(\" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"            if(desc.length \u003c\u003d 1){","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"                throw new CleverNotBotException(\"Invalid arguments. Please enter a number!\",textBox);","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"            Task deletedTask \u003d tasks.getTask(Integer.parseInt(desc[1]) - 1); // Task 3 is in idx 2","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            tasks.removeTask(deletedTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"            storage.writeToFile(tasks.getTaskList());","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"            textBox.chat(String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"                         \"Noted. I\u0027ve removed this task:\"+","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"                         \"\\n  %s\"+","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"                         \"\\nNow you have %d tasks in the list.\"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"                    ,deletedTask.toString(),tasks.getSize()));","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"            throw new CleverNotBotException(\"The task does not exist!\",textBox);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"    private String at;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"    public Event(String name, boolean completed, String at){","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"        super(name,completed);","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        return at;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"        return \"E\";","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"    public Task toggleCompleted(){","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        return new Event(getName(),!isCompleted(),at);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    public String toString(){","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",checkMarked(),getName(),at);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":28}},{"path":"src/main/java/GreetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public GreetCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException{","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        textBox.chat(\"Hello! I\u0027m CleverNotBot\\n What can I do for you?\");","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":11}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public ListCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException{","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        if (tasks.getSize() \u003c 1) { textBox.chat(\"There is no task currently assigned.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        }else {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"            int counter \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            StringBuilder op \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"            for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"                op.append(counter++);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"                op.append(\".\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"                op.append(task.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"                op.append(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"            textBox.chat(op.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":22}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public MarkCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException{","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        int number \u003d Integer. parseInt(getCommandName().split(\" \")[1]) - 1; //mark 3 -\u003e 3, because number 3 is actually idx 2","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        Task taskToMark \u003d tasks.getTask(number);","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        if(taskToMark.checkMarked().equals(\" \")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            Task markedTask \u003d taskToMark.toggleCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"            tasks.removeTask(taskToMark);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            tasks.addTaskByIdx(number, markedTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"            textBox.chat(String.format(\"Nice! I\u0027ve marked this task as done:\\n  [%s] %s\",","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"                    markedTask.checkMarked(),markedTask.getName()));","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"        } else{","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"            textBox.chat(\"Hey! This task is already marked!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":22}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class Parser {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public Command parseText(String text) {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        String[] txtArr \u003d text.split(\" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"        switch (txtArr[0]) {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"            return new MarkCommand(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"            return new UnmarkCommand(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        case \"list\":","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"            return new ListCommand(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"            return new AddCommandToDo(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"            return new AddCommandDeadLine(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"        case \"event\":","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"            return new AddCommandEvent(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"            return new DeleteCommand(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        case \"greet\":","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"            return new GreetCommand(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"            return new ByeCommand(text, true);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"        default:","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"            return new DefaultCommand(text, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":30}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"import java.io.*;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"public class Storage {","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    private String fileLocation \u003d \"/data/cleverNotBot.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"    private File file;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public Storage(){","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        this.file \u003d new File(this.fileLocation);","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"    public ArrayList\u003cTask\u003e getTasksFromFile() {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"        String line;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"        try{","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(fileLocation));","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"            while((line \u003d reader.readLine()) !\u003d null){","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"                Task task \u003d convertLineToTask(line);","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"                tasks.add(task);","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"            System.out.println(\"Error! File does not exist! Creating a new file at location!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"            try{","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"                file.createNewFile();","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"            } catch (IOException errorCreate){","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"                System.out.println(\"An error has occurred when trying to create new file\");","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"        } catch (IOException errorObtain){","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"            System.out.println(\"An error has occurred when trying to obtain data from the save file.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"        return tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"            // if the file above doesn\u0027t exist, create it.","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"            if(!file.getParentFile().exists()){","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"            StringBuilder op \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"            int counter \u003d 0;","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"            for (Task task: tasks){","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"                String taskToStorage \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"                if (task.getTaskType().equals(\"T\")){","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"                    taskToStorage \u003d String.format(\"%s | %d | %s\",","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"                            task.getTaskType(),task.isCompleted()? 1:0,task.getName());","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"                } else if(task.getTaskType().equals(\"D\") || task.getTaskType().equals(\"E\")){","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"LolfoollorS"},"content":"                    taskToStorage \u003d String.format(\"%s | %d | %s | %s\",","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"LolfoollorS"},"content":"                            task.getTaskType(),task.isCompleted()? 1:0,task.getName(),task.getTime());","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"LolfoollorS"},"content":"                } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"LolfoollorS"},"content":"                    System.out.println(\"Warning! Illegal entries has been detected!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"LolfoollorS"},"content":"                }","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"LolfoollorS"},"content":"                op.append(taskToStorage);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"LolfoollorS"},"content":"                counter++;","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"LolfoollorS"},"content":"                if(counter \u003c tasks.size()){","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"LolfoollorS"},"content":"                    op.append(\"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"LolfoollorS"},"content":"                }","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"LolfoollorS"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"LolfoollorS"},"content":"            String result \u003d op.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"LolfoollorS"},"content":"            fw.write(result);","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"LolfoollorS"},"content":"            fw.close();","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"LolfoollorS"},"content":"        } catch(IOException e){","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"LolfoollorS"},"content":"            System.out.println(\"An error has occurred during saving of file!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"LolfoollorS"},"content":"    private Task convertLineToTask(String line) {","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"LolfoollorS"},"content":"        String[] content \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"LolfoollorS"},"content":"        /* debug line","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"LolfoollorS"},"content":"        System.out.println(file.getAbsolutePath());","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"LolfoollorS"},"content":"        System.out.println(String.join(\",\",content));","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"LolfoollorS"},"content":"         */","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"LolfoollorS"},"content":"        //\"1\".equals(content[1]) is to convert it to boolean","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"LolfoollorS"},"content":"        switch (content[0]) {","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"LolfoollorS"},"content":"        case \"T\":","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"LolfoollorS"},"content":"            return new ToDo(content[2], \"1\".equals(content[1]));","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"LolfoollorS"},"content":"        case \"D\":","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"LolfoollorS"},"content":"            return new Deadline(content[2], \"1\".equals(content[1]), content[3]);","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"LolfoollorS"},"content":"        default:","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"LolfoollorS"},"content":"            // new event","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"LolfoollorS"},"content":"            return new Event(content[2], \"1\".equals(content[1]), content[3]);","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":88}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"    private final String name;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    private final boolean completed;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"    public Task(String name, boolean completed){","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"    public String getName(){","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"        return name;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    public boolean isCompleted(){","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"        return completed;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    public String checkMarked(){","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        return isCompleted()? \"X\":\" \";","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    public abstract String getTime();","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    public abstract Task toggleCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"    //return new Task(name,!completed);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"        return name;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":35}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    private int size;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        size \u003d tasks.size();","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"    public void addTask(Task element){","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"        tasks.add(element);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"        size++;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"    public void addTaskByIdx(int idx, Task element){","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        tasks.add(idx, element);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        size++;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"    public void removeTask(Task task){","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"        tasks.remove((Task)task);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"        size--;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    public Task getTask(int idx){","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"        return tasks.get(idx);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"    public int getSize(){","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"        return size;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"    public String toString(){","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"        return Arrays.toString(tasks.toArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":45}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public ToDo(String name, boolean completed){","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(name,completed);","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        return \"inf\";","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"        return \"T\";","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"    public Task toggleCompleted(){","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"        return new ToDo(getName(),!isCompleted());","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"    public String toString(){","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"        return String.format(\"[T][%s] %s\",checkMarked(),getName());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":26}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"public class UI {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    public UI(){}","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"    public void chat(String text){","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        List\u003cString\u003e textLines;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        int max;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"        if (text \u003d\u003d null){","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"            textLines \u003d Collections.singletonList(\"null\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            max \u003d 4;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"            textLines \u003d Arrays.asList(text.split(\"\\n\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"            max \u003d textLines.stream().map(String::length).max(Integer::compareTo).get();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"        System.out.println(\" \" + \"_\".repeat(max + 10));","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"        System.out.println(\"|\" + \" \".repeat(max + 10) + \"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"        for (int i \u003d 0; i \u003c textLines.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"            int curr \u003d textLines.get(i).length();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"LolfoollorS"},"content":"            System.out.println(\"|\" + \" \".repeat(5) + textLines.get(i) + \" \".repeat(5 + max-curr) + \"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"LolfoollorS"},"content":"        System.out.println(\"|\" + \"_\".repeat(max + 10) + \"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"LolfoollorS"},"content":"    public String coverText(String text){","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"LolfoollorS"},"content":"        List\u003cString\u003e textLines;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"LolfoollorS"},"content":"        int max;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"LolfoollorS"},"content":"        if (text \u003d\u003d null){","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"LolfoollorS"},"content":"            textLines \u003d Collections.singletonList(\"null\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"LolfoollorS"},"content":"            max \u003d 4;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"LolfoollorS"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"LolfoollorS"},"content":"            textLines \u003d Arrays.asList(text.split(\"\\n\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"LolfoollorS"},"content":"            max \u003d textLines.stream().map(String::length).max(Integer::compareTo).get();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"LolfoollorS"},"content":"        StringBuilder op \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"LolfoollorS"},"content":"        op.append(\" \").append(\"_\".repeat(max + 10));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"LolfoollorS"},"content":"        op.append(\"|\").append(\" \".repeat(max + 10)).append(\"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"LolfoollorS"},"content":"        for (int i \u003d 0; i \u003c textLines.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"LolfoollorS"},"content":"            int curr \u003d textLines.get(i).length();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"LolfoollorS"},"content":"            op.append(\"|\").append(\" \".repeat(5)).append(textLines.get(i)).append(\" \".repeat(5 + max-curr)).append(\"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"LolfoollorS"},"content":"        op.append(\"|\").append(\"_\".repeat(max + 10)).append(\"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"LolfoollorS"},"content":"        return op.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":49}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"    public UnmarkCommand(String commandName, boolean exit){","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"        super(commandName,exit);","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"    public void run(TaskList tasks, UI textBox, Storage storage) throws CleverNotBotException{","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"        int number \u003d Integer. parseInt(getCommandName().split(\" \")[1]) - 1; //mark 3 -\u003e 3, because number 3 is actually idx 2","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"        Task taskToUnmark \u003d tasks.getTask(number);","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"        if(taskToUnmark.checkMarked().equals(\"X\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"LolfoollorS"},"content":"            Task unmarkedTask \u003d taskToUnmark.toggleCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"LolfoollorS"},"content":"            tasks.removeTask(taskToUnmark);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"LolfoollorS"},"content":"            tasks.addTaskByIdx(number, unmarkedTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"LolfoollorS"},"content":"            textBox.chat(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  [%s] %s\",","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"LolfoollorS"},"content":"                    unmarkedTask.checkMarked(),unmarkedTask.getName()));","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"LolfoollorS"},"content":"        } else{","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"            textBox.chat(\"Hey! This task is already unmarked!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"LolfoollorS"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"LolfoollorS"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":22}},{"path":"text-ui-test/lvl6.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"todo read book","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"mark 1","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"mark 2","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"todo join sports club","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"mark 4","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"todo borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"list","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"delete 3","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"LolfoollorS":11}},{"path":"text-ui-test/lvl8.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LolfoollorS"},"content":"todo read book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"LolfoollorS"},"content":"mark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"LolfoollorS"},"content":"deadline return book /by 02-12-2022 18:00","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"LolfoollorS"},"content":"mark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"LolfoollorS"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"LolfoollorS"},"content":"todo join sports club","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"LolfoollorS"},"content":"mark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"LolfoollorS"},"content":"todo borrow book","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"LolfoollorS"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"delete 3","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"LolfoollorS"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"LolfoollorS":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"LolfoollorS"},"content":"javac  -D:\\Sem 7 Repo\\Cs2030\\src\\main\\java\\CleverNotBot.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LolfoollorS"},"content":"java D:\\Sem 7 Repo\\Cs2030\\src\\main\\java\\CleverNotBot.java\\bin CleverNotBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"LolfoollorS":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"LolfoollorS"},"content":"# run the program, feed commands from lvl6.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"LolfoollorS":1}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"    /** Deadline date of the task */","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"sjoann"},"content":"    private String date;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"sjoann"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"sjoann"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"sjoann"},"content":"        this.date \u003d getDate(by).format(DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm a\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"sjoann"},"content":"     * Returns String representation of the task with deadline.","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sjoann"},"content":"     * @return String.","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"sjoann"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sjoann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sjoann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sjoann"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sjoann":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"sjoann"},"content":"    /** ArrayList of type Task */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sjoann"},"content":"    private static ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"sjoann"},"content":"    public static void main(String[] args) throws DukeException{","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"sjoann"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"sjoann"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"sjoann"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sjoann"},"content":"            System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sjoann"},"content":"                    + \" Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sjoann"},"content":"                    + \" What can I do for you?\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"sjoann"},"content":"                    + \"____________________________________________________________\");","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sjoann"},"content":"            String strInput \u003d sc.nextLine();","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sjoann"},"content":"            while (!strInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"sjoann"},"content":"                if ((strInput.equalsIgnoreCase(\"list\"))) {","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sjoann"},"content":"                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"sjoann"},"content":"                            + \" Here are the tasks in your list:\"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"sjoann"},"content":"                            + enumerateList()","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"sjoann"},"content":"                            + \"\\n____________________________________________________________\");","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"sjoann"},"content":"                } else if (isATodo(strInput)){","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sjoann"},"content":"                    checkForNullTask(strInput.substring(4), \"todo\");","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sjoann"},"content":"                    checkForMultipleTasks(strInput.substring(4));","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"sjoann"},"content":"                    addToList(new Todo(strInput.substring(5)));","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"sjoann"},"content":"                } else if (isADeadline(strInput)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"sjoann"},"content":"                    checkForNullTask(strInput.substring(8), \"deadline\");","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sjoann"},"content":"                    checkForMultipleTasks(strInput.substring(8));","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sjoann"},"content":"                    addToList(new Deadline(strInput.substring(9, strInput.indexOf(\"/\") - 1),","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"sjoann"},"content":"                            strInput.substring(strInput.indexOf(\"/by\") + 4)));","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"sjoann"},"content":"                } else if (isAEvent(strInput)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sjoann"},"content":"                    checkForNullTask(strInput.substring(5), \"event\");","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sjoann"},"content":"                    checkForMultipleTasks(strInput.substring(5));","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sjoann"},"content":"                    addToList(new Event(strInput.substring(6, strInput.indexOf(\"/\") - 1),","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"sjoann"},"content":"                            strInput.substring(strInput.indexOf(\"/at\") + 4)));","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"sjoann"},"content":"                } else if (strInput.contains(\"delete\") \u0026\u0026 strInput.substring(0,6).equals(\"delete\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sjoann"},"content":"                    deleteFromList(Integer.parseInt(strInput.substring(7)));","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"sjoann"},"content":"                } else if (strInput.contains(\"unmark\") \u0026\u0026 strInput.substring(0,6).equals(\"unmark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"sjoann"},"content":"                    unmarkTheTask(Integer.parseInt(strInput.substring(7)));","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"sjoann"},"content":"                } else if (strInput.contains(\"mark\") \u0026\u0026 strInput.substring(0,4).equals(\"mark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"sjoann"},"content":"                    markTheTask(Integer.parseInt(strInput.substring(5)));","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"sjoann"},"content":"                } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"sjoann"},"content":"                    throw new DukeException(\"Cannot recognise the command.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"sjoann"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"sjoann"},"content":"                strInput \u003d sc.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"sjoann"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"sjoann"},"content":"            updateFile(fw);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"sjoann"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"sjoann"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"sjoann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"sjoann"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"sjoann"},"content":"     * Update the file to write to duke.txt.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"sjoann"},"content":"     * @param fw FileWriter object.","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"sjoann"},"content":"     * @throws IOException e.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"sjoann"},"content":"    private static void updateFile(FileWriter fw) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"sjoann"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"sjoann"},"content":"            String s \u003d \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"sjoann"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"sjoann"},"content":"                Task task \u003d taskArray.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"sjoann"},"content":"                s +\u003d task.toString().substring(1,2);","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"sjoann"},"content":"                if (task.isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"sjoann"},"content":"                    s +\u003d \" | 1 | \";","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"sjoann"},"content":"                } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"sjoann"},"content":"                    s +\u003d \" | 0 | \";","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"sjoann"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"sjoann"},"content":"                s +\u003d task.description + \"\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"sjoann"},"content":"                fw.write(s);","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"sjoann"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"sjoann"},"content":"            fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"sjoann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"sjoann"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"sjoann"},"content":"     * Checks if there is task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"sjoann"},"content":"     * @param description task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"sjoann"},"content":"     * @param typeOfTask todo, deadline, or event.","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"sjoann"},"content":"     * @throws DukeException if there is no task description.","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"sjoann"},"content":"    public static void checkForNullTask(String description, String typeOfTask) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"sjoann"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"sjoann"},"content":"            throw new DukeException(\"There must be a task description for \" + typeOfTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"sjoann"},"content":"     * Checks if there are multiple tasks in one input.","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"sjoann"},"content":"     * @param s user input.","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"sjoann"},"content":"     * @throws DukeException if there are multiple tasks in one input.","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"sjoann"},"content":"    public static void checkForMultipleTasks(String s) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"sjoann"},"content":"        if (s.contains(\"todo\") ||s.contains(\"deadline\") || s.contains(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"sjoann"},"content":"            throw new DukeException(\"Multiple task detected.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"sjoann"},"content":"     * Check if is a todo task.","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"sjoann"},"content":"     * @param s","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"sjoann"},"content":"     * @return boolean. True if is a todo task.","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"sjoann"},"content":"    public static boolean isATodo(String s) {","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"sjoann"},"content":"        return s.contains(\"todo\") \u0026\u0026 s.substring(0,4).equals(\"todo\");","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"sjoann"},"content":"     * Check if is a task with deadline.","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"sjoann"},"content":"     * @param s","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"sjoann"},"content":"     * @return boolean. True if is a deadline task.","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"sjoann"},"content":"    public static boolean isADeadline(String s) {","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"sjoann"},"content":"        return s.contains(\"deadline\") \u0026\u0026 s.substring(0,8).equals(\"deadline\");","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"sjoann"},"content":"     * Check if is a event task.","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"sjoann"},"content":"     * @param s","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"sjoann"},"content":"     * @return boolean. True if is a event task.","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":134,"author":{"gitId":"sjoann"},"content":"    public static boolean isAEvent(String s) {","lastModifiedDate":"2022-08-17"},{"lineNumber":135,"author":{"gitId":"sjoann"},"content":"        return s.contains(\"event\") \u0026\u0026 s.substring(0, 5).equals(\"event\");","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":137,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"sjoann"},"content":"     * Deletes a Task object from taskArray","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"sjoann"},"content":"     * @param taskID Task index.","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"sjoann"},"content":"    public static void deleteFromList(int taskID) {","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"sjoann"},"content":"        Task task \u003d taskArray.get(taskID - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"sjoann"},"content":"        taskArray.remove(taskID - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"sjoann"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"sjoann"},"content":"                + \" Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"sjoann"},"content":"                + task.toString()","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"sjoann"},"content":"                + \"\\n Now you have \" + taskArray.size() + \" tasks in the list\"","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"sjoann"},"content":"                + \"\\n____________________________________________________________\");","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":154,"author":{"gitId":"sjoann"},"content":"     * Adds a new Task object to taskArray","lastModifiedDate":"2022-08-16"},{"lineNumber":155,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":156,"author":{"gitId":"sjoann"},"content":"     * @param t Task.","lastModifiedDate":"2022-08-16"},{"lineNumber":157,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":158,"author":{"gitId":"sjoann"},"content":"    public static void addToList(Task t) {","lastModifiedDate":"2022-08-16"},{"lineNumber":159,"author":{"gitId":"sjoann"},"content":"        taskArray.add(t);","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"sjoann"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":161,"author":{"gitId":"sjoann"},"content":"                + \" Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2022-08-16"},{"lineNumber":162,"author":{"gitId":"sjoann"},"content":"                + t.toString()","lastModifiedDate":"2022-08-16"},{"lineNumber":163,"author":{"gitId":"sjoann"},"content":"                + \"\\n Now you have \" + taskArray.size() + \" tasks in the list\"","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"sjoann"},"content":"                + \"\\n____________________________________________________________\");","lastModifiedDate":"2022-08-16"},{"lineNumber":165,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":166,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":167,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":168,"author":{"gitId":"sjoann"},"content":"     * Returns a string representation of the list.","lastModifiedDate":"2022-08-16"},{"lineNumber":169,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":170,"author":{"gitId":"sjoann"},"content":"     * @return String.","lastModifiedDate":"2022-08-16"},{"lineNumber":171,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":172,"author":{"gitId":"sjoann"},"content":"    public static String enumerateList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":173,"author":{"gitId":"sjoann"},"content":"        //StringBuilder over string concat for better performance","lastModifiedDate":"2022-08-16"},{"lineNumber":174,"author":{"gitId":"sjoann"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-08-16"},{"lineNumber":175,"author":{"gitId":"sjoann"},"content":"        for (int i \u003d 1; i \u003c\u003d taskArray.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":176,"author":{"gitId":"sjoann"},"content":"            s.append(\"\\n \" + i","lastModifiedDate":"2022-08-16"},{"lineNumber":177,"author":{"gitId":"sjoann"},"content":"                    + \".\" + taskArray.get(i - 1).toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":178,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":179,"author":{"gitId":"sjoann"},"content":"        return s.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":182,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":183,"author":{"gitId":"sjoann"},"content":"     * Mark the task done.","lastModifiedDate":"2022-08-17"},{"lineNumber":184,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":185,"author":{"gitId":"sjoann"},"content":"     * @param taskID Task\u0027s number.","lastModifiedDate":"2022-08-17"},{"lineNumber":186,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":187,"author":{"gitId":"sjoann"},"content":"    public static void markTheTask(int taskID) {","lastModifiedDate":"2022-08-17"},{"lineNumber":188,"author":{"gitId":"sjoann"},"content":"        Task t \u003d taskArray.get(taskID - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":189,"author":{"gitId":"sjoann"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":190,"author":{"gitId":"sjoann"},"content":"                + \" Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":191,"author":{"gitId":"sjoann"},"content":"                + \"  [X] \"","lastModifiedDate":"2022-08-17"},{"lineNumber":192,"author":{"gitId":"sjoann"},"content":"                + t.description","lastModifiedDate":"2022-08-17"},{"lineNumber":193,"author":{"gitId":"sjoann"},"content":"                + \"\\n____________________________________________________________\");","lastModifiedDate":"2022-08-17"},{"lineNumber":194,"author":{"gitId":"sjoann"},"content":"        t.toggleIsDone(true);","lastModifiedDate":"2022-08-17"},{"lineNumber":195,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":196,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":197,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":198,"author":{"gitId":"sjoann"},"content":"     * Mark the task as not done.","lastModifiedDate":"2022-08-17"},{"lineNumber":199,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":200,"author":{"gitId":"sjoann"},"content":"     * @param taskID Task\u0027s number.","lastModifiedDate":"2022-08-17"},{"lineNumber":201,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":202,"author":{"gitId":"sjoann"},"content":"    public static void unmarkTheTask(int taskID) {","lastModifiedDate":"2022-08-17"},{"lineNumber":203,"author":{"gitId":"sjoann"},"content":"        Task t \u003d taskArray.get(taskID - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":204,"author":{"gitId":"sjoann"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":205,"author":{"gitId":"sjoann"},"content":"                + \" OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":206,"author":{"gitId":"sjoann"},"content":"                + \"  [ ] \"","lastModifiedDate":"2022-08-17"},{"lineNumber":207,"author":{"gitId":"sjoann"},"content":"                + t.description","lastModifiedDate":"2022-08-17"},{"lineNumber":208,"author":{"gitId":"sjoann"},"content":"                + \"\\n____________________________________________________________\");","lastModifiedDate":"2022-08-17"},{"lineNumber":209,"author":{"gitId":"sjoann"},"content":"        t.toggleIsDone(false);","lastModifiedDate":"2022-08-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"sjoann":207}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sjoann"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sjoann":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"    /** Event date of the task */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"sjoann"},"content":"    private String date;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"sjoann"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"sjoann"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"sjoann"},"content":"        this.date \u003d getDate(at).format(DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm a\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"sjoann"},"content":"     * Returns String representation of the event details.","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sjoann"},"content":"     * @return String.","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"sjoann"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sjoann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sjoann"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sjoann"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sjoann":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"sjoann"},"content":"    protected int day, month, year, hours, minutes;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"sjoann"},"content":"     * Constructor to initialise a Task object.","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"sjoann"},"content":"     * @param description Task\u0027s outline.","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"sjoann"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"sjoann"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sjoann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sjoann"},"content":"     * Returns [X] if task is done. Else, [ ].","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"sjoann"},"content":"     * @return String.","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"sjoann"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"sjoann"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"sjoann"},"content":"     * Returns [X] if task is done. Else, [ ].","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"sjoann"},"content":"     * @return String.","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"sjoann"},"content":"    public void toggleIsDone(boolean bool) {","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"sjoann"},"content":"        isDone \u003d bool;","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"sjoann"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"sjoann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"sjoann"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"sjoann"},"content":"     * Returns a LocalDateTime object.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"sjoann"},"content":"     * @param date String of the date with format dd/mm/yyyy 0000.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"sjoann"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"sjoann"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"sjoann"},"content":"    public LocalDateTime getDate(String date) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"sjoann"},"content":"        if (checkValidDate(date)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"sjoann"},"content":"            return LocalDateTime.of(year, month, day, hours, minutes);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"sjoann"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"sjoann"},"content":"            throw new DukeException(\"OOPS! Format must be \u003cdd/mm/yyyy\u003e \u003ctime\u003e with time being 24hours.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"sjoann"},"content":"     * Check for String format and validity of date.","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"sjoann"},"content":"     * @param date String of the date with format dd/mm/yyyy 0000.","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"sjoann"},"content":"     * @return boolean. True if is a valid date.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"sjoann"},"content":"     * @throws DukeException if invalid date.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"sjoann"},"content":"    public boolean checkValidDate(String date) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"sjoann"},"content":"            if (date.length() \u003d\u003d 15 \u0026\u0026 date.substring(2, 3).equals(\"/\") \u0026\u0026 date.substring(5, 6).equals(\"/\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"sjoann"},"content":"                this.day \u003d Integer.parseInt(date.substring(0, 2));","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"sjoann"},"content":"                this.month \u003d Integer.parseInt(date.substring(3, 5));","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"sjoann"},"content":"                this.year \u003d Integer.parseInt(date.substring(6, 10));","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"sjoann"},"content":"                this.hours \u003d Integer.parseInt(date.substring(11, 13));","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"sjoann"},"content":"                this.minutes \u003d Integer.parseInt(date.substring(13, 15));","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"sjoann"},"content":"                return day \u003e 0 \u0026\u0026 day \u003c\u003d 31 \u0026\u0026 month \u003c\u003d 12 \u0026\u0026 month \u003e 0","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"sjoann"},"content":"                        \u0026\u0026 year \u003e 0 \u0026\u0026 hours \u003c\u003d 23 \u0026\u0026 hours \u003e\u003d 0 \u0026\u0026 minutes \u003e\u003d 0 \u0026\u0026 minutes \u003c\u003d 59;","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"sjoann"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"sjoann"},"content":"                throw new DukeException(\"OOPS! Format must be \u003cdd/mm/yyyy\u003e \u003ctime\u003e with time being 24hours.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"sjoann"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"sjoann"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sjoann":76}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"sjoann"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"sjoann"},"content":"     * Returns String representation of the to-do task.","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"sjoann"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"sjoann"},"content":"     * @return String","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"sjoann"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sjoann"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"sjoann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"sjoann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sjoann"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sjoann"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"sjoann"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sjoann":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sjoann"},"content":"todo complete assignment","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"sjoann"},"content":"deadline chemistry lab /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"sjoann"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"sjoann"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"sjoann"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"sjoann"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"sjoann"},"content":"todo help with house chores","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"sjoann"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"sjoann"},"content":"todo jogging","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sjoann"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sjoann"},"content":"todo running","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sjoann"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sjoann"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sjoann"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sjoann"},"content":"delete 1","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sjoann"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"sjoann"},"content":"blah","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sjoann":17}}]

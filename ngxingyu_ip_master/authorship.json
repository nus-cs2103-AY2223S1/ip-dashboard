[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngxingyu":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"checkstyle {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngxingyu":20,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"T|0|borrow book","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"D|1|2020-01-15T23:59|return book","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"E|1|Mon 2-4pm|project meeting","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"ngxingyu":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":" * The Duke chatbot","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"public class Duke {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"    private final Consumer\u003cMessage\u003e messageSender;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"     * Creates a duke chatbot which persists tasks to the file named fileName.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"     * @param fileName      Name of the file to store tasks in.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"     * @param messageSender the consumer which sends a message to the ui.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    public Duke(String fileName, Consumer\u003cMessage\u003e messageSender) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"        this.messageSender \u003d messageSender;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"        messageSender.accept(new Message(\"Hello! I\u0027m Duke\\nWhat do you need to do?\", false, Message.User.DUKE));","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"        Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"            storage \u003d new Storage(fileName);","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"            storage \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        this.tasks \u003d new TaskList(storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"     * Takes in the user input and returns a message from Duke.","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"     * @param userInput user input from the gui.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    public void processUserInput(String userInput) {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"            messageSender.accept(c.execute(tasks));","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"            messageSender.accept(new Message(e.getMessage(), false, Message.User.DUKE));","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ngxingyu":45,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":" * Exception thrown by Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"        super(String.format(\"\\u2639 OOPS!!! %s\", message));","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"    public DukeException(String format, Object... args) {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"        super(String.format(\"\\u2639 OOPS!!! %s\", String.format(format, args)));","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"ngxingyu":14}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"ngxingyu":12}},{"path":"src/main/java/duke/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":" * Message to be displayed on screen with a user and exit status.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"public class Message {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"    public final String message;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"    public final boolean shouldExit;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"    public final User user;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"     * Represents the list of valid users.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public enum User {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"        USER,","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"        DUKE","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"     * Creates a message with the given text, exit status, and user.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"     * @param message message to be displayed.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"     * @param shouldExit whether the program should exit.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"     * @param user user who sent the message.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    public Message(String message, boolean shouldExit, User user) {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"        this.shouldExit \u003d shouldExit;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"        this.user \u003d user;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"ngxingyu":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.InvalidCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":" * Parser for all user inputs.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    public static final Pattern TASK_FORMAT \u003d Pattern.compile(getNumberRegex(\"taskNumber\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_NOT_FOUND_MESSAGE \u003d \"Invalid command.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    public static String getNumberRegex(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"        return \"(?\u003c\" + name + \"\u003e\\\\d+)\";","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"    public static String getTextRegex(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        return \"(?\u003c\" + name + \"\u003e[^/]+)\";","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    public static String getDateTimeRegex(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        return \"(?\u003c\" + name + \"\u003e\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2})\";","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"    public static String combineRegexes(String... regexes) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"        return String.join(\"\\\\s+\", regexes);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"     * Parses the user input and return the corresponding command.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"     * @param inputString input from user.","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"     * @return command object.","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException exception thrown if the input is invalid.","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"    public static Command parse(String inputString) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"        final Matcher matcher \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\").matcher(inputString.trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"                switch (Commands.getCommand(matcher.group(\"commandWord\"))) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"                case BYE:","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"                    return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"                case FIND:","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"                    return processFind(matcher.group(\"arguments\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"                case LIST:","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"                    return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"                case TODO:","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"                    return processToDo(matcher.group(\"arguments\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"                case EVENT:","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"                    return processEvent(matcher.group(\"arguments\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"ngxingyu"},"content":"                    return processDeadline(matcher.group(\"arguments\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"ngxingyu"},"content":"                case MARK:","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"ngxingyu"},"content":"                    return processMark(matcher.group(\"arguments\").strip(), true);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"ngxingyu"},"content":"                case UNMARK:","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"ngxingyu"},"content":"                    return processMark(matcher.group(\"arguments\").strip(), false);","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"ngxingyu"},"content":"                case DELETE:","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"ngxingyu"},"content":"                    return processDelete(matcher.group(\"arguments\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"ngxingyu"},"content":"                default:","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"ngxingyu"},"content":"                    return new InvalidCommand(COMMAND_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"ngxingyu"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"ngxingyu"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(COMMAND_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"ngxingyu"},"content":"        return new InvalidCommand(COMMAND_NOT_FOUND_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"ngxingyu"},"content":"    private static Command processFind(String inputString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"ngxingyu"},"content":"        return new FindCommand(preprocessString(inputString));","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"ngxingyu"},"content":"    private static Command processToDo(String inputString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"ngxingyu"},"content":"        return new ToDoCommand(preprocessString(inputString));","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"ngxingyu"},"content":"    private static Command processEvent(String inputString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"ngxingyu"},"content":"        final Matcher matcher \u003d Pattern.compile(combineRegexes(getTextRegex(\"description\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"ngxingyu"},"content":"                        \"/at\",","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"ngxingyu"},"content":"                        getTextRegex(\"eventTime\")))","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"ngxingyu"},"content":"                .matcher(inputString.strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"ngxingyu"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(\"Invalid event format\");","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"ngxingyu"},"content":"        return new EventCommand(matcher.group(\"description\").strip(),","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"ngxingyu"},"content":"                matcher.group(\"eventTime\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"ngxingyu"},"content":"    private static Command processDeadline(String inputString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"ngxingyu"},"content":"        final Matcher matcher \u003d Pattern.compile(combineRegexes(getTextRegex(\"description\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"ngxingyu"},"content":"                        \"/by\",","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"ngxingyu"},"content":"                        getDateTimeRegex(\"datetime\")))","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"ngxingyu"},"content":"                .matcher(inputString.strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"ngxingyu"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(\"Invalid deadline format\");","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"ngxingyu"},"content":"        return new DeadlineCommand(matcher.group(\"description\").strip(),","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"ngxingyu"},"content":"                LocalDateTime.parse(matcher.group(\"datetime\").strip(),","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"ngxingyu"},"content":"                        DateTimeFormatter.ofPattern(Deadline.EVENT_DATETIME_FORMAT)));","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"ngxingyu"},"content":"    private static String preprocessString(String rawInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"ngxingyu"},"content":"        return rawInput.strip();","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"ngxingyu"},"content":"    private static Command processMark(String inputString, boolean completed) {","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"ngxingyu"},"content":"        final Matcher matcher \u003d TASK_FORMAT.matcher(inputString.strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"ngxingyu"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(\"Invalid mark/unmark format\");","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"ngxingyu"},"content":"            int taskNumber \u003d Integer.parseInt(matcher.group(\"taskNumber\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"ngxingyu"},"content":"            if (completed) {","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"ngxingyu"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"ngxingyu"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"ngxingyu"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"ngxingyu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(\"ID cannot be parsed.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"ngxingyu"},"content":"    private static Command processDelete(String inputString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"ngxingyu"},"content":"        final Matcher matcher \u003d TASK_FORMAT.matcher(inputString.strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"ngxingyu"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(\"Failed to delete task %s\", inputString);","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"ngxingyu"},"content":"            int taskNumber \u003d Integer.parseInt(matcher.group(\"taskNumber\").strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"ngxingyu"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"ngxingyu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"ngxingyu"},"content":"            return new InvalidCommand(\"Failed to delete task %s\", inputString);","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"ngxingyu"},"content":"     * Lists all valid commands","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"ngxingyu"},"content":"    public enum Commands {","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"ngxingyu"},"content":"        TODO(ToDoCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"ngxingyu"},"content":"        EVENT(EventCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"ngxingyu"},"content":"        DEADLINE(DeadlineCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"ngxingyu"},"content":"        MARK(MarkCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"ngxingyu"},"content":"        UNMARK(UnmarkCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"ngxingyu"},"content":"        DELETE(DeleteCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"ngxingyu"},"content":"        LIST(ListCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"ngxingyu"},"content":"        BYE(ExitCommand.COMMAND_WORD),","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"ngxingyu"},"content":"        FIND(FindCommand.COMMAND_WORD);","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"ngxingyu"},"content":"        public final String commandWord;","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"ngxingyu"},"content":"        Commands(String commandWord) {","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"ngxingyu"},"content":"            this.commandWord \u003d commandWord;","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"ngxingyu"},"content":"        public static Commands getCommand(String command) throws IllegalArgumentException {","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"ngxingyu"},"content":"            for (Commands c : Commands.values()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"ngxingyu"},"content":"                if (c.commandWord.compareToIgnoreCase(command) \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"ngxingyu"},"content":"                    return c;","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"ngxingyu"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"ngxingyu"},"content":"            throw new IllegalArgumentException(\"Invalid command\");","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":182,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":183}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"import java.net.URLDecoder;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":" * Storage class that handles the storage and retrieval of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    private final String directoryPath;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    private String fileName;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"     * Constructs a new Storage in the application folder given a filename.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"     * @param fileName The name of the file to store tasks in.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException Exception thrown if the file cannot be found.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"    public Storage(String fileName) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        String directoryPath \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"            directoryPath \u003d Path.of(this.getClass()","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"                    .getProtectionDomain()","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"                    .getCodeSource()","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"                    .getLocation().toURI()).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"            directoryPath \u003d directoryPath.substring(0, directoryPath.lastIndexOf(File.separator));","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"            directoryPath \u003d URLDecoder.decode(directoryPath, StandardCharsets.UTF_8)","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"                    .concat(File.separator + \"data\");","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"                if (!directory.mkdir()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"                    directoryPath \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"        if (directoryPath \u003d\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(\"Unable to save tasks to disk.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"        return loadTasks(this.fileName);","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"     * Loads the list of task from a previously save text file.","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException Exception thrown if the file couldn\u0027t be read properly or contains invalid input.","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"ngxingyu"},"content":"    public ArrayList\u003cTask\u003e loadTasks(String fileName) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"ngxingyu"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"ngxingyu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"ngxingyu"},"content":"        File file \u003d new File(directoryPath.concat(File.separator + fileName));","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"ngxingyu"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"ngxingyu"},"content":"            return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"ngxingyu"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"ngxingyu"},"content":"            BufferedReader br \u003d new BufferedReader(reader);","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"ngxingyu"},"content":"            br.lines().forEach(line -\u003e {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"ngxingyu"},"content":"                String[] entries \u003d line.strip().split(\"\\\\|\", 3);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"ngxingyu"},"content":"                Task.Type type \u003d Task.Type.decode(entries[0]);","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"ngxingyu"},"content":"                boolean isCompleted \u003d entries[1].equals(\"1\");","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ngxingyu"},"content":"                switch (type) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"ngxingyu"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"ngxingyu"},"content":"                    try {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"ngxingyu"},"content":"                        tasks.add(Deadline.decode(entries[2], isCompleted));","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"ngxingyu"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"ngxingyu"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"ngxingyu"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"ngxingyu"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"ngxingyu"},"content":"                case EVENT:","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"ngxingyu"},"content":"                    tasks.add(Event.decode(entries[2], isCompleted));","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ngxingyu"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"ngxingyu"},"content":"                case TODO:","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"ngxingyu"},"content":"                    tasks.add(ToDo.decode(entries[2], isCompleted));","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"ngxingyu"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"ngxingyu"},"content":"                default:","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"ngxingyu"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"ngxingyu"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"ngxingyu"},"content":"            });","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"ngxingyu"},"content":"            br.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"ngxingyu"},"content":"            return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"ngxingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(\"Could not read file! \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"ngxingyu"},"content":"    private void writeToFile(String fileName, String content) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"ngxingyu"},"content":"        String filePath \u003d directoryPath.concat(File.separator + fileName);","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"ngxingyu"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"ngxingyu"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"ngxingyu"},"content":"            BufferedWriter bw \u003d new BufferedWriter(writer);","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"ngxingyu"},"content":"            bw.write(content);","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"ngxingyu"},"content":"            bw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"ngxingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(\"Could not save file! \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"ngxingyu"},"content":"     * Encodes and saves the given list of tasks to a file.","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"ngxingyu"},"content":"     * @param tasks the list of tasks to save.","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException Exception thrown if the file cannot be found or modified.","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"ngxingyu"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"ngxingyu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"ngxingyu"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"ngxingyu"},"content":"            sb.append(task.encode()).append(System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"ngxingyu"},"content":"        this.writeToFile(fileName, sb.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"ngxingyu":138}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.util.Timer;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"public class Ui extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"            mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"            Duke duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"            try {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"                duke \u003d new Duke(\"tasks.txt\", (Message message) -\u003e {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"                    mainWindow.sendMessage(message);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"                    if (message.shouldExit) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"                        new Timer().schedule(","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"                                new TimerTask() {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"                                    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"                                    public void run() {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"                                        Platform.exit();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"                                    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"                                },","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"                                1500","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"                        );","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"                    }","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"                });","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"ngxingyu":55}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":" * Generic command representing a possible user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"     * Performs the command on the actual list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"     * @param tasks List of tasks to perform command on.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException if command fails to run properly.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    public abstract Message execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":19}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":" * Command for creating a Deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this deadline:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"            + \"\\t%s\\nNow you have %d tasks in your list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Unable to add deadline.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"     * Creates a Deadline Command with description and an event time.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"     * @param description description of deadline.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"     * @param eventTime date time of deadline.","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    public DeadlineCommand(String description, LocalDateTime eventTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        this.toAdd \u003d new Deadline(description, eventTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        if (tasks.addTask(this.toAdd)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"            return new Message(String.format(MESSAGE_SUCCESS, this.toAdd, tasks.size()), false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"            return new Message(MESSAGE_FAILURE, false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof DeadlineCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"        DeadlineCommand that \u003d (DeadlineCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"        return toAdd.equals(that.toAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":59}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"            + \"\\t%s\\nNow you have %d tasks in your list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_DELETE_ERROR \u003d \"Failed to delete task %d\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    private final int indexToDelete;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    public DeleteCommand(int task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"        this.indexToDelete \u003d task - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"            Task task \u003d tasks.removeTask(this.indexToDelete);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"            return new Message(String.format(MESSAGE_DELETE_SUCCESS, task, tasks.size()),","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"                    false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(MESSAGE_DELETE_ERROR, indexToDelete + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof DeleteCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"        DeleteCommand that \u003d (DeleteCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"        return indexToDelete \u003d\u003d that.indexToDelete;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(indexToDelete);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":52}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" * Command to create new Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this event:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"            + \"\\t%1$s\\nNow you have %2$d tasks in your list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Unable to add event.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    private final Event toAdd;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    public EventCommand(String description, String eventTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"        this.toAdd \u003d new Event(description, eventTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"        if (tasks.addTask(this.toAdd)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"            return new Message(String.format(MESSAGE_SUCCESS, this.toAdd, tasks.size()),","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"                    false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(MESSAGE_FAILURE);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof EventCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"        EventCommand that \u003d (EventCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"        return Objects.equals(toAdd, that.toAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":53}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":" * Command to terminate the program.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"        return new Message(\"Bye. Hope to see you again soon!\", true, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"        return obj instanceof DeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":21}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * Command to search for a task given certain constraints.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No tasks match the provided keyword.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.filterByKeyword(this.keyword);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(MESSAGE_FAILURE);","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"            return new Message(MESSAGE_SUCCESS + filteredTasks, false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":34}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * An invalid command.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    public InvalidCommand(String errorFormat, Object... args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"        this.errorMessage \u003d String.format(errorFormat, args);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        throw new DukeException(this.errorMessage);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof InvalidCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        InvalidCommand that \u003d (InvalidCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        return Objects.equals(errorMessage, that.errorMessage);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(errorMessage);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":45}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":" * Command to list all existing tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"        return new Message(\"Here are the tasks in your list:\\n\" + tasks.toString(),","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"                false,","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"                Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":19}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * Command to mark task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\\n  %s\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    private final int indexToMark;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    public MarkCommand(int task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"        this.indexToMark \u003d task - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"        Task task \u003d tasks.setCompletion(this.indexToMark, true);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        return new Message(String.format(MESSAGE_SUCCESS, task), false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof MarkCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        MarkCommand that \u003d (MarkCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        return indexToMark \u003d\u003d that.indexToMark;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(indexToMark);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":45}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * Command to create a new ToDo.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this todo:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"            + \"\\t%1$s\\nNow you have %2$d tasks in your list.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Unable to add task.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    private final ToDo toAdd;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"        this.toAdd \u003d new ToDo(description);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"        if (tasks.addTask(this.toAdd)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"            return new Message(String.format(MESSAGE_SUCCESS, this.toAdd, tasks.size()), false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(MESSAGE_FAILURE);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof ToDoCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"        ToDoCommand that \u003d (ToDoCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        return Objects.equals(toAdd, that.toAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":50}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * Command to mark task as uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Ok, I\u0027ve marked this task as not done yet:\\n  %s\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    private final int indexToMark;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    public UnmarkCommand(int task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"        this.indexToMark \u003d task - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    public Message execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"        Task task \u003d tasks.setCompletion(this.indexToMark, false);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        return new Message(String.format(MESSAGE_SUCCESS, task), false, Message.User.DUKE);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof UnmarkCommand)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        UnmarkCommand that \u003d (UnmarkCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        return indexToMark \u003d\u003d that.indexToMark;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(indexToMark);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":45}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":" * Deadline task with a description and ending date time.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"    public static final String EVENT_DATETIME_FORMAT \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    public static final String DISPLAY_DATETIME_FORMAT \u003d \"MMM dd yyyy\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"     * @param by          the deadline of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"     * Creates a Deadline task from an encoded string.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"     * @param encodedInput the encoded entry with format deadline|description.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"     * @param completed    the completion status of the Deadline task.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"     * @return the Deadline task","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    public static Deadline decode(String encodedInput, boolean completed) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        String[] entries \u003d encodedInput.split(\"\\\\|\", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        LocalDateTime datetime \u003d LocalDateTime.parse(entries[0], DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        Deadline deadline \u003d new Deadline(entries[1], datetime);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"        deadline.setDone(completed);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"        return deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    public Type getType() {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"        return Type.DEADLINE;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"    public String encodeData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"        return String.format(\"%s|%s\", by.toString(), this.description);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"    public String getDisplayText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"        return String.format(\"%s (by: %s)\",","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"                description,","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"                by.format(DateTimeFormatter.ofPattern(DISPLAY_DATETIME_FORMAT)));","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"ngxingyu"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"ngxingyu"},"content":"        return by.equals(deadline.by) \u0026\u0026 super.equals(o);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(by, description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"ngxingyu":76}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":" * Event task containing a description and when the event is happening.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"    protected String eventTime;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"     * @param description description of the event.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"     * @param eventTime the eventTime of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"     * Creates an Event task from an encoded string.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"     * @param encodedInput the encoded entry with format eventTime|description","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"     * @param completed the completion status of the Event task","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"     * @return the Event task","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    public static Event decode(String encodedInput, boolean completed) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"        String[] entries \u003d encodedInput.split(\"\\\\|\", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        Event event \u003d new Event(entries[1], entries[0]);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"        event.setDone(completed);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        return event;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"    public Type getType() {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        return Type.EVENT;","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    public String encodeData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"        return String.format(\"%s|%s\", this.eventTime, this.description);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"    public String getDisplayText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"        return String.format(\"%s (at: %s)\", description, eventTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"        return eventTime.compareTo(event.eventTime) \u003d\u003d 0 \u0026\u0026 super.equals(o);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(eventTime, description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"ngxingyu":67}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":" * Generic Task with a description and a completion status.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"     * Creates task with a given description.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"     * Gets string representation of the completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"     * @return X if done else \" \".","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"     * Sets completion status of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"     * @param isDone the new completion status.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"     * Returns the `Type` of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"     * @return the type of the task.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"    public abstract Type getType();","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"     * Encodes the data to be saved to the file. Excludes completion status and task type.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"     * @return the encoded data.","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"    public abstract String encodeData();","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"     * Returns the text to be displayed by the bot for the task, containing all details of the task,","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"     * excluding the type and completion status.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"     * @return the display text.","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"    public abstract String getDisplayText();","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"     * Encodes the task type and completion status in addition to the output of encodeData() to be stored as","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"     * line in the saved file.","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"     * @return the encoded data.","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"ngxingyu"},"content":"    public final String encode() {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"ngxingyu"},"content":"        return String.format(\"%s|%d|%s\", this.getType().prefix, (this.isDone ? 1 : 0), this.encodeData());","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"ngxingyu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"ngxingyu"},"content":"        return String.format(\"[%s][%s] %s\", getType(), getStatusIcon(), getDisplayText());","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"ngxingyu"},"content":"    public boolean matches(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"ngxingyu"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"ngxingyu"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"ngxingyu"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 Objects.equals(description, task.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"ngxingyu"},"content":"     * An enumeration of the different types of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"ngxingyu"},"content":"     * Each task contains a unique prefix.","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"ngxingyu"},"content":"    public enum Type {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"ngxingyu"},"content":"        TODO(\"T\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"ngxingyu"},"content":"        DEADLINE(\"D\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"ngxingyu"},"content":"        EVENT(\"E\");","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"ngxingyu"},"content":"        private final String prefix;","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"ngxingyu"},"content":"        Type(String prefix) {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"ngxingyu"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"ngxingyu"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"ngxingyu"},"content":"         * Returns the duke.task.Task Type given its prefix.","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"ngxingyu"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"ngxingyu"},"content":"         * @param prefix the prefix of the task type.","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"ngxingyu"},"content":"         * @return duke.task.Task.Type.","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"ngxingyu"},"content":"         * @throws IllegalArgumentException if none of the types match the prefix.","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"ngxingyu"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"ngxingyu"},"content":"        public static Type decode(String prefix) throws IllegalArgumentException {","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"ngxingyu"},"content":"            prefix \u003d prefix.strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"ngxingyu"},"content":"            for (Type type : Type.values()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"ngxingyu"},"content":"                if (type.prefix.compareToIgnoreCase(prefix) \u003d\u003d 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"ngxingyu"},"content":"                    return type;","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"ngxingyu"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"ngxingyu"},"content":"            throw new IllegalArgumentException(\"Task type not found.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"ngxingyu"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"ngxingyu"},"content":"         * Returns the prefix of the task type.","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"ngxingyu"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"ngxingyu"},"content":"         * @return String prefix of type.","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"ngxingyu"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"ngxingyu"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"ngxingyu"},"content":"        public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"ngxingyu"},"content":"            return prefix;","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":139,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"ngxingyu":139}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":" * List of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"        this(null);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"     * Creates a tasklist which will save tasks to a given storage automatically.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"     * @param storage storage object to save and load tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        super(100);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"                this.addAll(storage.loadTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"                // initialize with no tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"     * Finds all tasks in list that matches the keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"     * @param keyword Word to be searched for.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"     * @return filtered list of task.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"    public ArrayList\u003cTask\u003e filterByKeyword(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"        for (Task task : this) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"            if (task.matches(keyword)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"                filtered.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"        return filtered;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"     * Adds task to list.","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"     * @return Whether the task was added successfully.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException any exception when trying to add new task to the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"    public boolean addTask(Task task) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"        if (super.add(task)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"            if (storage !\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"                storage.saveTasks(this);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"ngxingyu"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"ngxingyu"},"content":"     * Removes the specified task from the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"ngxingyu"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"ngxingyu"},"content":"     * @return Task that was removed.","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException any error when removing the task from the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"ngxingyu"},"content":"    public Task removeTask(int index) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"ngxingyu"},"content":"        if (0 \u003c\u003d index \u0026\u0026 index \u003c\u003d this.size()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"ngxingyu"},"content":"            Task task \u003d super.remove(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"ngxingyu"},"content":"            storage.saveTasks(this);","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"ngxingyu"},"content":"            return task;","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"ngxingyu"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(\"Failed to delete task %d\", index + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"ngxingyu"},"content":"     * Sets the completion status of a task in the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"ngxingyu"},"content":"     * @param index The index of task to change.","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ngxingyu"},"content":"     * @param completed new completion status of task.","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"ngxingyu"},"content":"     * @return The task that was changed.","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"ngxingyu"},"content":"     * @throws DukeException any error when changing the completion status of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"ngxingyu"},"content":"    public Task setCompletion(int index, boolean completed) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"ngxingyu"},"content":"            Task task \u003d super.get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"ngxingyu"},"content":"            task.setDone(completed);","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"ngxingyu"},"content":"            if (storage !\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"ngxingyu"},"content":"                storage.saveTasks(this);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"ngxingyu"},"content":"            return task;","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"ngxingyu"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"ngxingyu"},"content":"            throw new DukeException(\"Task %d not found.\", index + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"ngxingyu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"ngxingyu"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"ngxingyu"},"content":"        IntStream.range(0, this.size()).forEach(i -\u003e output.append(String.format(\"\\t%d. %s%n\", i + 1, this.get(i))));","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"ngxingyu"},"content":"        return output.toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"ngxingyu"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"ngxingyu"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"ngxingyu"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"ngxingyu"},"content":"        if (!(o instanceof TaskList)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"ngxingyu"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"ngxingyu"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"ngxingyu"},"content":"        TaskList tasks \u003d (TaskList) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"ngxingyu"},"content":"        return Objects.equals(storage, tasks.storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"ngxingyu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"ngxingyu"},"content":"        return Objects.hash(super.hashCode(), storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"ngxingyu":135}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":" * ToDo task with description.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"     * Creates the ToDo task","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"     * Creates a ToDo from its encoded form in the saved file.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"     * @param encoded encoded string from the file","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"     * @param completed Whether the task has been completed.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"     * @return The created ToDo.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    public static ToDo decode(String encoded, boolean completed) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"        ToDo todo \u003d new ToDo(encoded);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"        todo.setDone(completed);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        return todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"    public Type getType() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        return Type.TODO;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    public String encodeData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        return this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"    public String getDisplayText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"        return this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"ngxingyu":43}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"ngxingyu":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import duke.Message;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"ngxingyu"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"ngxingyu"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"ngxingyu"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"ngxingyu"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"ngxingyu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"ngxingyu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"ngxingyu"},"content":"        sendMessage(new Message(input, false, Message.User.USER));","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"ngxingyu"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"ngxingyu"},"content":"        duke.processUserInput(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"ngxingyu"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"ngxingyu"},"content":"     * Creates a dialog box containing the message and draws it on the ui.","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"ngxingyu"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"ngxingyu"},"content":"     * @param message the message to display.","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"ngxingyu"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"ngxingyu"},"content":"    public void sendMessage(Message message) {","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"ngxingyu"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"ngxingyu"},"content":"                message.user \u003d\u003d Message.User.USER","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"ngxingyu"},"content":"                        ? DialogBox.getUserDialog(message.message, userImage)","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"ngxingyu"},"content":"                        : DialogBox.getDukeDialog(message.message, dukeImage));","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"ngxingyu":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"ngxingyu":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"                vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"ngxingyu":18}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import duke.commands.InvalidCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"    void processDeadline() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"        String[] invalidInputs \u003d {\"deadline no deadline\", \"deadline name /by invalid date\"};","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"        String validInput \u003d \"deadline name /by 01/01/2020 03:00\";","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"            for (String input : invalidInputs) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"                assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"            Command command \u003d Parser.parse(validInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"            assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"            assertEquals(new DeadlineCommand(\"name\",","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"                            LocalDateTime.of(2020, 1, 1, 3, 0)),","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"                    command);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"    void processDelete() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":41}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"class TaskListTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ngxingyu"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ngxingyu"},"content":"    void setUp() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ngxingyu"},"content":"        tasks \u003d new TaskList(null);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ngxingyu"},"content":"        tasks.add(new ToDo(\"task1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ngxingyu"},"content":"        tasks.add(new Deadline(\"task2\", LocalDateTime.of(2020, 1, 1, 3, 0)));","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ngxingyu"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ngxingyu"},"content":"    void setCompletion_validInputs() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ngxingyu"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ngxingyu"},"content":"            tasks.setCompletion(0, true);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ngxingyu"},"content":"            assertTrue(tasks.get(0).isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ngxingyu"},"content":"            tasks.setCompletion(0, false);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ngxingyu"},"content":"            assertFalse(tasks.get(0).isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ngxingyu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ngxingyu"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ngxingyu"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ngxingyu"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ngxingyu"},"content":"    void setCompletion_invalidIndex_exceptionThrown() {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ngxingyu"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.setCompletion(5, true));","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ngxingyu"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ngxingyu"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ngxingyu":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngxingyu"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"ngxingyu"},"content":"todo   borrow book","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"ngxingyu"},"content":"deadline  return book  /by  15/01/2020 23:59","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ngxingyu"},"content":"event  project meeting   /at   Mon 2-4pm","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"ngxingyu"},"content":"deadline  do homework /by  no idea :-p","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"mark  2","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"ngxingyu"},"content":"find project","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ngxingyu"},"content":"unmark  1","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"ngxingyu"},"content":"delete 5","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"ngxingyu"},"content":"delete 3","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"delete 2","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":"delete x","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ngxingyu"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"ngxingyu":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ngxingyu"},"content":"REM delete saved txt from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ngxingyu"},"content":"if exist ..\\data\\tasks.txt del ..\\data\\tasks.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"ngxingyu"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ngxingyu"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ^","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ngxingyu"},"content":" ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ^","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ngxingyu"},"content":" ..\\src\\main\\java\\duke\\commands\\*.java","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ngxingyu"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngxingyu":7,"-":19}}]

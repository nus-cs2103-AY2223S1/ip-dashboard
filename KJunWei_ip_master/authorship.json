[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KJunWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"KJunWei"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"KJunWei"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"KJunWei"},"content":" * Represents a Duke class","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"KJunWei"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KJunWei"},"content":" * @author Khor Jun Wei","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"KJunWei"},"content":" * @version CS2103T AY22/23 Sem 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KJunWei"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"KJunWei"},"content":"     * Represents an indentation for replies.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"KJunWei"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"KJunWei"},"content":"     * Represents an extra indentation for replies.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"KJunWei"},"content":"    private static final String EXTRA_INDENTATION \u003d \"  \";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"KJunWei"},"content":"     * Represents the work types.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"KJunWei"},"content":"    enum Work_type {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"KJunWei"},"content":"        TODO,","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"KJunWei"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"KJunWei"},"content":"        EVENT","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"KJunWei"},"content":"     * Constructs a formatted reply message.","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"KJunWei"},"content":"     * @param message message to be used","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"KJunWei"},"content":"     * @return string of well-formatted message","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"KJunWei"},"content":"    private static String reply(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"KJunWei"},"content":"        return \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"KJunWei"},"content":"                INDENTATION + message + \"\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"KJunWei"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"KJunWei"},"content":"     * Crafts a list of tasks to be completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"KJunWei"},"content":"     * @param array an array of tasks","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"KJunWei"},"content":"     * @param bArray an array of booleans describing whether a task is completed","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"KJunWei"},"content":"     * @param workTypeArray an array of work_types","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"KJunWei"},"content":"     * @return string of the list","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"KJunWei"},"content":"    private static String craftList(ArrayList\u003cString\u003e array, ArrayList\u003cBoolean\u003e bArray, ArrayList\u003cWork_type\u003e workTypeArray) {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"KJunWei"},"content":"        int length \u003d array.size();","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"KJunWei"},"content":"        String result \u003d \"Here are the task(s) in your list:\";","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"KJunWei"},"content":"        for (int x \u003d 0; x \u003c length; x++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"KJunWei"},"content":"            if (array.get(x) \u003d\u003d null) {","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"KJunWei"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"KJunWei"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"KJunWei"},"content":"                result +\u003d \"\\n\" + INDENTATION + (x + 1) + \".\" + workTypeBox(workTypeArray.get(x)) + checkBox(bArray.get(x)) + \" \" + array.get(x);","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"KJunWei"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"KJunWei"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"KJunWei"},"content":"        return result;","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"KJunWei"},"content":"     * Crafts a message when user inputs a todo, deadline, or event.","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"KJunWei"},"content":"     * @param work_type type of work","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"KJunWei"},"content":"     * @param bool whether the work is completed","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"KJunWei"},"content":"     * @param todo name of work","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"KJunWei"},"content":"     * @param work_number order of work in the list","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"KJunWei"},"content":"     * @return string of well-formatted message for the task","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"KJunWei"},"content":"    private static String craftTDEMessage(Work_type work_type, boolean bool, String todo, int work_number) {","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"KJunWei"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"KJunWei"},"content":"                INDENTATION + EXTRA_INDENTATION + workTypeBox(work_type) + checkBox(bool) + \" \" + todo + \"\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"KJunWei"},"content":"                INDENTATION + \"Now you have \" + work_number + (work_number \u003c 2 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"KJunWei"},"content":"     * Creates a checkbox for the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"KJunWei"},"content":"     * @param bool whether the task is completed","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"KJunWei"},"content":"     * @return string containing the well-formatted checkbox","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"KJunWei"},"content":"    private static String checkBox(boolean bool) {","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"KJunWei"},"content":"        if (bool) {","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"KJunWei"},"content":"            return \"[X]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"KJunWei"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"KJunWei"},"content":"            return \"[ ]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"KJunWei"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"KJunWei"},"content":"     * Creates a checkbox for the work type.","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"KJunWei"},"content":"     * @param type type of work","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"KJunWei"},"content":"     * @return string containing the well-formatted type box","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"KJunWei"},"content":"    private static String workTypeBox(Work_type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"KJunWei"},"content":"        if (type \u003d\u003d Work_type.TODO) {","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"KJunWei"},"content":"            return \"[T]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"KJunWei"},"content":"        } else if (type \u003d\u003d Work_type.DEADLINE) {","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"KJunWei"},"content":"            return \"[D]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"KJunWei"},"content":"        } else { // Has to be Work_type.EVENT","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"KJunWei"},"content":"            return \"[E]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"KJunWei"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"KJunWei"},"content":"     * Main method.","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"KJunWei"},"content":"     * @param args given arguments","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"KJunWei"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"KJunWei"},"content":"        System.out.println(reply(\"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"KJunWei"},"content":"                \"     What can I do for you?\"));","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"KJunWei"},"content":"        boolean conversation \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"KJunWei"},"content":"        ArrayList\u003cString\u003e work \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"KJunWei"},"content":"        ArrayList\u003cBoolean\u003e workCompleted \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"KJunWei"},"content":"        ArrayList\u003cWork_type\u003e workType \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"KJunWei"},"content":"        int workCounter \u003d 0;","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"KJunWei"},"content":"        while (conversation) {","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"KJunWei"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"KJunWei"},"content":"                String response \u003d scan.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"KJunWei"},"content":"                String[] splitResponse \u003d response.split(\" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"KJunWei"},"content":"                String keyword \u003d splitResponse[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"KJunWei"},"content":"                if (splitResponse.length \u003d\u003d 2 \u0026\u0026 (keyword.equals(\"mark\") || keyword.equals(\"unmark\"))) {","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"KJunWei"},"content":"                    try {","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"KJunWei"},"content":"                        int number \u003d Integer.parseInt(splitResponse[1]) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"KJunWei"},"content":"                        if (splitResponse[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"KJunWei"},"content":"                            workCompleted.set(number, true);","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"KJunWei"},"content":"                            System.out.println(reply(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"KJunWei"},"content":"                                    INDENTATION + EXTRA_INDENTATION + workTypeBox(workType.get(number)) + checkBox(true) + \" \" + work.get(number)));","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"KJunWei"},"content":"                        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"KJunWei"},"content":"                            workCompleted.set(number, false);","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"KJunWei"},"content":"                            System.out.println(reply(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"KJunWei"},"content":"                                    INDENTATION + EXTRA_INDENTATION + workTypeBox(workType.get(number)) + checkBox(false) + \" \" + work.get(number)));","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"KJunWei"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"KJunWei"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"non integer input when marking\");","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"KJunWei"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"index out of bounds\");","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"KJunWei"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"KJunWei"},"content":"                } else if (splitResponse.length \u003d\u003d 2 \u0026\u0026 keyword.equals(\"delete\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"KJunWei"},"content":"                    try {","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"KJunWei"},"content":"                        int location \u003d Integer.parseInt(splitResponse[1]) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"KJunWei"},"content":"                        Work_type type \u003d workType.get(location);","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"KJunWei"},"content":"                        boolean completed \u003d workCompleted.get(location);","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"KJunWei"},"content":"                        String task \u003d work.get(location);","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"KJunWei"},"content":"                        workType.remove(location);","lastModifiedDate":"2022-08-18"},{"lineNumber":146,"author":{"gitId":"KJunWei"},"content":"                        workCompleted.remove(location);","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"KJunWei"},"content":"                        work.remove(location);","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"KJunWei"},"content":"                        workCounter--;","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"KJunWei"},"content":"                        System.out.println(reply(\"Noted. I\u0027ve removed the task:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"KJunWei"},"content":"                                INDENTATION + EXTRA_INDENTATION + workTypeBox(type) + checkBox(completed) + \" \" + task + \"\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"KJunWei"},"content":"                                INDENTATION + \"Now you have \" + workCounter + (workCounter \u003c 2 ? \" task\" : \" tasks\") + \" in the list.\"));","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"KJunWei"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"non integer input when deleting\");","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"KJunWei"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":155,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"index out of bounds\");","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"KJunWei"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":157,"author":{"gitId":"KJunWei"},"content":"                } else if (keyword.equals(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"KJunWei"},"content":"                    if (splitResponse.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"todo\");","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"KJunWei"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"KJunWei"},"content":"                        String todo \u003d response.substring(5);","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"KJunWei"},"content":"                        work.add(todo);","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"KJunWei"},"content":"                        workType.add(Work_type.TODO);","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"KJunWei"},"content":"                        workCompleted.add(false);","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"KJunWei"},"content":"                        workCounter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"KJunWei"},"content":"                        System.out.println(reply(craftTDEMessage(Work_type.TODO, false, todo, workCounter)));","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"KJunWei"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"KJunWei"},"content":"                } else if (keyword.equals(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"KJunWei"},"content":"                    if (splitResponse.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"deadline\");","lastModifiedDate":"2022-08-18"},{"lineNumber":171,"author":{"gitId":"KJunWei"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":172,"author":{"gitId":"KJunWei"},"content":"                        String[] newSplit \u003d response.split(\" /by \");","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"KJunWei"},"content":"                        if (newSplit.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"KJunWei"},"content":"                            throw new DukeException(\"deadline format\");","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"KJunWei"},"content":"                        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"KJunWei"},"content":"                            String todo \u003d newSplit[0].substring(9);","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"KJunWei"},"content":"                            String by \u003d newSplit[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"KJunWei"},"content":"                            String newTodo \u003d todo + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"KJunWei"},"content":"                            work.add(newTodo);","lastModifiedDate":"2022-08-18"},{"lineNumber":180,"author":{"gitId":"KJunWei"},"content":"                            workType.add(Work_type.DEADLINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"KJunWei"},"content":"                            workCompleted.add(false);","lastModifiedDate":"2022-08-18"},{"lineNumber":182,"author":{"gitId":"KJunWei"},"content":"                            workCounter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"KJunWei"},"content":"                            System.out.println(reply(craftTDEMessage(Work_type.DEADLINE, false, newTodo, workCounter)));","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"KJunWei"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":185,"author":{"gitId":"KJunWei"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":186,"author":{"gitId":"KJunWei"},"content":"                } else if (keyword.equals(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"KJunWei"},"content":"                    if (splitResponse.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":188,"author":{"gitId":"KJunWei"},"content":"                        throw new DukeException(\"event\");","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"KJunWei"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":190,"author":{"gitId":"KJunWei"},"content":"                        String[] newSplit \u003d response.split(\" /at \");","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"KJunWei"},"content":"                        if (newSplit.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"KJunWei"},"content":"                            throw new DukeException(\"event format\");","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"KJunWei"},"content":"                        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":194,"author":{"gitId":"KJunWei"},"content":"                            String todo \u003d newSplit[0].substring(6);","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"KJunWei"},"content":"                            String at \u003d newSplit[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"KJunWei"},"content":"                            String newTodo \u003d todo + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":197,"author":{"gitId":"KJunWei"},"content":"                            work.add(newTodo);","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"KJunWei"},"content":"                            workType.add(Work_type.EVENT);","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"KJunWei"},"content":"                            workCompleted.add(false);","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"KJunWei"},"content":"                            workCounter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"KJunWei"},"content":"                            System.out.println(reply(craftTDEMessage(Work_type.EVENT, false, newTodo, workCounter)));","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"KJunWei"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"KJunWei"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":204,"author":{"gitId":"KJunWei"},"content":"                } else if (response.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"KJunWei"},"content":"                    System.out.println(reply(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"KJunWei"},"content":"                    conversation \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":207,"author":{"gitId":"KJunWei"},"content":"                } else if (response.equals(\"list\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":208,"author":{"gitId":"KJunWei"},"content":"                    System.out.println(reply(craftList(work, workCompleted, workType)));","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"KJunWei"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"KJunWei"},"content":"                    throw new DukeException(\"unknown\");","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"KJunWei"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":212,"author":{"gitId":"KJunWei"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":213,"author":{"gitId":"KJunWei"},"content":"                System.out.println(reply(e.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"KJunWei"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"KJunWei"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KJunWei":213,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KJunWei"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"KJunWei"},"content":" * Represents a DukeException class","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"KJunWei"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"KJunWei"},"content":" * @author Khor Jun Wei","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"KJunWei"},"content":" * @version CS2103T AY22/23 Sem 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"KJunWei"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KJunWei"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KJunWei"},"content":"     * Represents a message.","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"KJunWei"},"content":"    private String msg;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"KJunWei"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"KJunWei"},"content":"     * @param message message to determine the error","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"KJunWei"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"KJunWei"},"content":"        if (message.equals(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"deadline format\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! The formatting of the deadline message is wrong.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"event format\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! The formatting of the event message is wrong.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"unknown\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"non integer input when marking\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! You did not give an integer for the task number :-(\";","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"non integer input when deleting\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! You did not give an integer for the task number :-(\";","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"KJunWei"},"content":"        } else if (message.equals(\"index out of bounds\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"☹ OOPS!!! The index number is out of bounds :-(\";","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"KJunWei"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"KJunWei"},"content":"            this.msg \u003d \"unknown error\";","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"KJunWei"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"KJunWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"KJunWei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"KJunWei"},"content":"     * Represents the string format of the exception.","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"KJunWei"},"content":"     * @return string representing the exception","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"KJunWei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"KJunWei"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"KJunWei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"KJunWei"},"content":"        return msg;","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"KJunWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"KJunWei"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"KJunWei":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KJunWei"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"KJunWei"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"KJunWei"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"KJunWei"},"content":"todo cs2103t assignment","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"KJunWei"},"content":"deadline cs2109s ps0 /by the coming Sun 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"KJunWei"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KJunWei"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"KJunWei"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KJunWei"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"KJunWei"},"content":"unmark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"KJunWei"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KJunWei"},"content":"mark","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"KJunWei"},"content":"help","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"KJunWei"},"content":"mark apple","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"KJunWei"},"content":"mark 123","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KJunWei"},"content":"deadline sleep","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"KJunWei"},"content":"event sleep","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"KJunWei"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"KJunWei"},"content":"delete 123","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"KJunWei"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"KJunWei"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"KJunWei"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"KJunWei"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"KJunWei":23}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"    private static final String NO_ENDTIME_MESSAGE \u003d \"A Deadline-type Task must be provided with an ending time. Use the /by parameter to add a deadline.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"    protected String endTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    Deadline(String desc, String endTime) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        if (endTime \u003d\u003d null || endTime.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"            throw new DukeException(NO_ENDTIME_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    Deadline(String desc, String endTime, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        if (endTime \u003d\u003d null || endTime.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"            throw new DukeException(NO_ENDTIME_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.endTime);","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m TedBot ヾ(≧▽≦*)o\\n\"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"            + \"What do you want to do today?\";","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye! Hope to see you soon ༼- つ ◕_◕ ༽つ\";","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d \"Sorry, I don\u0027t know what that means.\\n\"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"            + \"Did you make a mistake? Please note that commands are case-sensitive.\";","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    private static final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /* Parses a command into an n x 2 array, where n is the number of","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"       parameters passed by the user. Parameters are seperated by a \"/\".","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"       Each parameter is then split into two, the parameter name, and","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"       the parameter\u0027s content.","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    private static String[][] parseCommand(String command) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        return Stream.of(command.trim().split(\"\\\\s+/\"))","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"                .map(s -\u003e s.split(\"\\\\s+\", 2))","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"                .map(arr -\u003e {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"                    if (arr.length \u003d\u003d 1) return new String[]{arr[0], null};","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"                    else return arr;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"                })","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"                .toArray(String[][]::new);","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"        Scanner sysIn \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        boolean exitCalled \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        while (!exitCalled) {","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"                String[][] userParams \u003d parseCommand(sysIn.nextLine());","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"                String commandName \u003d userParams[0][0];","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"                switch (commandName) {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"                    case \"list\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"                        String[] stringifiedTaskList \u003d taskList.toStringList();","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"                        System.out.println(\"Here are your tasks that I have recorded:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"                        if (stringifiedTaskList.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"                            System.out.println(\"Congratulations, you don\u0027t need to do anything right now!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"                        for (int i \u003d 0; i \u003c stringifiedTaskList.length; i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"                            System.out.printf(\"%02d. %s\\n\", i + 1, stringifiedTaskList[i]);","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"                    case \"bye\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"                        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"                        exitCalled \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"                    // TODO: A lot of code repetition for the next three pieces of code... Not sure how to resolve yet.","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"                    case \"todo\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"                        Todo newTodo \u003d new Todo(userParams[0][1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"                        taskList.addTask(newTodo);","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"                        System.out.printf(\"Gotcha! I added the following task to the list:\\n  %s\\nCurrently, I have %d tasks recorded\\n\", newTodo, taskList.getLength());","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"                    case \"deadline\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"                        String endTime \u003d null;","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"                        for (int i \u003d 1; i \u003c userParams.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"                            if (userParams[i][0].equals(\"by\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"                                endTime \u003d userParams[i][1];","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"                                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"                        Deadline newDeadline \u003d new Deadline(userParams[0][1], endTime);","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"                        taskList.addTask(newDeadline);","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"                        System.out.printf(\"Gotcha! I added the following task to the list:\\n  %s\\nCurrently, I have %d tasks recorded\\n\", newDeadline, taskList.getLength());","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"                    case \"event\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"                        String rangeTime \u003d null;","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"                        for (int i \u003d 1; i \u003c userParams.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"                            if (userParams[i][0].equals(\"at\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"                                rangeTime \u003d userParams[i][1];","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"                                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"                        Event newEvent \u003d new Event(userParams[0][1], rangeTime);","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"                        taskList.addTask(newEvent);","lastModifiedDate":"2022-08-16"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"                        System.out.printf(\"Gotcha! I added the following task to the list:\\n  %s\\nCurrently, I have %d tasks recorded\\n\", newEvent, taskList.getLength());","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"                    case \"mark\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"                        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"                            int markIndex \u003d Integer.parseInt(userParams[0][1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"                            if (taskList.getTask(markIndex).getIsDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"                                System.out.printf(\"Sorry, but it seems you have marked this task as done:\\n  %s\\n\", taskList.getTask(markIndex));","lastModifiedDate":"2022-08-16"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"                                taskList.getTask(markIndex).setDone(true);","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"                                System.out.printf(\"Noice! I\u0027ve marked this task as done:\\n  %s\\n\", taskList.getTask(markIndex));","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"                            if (userParams[0][1] \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an index value.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an integer value. \" + userParams[0][1] + \" is not an integer.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"                            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"                    case \"unmark\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"                        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"                            int unmarkIndex \u003d Integer.parseInt(userParams[0][1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"                            if (taskList.getTask(unmarkIndex).getIsDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"                                taskList.getTask(unmarkIndex).setDone(false);","lastModifiedDate":"2022-08-16"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"                                System.out.printf(\"Alright, I\u0027ve marked this task as not done:\\n  %s\\n\", taskList.getTask(unmarkIndex));","lastModifiedDate":"2022-08-16"},{"lineNumber":124,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"                                System.out.printf(\"Sorry, but it seems you haven\u0027t marked this task as done:\\n  %s\\n\", taskList.getTask(unmarkIndex));","lastModifiedDate":"2022-08-16"},{"lineNumber":126,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-15"},{"lineNumber":127,"author":{"gitId":"Berted"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"Berted"},"content":"                            if (userParams[0][1] \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an index value.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an integer value. \" + userParams[0][1] + \" is not an integer.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"Berted"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":134,"author":{"gitId":"Berted"},"content":"                            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":135,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":137,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"Berted"},"content":"                    case \"delete\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"Berted"},"content":"                        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"Berted"},"content":"                            int delIndex \u003d Integer.parseInt(userParams[0][1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"Berted"},"content":"                            Task delTask \u003d taskList.getTask(delIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"Berted"},"content":"                            taskList.deleteTask(delIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"Berted"},"content":"                            System.out.printf(\"Understood, I\u0027ve deleted the following task:\\n  %s\\nYou now have %d tasks remaining.\\n\", delTask, taskList.getLength());","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"Berted"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"Berted"},"content":"                            if (userParams[0][1] \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an index value.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an integer value. \" + userParams[0][1] + \" is not an integer.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"Berted"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"Berted"},"content":"                            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":154,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":156,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":157,"author":{"gitId":"Berted"},"content":"                    default: {","lastModifiedDate":"2022-08-16"},{"lineNumber":158,"author":{"gitId":"Berted"},"content":"                        throw new DukeException(UNKNOWN_COMMAND_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":159,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-14"},{"lineNumber":160,"author":{"gitId":"Berted"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":161,"author":{"gitId":"Berted"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"Berted"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"Berted"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"Berted"},"content":"                System.out.println(\"Undocumented exception: \" + e);","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"Berted"},"content":"                System.out.println(\"Please create an issue on our Github repository, along with the steps to recreate this exception.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":166,"author":{"gitId":"Berted"},"content":"                // Called just in case the exception seriously affects the app.","lastModifiedDate":"2022-08-17"},{"lineNumber":167,"author":{"gitId":"Berted"},"content":"                System.out.println(\"Terminating TedBot.....\");","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"Berted"},"content":"                exitCalled \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":167,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"        super(\"Uh-oh ☹! \" + message);","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    DukeException(String message, Throwable cause) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        super(\"Uh-oh ☹! \" + message, cause);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Berted":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"    private static final String NO_TIMERANGE_MESSAGE \u003d \"An Event-type Task must be provided with a time range. Use the /at parameter to add a time range.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"    protected String timeRange;","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    Event(String desc, String timeRange) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        if (timeRange \u003d\u003d null || timeRange.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Event.NO_TIMERANGE_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    Event(String desc, String timeRange, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        if (timeRange \u003d\u003d null || timeRange.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Event.NO_TIMERANGE_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.timeRange);","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"    private static final String NO_DESC_MESSAGE \u003d \"The description of a Task must not be empty.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"    protected String desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    public Task(String desc) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        if (desc \u003d\u003d null || desc.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Task.NO_DESC_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    public Task(String desc, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        if (desc \u003d\u003d null || desc.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Task.NO_DESC_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        return (this.isDone ? \"[✔]\" : \"[ ]\");","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        return this.getStatusIcon() + \" \" + this.desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"Berted":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    TaskList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    TaskList(Task... taskList) {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(Arrays.asList(taskList));","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    public String[] toStringList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        return this.taskList.stream()","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"                .map(Task::toString)","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"    public Todo(String desc) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    public Todo(String desc, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"unknown","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"todo CS2103T iP Level-4","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"deadline CS2105 HW /by Sunday, 21 August 2022","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"event NUS SoC Career Fair /at Wednesday, 12-5pm","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"deadline test","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"event testing","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"deadline testing test /by","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"event testing test /at","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"mark asda","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"unmark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"mark 5","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"unmark -1","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"delete 5","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"delete -1","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"delete ab","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"delete","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"delete 1","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"delete 2","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":36}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin -encoding utf8 ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Berted":2,"-":19}}]

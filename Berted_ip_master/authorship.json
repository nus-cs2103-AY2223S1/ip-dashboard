[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"# TedBot","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"\u003e \"Hello! I\u0027m TedBot „Éæ(‚âß‚ñΩ‚â¶*)o\"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"TedBot is a _simple_ chatbot made with Java. It:","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"* is text-based,","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"* stores all your tasks,","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"* is ~~fast~~ SUPER FAST!","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"To get started, simply:","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"1. Download the JAR file from [here](https://github.com/Berted/ip/releases) üëà","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"1. Run TedBot in your preferred terminal üë©‚Äçüíª","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"1. Add your tasks ‚úç","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"1. Let it store and handle your tasks for you üëç","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"Most importantly, it\u0027s **FREE**!","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"Features","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"- [x] Manages simple tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"- [x] Manages tasks with deadlines","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"- [x] Manages tasks with a start and end date","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"- [x] A GUI","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"- [ ] Reminders for deadlines and events (coming soon!)","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"For a more comprehensive explanation, feel free to visit the [project\u0027s webpage](https://berted.github.io/ip)!","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"If you\u0027re a Java programmer, you can use this codebase to help you practice Java. ","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"For example, here\u0027s an excerpt of our code, taken from the `Ui` class:","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"```java","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"private void outputString(String out, String header) {","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    String[] splitOut \u003d out.split(\"\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    System.out.print(header + \" \");","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    System.out.println(splitOut[0]);","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    for (int i \u003d 1; i \u003c splitOut.length; i++) {","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        for (int j \u003d 0; j \u003c header.length() + 1; j++) {","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"            System.out.print(\" \");","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        System.out.println(splitOut[i]);","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"## Background","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"TedBot is based on the [SE-Education\u0027s Duke](https://github.com/se-edu/duke) greenfield","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"Java project template. This project is an individual project created for the purposes ","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"of NUS CS2103T Software Engineering module.","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Berted":44,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"plugins {","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"repositories {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"dependencies {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"test {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    testLogging {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        showExceptions true","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        showCauses true","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"application {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"shadowJar {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"run {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":65}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"![UI Example](Ui.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"## About","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"TedBot is a simple **desktop chatbot app**, meant to help you keep track","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"of your day-to-day tasks. Designed with fast typers in mind, simply type","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"in your commands and TedBot will handle the rest.","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"### Command-based Interactions","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"As TedBot is originally designed for Command-Line Interfaces, interactions","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"with TedBot is strictly done through typing commands into the chatbot.","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"This allows fast typers to be more efficient at their work when compared to","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"GUI-based counterparts.","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"### Task List","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"TedBot keeps track of a list of tasks that it has recorded.","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"There are three types of tasks that are handled by TedBot:","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"1. Todo, these are tasks that do not have a set time associated with them.","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"2. Deadline, these are tasks that have a deadline date associated with them.","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"3. Event, these are tasks that have an associated start and ending dates.","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"### Local Storage","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"TedBot stores user data locally on the disk, so information such as","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"the task list persist between sessions. In addition, there\u0027s no need","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"to manually save, TedBot will automagically handle it for you!","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"### User Data Archival","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"TedBot allows users to archive their user data, such that tasks that are","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"no longer important to the user can be easily cleared away but still be","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"accessible if need-be.","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"## Quick-start Guide","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"1. Ensure you have Java `11` or above installed in your machine.","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"1. Download the latest Jar executable from [here](https://github.com/Berted/ip/releases).","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"1. Copy the executable to your preferred folder. Note that TedBot will store its data on that folder.","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"1. Refer to [Command Summary](#command-summary) for a list of commands you can try using, have fun!","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"### Notes","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"Some important notes regarding command format:","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"- Keywords written in capitalized snake case, such as `DESC` and `TASK_NUMBER`, represents arguments","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"  provided by the user.","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"- Keywords with a square bracket around them, such as `[/force]`, represents optional arguments that","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"  users can choose to omit.","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"- If users provide unknown arguments, TedBot will not throw an error. ","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"  However, such arguments are ignored.","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"### `todo` - Adds Todo Task","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"\u003e Format: `todo DESC`","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"Adds a Todo-type task named `DESC` to TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"- `todo Buy Groceries` will add a Todo-type task named **Buy Groceries** into","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"  TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"### `deadline` - Adds Deadline Task","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"\u003e Format: `deadline DESC /by YYYY-MM-DD`","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"Adds a Deadline-type task named `DESC` with its deadline at the specified","lastModifiedDate":"2022-09-11"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"`YYYY-MM-DD` date into TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"- `deadline Math Homework /by 2023-01-01` will add a Deadline-type task named","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"  **Math Homework** that is due on **January 1st, 2023** into TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"### `event` - Adds Event Task","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"\u003e Format: `event DESC /at YYYY-MM-DD [YYYY2-MM2-DD2]`","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"Adds an Event-type task named `DESC` that occurs on `YYYY-MM-DD` into TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"If the second date `YYYY2-MM2-DD2` is provided, the event will be recorded to occur in between those days.","lastModifiedDate":"2022-09-11"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"- `event Physics Exam /at 2023-01-01` will add an Event-type task named **Physics Exam** that occurs on","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"  **January 1st, 2023** into TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"- `event Career Fair /at 2022-08-16 2022-08-17` will add an Event-type task named **Career Fair**","lastModifiedDate":"2022-09-11"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"  that occurs from **August 16th, 2022** to **August 17th, 2022** into TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"### `list` - Lists Tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"\u003e Format: `list`","lastModifiedDate":"2022-09-11"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"Prints out the list of tasks recorded by TedBot.","lastModifiedDate":"2022-09-11"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"### `mark` - Marks Task as Completed","lastModifiedDate":"2022-09-11"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"\u003e Format: `mark TASK_NUMBER`","lastModifiedDate":"2022-09-11"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"Marks the task numbered `TASK_NUMBER` as completed.","lastModifiedDate":"2022-09-11"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"- `mark 3` will mark the **third** task in the list as completed.","lastModifiedDate":"2022-09-11"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"### `unmark` - Marks Task as Not Completed","lastModifiedDate":"2022-09-11"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"\u003e Format: `unmark TASK_NUMBER`","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"Marks the task numbered `TASK_NUMBER` as **not** completed.","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"- `unmark 2` will mark the **second** task in the list as not completed.","lastModifiedDate":"2022-09-11"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"### `delete` - Deletes Task","lastModifiedDate":"2022-09-11"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"\u003e Format: `delete TASK_NUMBER`","lastModifiedDate":"2022-09-11"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"Deletes the task numbered `TASK_NUMBER` from TedBot\u0027s task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":124,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"- `delete 1` will delete the **first** task from the task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":126,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":127,"author":{"gitId":"Berted"},"content":"### `find` - Finds Tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":128,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":129,"author":{"gitId":"Berted"},"content":"\u003e Format: `find KEYWORD`","lastModifiedDate":"2022-09-11"},{"lineNumber":130,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":131,"author":{"gitId":"Berted"},"content":"Finds all tasks in TedBot\u0027s task list that contains the provided `KEYWORD` in its description.","lastModifiedDate":"2022-09-11"},{"lineNumber":132,"author":{"gitId":"Berted"},"content":"It should be noted that `KEYWORD` is **case-sensitive**.","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":134,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":135,"author":{"gitId":"Berted"},"content":"- For the following examples, let\u0027s assume TedBot\u0027s task list currently contains **2103 Project**, **2101 Reflection**,","lastModifiedDate":"2022-09-11"},{"lineNumber":136,"author":{"gitId":"Berted"},"content":"  **1231 Assignment**, and **3216 Project**.","lastModifiedDate":"2022-09-11"},{"lineNumber":137,"author":{"gitId":"Berted"},"content":"- `find 210` will return **2103 Project** and **2101 Reflection**.","lastModifiedDate":"2022-09-11"},{"lineNumber":138,"author":{"gitId":"Berted"},"content":"- `find Project` will return **2103 Project** and **3216 Project**.","lastModifiedDate":"2022-09-11"},{"lineNumber":139,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":140,"author":{"gitId":"Berted"},"content":"### `archive` - Archives Task List","lastModifiedDate":"2022-09-11"},{"lineNumber":141,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":142,"author":{"gitId":"Berted"},"content":"\u003e Format: `archive [PATH] [/force]`","lastModifiedDate":"2022-09-11"},{"lineNumber":143,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":144,"author":{"gitId":"Berted"},"content":"Archives the current task list into the provided `PATH` as a text file and clears the task list afterwards.","lastModifiedDate":"2022-09-11"},{"lineNumber":145,"author":{"gitId":"Berted"},"content":"It should be noted that the provided `PATH` should be relative to the location of the executable.","lastModifiedDate":"2022-09-11"},{"lineNumber":146,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":147,"author":{"gitId":"Berted"},"content":"If `PATH` is not provided, the task list will be archived into `data/archive.txt` by default.","lastModifiedDate":"2022-09-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"Berted"},"content":"If there exists a file at the specified `PATH`, the task list will not be archived into `PATH` to prevent","lastModifiedDate":"2022-09-11"},{"lineNumber":150,"author":{"gitId":"Berted"},"content":"accidental overwrites. This behaviour can be overriden by adding the `/force` flag.","lastModifiedDate":"2022-09-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"Berted"},"content":"Example:","lastModifiedDate":"2022-09-11"},{"lineNumber":153,"author":{"gitId":"Berted"},"content":"- `archive` will store the current task list at `data/archive.txt` and clear the task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":154,"author":{"gitId":"Berted"},"content":"- `archive /force` will store the current task list at `data/archive.txt` and clear the task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":155,"author":{"gitId":"Berted"},"content":"  Contents of `data/archive.txt` file will be overwritten if it exists.","lastModifiedDate":"2022-09-11"},{"lineNumber":156,"author":{"gitId":"Berted"},"content":"- `archive save/backup1.bak` will store the current task list at `save/backup1.bak` and clear the task list.","lastModifiedDate":"2022-09-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"Berted"},"content":"### `bye` - Stops Chatbot Session","lastModifiedDate":"2022-09-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"Berted"},"content":"\u003e Format: `bye`","lastModifiedDate":"2022-09-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"Berted"},"content":"Terminates the Chatbot session. Note that the chatbot window is **not** automatically closed.","lastModifiedDate":"2022-09-11"},{"lineNumber":163,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":164,"author":{"gitId":"Berted"},"content":"### Pure CLI Experience","lastModifiedDate":"2022-09-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":166,"author":{"gitId":"Berted"},"content":"More experienced users may also decide to use a command-line interface in their preferred terminal.","lastModifiedDate":"2022-09-15"},{"lineNumber":167,"author":{"gitId":"Berted"},"content":"To do so, simply navigate to the directory where TedBot\u0027s executable is located and type in","lastModifiedDate":"2022-09-15"},{"lineNumber":168,"author":{"gitId":"Berted"},"content":"`java -jar TedBot.jar cli` to the terminal.","lastModifiedDate":"2022-09-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":170,"author":{"gitId":"Berted"},"content":"## Command Summary","lastModifiedDate":"2022-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":172,"author":{"gitId":"Berted"},"content":"| Command                                     | Function                       |","lastModifiedDate":"2022-09-14"},{"lineNumber":173,"author":{"gitId":"Berted"},"content":"|---------------------------------------------|--------------------------------|","lastModifiedDate":"2022-09-14"},{"lineNumber":174,"author":{"gitId":"Berted"},"content":"| `todo DESC`                                 | Add a Todo task                |","lastModifiedDate":"2022-09-14"},{"lineNumber":175,"author":{"gitId":"Berted"},"content":"| `deadline DESC /by YYYY-MM-DD`              | Add Deadline task              |","lastModifiedDate":"2022-09-14"},{"lineNumber":176,"author":{"gitId":"Berted"},"content":" | `event DESC /at YYYY-MM-DD [YYYY2-MM2-DD2]` | Add Event task                 |","lastModifiedDate":"2022-09-14"},{"lineNumber":177,"author":{"gitId":"Berted"},"content":" | `list`                                      | List tasks                     |","lastModifiedDate":"2022-09-14"},{"lineNumber":178,"author":{"gitId":"Berted"},"content":" | `mark TASK_NUMBER`                          | Mark task as completed         |","lastModifiedDate":"2022-09-14"},{"lineNumber":179,"author":{"gitId":"Berted"},"content":" | `unmark TASK_NUMBER`                        | Mark task as not completed     |","lastModifiedDate":"2022-09-14"},{"lineNumber":180,"author":{"gitId":"Berted"},"content":" | `delete TASK_NUMBER`                        | Delete task                    |","lastModifiedDate":"2022-09-14"},{"lineNumber":181,"author":{"gitId":"Berted"},"content":" | `find KEYWORD`                              | Find task by provided keyword  |","lastModifiedDate":"2022-09-14"},{"lineNumber":182,"author":{"gitId":"Berted"},"content":" | `archive [PATH] [/force]`                   | Archive task list              |","lastModifiedDate":"2022-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":184,"author":{"gitId":"Berted"},"content":"## Troubleshooting","lastModifiedDate":"2022-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":186,"author":{"gitId":"Berted"},"content":"- If you encounter issues regarding characters not being displayed correctly, you may try the following command in your ","lastModifiedDate":"2022-09-15"},{"lineNumber":187,"author":{"gitId":"Berted"},"content":"  preferred terminal: `java -Dfile.encoding\u003dUTF-8 -jar TedBot.jar`.","lastModifiedDate":"2022-09-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Berted":164,"-":24}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"goto fail","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"goto fail","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":":init","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":":win9xME_args","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":":execute","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":":end","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":":fail","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"exit /b 1","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":":mainEnd","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":":omega","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.io.StringWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":" * Encapsulates a Duke chatbot instance.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    private StringWriter stringWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    private boolean hasTerminated;","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * Constructs a Duke chatbot instance.","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @param filePath the specified file path parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        stringWriter \u003d new StringWriter();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        ui \u003d new Ui(stringWriter);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        hasTerminated \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     * Returns the String stored in the output buffer and clears the output buffer afterwards.","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"     * @return a String.","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    private String readOutput() {","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        String returnValue \u003d stringWriter.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"        stringWriter.getBuffer().setLength(0);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        return returnValue;","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"     * Initializes the chatbot by loading the TaskList stored in","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"     * the file pointed by Storage. Then prints out a welcome message.","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"     * @return The chatbot\u0027s feedback during initialization.","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"     * @throws IllegalStateException if this chatbot has been initialized.","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    public String init() {","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"            throw new IllegalStateException(\"init method called to an initialized Duke object\");","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"            ui.showStorageLoadingMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"            ui.showReply(String.format(\"Save file loaded. You currently have %d tasks.\\n\", taskList.getLength()));","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"            ui.showException(e);","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        return readOutput();","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"     * Parses and executes the provided user command and returns","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"     * a String containing Duke\u0027s feedback.","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"     * @param userCommand the provided user command.","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"     * @return The chatbot\u0027s feedback during command execution.","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"     * @throws IllegalStateException if this chatbot has not been initialized or has been terminated.","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"    public String execCommand(String userCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"        if (taskList \u003d\u003d null) {","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"            throw new IllegalStateException(\"An uninitialized Duke object can\u0027t execute commands\");","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"        } else if (this.isTerminated()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"            throw new IllegalStateException(\"A terminated Duke object can\u0027t execute commands\");","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"            Command runCommand \u003d Parser.parse(userCommand);","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"            runCommand.exec(taskList, ui, storage);","lastModifiedDate":"2022-09-06"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"            hasTerminated \u003d runCommand.isTerminator();","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"            ui.showException(e);","lastModifiedDate":"2022-09-06"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"        return readOutput();","lastModifiedDate":"2022-09-06"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"     * Returns true if and only if this Duke chatbot has terminated, i.e.","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"     * by calling a terminating Command.","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"     * @return true if and only if this chatbot has terminated.","lastModifiedDate":"2022-09-06"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-09-06"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"        return hasTerminated;","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"     * Runs Duke on the terminal.","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"     * @param args The provided arguments.","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"        Duke duke \u003d new Duke(\"data/save.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"        System.out.println(duke.init());","lastModifiedDate":"2022-09-06"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"        while (!duke.isTerminated()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"            System.out.print(\"\u003c\u003c \");","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"            String userCommand \u003d sc.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"            System.out.println(duke.execCommand(userCommand));","lastModifiedDate":"2022-09-06"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":122,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":" * Encapsulates Exceptions encountered throughout","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":" * the runtime of Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":" * Note that DukeException is a high-level exception and","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":" * the detail message will be displayed to end users.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"     * Constructs DukeException with the specified detail message.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"     * @param message The detail message","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     * Constructs DukeException with the specified detail message and cause.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     * @param message The detail message","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * @param cause The cause","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"        super(message, cause);","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Berted":30}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"        if (args.length \u003e\u003d 1 \u0026\u0026 args[0].equals(\"cli\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"            Duke.main(args);","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Berted":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private Duke duke \u003d new Duke(\"data/save.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //@@author Berted-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // with modifications.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            stage.setTitle(\"TedBot\");","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Berted":15,"-":18}},{"path":"src/main/java/duke/command/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.io.File;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" * Archives the current task list into a file and clears it afterwards.","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"archive\";","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    private File file;","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    private boolean canOverwrite;","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     * Constructs an ArchiveCommand that stores into data/archive.txt and","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * is not allowed to overwrite the file if it exists.","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    public ArchiveCommand() {","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        file \u003d new File(\"data/archive.txt\");","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        canOverwrite \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * Constructs an ArchiveCommand that stores into data/archive.txt with a","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * boolean indicating whether it is allowed to overwrite the file or not.","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     * @param canOverwrite if true, file can be overwritten if it exists.","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    public ArchiveCommand(boolean canOverwrite) {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        file \u003d new File(\"data/archive.txt\");","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        this.canOverwrite \u003d canOverwrite;","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"     * Constructs an ArchiveCommand that stores into the specified file path with a","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"     * boolean indicating whether it is allowed to overwrite the file or not.","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"     * @param filePath the file path to archive the task list to.","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"     * @param canOverwrite if true, file can be overwritten if it exists.","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    public ArchiveCommand(String filePath, boolean canOverwrite) {","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"        this.canOverwrite \u003d canOverwrite;","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"     * Archives the specified TaskList object into a file. Afterwards, it clears","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"     * the task list from the specified Storage object.","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList.","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"     * @param ui the Ui where Duke\u0027s responses are recorded.","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage.","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"        if (file.exists() \u0026\u0026 !canOverwrite) {","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"            throw new DukeException(String.format(\"There exists a file in %s.\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"                    + \"If you\u0027d like to overwrite this file, please add \\\"/force\\\" to the command\", file.getPath()));","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"        Storage archiveStorage \u003d new Storage(file);","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"        archiveStorage.save(tasks);","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"        tasks.clear();","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"        ui.showReply(","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"                String.format(\"Your tasks are now archived in %s. The tasklist have been cleared.\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"                        + \"To recover the archived tasklist, you may copy the archived file to %s and restart Duke.\",","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"                        file.getPath(), storage.getFilePath()));","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"Berted":83}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" * This command terminates Duke when executed with a goodbye message.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    /** The keyword to run FindCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"bye\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Sole constructor of ByeCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * Displays a goodbye message to the specified Ui parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     * Returns true as ByeCommand is a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * @return true.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * This abstract class provides the skeletal implementation of a user command","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * and should be the superclass of all user commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Executes this Command with the specified TaskList, Ui, and Storage parameters.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if an Exception occurs during its execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    public abstract void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * Returns true if and only if this Command is a terminating Command, i.e.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * after executing the command, the application should exit cleanly.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"     * @return true if and only if this Command is a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    public abstract boolean isTerminator();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":31}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":" * This command encapsulates a Deadline object and inserts it into","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":" * the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"public class DeadlineCommand extends TaskCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    /** The keyword to run DeadlineCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"deadline\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Constructs a DeadlineCommand object encapsulating the specified parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"     * @param newDeadline the specified Deadline parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    public DeadlineCommand(Deadline newDeadline) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        super(newDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * This command encapsulates an index value and deletes","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" * the Task at the encapsulated index in the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    /** The keyword to run DeleteCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"delete\";","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    private final int delIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     * Constructs a DeleteCommand object encapsulating the specified index value.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     * @param delIndex The index of the Task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    public DeleteCommand(int delIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        this.delIndex \u003d delIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * Deletes the Task at the encapsulated index in the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     * In addition, the appropriate response will be sent to the specified Ui parameter","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     * and the specified Storage parameter will also be updated with the new TaskList values.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if the provided index value is out-of-bounds,","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"     *     or if tasks are unable to be saved into Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"            Task delTask \u003d tasks.getTask(this.delIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            tasks.deleteTask(this.delIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"            ui.showReply(String.format(\"Understood, I\u0027ve deleted the following task:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"                    + \"  %s\\nYou now have %d tasks remaining.\\n\", delTask, tasks.getLength()));","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"     * Returns false as DeleteCommand is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":63}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":" * This command encapsulates an Event object and inserts it into","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":" * the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"public class EventCommand extends TaskCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    /** The keyword to run EventCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"event\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Constructs a EventCommand object encapsulating the specified parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"     * @param newEvent the specified Event parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    public EventCommand(Event newEvent) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        super(newEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * Finds Tasks in a TaskList provided a given keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    /** The keyword to run FindCommand */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"find\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"     * Constructs a FindCommand instance with the provided keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"     * @param keyword keyword to be searched.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if the keyword is an empty String or null.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public FindCommand(String keyword) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        if (keyword \u003d\u003d null || keyword.equals(\"\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"Please give me a keyword so I can find the tasks you want!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * Searches through the provided TaskList with its keyword and passes the results","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     * to UI.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     * @param tasks the TaskList to be searched through.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * @param ui the Ui where results are passed to.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * @param storage unused for FindCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        TaskList filteredTasks \u003d tasks.filter((task) -\u003e task.hasSubstring(this.keyword));","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        String[] stringifiedTaskList \u003d filteredTasks.toStringList();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        reply.append(\"Here are the matching tasks I have found:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"        if (stringifiedTaskList.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"            reply.append(\"\\nNo tasks of the sort found.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"        for (int i \u003d 0; i \u003c stringifiedTaskList.length; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"            reply.append(String.format(\"\\n%02d. %s\", i + 1, stringifiedTaskList[i]));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"        ui.showReply(reply.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"     * Returns false as Find is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Berted":60}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" * This command lists out all the tasks in the user\u0027s TaskList when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    /** The keyword to run ListCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     * Sole constructor of ListCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     * Displays all tasks in the specified TaskList parameter to","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * the specified Ui parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"        String[] stringifiedTaskList \u003d tasks.toStringList();","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        reply.append(\"Here are your tasks that I have recorded:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        if (stringifiedTaskList.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"            reply.append(\"\\nCongratulations, you don\u0027t need to do anything right now!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        for (int i \u003d 0; i \u003c stringifiedTaskList.length; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"            reply.append(String.format(\"\\n%02d. %s\", i + 1, stringifiedTaskList[i]));","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        ui.showReply(reply.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"     * Returns false as ListCommand is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":53}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * This command encapsulates an index value and marks the Task as completed","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * at the encapsulated index in the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /** The keyword to run MarkCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"mark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    private final int markIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"     * Constructs a MarkCommand object encapsulating the specified index value.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * @param markIndex The index of the Task to be marked as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    public MarkCommand(int markIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     * Marks the Task as completed at the encapsulated index in the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * In addition, the appropriate response will be sent to the specified Ui parameter","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     * and the specified Storage parameter will also be updated with the new TaskList values.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if the provided index value is out-of-bounds,","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     *     or if tasks are unable to be saved into Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"            if (tasks.getTask(this.markIndex).getIsDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"                ui.showReply(String.format(\"Sorry, but it seems you have marked this task as done:\\n  %s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"                        tasks.getTask(markIndex)));","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"                tasks.getTask(this.markIndex).setDone(true);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"                ui.showReply(String.format(\"Noice! I\u0027ve marked this task as done:\\n  %s\", tasks.getTask(markIndex)));","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"     * Returns false as MarkCommand is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":65}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * This (abstract) command encapsulates a Task object and inserts it into","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" * the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":" * This abstract class provides the skeletal implementation of a \"create new Task\"-type command","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":" * and should be the superclass of all \"create new Task\"-type commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    private final Task newTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     * Constructs TaskCommand with the specified Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     * @param newTask the specified Task parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    public TaskCommand(Task newTask) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * Inserts the Task encapsulated by this onto the specified TaskList parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     * In addition, the appropriate response will be sent to the specified Ui parameter","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     * and the specified Storage parameter will also be updated with the new TaskList values.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if tasks are unable to be saved into Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"        ui.showReply(String.format(\"Gotcha! I added the following task to the list:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"                        + \"  %s\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"                        + \"Currently, I have %d tasks recorded\",","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"                newTask, tasks.getLength()));","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"     * Returns false as TaskCommand is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":59}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":" * This command encapsulates a Todo object and inserts it into","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":" * the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"public class TodoCommand extends TaskCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    /** The keyword to run TodoCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"todo\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Constructs a TodoCommand object encapsulating the specified parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"     * @param newTodo the specified Todo parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    public TodoCommand(Todo newTodo) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        super(newTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":22}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * This command is to be executed when the user enters","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * an unknown command keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Sole constructor of UnknownCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    public UnknownCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * Throws a DukeException as the user has given an unknown command keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     * @throws DukeException always thrown.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        throw new DukeException(\"Sorry, I don\u0027t know what that means.\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"                + \"Did you make a mistake? Please note that commands are case-sensitive.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * Returns false as this is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":42}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * This command encapsulates an index value and marks the Task as not completed","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * at the encapsulated index in the task list when executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /** The keyword to run UnmarkCommand. */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    public static final String COMMAND_NAME \u003d \"unmark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    private final int unmarkIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"     * Constructs an UnmarkCommand object encapsulating the specified index value.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"     * @param unmarkIndex The index of the Task to be marked as not completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public UnmarkCommand(int unmarkIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        this.unmarkIndex \u003d unmarkIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"     * Marks the Task as completed at the encapsulated index in the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * In addition, the appropriate response will be sent to the specified Ui parameter","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * and the specified Storage parameter will also be updated with the new TaskList values.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     * @param tasks the specified TaskList object.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if the provided index value is out-of-bounds,","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     *     or if tasks are unable to be saved into Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"            if (tasks.getTask(this.unmarkIndex).getIsDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"                tasks.getTask(this.unmarkIndex).setDone(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"                ui.showReply(String.format(\"Alright, I\u0027ve marked this task as not done:\\n  %s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"                        tasks.getTask(this.unmarkIndex)));","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"                ui.showReply(String.format(\"Sorry, but it seems you haven\u0027t marked this task as done:\\n  %s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"                        tasks.getTask(this.unmarkIndex)));","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"     * Returns false as UnmarkCommand is not a terminating Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"     * @return false.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"    public boolean isTerminator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":65}},{"path":"src/main/java/duke/parser/Argument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":" * This class encapsulates user arguments. Each argument consists","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":" * of two components, a name, along with body text.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"public class Argument {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    private final String name;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    private final String body;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"     * Constructs an Argument class with the specified name parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"     * The body text of this argument will be null.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * @param name the specified name parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    public Argument(String name) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        this.body \u003d \"\";","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     * Constructs an Argument class with the specified name and body text parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * @param name the specified name parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @param body the specified body text parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    public Argument(String name, String body) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        this.body \u003d body;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    public String getName() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        return this.name;","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"    public String getBody() {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        return this.body;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"     * Returns a String representation of the user argument.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"     * @return a String.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        return String.format(\"Argument %s: %s\", this.name, this.body);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":50}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.command.ArchiveCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":" * This class handles parsing of user commands to Command objects.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"     * Parses the specified String parameter into a Command object.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * @param command the String to be parsed.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * @return Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if command is malformed.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        Argument[] args \u003d processArgs(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        String commandName \u003d args[0].getName();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        switch (commandName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        case ListCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        case ByeCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        case TodoCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"            return new TodoCommand(new Todo(args[0].getBody()));","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"        case DeadlineCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"            return parseDeadlineArgs(args);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"        case EventCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"            return parseEventArgs(args);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"        case MarkCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"            return new MarkCommand(parseIndex(args[0].getBody()));","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        case UnmarkCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"            return new UnmarkCommand(parseIndex(args[0].getBody()));","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"        case DeleteCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"            return new DeleteCommand(parseIndex(args[0].getBody()));","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"        case FindCommand.COMMAND_NAME: {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"            return new FindCommand(args[0].getBody());","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"        case ArchiveCommand.COMMAND_NAME: {","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"            return parseArchiveArgs(args);","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"        default: {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"            return new UnknownCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"     * Parses a command into an array of Arguments.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"     * A command is seperated into Arguments by \"{@literal \u003cwhitespace\u003e}/\".","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"     * Each Argument is then seperated into two Strings, the name and its body,","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"     * using whitespace.","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"     * @return an array of Arguments.","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"    private static Argument[] processArgs(String command) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"        return Stream.of(command.trim().split(\"\\\\s+/\"))","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"                .map(s -\u003e s.split(\"\\\\s+\", 2))","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"                .map(arr -\u003e {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"                    if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"                        return new Argument(arr[0]);","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"                    } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"                        assert arr.length \u003d\u003d 2 : \"Argument array doesn\u0027t have the expected array length of two\";","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"                        return new Argument(arr[0], arr[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"                })","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"                .toArray(Argument[]::new);","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"     * Parses the specified String parameter as an index value.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"     * @param idx the specified String parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"     * @return an int value.","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if idx is not a positive integer.","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"    private static int parseIndex(String idx) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"            int indexValue \u003d Integer.parseInt(idx) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"            if (indexValue \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"                throw new DukeException(\"You must pass a positive integer value. \"","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"Berted"},"content":"                        + idx + \" is a non-positive integer value.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"Berted"},"content":"            return indexValue;","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"Berted"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"Berted"},"content":"            if (idx \u003d\u003d null || idx.equals(\"\")) {","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"Berted"},"content":"                throw new DukeException(\"You must pass an index value.\", e);","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"Berted"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"Berted"},"content":"                throw new DukeException(\"You must pass an integer value. \" + idx + \" is not an integer.\", e);","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"Berted"},"content":"    private static String getArgBody(Argument[] args, String argumentName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"Berted"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"Berted"},"content":"            if (args[i].getName().equals(argumentName)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"Berted"},"content":"                return args[i].getBody();","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"Berted"},"content":"        return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"Berted"},"content":"    private static EventCommand parseEventArgs(Argument[] args) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"Berted"},"content":"        String atParam \u003d getArgBody(args, \"at\");","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"Berted"},"content":"        return new EventCommand(new Event(args[0].getBody(), atParam));","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"Berted"},"content":"    private static DeadlineCommand parseDeadlineArgs(Argument[] args) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"Berted"},"content":"        String byParam \u003d getArgBody(args, \"by\");","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"Berted"},"content":"        return new DeadlineCommand(new Deadline(args[0].getBody(), byParam));","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"Berted"},"content":"    private static ArchiveCommand parseArchiveArgs(Argument[] args) {","lastModifiedDate":"2022-09-06"},{"lineNumber":156,"author":{"gitId":"Berted"},"content":"        String forceParam \u003d getArgBody(args, \"force\");","lastModifiedDate":"2022-09-06"},{"lineNumber":157,"author":{"gitId":"Berted"},"content":"        if (args[0].getBody() !\u003d null \u0026\u0026 !args[0].getBody().equals(\"\")) {","lastModifiedDate":"2022-09-06"},{"lineNumber":158,"author":{"gitId":"Berted"},"content":"            return new ArchiveCommand(args[0].getBody(), forceParam !\u003d null);","lastModifiedDate":"2022-09-06"},{"lineNumber":159,"author":{"gitId":"Berted"},"content":"        } else {","lastModifiedDate":"2022-09-06"},{"lineNumber":160,"author":{"gitId":"Berted"},"content":"            return new ArchiveCommand(forceParam !\u003d null);","lastModifiedDate":"2022-09-06"},{"lineNumber":161,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":162,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":163,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":164,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":164}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":" * This class handles the storage of user data into a file.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    private final File saveFile;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * Constructs Storage with a specified File for Storage to access.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @param saveFile the specified File.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    public Storage(File saveFile) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     * Constructs Storage with a specified file path for Storage to access.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"     * @param filePath the specified file path.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        this.saveFile \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"     * Loads tasks from the encapsulated File onto a TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"     * @return TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if unable to read from the encapsulated File.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"            Scanner sc \u003d new Scanner(this.saveFile);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"            TaskList ret \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"                ret.addTask(parseTaskString(sc.nextLine()));","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"            return ret;","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"                this.saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"                this.saveFile.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"                throw new DukeException(String.format(\"No save file found. A new save file is generated at %s.\",","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"                        this.saveFile.getPath()));","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"            } catch (IOException e1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"                throw new DukeException(String.format(\"Unable to create save-file at %s.\", this.saveFile.getPath()),","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"                        e1);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"            } catch (SecurityException e2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"                        String.format(\"Write access denied to save file. Please make sure TedBot has access to %s.\",","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"                                this.saveFile.getPath()), e2);","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"    private Task parseTaskString(String taskString) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"        String[] curTask \u003d taskString.split(\" / \");","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"        // Task type saved in the third parameter","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"        switch (curTask[2]) {","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"        case \"T\":","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"            return new Todo(curTask[0], curTask[1].equals(\"true\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"        case \"D\":","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"            return new Deadline(curTask[0], curTask[3], curTask[1].equals(\"true\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"        case \"E\":","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"            return new Event(curTask[0], curTask[3], curTask[1].equals(\"true\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"Save file data is corrupted or malformed. Save file will be ignored.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"     * Stores tasks from the specified TaskList parameter to the encapsulated File.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"     * @param taskList the specified TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if unable to write to the encapsulated File.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"            for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"                fw.write(taskList.getTask(i).toStorageString() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"            fw.flush();","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"            throw new DukeException(","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"                    String.format(\"Unable to write to save file at %s. Last change was not added to savefile.\",","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"                            this.saveFile.getPath()), e);","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"     * Returns the file path of the save file for this Storage object.","lastModifiedDate":"2022-09-06"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"     * @return the file path.","lastModifiedDate":"2022-09-06"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"    public String getFilePath() {","lastModifiedDate":"2022-09-06"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"        return saveFile.getPath();","lastModifiedDate":"2022-09-06"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Berted":116}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * This class encapsulates a task with a deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private static final String NO_ENDTIME_MESSAGE \u003d \"A Deadline-type Task must be provided with an ending time.\"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"            + \" Use the /by parameter to add a deadline.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Please provide me a valid date in the following format:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"            + \"YYYY-MM-DD\\ni.e. 29th February 2000 is 2000-02-29\";","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    /** The deadline of this task. */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * Constructs a not completed Deadline with the specified description and deadline parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * @param desc the description of this Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * @param endTime the deadline of this Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if desc is null or empty, or if the deadline was unable to be parsed into a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    public Deadline(String desc, String endTime) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        if (endTime \u003d\u003d null || endTime.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"            throw new DukeException(NO_ENDTIME_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"            this.endDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE, e);","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"     * Constructs a Deadline with the specified description, deadline, and state of completion parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"     * @param desc the description of this Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"     * @param endTime the deadline of this Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"     * @param isDone the state of completion of this Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if desc is null or empty, or if the deadline was unable to be parsed into a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    public Deadline(String desc, String endTime, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        if (endTime \u003d\u003d null || endTime.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"            throw new DukeException(NO_ENDTIME_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"            this.endDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE, e);","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMMM yyyy\");","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.endDate.format(formatter));","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / D / %s\", super.toStorageString(), this.endDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * This class encapsulates a task with a start time and end time.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private static final String NO_TIMERANGE_MESSAGE \u003d \"An Event-type Task must be provided with a time range.\"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"            + \" Use the /at parameter to add a time range.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Please provide me valid date(s) in the following format:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"            + \"  YYYY1-MM1-DD1 YYYY2-MM2-DD2\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"            + \"i.e. 29th February 2000 to 2nd March 2000 is 2000-02-29 2000-03-02.\"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"            + \" You can provide only one date if you choose.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATERANGE_MESSAGE \u003d \"The second date is prior to the first date.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    /** The starting date of this task. */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    /** The ending date of this task. */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"     * Constructs a not completed Event with the specified description and time range parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     * @param desc the description of this Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * @param timeRange the time range of this Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if desc is null or empty, or if the time range was unable to be parsed into a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    public Event(String desc, String timeRange) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        if (timeRange \u003d\u003d null || timeRange.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Event.NO_TIMERANGE_MESSAGE);","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        parseTimeRange(timeRange);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"     * Constructs an Event with the specified description, time range, and state of completion parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"     * @param desc the description of this Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"     * @param timeRange the time range of this Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"     * @param isDone the state of completion of this Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if desc is null or empty, or if the time range was unable to be parsed into a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    public Event(String desc, String timeRange, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"        if (timeRange \u003d\u003d null || timeRange.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Event.NO_TIMERANGE_MESSAGE);","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"        parseTimeRange(timeRange);","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"    private void parseTimeRange(String timeRange) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"        String[] splitTimeRange \u003d timeRange.split(\"\\\\s+\");","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"        if (splitTimeRange.length \u003e 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"            this.startTime \u003d LocalDate.parse(splitTimeRange[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"            if (splitTimeRange.length \u003e 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"                this.endTime \u003d LocalDate.parse(splitTimeRange[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"                this.endTime \u003d this.startTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"        if (this.endTime.compareTo(this.startTime) \u003c 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATERANGE_MESSAGE);","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMMM yyyy\");","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"        if (this.startTime.equals(this.endTime)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), this.startTime.format(formatter));","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"            return String.format(\"[E]%s (at: %s - %s)\", super.toString(), this.startTime.format(formatter),","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"                    this.endTime.format((formatter)));","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / E / %s %s\", super.toStorageString(), this.startTime, this.endTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":95}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":" * This (abstract) class encapsulates a user task, consisting of the Task description and","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":" * its state of completion.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * This abstract class provides the skeletal implementation of a user task","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" * and should be the superclass of all user tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private static final String NO_DESC_MESSAGE \u003d \"The description of a Task must not be empty.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    /** A description of the user task. */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    protected String desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    /** The state of completion of the user task. */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * Constructs a not completed Task with the specified description parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     * @param desc the specified String parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if desc is null or an empty string.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    public Task(String desc) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"        if (desc \u003d\u003d null || desc.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Task.NO_DESC_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"     * Constructs a Task with the specified description parameter and completion","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"     * state parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"     * @param desc the specified task description parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"     * @param isDone the state of completion of this Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"     * @throws DukeException if desc is null or an empty string.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    public Task(String desc, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        if (desc \u003d\u003d null || desc.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Task.NO_DESC_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"     * Returns the String representation of the completion state of this Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"     * @return a String.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"        return (this.isDone ? \"[‚úî]\" : \"[ ]\");","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"     * Sets the completion state of this task with the specified Boolean parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"     * @param isDone the specified Boolean parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"     * Gets the completion state of this Task, represented as a boolean.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"     * @return true if and only if this Task is complete.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"     * Returns a String representation of this Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"     * @return a String.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"        return this.getStatusIcon() + \" \" + this.desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"     * Returns a String representation of this Task, to be used for file storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"     * @return a String.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / %s\", this.desc, this.isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"     * Returns true if and only if the provided keyword exists as a substring in the Task description.","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"     * @param keyword the substring to search for","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"     * @return true if the Task description contains keyword, false otherwise","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"    public boolean hasSubstring(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"        return this.desc.contains(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"Berted":107}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":" * This class encapsulates a list of Task-s along with its associated operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"     * Constructs a TaskList with the provided array of Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    public TaskList(Task... taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(Arrays.asList(taskList));","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"     * Adds the specified Task onto this TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"     * @param task the specified Task parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"     * Deletes the Task at the specified index from this TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"     * @param index the specified index parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"     * Clears this TaskList.","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    public void clear() {","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"        taskList.clear();","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"     * Returns an array of String, containing the String representation","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"     * of each Task in this TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"     * @return a String[].","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    public String[] toStringList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"        return taskList.stream()","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"                .map(Task::toString)","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"     * Returns the length of the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"     * @return length of the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"        return taskList.size();","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"     * Returns the Task at the specified index in this TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"     * @param index the specified index parameter.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"     * @return a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"     * Returns a TaskList consisting only of Tasks that satisfy the given predicate.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"     * @param pred a predicate to apply to each Task to determine if it should be included","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"     * @return the new TaskList","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e pred) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"        return new TaskList(taskList.stream().filter(pred).toArray(Task[]::new));","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":93}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    public Todo(String desc) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    public Todo(String desc, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / T\", super.toStorageString());","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":25}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author Berted-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// with modifications.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        dialog.setPrefHeight(USE_COMPUTED_SIZE);","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Circle clip \u003d new Circle(50, 50, 49);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Berted":17,"-":54}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author Berted-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// with modifications.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(duke.init(), dukeImage)","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String response \u003d duke.execCommand(input);","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (duke.isTerminated()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            userInput.setPromptText(\"Duke has terminated. You may close this window.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Berted":11,"-":57}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.io.Writer;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":" * This class handles formatting of Duke\u0027s responses.","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m TedBot „Éæ(‚âß‚ñΩ‚â¶*)o\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"            + \"What do you want to do today?\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye! Hope to see you soon (‚âß‚àá‚â¶)Ôæâ\";","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    private static final String STORAGE_LOADING_MESSAGE \u003d \"Loading save file.....\";","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    private static final String REPLY_HEADER \u003d \"\u003e\u003e\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    private static final String EXCEPTION_HEADER \u003d \"!\u003e\u003e\";","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    private final PrintWriter printWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"     * Constructs UI that will print to the provided Writer.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"     * @param writer the provided Writer.","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    public Ui(Writer writer) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"        printWriter \u003d new PrintWriter(writer);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    private void outputString(String out, String header) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        String[] splitOut \u003d out.split(\"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"        assert splitOut.length \u003e\u003d 1 : \"Output is all line breaks. This shouldn\u0027t happen.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        printWriter.print(header + \" \");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        printWriter.println(splitOut[0]);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        for (int i \u003d 1; i \u003c splitOut.length; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"            for (int j \u003d 0; j \u003c header.length() + 1; j++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"                printWriter.print(\" \");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"            printWriter.println(splitOut[i]);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        printWriter.flush();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"     * Displays specified reply to user.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"     * @param reply String to be displayed.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    public void showReply(String reply) {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        outputString(reply, REPLY_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"     * Displays specified DukeException to user.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"     * @param e DukeException to be displayed.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    public void showException(DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"        outputString(\"Uh-oh ‚òπ! \" + e.getMessage(), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"     * Displays specified DukeException to user, along with the cause of the Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"     * if and only if shouldShowCause is true.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"     * @param e Exception to be displayed.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"     * @param shouldShowCause true if and only if the cause is to be shown.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    public void showException(DukeException e, boolean shouldShowCause) {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"        if (shouldShowCause) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"            outputString(\"Uh-oh ‚òπ! \" + e.getMessage() + \"\\nCause: \" + e.getCause(), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"            outputString(\"Uh-oh ‚òπ! \" + e.getMessage(), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"     * Displays specified Exception to user.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"     * @param e Exception to be displayed.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"    public void showException(Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"        outputString(String.format(\"Woah üò≤! Undocumented exception encountered:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"                        + \"%s\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"                        + \"Please let us know on our GitHub Issues along with the steps to recreate this exception.\",","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"                e.toString()), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"     * Displays the seperator to indicate the end of an interaction.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"    public void showSeperator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"        System.out.println();","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"     * Displays the welcome message.","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"        this.showReply(Ui.GREETING_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"        this.showReply(Ui.GOODBYE_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"     * Displays the loading message, to be used","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"     * when Storage is loading files.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"    public void showStorageLoadingMessage() {","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"        this.showReply(Ui.STORAGE_LOADING_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":118}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"\u003c!-- Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with modifications --\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"590.0\" spacing\u003d\"8.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Berted":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"\u003c!-- Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with modifications --\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"900.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Write your command here!\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"77.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"859.0\" prefWidth\u003d\"600.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Berted":25}},{"path":"src/test/java/duke/parser/ArgumentTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"public class ArgumentTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"    public void getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"        Argument arg \u003d new Argument(\"byu\", \"random parameter content\");","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"        assertEquals(\"byu\", arg.getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    public void getBody() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        Argument arg \u003d new Argument(\"byu\", \"arbitrary argument body\");","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        assertEquals(\"arbitrary argument body\", arg.getBody());","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Berted":20}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    public void parse_byeCommand_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        assertCommandType(ByeCommand.class, parseSuccessfully(\"bye\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    public void parse_listCommand_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        assertCommandType(ListCommand.class, parseSuccessfully(\"list\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    public void parse_unknownCommand_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        assertCommandType(UnknownCommand.class, parseSuccessfully(\"unknown /arg1 hello /arg2 world\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    public void parse_markCommand_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        assertCommandType(MarkCommand.class, parseSuccessfully(\"mark 1\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        assertCommandType(MarkCommand.class, parseSuccessfully(\"mark 2\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        assertCommandType(MarkCommand.class, parseSuccessfully(\"mark 20\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    public void parse_markCommandNoParam_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        assertEquals(\"You must pass an index value.\", failToParse(\"mark\").getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"    public void parse_markCommandNaN_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"        assertEquals(\"You must pass an integer value. abc is not an integer.\", failToParse(\"mark abc\").getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"    public void parse_markCommandNonPositive_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"        assertEquals(\"You must pass a positive integer value. -1 is a non-positive integer value.\",","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"                failToParse(\"mark -1\").getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"    private Command parseSuccessfully(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"            return Parser.parse(command);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"        return null;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    private DukeException failToParse(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"            Parser.parse(command);","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"            return e;","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"        return null;","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"    // Adapted from https://stackoverflow.com/a/4294919.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"    private void assertCommandType(Class\u003c? extends Command\u003e expected, Command actual) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"        assertTrue(expected.isInstance(actual));","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Berted":79}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    private static final String NO_ENDTIME_MESSAGE \u003d \"A Deadline-type Task must be provided with an ending time.\"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"            + \" Use the /by parameter to add a deadline.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Please provide me a valid date in the following format:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"            + \"YYYY-MM-DD\\ni.e. 29th February 2000 is 2000-02-29\";","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    public void newDeadline_unmarked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1970-01-01\");","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[D][ ] UwU (by: Thursday, 01 January 1970)\", deadline.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    public void newDeadline_marked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1970-01-01\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[D][‚úî] UwU (by: Thursday, 01 January 1970)\", deadline.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    public void newDeadline_emptyDesc_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"\", \"1970-01-01\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"            assertEquals(\"The description of a Task must not be empty.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"    public void newDeadline_nullValueDesc_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(null, \"1970-01-01\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"            assertEquals(\"The description of a Task must not be empty.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"    public void newDeadline_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"01 Jan 1970\");","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"            assertEquals(INVALID_DATE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"    public void newDeadline_invalidDate2_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1900-02-29\");","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"            assertEquals(INVALID_DATE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"    public void newDeadline_emptyDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"            assertEquals(NO_ENDTIME_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"    public void newDeadline_nullValueDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", null);","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"            assertEquals(NO_ENDTIME_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"    public void toStorageString_unmarked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1970-01-01\");","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"            assertEquals(\"UwU / false / D / 1970-01-01\", deadline.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"    public void toStorageString_marked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1970-10-10\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"            assertEquals(\"UwU / true / D / 1970-10-10\", deadline.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"    public void setDone_setToTrue_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1970-10-10\");","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"            assertEquals(false, deadline.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"            deadline.setDone(true);","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"            assertEquals(true, deadline.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"Berted"},"content":"    public void setDone_setToFalse_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"Berted"},"content":"            Deadline deadline \u003d new Deadline(\"UwU\", \"1970-10-10\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"Berted"},"content":"            assertEquals(true, deadline.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"Berted"},"content":"            deadline.setDone(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"Berted"},"content":"            assertEquals(false, deadline.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Berted":140}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"public class EventTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    private static final String NO_TIMERANGE_MESSAGE \u003d \"An Event-type Task must be provided with a time range.\"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"            + \" Use the /at parameter to add a time range.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Please provide me valid date(s) in the following format:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"            + \"  YYYY1-MM1-DD1 YYYY2-MM2-DD2\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"            + \"i.e. 29th February 2000 to 2nd March 2000 is 2000-02-29 2000-03-02.\"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"            + \" You can provide only one date if you choose.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATERANGE_MESSAGE \u003d \"The second date is prior to the first date.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    public void newEvent_unmarked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"Test Event\", \"1970-01-01\");","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[E][ ] Test Event (at: Thursday, 01 January 1970)\", event.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    public void newEvent_marked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"Test Event\", \"1970-01-01\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[E][‚úî] Test Event (at: Thursday, 01 January 1970)\", event.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"    public void newEvent_twoDates_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"Test Event\", \"1970-01-01 1970-01-04\", false);","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[E][ ] Test Event (at: Thursday, 01 January 1970 - Sunday, 04 January 1970)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"                    event.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    public void newEvent_emptyDesc_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"\", \"1970-01-01\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"            assertEquals(\"The description of a Task must not be empty.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"    public void newEvent_nullValueDesc_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(null, \"1970-01-01\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"            assertEquals(\"The description of a Task must not be empty.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    public void newEvent_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"01 Jan 1970\");","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"            assertEquals(INVALID_DATE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"    public void newEvent_invalidDate2_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"1900-02-29\");","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"            assertEquals(INVALID_DATE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"    public void newEvent_invalidDate3_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"2000-02-29 01 Jan 2003\");","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"            assertEquals(INVALID_DATE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"    public void newEvent_invalidDateRange_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"2022-08-24 2022-08-21\");","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"            assertEquals(INVALID_DATERANGE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"    public void newEvent_emptyDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"            assertEquals(NO_TIMERANGE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"    public void newDeadline_nullValueDate_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", null);","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"            assertEquals(NO_TIMERANGE_MESSAGE, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"Berted"},"content":"    public void toStorageString_unmarked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"1970-01-01\");","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"Berted"},"content":"            assertEquals(\"UwU / false / E / 1970-01-01 1970-01-01\", event.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"Berted"},"content":"    public void toStorageString_marked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"1970-10-10\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"Berted"},"content":"            assertEquals(\"UwU / true / E / 1970-10-10 1970-10-10\", event.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"Berted"},"content":"    public void toStorageString_twoDates_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"1970-10-10 2000-01-01\");","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"Berted"},"content":"            assertEquals(\"UwU / false / E / 1970-10-10 2000-01-01\", event.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"Berted"},"content":"    public void setDone_setToTrue_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"1970-10-10\");","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"Berted"},"content":"            assertEquals(false, event.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"Berted"},"content":"            event.setDone(true);","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"Berted"},"content":"            assertEquals(true, event.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"Berted"},"content":"    public void setDone_setToFalse_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"Berted"},"content":"            Event event \u003d new Event(\"UwU\", \"1970-10-10\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"Berted"},"content":"            assertEquals(true, event.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"Berted"},"content":"            event.setDone(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"Berted"},"content":"            assertEquals(false, event.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Berted":182}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    public void newTodo_unmarked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"UwU\");","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[T][ ] UwU\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public void newTodo_marked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"UwU\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"            assertEquals(\"[T][‚úî] UwU\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    public void newTodo_emptyDesc_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"            assertEquals(\"The description of a Task must not be empty.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    public void newTodo_nullValueDesc_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(null);","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"            assertEquals(\"The description of a Task must not be empty.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"    public void toStorageString_unmarked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"this is a test üò´\");","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"            assertEquals(\"this is a test üò´ / false / T\", todo.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"    public void toStorageString_marked_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"this is a marked test ‚úî\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"            assertEquals(\"this is a marked test ‚úî / true / T\", todo.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"    public void setDone_setToTrue_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"prev unmarked\", false);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"            assertEquals(false, todo.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"            todo.setDone(true);","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"            assertEquals(true, todo.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"    public void setDone_setToFalse_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"            Todo todo \u003d new Todo(\"prev marked\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"            assertEquals(true, todo.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"            todo.setDone(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"            assertEquals(false, todo.getIsDone());","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"            fail();","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Berted":95}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"unknown","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"todo CS2103T iP Level-4","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"deadline ERRNO_TASK /by 1900-02-29","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"deadline WHAT_TASK /by 20-02-3333","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"deadline ERRRRR_TASK /by 21 Feb 2022","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"deadline CS2105 HW /by 2022-08-21","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"event ERRRR_TASK /at 21 Feb 2022","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"event NUS SoC Career Fair /at 2022-08-17","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"deadline test","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"event testing","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"deadline testing test /by","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"event testing test /at","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"mark asda","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"unmark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"mark 5","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"unmark -1","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"delete 5","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"delete -1","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"delete ab","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"delete","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"delete 1","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"delete 2","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"event NEW_TASK /at 2022-08-20 2022-09-01","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"event ERROR_TASK /at 2022-09-01 2022-08-20","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"find W","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"find Z","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"find NEW","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"find","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"if exist ACTUAL.txt del ACTUAL.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"REM delete savefile from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"if exist data\\save.txt del data\\save.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin -encoding utf8 ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Berted":6,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"# delete savefile from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"if [ -e \"./data/save.txt\" ]","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    rm data/save.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"fi","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/**/*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Berted":8,"-":36}}]

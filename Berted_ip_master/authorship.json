[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"plugins {","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"repositories {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"dependencies {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"test {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    testLogging {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"        showExceptions true","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        showCauses true","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"application {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"shadowJar {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"run{","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":41}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"goto fail","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"goto fail","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":":init","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":":win9xME_args","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":":execute","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":":end","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":":fail","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"exit /b 1","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":":mainEnd","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":":omega","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":103}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    private static final String NO_ENDTIME_MESSAGE \u003d \"A Deadline-type Task must be provided with an ending time. Use the /by parameter to add a deadline.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Please provide me a valid date in the following format:\\n  YYYY-MM-DD\\ni.e. 29th February 2000 is 2000-02-29\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    Deadline(String desc, String endTime) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"        if (endTime \u003d\u003d null || endTime.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"            throw new DukeException(NO_ENDTIME_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"            this.endDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE, e);","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    Deadline(String desc, String endTime, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        if (endTime \u003d\u003d null || endTime.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"            throw new DukeException(NO_ENDTIME_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"            this.endDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE, e);","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMMM YYYY\");","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.endDate.format(formatter));","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / D / %s\", super.toStorageString(), this.endDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    /* Parses a command into an n x 2 array, where n is the number of","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"       parameters passed by the user. Parameters are seperated by a \"/\".","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"       Each parameter is then split into two, the parameter name, and","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"       the parameter\u0027s content.","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    private static String[][] parseCommand(String command) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"        return Stream.of(command.trim().split(\"\\\\s+/\"))","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"                .map(s -\u003e s.split(\"\\\\s+\", 2))","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"                .map(arr -\u003e {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"                    if (arr.length \u003d\u003d 1) return new String[]{arr[0], null};","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"                    else return arr;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"                })","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"                .toArray(String[][]::new);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"        Storage storage \u003d new Storage(\"data/save.txt\");","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"        TaskList taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"        boolean exitCalled \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"            ui.showStorageLoadingMessage();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"            ui.showReply(String.format(\"Save file loaded. You currently have %d tasks.\\n\", taskList.getLength()));","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"            ui.showException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        } finally {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"            ui.showSeperator();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"        ui.showSeperator();","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        while (!exitCalled) {","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"                String[][] userParams \u003d parseCommand(ui.readCommand());","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"                String commandName \u003d userParams[0][0];","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"                switch (commandName) {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"                    case \"list\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"                        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"                        String[] stringifiedTaskList \u003d taskList.toStringList();","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"                        reply.append(\"Here are your tasks that I have recorded:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"                        if (stringifiedTaskList.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"                            reply.append(\"\\nCongratulations, you don\u0027t need to do anything right now!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"                        for (int i \u003d 0; i \u003c stringifiedTaskList.length; i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"                            reply.append(String.format(\"\\n%02d. %s\", i + 1, stringifiedTaskList[i]));","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"                        ui.showReply(reply.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"                    case \"bye\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"                        ui.showGoodbye();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"                        exitCalled \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"                    // TODO: A lot of code repetition for the next three pieces of code... Not sure how to resolve yet.","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"                    case \"todo\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"                        Todo newTodo \u003d new Todo(userParams[0][1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"Berted"},"content":"                        taskList.addTask(newTodo);","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"Berted"},"content":"                        ui.showReply(String.format(\"Gotcha! I added the following task to the list:\\n  %s\\nCurrently, I have %d tasks recorded\", newTodo, taskList.getLength()));","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":77,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"Berted"},"content":"                    case \"deadline\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"Berted"},"content":"                        String endTime \u003d null;","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"Berted"},"content":"                        for (int i \u003d 1; i \u003c userParams.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"Berted"},"content":"                            if (userParams[i][0].equals(\"by\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"Berted"},"content":"                                endTime \u003d userParams[i][1];","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"Berted"},"content":"                                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"Berted"},"content":"                        Deadline newDeadline \u003d new Deadline(userParams[0][1], endTime);","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"Berted"},"content":"                        taskList.addTask(newDeadline);","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"Berted"},"content":"                        ui.showReply(String.format(\"Gotcha! I added the following task to the list:\\n  %s\\nCurrently, I have %d tasks recorded\\n\", newDeadline, taskList.getLength()));","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":91,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":92,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":93,"author":{"gitId":"Berted"},"content":"                    case \"event\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"Berted"},"content":"                        String rangeTime \u003d null;","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"Berted"},"content":"                        for (int i \u003d 1; i \u003c userParams.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"Berted"},"content":"                            if (userParams[i][0].equals(\"at\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"Berted"},"content":"                                rangeTime \u003d userParams[i][1];","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"Berted"},"content":"                                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"Berted"},"content":"                        Event newEvent \u003d new Event(userParams[0][1], rangeTime);","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"Berted"},"content":"                        taskList.addTask(newEvent);","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"Berted"},"content":"                        ui.showReply(String.format(\"Gotcha! I added the following task to the list:\\n  %s\\nCurrently, I have %d tasks recorded\\n\", newEvent, taskList.getLength()));","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":105,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":106,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":107,"author":{"gitId":"Berted"},"content":"                    case \"mark\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"Berted"},"content":"                        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"Berted"},"content":"                            int markIndex \u003d Integer.parseInt(userParams[0][1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"Berted"},"content":"                            if (taskList.getTask(markIndex).getIsDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"Berted"},"content":"                                ui.showReply(String.format(\"Sorry, but it seems you have marked this task as done:\\n  %s\", taskList.getTask(markIndex)));","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":113,"author":{"gitId":"Berted"},"content":"                                taskList.getTask(markIndex).setDone(true);","lastModifiedDate":"2022-08-16"},{"lineNumber":114,"author":{"gitId":"Berted"},"content":"                                ui.showReply(String.format(\"Noice! I\u0027ve marked this task as done:\\n  %s\", taskList.getTask(markIndex)));","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"Berted"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"Berted"},"content":"                            if (userParams[0][1] \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an index value.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an integer value. \" + userParams[0][1] + \" is not an integer.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"Berted"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"Berted"},"content":"                            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":126,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":127,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"Berted"},"content":"                    case \"unmark\": {","lastModifiedDate":"2022-08-16"},{"lineNumber":129,"author":{"gitId":"Berted"},"content":"                        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"Berted"},"content":"                            int unmarkIndex \u003d Integer.parseInt(userParams[0][1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"Berted"},"content":"                            if (taskList.getTask(unmarkIndex).getIsDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"Berted"},"content":"                                taskList.getTask(unmarkIndex).setDone(false);","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"Berted"},"content":"                                ui.showReply(String.format(\"Alright, I\u0027ve marked this task as not done:\\n  %s\", taskList.getTask(unmarkIndex)));","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":135,"author":{"gitId":"Berted"},"content":"                                ui.showReply(String.format(\"Sorry, but it seems you haven\u0027t marked this task as done:\\n  %s\", taskList.getTask(unmarkIndex)));","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-15"},{"lineNumber":137,"author":{"gitId":"Berted"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"Berted"},"content":"                            if (userParams[0][1] \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an index value.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an integer value. \" + userParams[0][1] + \" is not an integer.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"Berted"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"Berted"},"content":"                            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"Berted"},"content":"                    case \"delete\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"Berted"},"content":"                        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"Berted"},"content":"                            int delIndex \u003d Integer.parseInt(userParams[0][1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"Berted"},"content":"                            Task delTask \u003d taskList.getTask(delIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"Berted"},"content":"                            taskList.deleteTask(delIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":154,"author":{"gitId":"Berted"},"content":"                            ui.showReply(String.format(\"Understood, I\u0027ve deleted the following task:\\n  %s\\nYou now have %d tasks remaining.\\n\", delTask, taskList.getLength()));","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"Berted"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":156,"author":{"gitId":"Berted"},"content":"                            if (userParams[0][1] \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":157,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an index value.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":158,"author":{"gitId":"Berted"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":159,"author":{"gitId":"Berted"},"content":"                                throw new DukeException(\"You must pass an integer value. \" + userParams[0][1] + \" is not an integer.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"Berted"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":161,"author":{"gitId":"Berted"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"Berted"},"content":"                            throw new DukeException(\"I do not have a task with that number in my list.\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"Berted"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":165,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":166,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":167,"author":{"gitId":"Berted"},"content":"                    default: {","lastModifiedDate":"2022-08-16"},{"lineNumber":168,"author":{"gitId":"Berted"},"content":"                        throw new DukeException(\"Sorry, I don\u0027t know what that means.\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"Berted"},"content":"                                + \"Did you make a mistake? Please note that commands are case-sensitive.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"Berted"},"content":"                    }","lastModifiedDate":"2022-08-14"},{"lineNumber":171,"author":{"gitId":"Berted"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":172,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"Berted"},"content":"                // Not the most efficient solution, but reduces code duplication. TODO: Revisit this when making commands into objects.","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"Berted"},"content":"                storage.save(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"Berted"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":176,"author":{"gitId":"Berted"},"content":"                ui.showException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"Berted"},"content":"            } finally {","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"Berted"},"content":"                ui.showSeperator();","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":177,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"        super(message);","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    DukeException(String message, Throwable cause) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        super(message, cause);","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Berted":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    private static final String NO_TIMERANGE_MESSAGE \u003d \"An Event-type Task must be provided with a time range. Use the /at parameter to add a time range.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Please provide me valid date(s) in the following format:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        + \"  YYYY1-MM1-DD1 YYYY2-MM2-DD2\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"        + \"i.e. 29th February 2000 to 2nd March 2000 is 2000-02-29 2000-03-02. You can provide only one date if you choose.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"    private static final String INVALID_DATERANGE_MESSAGE \u003d \"The second date is prior to the first date.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    private void parseTimeRange(String timeRange) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        String[] splitTimeRange \u003d timeRange.split(\"\\\\s+\");","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        if (splitTimeRange.length \u003e 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"            this.startTime \u003d LocalDate.parse(splitTimeRange[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"            if (splitTimeRange.length \u003e 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"                this.endTime \u003d LocalDate.parse(splitTimeRange[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"                this.endTime \u003d this.startTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"        if (this.endTime.compareTo(this.startTime) \u003c 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"            throw new DukeException(INVALID_DATERANGE_MESSAGE);","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    Event(String desc, String timeRange) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        if (timeRange \u003d\u003d null || timeRange.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Event.NO_TIMERANGE_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"        parseTimeRange(timeRange);","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"    Event(String desc, String timeRange, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"        if (timeRange \u003d\u003d null || timeRange.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Event.NO_TIMERANGE_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"        parseTimeRange(timeRange);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMMM YYYY\");","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"        if (this.startTime.equals(this.endTime)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), this.startTime.format(formatter));","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"            return String.format(\"[E]%s (at: %s - %s)\", super.toString(), this.startTime.format(formatter),","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"                    this.endTime.format((formatter)));","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / E / %s %s\", super.toStorageString(), this.startTime, this.endTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":68}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    private final File saveFile;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    Storage(File saveFile) {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    Storage(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        this.saveFile \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    TaskList load() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"            Scanner sc \u003d new Scanner(this.saveFile);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"            TaskList ret \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"                String[] curTask \u003d sc.nextLine().split(\" / \");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"                // Task type saved in the third parameter","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"                switch (curTask[2]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"                        ret.addTask(new Todo(curTask[0], curTask[1].equals(\"true\")));","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"                        ret.addTask(new Deadline(curTask[0], curTask[3], curTask[1].equals(\"true\")));","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"                        ret.addTask(new Event(curTask[0], curTask[3], curTask[1].equals(\"true\")));","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"                    default:","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"                        throw new DukeException(\"Invalid save file data. Will ignore save file.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"            return ret;","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"                this.saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"                this.saveFile.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"            } catch (IOException e1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"                throw new DukeException(\"Unable to create save-file.\", e1);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"            } catch (SecurityException e2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"                throw new DukeException(\"Write access denied to save file. Please make sure TedBot has access to duke/save.txt.\", e2);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"No save file found. A new save file is generated.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"    void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"            for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"                fw.write(taskList.getTask(i).toStorageString() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"            fw.flush();","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"            throw new DukeException(\"Unable to write to save file. Last change is not added to save file.\", e);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Berted":66}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"    private static final String NO_DESC_MESSAGE \u003d \"The description of a Task must not be empty.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"    protected String desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    public Task(String desc) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        if (desc \u003d\u003d null || desc.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Task.NO_DESC_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"    public Task(String desc, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"        if (desc \u003d\u003d null || desc.equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"            throw new DukeException(Task.NO_DESC_MESSAGE);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"        return (this.isDone ? \"[✔]\" : \"[ ]\");","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        return this.getStatusIcon() + \" \" + this.desc;","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / %s\", this.desc, this.isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"Berted":44}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    TaskList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    TaskList(Task... taskList) {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(Arrays.asList(taskList));","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"    public String[] toStringList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        return this.taskList.stream()","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"                .map(Task::toString)","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"    public Todo(String desc) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    public Todo(String desc, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"        return String.format(\"%s / T\", super.toStorageString());","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m TedBot ヾ(≧▽≦*)o\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"            + \"What do you want to do today?\";","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye! Hope to see you soon ༼- つ ◕_◕ ༽つ\";","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"    private static final String STORAGE_LOADING_MESSAGE \u003d \"Loading save file.....\";","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"    private static final String REPLY_HEADER \u003d \"\u003e\u003e\";","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"    private static final String EXCEPTION_HEADER \u003d \"!\u003e\u003e\";","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"    private final Scanner sysInScanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"    Ui() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"        sysInScanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    private void outputString(String out, String header) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"        String[] splitOut \u003d out.split(\"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"        System.out.print(header + \" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"        System.out.println(splitOut[0]);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"        for (int i \u003d 1; i \u003c splitOut.length; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"            for (int j \u003d 0; j \u003c header.length() + 1; j++) System.out.print(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"            System.out.println(splitOut[i]);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"    public void showReply(String reply) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"        outputString(reply, REPLY_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"    public void showException(DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"        outputString(\"Uh-oh ☹! \" + e.getMessage(), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"    public void showException(DukeException e, boolean shouldShowCause) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"        if (shouldShowCause) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"            outputString(\"Uh-oh ☹! \" + e.getMessage() + \"\\nCause: \" + e.getCause(), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"            outputString(\"Uh-oh ☹! \" + e.getMessage(), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Berted"},"content":"    public void showException(Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Berted"},"content":"        outputString(String.format(\"Woah 😲! Undocumented exception encountered:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Berted"},"content":"                + \"%s\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Berted"},"content":"                + \"Please let us know on our GitHub Issues along with the steps to recreate this exception.\",","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Berted"},"content":"                e.toString()), EXCEPTION_HEADER);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Berted"},"content":"    public void showSeperator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Berted"},"content":"        System.out.println();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Berted"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Berted"},"content":"        this.showReply(Ui.GREETING_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Berted"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Berted"},"content":"        this.showReply(Ui.GOODBYE_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Berted"},"content":"    public void showStorageLoadingMessage() {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Berted"},"content":"        this.showReply(Ui.STORAGE_LOADING_MESSAGE);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"Berted"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"Berted"},"content":"        System.out.print(\"\u003c\u003c \");","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"Berted"},"content":"        return sysInScanner.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Berted"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"Berted"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"Berted":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"Berted"},"content":"unknown","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"Berted"},"content":"todo CS2103T iP Level-4","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"Berted"},"content":"deadline ERRNO_TASK /by 1900-02-29","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"deadline WHAT_TASK /by 20-02-3333","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"deadline ERRRRR_TASK /by 21 Feb 2022","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"deadline CS2105 HW /by 2022-08-21","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"event ERRRR_TASK /at 21 Feb 2022","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Berted"},"content":"event NUS SoC Career Fair /at 2022-08-17","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Berted"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"Berted"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"deadline test","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"event testing","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"deadline testing test /by","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"event testing test /at","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"mark asda","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"Berted"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"Berted"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"Berted"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"Berted"},"content":"unmark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"Berted"},"content":"mark 5","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"Berted"},"content":"unmark -1","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"Berted"},"content":"delete 5","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"Berted"},"content":"delete -1","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"Berted"},"content":"delete ab","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"Berted"},"content":"delete","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"Berted"},"content":"delete 1","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"Berted"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"Berted"},"content":"delete 2","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"Berted"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"Berted"},"content":"event NEW_TASK /at 2022-08-20 2022-09-01","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Berted"},"content":"event ERROR_TASK /at 2022-09-01 2022-08-20","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Berted"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"Berted":42}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Berted"},"content":"if exist ACTUAL.txt del ACTUAL.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Berted"},"content":"REM delete savefile from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Berted"},"content":"if exist data\\save.txt del data\\save.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Berted"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin -encoding utf8 ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Berted"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Berted":6,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Berted"},"content":"# delete savefile from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Berted"},"content":"if [ -e \"./data/save.txt\" ]","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Berted"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Berted"},"content":"    rm data/save.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Berted"},"content":"fi","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Berted"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Berted":6,"-":38}}]

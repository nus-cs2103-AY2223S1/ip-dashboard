[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"izzahaj":7,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":" * Main class for Duke application","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    /** Contains methods that deal with loading and saving of tasks */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    /** List of tasks */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /** Deals with interactions with user */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize Storage, TaskList and Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public Duke() {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * Runs the Duke program.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    public void run() {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"            try {","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"                ui.printBorder();","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"                System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"                System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"                ui.printBorder();","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        ui.printBorder();","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * Main method for Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        new Duke().run();","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"izzahaj":61,"-":4}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /** Type of task to be added */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    private TaskType taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    private String desc;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    /** Date of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    private String dateStr;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialise the add command with the task type and description.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * @param taskType The task type.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     * @param desc The task description.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    public AddCommand(TaskType taskType, String desc) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialise the add command with the task type, description and date.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * @param taskType The task type.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     * @param desc The task description.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"     * @param dateStr The task date.","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    public AddCommand(TaskType taskType, String desc, String dateStr) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        this.dateStr \u003d dateStr;","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        case TODO:","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"            task \u003d new ToDo(desc);","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"            if (this.dateStr.contains(\" \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"                task \u003d new Deadline(this.desc, Parser.convertStringToDateTime(this.dateStr));","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"                task \u003d new Deadline(this.desc, Parser.convertStringToDate(this.dateStr));","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        case EVENT:","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"            if (this.dateStr.contains(\" \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"                task \u003d new Event(this.desc, Parser.convertStringToDateTime(this.dateStr));","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"                task \u003d new Event(this.desc, Parser.convertStringToDate(this.dateStr));","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        ui.showAddMessage(task, tasks.getSize());","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":76}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Represents a command to be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * @param ui The user interactions.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     * @param storage The task storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"     * @throws DukeException If the command cannot be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * Indicates whether a command exits the Duke program.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     * @return True if command is an exit command; false otherwise.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"izzahaj":26}},{"path":"src/main/java/duke/command/CommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Command words that can be ysed","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public enum CommandWord {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" * Represents a command to delete a task to the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /** Index of task to be deleted */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"            Task task \u003d tasks.deleteTask(this.taskNumber - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            ui.showDeleteMessage(task, tasks.getSize());","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(ui.getMissingTaskError(CommandWord.DELETE, this.taskNumber));","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":32}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Represents a command to exit the Duke program.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        ui.exit();","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"        return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Represents a command to find a task in the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Keyword to be searched */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private String keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        ui.showFindMessage(this.keyword, tasks.find(this.keyword));","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"izzahaj":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        ui.showListMessage(tasks.getSize());","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"        tasks.list();","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":20}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Represents a command to mark a task in the task list as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /** Index of task to be marked as complete */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"            tasks.markTask(this.taskNumber - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(ui.getMissingTaskError(CommandWord.MARK, this.taskNumber));","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":30}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Represents a command to mark a task in the task list as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /** Index of the task to be marked as incomplete */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"            tasks.unmarkTask(this.taskNumber - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(ui.getMissingTaskError(CommandWord.UNMARK, this.taskNumber));","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":30}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.exception;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Class to handle Duke Exceptions.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"     * Constructor for DukeException with no detail message.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    public DukeException() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     * Constructor for DukeException with specified detail message.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * @param msg The error message to be displayed.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        super(msg);","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":20}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import duke.command.CommandWord;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":" * Parser for parsing user inputs, dates and tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Parses and validates user input and returns a command to be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * @param fullCommand The command input by the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     * @return The Command to be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        String strippedCommand \u003d fullCommand.stripTrailing();","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"        String[] parsedCommand \u003d strippedCommand.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"            switch (parsedCommand[0]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"            case \"\":","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  Somehow you\u0027re even more unbearable when you\u0027re silent.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"                return validateToDo(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"                return validateDeadline(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"            case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"                return validateEvent(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"                return validateDelete(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"                return validateMark(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"                return validateUnmark(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"            case \"find\":","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"                return validateFind(parsedCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            case \"list\":","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"                return validateList(strippedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"                return validateBye(strippedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(Ui.getUnknownCommandMessage(strippedCommand));","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Do you need me to teach you what a number is?\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"                    + \"  \u0027\" + parsedCommand[1] + \"\u0027 is not a number.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"     * Converts a given text string to a LocalDateTime object.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"     * @param dateTime The text string with the format dd/M/yyyy HHmm.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"     * @return The LocalDateTime object representing the date-time given in the string.","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"     * @throws DukeException If the input string does not follow the format or contains an invalid date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    public static LocalDateTime convertStringToDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Invalid date or time: \u0027\" + dateTime + \"\u0027\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"                    + \"  Please enter a date and time with the following format: \u0027dd/mm/yyyy HHMM\u0027\");","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"     * Converts a given text string to a LocalDate object.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"     * @param date The text string with the format dd/M/yyyy.","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"     * @return The LocalDate object representing the date given in the string.","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"     * @throws DukeException If the input string does not follow the format or contains an invalid date.","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"    public static LocalDate convertStringToDate(String date) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"            return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Invalid date: \u0027\" + date + \"\u0027\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"                    + \"  Please enter a date with the following format: \u0027dd/mm/yyyy\u0027\");","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"     * Parses tasks from the saved text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"     * @param savedTask The text string to be parsed.","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"     * @return An array of strings containing the details of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"    public static String[] parseSavedTask(String savedTask) {","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        return savedTask.split(\" \\\\| \", 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"    private static Command validateToDo(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.TODO));","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"        } else if (parsedCommand[1].contains(\"|\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  \u0027|\u0027 characters are not allowed in the task description.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"            return new AddCommand(TaskType.TODO, parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"    private static Command validateDeadline(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.DEADLINE));","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"            String[] parsedTask \u003d parsedCommand[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"            if (parsedTask[0].startsWith(\"/by\") || parsedTask[0].isBlank()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"                        + Ui.getCommandHelp(CommandWord.DEADLINE));","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"            } else if (parsedTask.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  You do realise deadlines and events usually have a time or date,\"","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"                        + \" right?\\n\" + Ui.getCommandHelp(CommandWord.DEADLINE));","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"            } else if (parsedTask[0].contains(\"|\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  \u0027|\u0027 characters are not allowed in the task description.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"                return new AddCommand(TaskType.DEADLINE, parsedTask[0], parsedTask[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"    private static Command validateEvent(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.EVENT));","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"            String[] parsedTask \u003d parsedCommand[1].split(\" /at \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"            if (parsedTask[0].startsWith(\"/at\") || parsedTask[0].isBlank()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"izzahaj"},"content":"                        + Ui.getCommandHelp(CommandWord.EVENT));","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"izzahaj"},"content":"            } else if (parsedTask.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  You do realise deadlines and events usually have a time or date,\"","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"izzahaj"},"content":"                        + \" right?\\n\" + Ui.getCommandHelp(CommandWord.EVENT));","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"izzahaj"},"content":"            } else if (parsedTask[0].contains(\"|\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":149,"author":{"gitId":"izzahaj"},"content":"                throw new DukeException(\"  \u0027|\u0027 characters are not allowed in the task description.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"izzahaj"},"content":"                return new AddCommand(TaskType.EVENT, parsedTask[0], parsedTask[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"izzahaj"},"content":"    private static Command validateDelete(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) { // blank task number","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Enter a task number, nitwit.\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.DELETE));","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"izzahaj"},"content":"            int num \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"izzahaj"},"content":"            return new DeleteCommand(num);","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"izzahaj"},"content":"    private static Command validateMark(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) { // blank task number","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Enter a task number, nitwit.\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.MARK));","lastModifiedDate":"2022-08-28"},{"lineNumber":170,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"izzahaj"},"content":"            int num \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"izzahaj"},"content":"            return new MarkCommand(num);","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"izzahaj"},"content":"    private static Command validateFind(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  You\u0027re so helpful. What exactly am I supposed to look for?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":179,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.FIND));","lastModifiedDate":"2022-08-28"},{"lineNumber":180,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":181,"author":{"gitId":"izzahaj"},"content":"            return new FindCommand(parsedCommand[1]);","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":184,"author":{"gitId":"izzahaj"},"content":"    private static Command validateUnmark(String[] parsedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"izzahaj"},"content":"        if (parsedCommand.length \u003c 2) { // blank task number","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Enter a task number, nitwit.\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.UNMARK));","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"izzahaj"},"content":"            int num \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"izzahaj"},"content":"            return new UnmarkCommand(num);","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"izzahaj"},"content":"    private static Command validateList(String strippedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"izzahaj"},"content":"        if (strippedCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"izzahaj"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(Ui.getUnknownCommandMessage(strippedCommand));","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":201,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"izzahaj"},"content":"    private static Command validateBye(String strippedCommand) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"izzahaj"},"content":"        if (strippedCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"izzahaj"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(Ui.getUnknownCommandMessage(strippedCommand));","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":210}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":" * Class that contains methods to save tasks to a file","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":" * and load tasks from a file.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    /** Path to directory of saved file */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    private Path directory;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    /** Directory where file is saved */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    private File fileDirectory;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    /** Path to the saved file */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    /** List containing tasks loaded from file */","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize directory and path of the saved file and","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * the list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public Storage() {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        this.directory \u003d Paths.get(\"data\");","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        this.fileDirectory \u003d new File(this.directory.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        this.filePath \u003d Paths.get(this.directory.toString(), \"duke.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * Saves the list of tasks to a text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"     * @throws DukeException If tasks list cannot be saved.","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"            String savedTasks \u003d tasks.getSaveFormat();","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"            if (Files.exists(this.directory)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"                Files.write(this.filePath, savedTasks.getBytes());","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"                this.fileDirectory.mkdirs();","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"                Files.write(this.filePath, savedTasks.getBytes());","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException(\"  Error: Unable to save tasks.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"     * Loads the list of tasks from a given text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"     * @return List of tasks from the given text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"     * @throws DukeException If task list cannot be loaded.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"            if (Files.exists(this.directory) \u0026\u0026 Files.exists(this.filePath)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"                List\u003cString\u003e allLines \u003d Files.readAllLines(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"                for (String line : allLines) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"                    String[] parsedTask \u003d Parser.parseSavedTask(line);","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"                    boolean isDone \u003d parsedTask[1].contains(\"1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"                    String desc \u003d parsedTask[2];","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"                    Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"                    switch (parsedTask[0]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"                        task \u003d new ToDo(desc, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"                        break;","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"                        if (parsedTask[3].contains(\" \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"                            LocalDateTime dateTime \u003d Parser.convertStringToDateTime(parsedTask[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"                            task \u003d new Deadline(desc, dateTime, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"                        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"                            LocalDate date \u003d Parser.convertStringToDate(parsedTask[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"                            task \u003d new Deadline(desc, date, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"                        }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"                        break;","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"                        if (parsedTask[3].contains(\" \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"                            LocalDateTime dateTime \u003d Parser.convertStringToDateTime(parsedTask[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"                            task \u003d new Event(desc, dateTime, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"                        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"                            LocalDate date \u003d Parser.convertStringToDate(parsedTask[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"                            task \u003d new Event(desc, date, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"                        }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"                        break;","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"            return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"            throw new DukeException();","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":110}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Class that represents a deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Due date of the deadline */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private LocalDate byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /** Due date-time of the deadline */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /** If deadline has a specified time */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private final boolean hasTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date of","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * the deadline. Completion status is always false when deadline is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * @param byDate The deadline due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDate byDate) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date-time of","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"     * the deadline. Completion status is always false when deadline is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * @param byDateTime The deadline due date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDateTime byDateTime) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date of","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     * the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     * @param byDate The deadline due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The deadline completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDate byDate, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date-time of","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"     * the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     * @param byDateTime The deadline due date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The deadline completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDateTime byDateTime, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"    private String formatBy() {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"            return this.byDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"    private String saveFormatBy() {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"            return this.byDate.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"     * Converts the deadline to its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        return \"D \" + super.getSaveFormat() + \" | \" + this.saveFormatBy();","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatBy() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":99}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Class that represents an event.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Date of the event */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private LocalDate atDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /** Date-time of the event */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private LocalDateTime atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /** If event has a specified time */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private final boolean hasTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when event is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * @param atDate The event date.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDate atDate) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date-time of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when event is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * @param atDateTime The event date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDateTime atDateTime) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * @param atDate The event date.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The event completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDate atDate, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date-time of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     * @param atDateTime The event date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The event completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDateTime atDateTime, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"    private String formatAt() {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"            return this.atDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"            return this.atDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    private String saveFormatAt() {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"            return this.atDateTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"            return this.atDate.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"     * Converts the event to its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"        return \"E \" + super.getSaveFormat() + \" | \" + this.saveFormatAt();","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.formatAt() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":100}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Class that represents a task.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"    protected String desc;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    /** Completion status of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when task is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * @param desc The task description","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public Task(String desc) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"     * @param desc The task description.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The task completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * Gets the string representation of the task status.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the task status.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    public void mark() {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        // change to return a boolean if status has changed","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        // move response to Ui class as showMarkResponse method","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  You can\u0027t finish the same task twice, genius.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  You really took your time with this one, didn\u0027t you?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"    \" + this);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"        // change to return a boolean if status has changed","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        // move response to Ui class as showUnmarkResponse method","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  You\u0027re trying to unmark a task you haven\u0027t done.\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"                    + \"  Let that sink in for a moment.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  And here I was thinking you were getting somewhere...\");","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"    \" + this);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"     * Returns the task as a string in its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        return \"| \" + (isDone ? 1 : 0) + \" | \" + this.desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"     * Checks if the given keyword is contained within the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"     * @param keyword The given keyword to be matched.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"     * @return True if there is a match; false otherwise.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"        return this.toString().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.desc;","lastModifiedDate":"2022-08-16"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"izzahaj":96}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":" * Class that stores the list of tasks and methods to manipulate the tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    /** List of tasks */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize list of tasks using a given task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     * Prints all tasks in the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    public void list() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        this.tasks.forEach(t -\u003e System.out.println(\"  \" + (this.tasks.indexOf(t) + 1) + \". \" + t));","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * Adds a given task to the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"     * Deletes a given task from the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"     * Marks a given task as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be marked as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    public void markTask(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        this.tasks.get(index).mark();","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * Marks a given task as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be marked as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        this.tasks.get(index).unmark();","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"     * Returns the task list as a string in its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        this.tasks.forEach(t -\u003e sb.append(t.getSaveFormat()).append(\"\\n\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"     * @return The size of the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"     * Searches for tasks that matches the given keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"     * @param keyword The given keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"     * @return A string representing all possible matches.","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"        this.tasks.forEach(t -\u003e {","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"            if (t.isMatch(keyword)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"                sb.append(\"  \").append(this.tasks.indexOf(t) + 1).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"        });","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":99}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * The types of tasks that can be used.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":8}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Class that represents a to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when to-do is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"     * @param desc The to-do description.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     * @param desc The to-do description.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The to-do completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public ToDo(String desc, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Converts the to-do to its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        return \"T \" + super.getSaveFormat();","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":42}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import duke.command.CommandWord;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Class that deals with user interactions.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private static final String BORDER \u003d \"\u003e\u003e\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[**]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003c\u003c\";","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    private static final String MORT \u003d \"                                 .---.        .-----------\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"            + \"                                /     \\\\  __  /    ------\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"            + \"                               / /     \\\\(  )/    -----\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"            + \"                              //////   \u0027 \\\\/ `   ---\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"            + \"                             //// / // :    : ---\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"            + \"                            // /   /  /`    \u0027--\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"            + \"                           //          //..\\\\\\\\\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            + \"\u003e\u003e\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dUU[**]UU\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003c\u003c\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            + \"                                      \u0027//||\\\\\\\\`\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            + \"                                        \u0027\u0027``\";","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"        System.out.println(MORT);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"  Oh, it\u0027s you again...\\n  Mort, begrudgingly at your service.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"  Hmph, what do you want now?\");","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    public void exit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        this.sc.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"  With all due disrespect, leave me alone next time.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    public void printBorder() {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"  Error: Unable to load tasks. A new task list will be created.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    public void showAddMessage(Task task, int size) {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"  Seriously? Another one?\\n  Give me strength...\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"                + \"    \" + task + \"\\n\" + \"  You have \" + size + \" task\"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"                + (size \u003e 1 ? \"s\" : \"\") + \". Bummer.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    public void showDeleteMessage(Task task, int size) {","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        System.out.println(\"  Good riddance, I say.\\n    \" + task","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"                + \"\\n  You have \" + size + \" task\" + (size \u003d\u003d 1 ? \"\" : \"s\") + \".\");","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    public void showListMessage(int size) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  You don\u0027t have any tasks. Make yourself useful.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  *rolls eyes*\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"                    + \"  Do I have to?\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"                    + \"  Fine. Here are your tasks:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"    public String getMissingTaskError(CommandWord commandWord, int num) {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        case DELETE:","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"  Impressive. You\u0027ve figured out how to delete non-existent tasks.\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        case MARK:","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"  Brilliant. You\u0027ve asked me to mark an imaginary task as complete.\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"  Brilliant. You\u0027ve asked me to mark an imaginary task as incomplete.\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        return sb.append(\"  Task number \").append(num).append(\" does not exist.\").toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    public static String getUnknownCommandMessage(String command) {","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"        return \"  \u0027\" + command + \"\u0027 is not a valid command.\\n  If you want my help, the least \"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"                + \"you could do is say something I understand.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    public static String getCommandHelp(CommandWord keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder(\"  Type \\\"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"        switch (keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"        case TODO:","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"todo \u003cdescription\u003e\\\" to add a new todo.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new deadline.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"        case EVENT:","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new event.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"        case MARK:","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"mark \u003ctask number\u003e\\\" to mark a task as complete.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"unmark \u003ctask number\u003e\\\" to mark a task as incomplete.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"        case DELETE:","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"delete \u003ctask number\u003e\\\" to delete a task.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"        case FIND:","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"find \u003ckeyword\u003e\\\" to search for a task.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"    public void showFindMessage(String keyword, String result) {","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"        if (result.isBlank()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"            System.out.println(\"  No matches found for \u0027\" + keyword + \"\u0027. Did you have fun wasting my time?\");","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"            System.out.print(\"  Really? Find them yourself next time.\\n  Here\u0027s what I found for \u0027\"","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"                    + keyword + \"\u0027:\\n\" + result);","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":122}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankString_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"   \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  Somehow you\u0027re even more unbearable when you\u0027re silent.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e2.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public void parse_pipeCharacter_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"deadline spanish | homework /by 31/12/2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"event birthday | party /at 31/12/2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo read| a book\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  \u0027|\u0027 characters are not allowed in the task description.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        String actual1 \u003d e1.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        String actual2 \u003d e2.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        String actual3 \u003d e3.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, actual1), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, actual2), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, actual3));","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public void parse_unknownCommand_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"random word\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"list sss\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"bye asda\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        String msg \u003d \" is not a valid command.\\n  If you want my help, the least you could do is say \"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"                + \"something I understand.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d \"  \u0027random word\u0027\" + msg;","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d \"  \u0027list sss\u0027\" + msg;","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d \"  \u0027bye asda\u0027\" + msg;","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected3, e3.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"    public void parse_emptyFindKeyword_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"find\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"find \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"find  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  You\u0027re so helpful. What exactly am I supposed to look for?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"                + \"  Type \\\"find \u003ckeyword\u003e\\\" to search for a task.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e1.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e2.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e3.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    public void parse_wrongNumberFormat_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete asdf\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"mark a2a\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"unmark _3df\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        String msg \u003d \"  Do you need me to teach you what a number is?\\n  \u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg + \"asdf\u0027 is not a number.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg + \"a2a\u0027 is not a number.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg + \"_3df\u0027 is not a number.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected3, e3.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    public void parse_missingTaskNumber_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"mark  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"unmark  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"unmark\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"        String msg \u003d \"  Enter a task number, nitwit.\\n  Type \\\"\";","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg + \"mark \u003ctask number\u003e\\\" to mark a task as complete.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg + \"unmark \u003ctask number\u003e\\\" to mark a task as incomplete.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg + \"delete \u003ctask number\u003e\\\" to delete a task.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected3, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected1, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected3, e6.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankToDoDescription_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"                + \"  Type \\\"todo \u003cdescription\u003e\\\" to add a new todo.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e3.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankEventDescription_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event /at 1/1/2022 1630\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event  /at 1/1/2022 1630\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event /at Sunday\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"                + \"  Type \\\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new event.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e6.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankDeadlineDescription_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline /by 1/1/2022 1630\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline  /by 1/1/2022 1630\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline /by Sunday\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"izzahaj"},"content":"                + \"  Type \\\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new deadline.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":149,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e6.getMessage())","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"izzahaj"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":158,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"izzahaj"},"content":"    public void parse_missingDeadlineDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline / by 1/4/2022 0815\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline spanish homework\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":162,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline spanish homework \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline spanish homework  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline spanish homework/by\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"deadline spanish homework /by\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":167,"author":{"gitId":"izzahaj"},"content":"        Exception e7 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"deadline spanish homework /by \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":170,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  You do realise deadlines and events usually have a time or date, right?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":171,"author":{"gitId":"izzahaj"},"content":"                + \"  Type \\\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new deadline.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":173,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":174,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":175,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":176,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e6.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":179,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e7.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":180,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":181,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"izzahaj"},"content":"    public void parse_missingEventDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":184,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event / at 1/4/2022 0815\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event project meeting\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":186,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event project meeting \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event project meeting  \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event project meeting/at\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":189,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event project meeting /at\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"izzahaj"},"content":"        Exception e7 \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event project meeting /at \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":191,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"  You do realise deadlines and events usually have a time or date, right?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":192,"author":{"gitId":"izzahaj"},"content":"                + \"  Type \\\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new event.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":193,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":194,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":195,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":196,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":197,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":198,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":199,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e6.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":200,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e7.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":201,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":202,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":203,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDateTime_acceptedFormat_success() throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":204,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt1 \u003d Parser.convertStringToDateTime(\"1/4/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":205,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt2 \u003d Parser.convertStringToDateTime(\"1/04/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":206,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt3 \u003d Parser.convertStringToDateTime(\"01/4/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":207,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt4 \u003d Parser.convertStringToDateTime(\"01/04/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":208,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"2022-04-01T04:35\";","lastModifiedDate":"2022-08-28"},{"lineNumber":209,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, dt1.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":210,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, dt2.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":211,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, dt3.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":212,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, dt4.toString()));","lastModifiedDate":"2022-08-28"},{"lineNumber":213,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":214,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":215,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDate_acceptedFormat_success() throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":216,"author":{"gitId":"izzahaj"},"content":"        LocalDate d1 \u003d Parser.convertStringToDate(\"1/4/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":217,"author":{"gitId":"izzahaj"},"content":"        LocalDate d2 \u003d Parser.convertStringToDate(\"1/04/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":218,"author":{"gitId":"izzahaj"},"content":"        LocalDate d3 \u003d Parser.convertStringToDate(\"01/4/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":219,"author":{"gitId":"izzahaj"},"content":"        LocalDate d4 \u003d Parser.convertStringToDate(\"01/04/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":220,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"2022-04-01\";","lastModifiedDate":"2022-08-28"},{"lineNumber":221,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":222,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, d1.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":223,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, d2.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":224,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, d3.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":225,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, d4.toString()));","lastModifiedDate":"2022-08-28"},{"lineNumber":226,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":227,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":228,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":229,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDateTime_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":230,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":231,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1-4-2022 4 PM\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":232,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":233,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":234,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/4/22 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":235,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":236,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":237,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/4/2022  1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":238,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":239,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":240,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1 Apr 2022 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":241,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":242,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":243,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/4/2022 2500\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":244,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":245,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":246,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"32/4/2022 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":247,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":248,"author":{"gitId":"izzahaj"},"content":"        Exception e7 \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":249,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/13/2022 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":250,"author":{"gitId":"izzahaj"},"content":"        String msg1 \u003d \"  Invalid date or time: \u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":251,"author":{"gitId":"izzahaj"},"content":"        String msg2 \u003d \"\u0027\\n  Please enter a date and time with the following format: \u0027dd/mm/yyyy HHMM\u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":252,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg1 + \"1-4-2022 4 PM\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":253,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg1 + \"1/4/22 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":254,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg1 + \"1/4/2022  1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":255,"author":{"gitId":"izzahaj"},"content":"        String expected4 \u003d msg1 + \"1 Apr 2022 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":256,"author":{"gitId":"izzahaj"},"content":"        String expected5 \u003d msg1 + \"1/4/2022 2500\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":257,"author":{"gitId":"izzahaj"},"content":"        String expected6 \u003d msg1 + \"32/4/2022 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":258,"author":{"gitId":"izzahaj"},"content":"        String expected7 \u003d msg1 + \"1/13/2022 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":259,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":260,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":261,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":262,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected3, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":263,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected4, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":264,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected5, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":265,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected6, e6.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":266,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected7, e7.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":267,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":268,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":269,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":270,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":271,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(DukeException.class, () -\u003e Parser.convertStringToDate(\"1-4-2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":272,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(DukeException.class, () -\u003e Parser.convertStringToDate(\"1/4/22\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":273,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(DukeException.class, () -\u003e Parser.convertStringToDate(\"32/4/2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":274,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(DukeException.class, () -\u003e Parser.convertStringToDate(\"1/13/2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":275,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(DukeException.class, () -\u003e Parser.convertStringToDate(\"1 Apr 2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":276,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":277,"author":{"gitId":"izzahaj"},"content":"        String msg1 \u003d \"  Invalid date: \u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":278,"author":{"gitId":"izzahaj"},"content":"        String msg2 \u003d \"\u0027\\n  Please enter a date with the following format: \u0027dd/mm/yyyy\u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":279,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":280,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg1 + \"1-4-2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":281,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg1 + \"1/4/22\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":282,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg1 + \"32/4/2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":283,"author":{"gitId":"izzahaj"},"content":"        String expected4 \u003d msg1 + \"1/13/2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":284,"author":{"gitId":"izzahaj"},"content":"        String expected5 \u003d msg1 + \"1 Apr 2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":285,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":286,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":287,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":288,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected3, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":289,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected4, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":290,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected5, e5.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":291,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":292,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":293,"author":{"gitId":"izzahaj"},"content":"    public void testParseSavedTask() {","lastModifiedDate":"2022-08-28"},{"lineNumber":294,"author":{"gitId":"izzahaj"},"content":"        String[] p1 \u003d Parser.parseSavedTask(\"T | 0 | buy pen refill\");","lastModifiedDate":"2022-08-28"},{"lineNumber":295,"author":{"gitId":"izzahaj"},"content":"        String[] p2 \u003d Parser.parseSavedTask(\"E | 1 | birthday party | 1/1/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":296,"author":{"gitId":"izzahaj"},"content":"        String[] p3 \u003d Parser.parseSavedTask(\"D | 0 | project meeting | 1/1/2022 1630\");","lastModifiedDate":"2022-08-28"},{"lineNumber":297,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(p1.length, 3), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":298,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p1[0], \"T\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":299,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p1[1], \"0\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":300,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p1[2], \"buy pen refill\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":301,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2.length, 4), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":302,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[0], \"E\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":303,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[1], \"1\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":304,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[2], \"birthday party\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":305,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[3], \"1/1/2022\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":306,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3.length, 4), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":307,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3[0], \"D\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":308,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3[1], \"0\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":309,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3[2], \"project meeting\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":310,"author":{"gitId":"izzahaj"},"content":"                assertEquals(p3[3], \"1/1/2022 1630\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":311,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":312,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"izzahaj":312}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package duke.task;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"    private final Task task1 \u003d new Task(\"buy apples\", true);","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    private final Task task2 \u003d new Task(\"buy 6 apples \u0026 chicken\", false);","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"X\", task1.getStatusIcon());","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\" \", task2.getStatusIcon());","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    public void testGetSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"| 1 | buy apples\", task1.getSaveFormat());","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"| 0 | buy 6 apples \u0026 chicken\", task2.getSaveFormat());","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"[X] buy apples\", task1.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"[ ] buy 6 apples \u0026 chicken\", task2.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public void testIsMatch() {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        assertEquals(true, task2.isMatch(\"appl\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        assertEquals(true, task2.isMatch(\"6 APpl\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        assertEquals(true, task2.isMatch(\"buy 6 Appl\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        assertEquals(true, task2.isMatch(\"appl\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        assertEquals(false, task2.isMatch(\"[X]\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"        assertEquals(false, task2.isMatch(\"homework\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        assertEquals(false, task1.isMatch(\"[ ]\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"izzahaj":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"   ","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"todo ","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"todo window | door shopping","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"todo read a book","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"todo buy pen refill  ","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"event ","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"event /at Sunday 2-4pm","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"event /at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"event / at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"event  /at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"event /at 1/1/2022 1630 /at","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"event project meeting","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"event project meeting ","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"event project meeting /at","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"event project meeting /at ","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"event project meeting/at","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"event project meeting /at Sunday","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"event project meeting /at Sunday 2-4pm","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"event project meeting /at Sunday 2-4pm /at","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"event birthday party /at 1/1/2022 ","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022 4.30pm","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"event birthday party /at 1/1/2022 1630 ","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 32/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/13/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022 1665","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 01/01/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/01/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 01/1/2022","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"deadline ","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"deadline /by Wednesday 6pm","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"deadline /by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"deadline / by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"deadline  /by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"deadline /by 1/4/2022 0815 /by","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework ","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by ","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework/by","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by Wednesday","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by Wednesday 6pm","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by Wednesday 6pm /by","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"deadline assignment 2 /by 1/4/2022 ","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022 8.30am","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"deadline assignment 2 /by 1/4/2022 0815 ","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 32/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/13/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022 2815","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 01/04/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/04/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 01/4/2022","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"mark ","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"unmark","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"unmark ","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"mark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"unmark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"mark 60","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"unmark 60","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"delete","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"delete ","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"delete -1","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"delete 60","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"delete 3","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"find","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"find  ","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"find zebra","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"find BOOK","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"find book   ","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"find    book","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"find [d]","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"find proj","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"find [ ]","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"find 7","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"delete asdf","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"mark asdwa","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"unmark sawd","lastModifiedDate":"2022-08-16"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"list sss","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"bye asda","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"random word","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":98}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"if [ -e \"./data/duke.txt\" ]","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"then","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    rm data/duke.txt","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"fi","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*/*.java","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"izzahaj":6,"-":37}}]

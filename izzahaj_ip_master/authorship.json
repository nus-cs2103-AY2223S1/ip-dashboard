[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    mainClassName \u003d \"mort.Launcher\"","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    archiveBaseName \u003d \"mort\"","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"javafx {","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    version \u003d \"18.0.2\"","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.base\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"izzahaj":13,"-":41}},{"path":"src/main/java/mort/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Main;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public class Launcher {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":10}},{"path":"src/main/java/mort/Mort.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.command.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":" * Main class for Mort application","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"public class Mort {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    /** Contains methods that deal with loading and saving of tasks */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    /** List of tasks */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /** Deals with interactions with user */","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize Storage, TaskList and Ui.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public Mort() {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        } catch (MortException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     * Retrieves the responses based on the user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * @param input The user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * @return The string response.","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"            response.append(c.execute(tasks, ui, storage));","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        } catch (MortException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"            response.append(ui.getError(e.getMessage()));","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        } finally {","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"            return response.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"     * Retrieves the welcome message when the program first runs.","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"     * @return The welcome message.","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    public String welcome() {","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":59}},{"path":"src/main/java/mort/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.task.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import mort.task.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import mort.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskType;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import mort.task.ToDo;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /** Type of task to be added */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    private TaskType taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    private String description;","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    /** Date of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    private String dateString;","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialise the add command with the task type and description.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * @param taskType The task type.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     * @param description The task description.","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    public AddCommand(TaskType taskType, String description) {","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"        assert !this.description.isBlank() : \"desc should not be blank\";","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialise the add command with the task type, description and date.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     * @param taskType The task type.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"     * @param description The task description.","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"     * @param dateString The task date.","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    public AddCommand(TaskType taskType, String description, String dateString) {","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        assert !this.description.isBlank() : \"desc should not be blank\";","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        Task task \u003d createTask();","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        return ui.getAddMessage(task, tasks.getSize());","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    private Task createTask() throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        case TODO:","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"            task \u003d createDeadline();","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        case EVENT:","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"            task \u003d createEvent();","lastModifiedDate":"2022-09-07"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-07"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        ","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        return task;","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"    private Deadline createDeadline() throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        boolean hasTime \u003d dateString.contains(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        if (hasTime) {","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"            return new Deadline(this.description, Parser.convertStringToDateTime(this.dateString));","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"            return new Deadline(this.description, Parser.convertStringToDate(this.dateString));","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"    private Event createEvent() throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"        boolean hasTime \u003d dateString.contains(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"        if (hasTime) {","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"            return new Event(this.description, Parser.convertStringToDateTime(this.dateString));","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"            return new Event(this.description, Parser.convertStringToDate(this.dateString));","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":92}},{"path":"src/main/java/mort/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Represents a command to be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * @param ui The user interactions.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     * @param storage The task storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"     * @throws MortException If the command cannot be executed.","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"izzahaj":20}},{"path":"src/main/java/mort/command/CommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Command words that can be ysed","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public enum CommandWord {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND, VIEW","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":8}},{"path":"src/main/java/mort/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" * Represents a command to delete a task to the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /** Index of task to be deleted */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            Task task \u003d tasks.deleteTask(this.taskNumber - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"            return ui.getDeleteMessage(task, tasks.getSize());","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(ui.getMissingTaskError(CommandWord.DELETE, this.taskNumber));","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":31}},{"path":"src/main/java/mort/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Represents a command to exit the Duke program.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        return ui.getExitMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":15}},{"path":"src/main/java/mort/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Represents a command to find a task in the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Keyword to be searched */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private String keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        return ui.getFindMessage(this.keyword, tasks.find(this.keyword));","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"izzahaj":22}},{"path":"src/main/java/mort/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        return ui.getListMessage(tasks.list());","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":15}},{"path":"src/main/java/mort/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Represents a command to mark a task in the task list as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /** Index of task to be marked as complete */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            String markMessage \u003d tasks.markTask(this.taskNumber - 1);","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            return markMessage;","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(ui.getMissingTaskError(CommandWord.MARK, this.taskNumber));","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":29}},{"path":"src/main/java/mort/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" * Represents a command to mark a task in the task list as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    /** Index of the task to be marked as incomplete */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            String unmarkMessage \u003d tasks.unmarkTask(this.taskNumber - 1);","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            return unmarkMessage;","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(ui.getMissingTaskError(CommandWord.UNMARK, this.taskNumber));","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":29}},{"path":"src/main/java/mort/command/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.parser.Parser;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import mort.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":" * Represents a command to view all tasks for a given date.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /** Date of task **/","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private String dateString;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialise view command with the date of a task.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * @param dateString","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    public ViewCommand(String dateString) {","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        assert !this.dateString.isBlank();","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws MortException {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        LocalDate date \u003d Parser.convertStringToDate(dateString);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        return ui.getViewMessage(tasks.viewSchedule(date), date);","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"izzahaj":32}},{"path":"src/main/java/mort/exception/MortException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.exception;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * Class to handle Duke Exceptions.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public class MortException extends Exception {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"     * Constructor for DukeException with no detail message.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    public MortException() {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"     * Constructor for DukeException with specified detail message.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * @param msg The error message to be displayed.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public MortException(String msg) {","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        super(msg);","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":20}},{"path":"src/main/java/mort/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import mort.command.*;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import mort.task.TaskType;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import mort.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":" * Parser for parsing user inputs, dates and tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     * Parses and validates user input and returns a command to be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * @param fullCommand The command input by the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * @return The Command to be executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @throws MortException If command is invalid.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public static Command parse(String fullCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        String strippedCommand \u003d fullCommand.stripTrailing();","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        String[] parsedCommand \u003d strippedCommand.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        return createCommand(parsedCommand, strippedCommand);","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    private static Command createCommand(String[] parsedCommand, String strippedCommand) throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"            switch (parsedCommand[0]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"            case \"\":","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"Somehow you\u0027re even more unbearable when you\u0027re silent.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"                return validateToDo(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"                return validateDeadline(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"            case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"                return validateEvent(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"                return validateDelete(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"                return validateMark(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"                return validateUnmark(parsedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"            case \"view\":","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"                return validateView(parsedCommand);","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"            case \"find\":","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"                return validateFind(parsedCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"            case \"list\":","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"                return validateList(strippedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"                return validateBye(strippedCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(Ui.getUnknownCommandMessage(strippedCommand));","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"Do you need me to teach you what a number is?\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"                    + \"\u0027\" + parsedCommand[1] + \"\u0027 is not a number.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"     * Converts a given text string to a LocalDateTime object.","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"     * @param dateTime The text string with the format dd/M/yyyy HHmm.","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"     * @return The LocalDateTime object representing the date-time given in the string.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"     * @throws MortException If the input string does not follow the format or contains an invalid date-time.","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    public static LocalDateTime convertStringToDateTime(String dateTime) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"Invalid date or time: \u0027\" + dateTime + \"\u0027\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"                    + \"Please enter a date and time with the following format: \u0027dd/mm/yyyy HHMM\u0027\");","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"     * Converts a given text string to a LocalDate object.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"     * @param date The text string with the format dd/M/yyyy.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"     * @return The LocalDate object representing the date given in the string.","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"     * @throws MortException If the input string does not follow the format or contains an invalid date.","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    public static LocalDate convertStringToDate(String date) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"            return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"Invalid date: \u0027\" + date + \"\u0027\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"                    + \"Please enter a date with the following format: \u0027dd/mm/yyyy\u0027\");","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"     * Parses tasks from the saved text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"     * @param savedTask The text string to be parsed.","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"     * @return An array of strings containing the details of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"    public static String[] parseSavedTask(String savedTask) {","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"        return savedTask.split(\" \\\\| \", 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"    private static Command validateToDo(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankDescription \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"        boolean containsPipeCharacter \u003d !hasBlankDescription \u0026\u0026 parsedCommand[1].contains(\"|\");","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"        ","lastModifiedDate":"2022-09-07"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankDescription) {","lastModifiedDate":"2022-09-07"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.TODO));","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"        } else if (containsPipeCharacter) {","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"\u0027|\u0027 characters are not allowed in the task description.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"            return new AddCommand(TaskType.TODO, parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"    private static Command validateDeadline(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankDescriptionWithoutDate \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankDescriptionWithoutDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.DEADLINE));","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"            String[] parsedTask \u003d parsedCommand[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"            assert parsedTask.length \u003e 0 : \"Length of parsedTask should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"            boolean hasBlankDescriptionWithDate \u003d parsedTask[0].startsWith(\"/by\") || parsedTask[0].isBlank();","lastModifiedDate":"2022-09-07"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"            boolean hasBlankDate \u003d parsedTask.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"            boolean containsPipeCharacter \u003d parsedTask[0].contains(\"|\");","lastModifiedDate":"2022-09-07"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"            ","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"            if (hasBlankDescriptionWithDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"                        + Ui.getCommandHelp(CommandWord.DEADLINE));","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"            } else if (hasBlankDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"You do realise deadlines and events usually have a time or date,\"","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"                        + \" right?\\n\" + Ui.getCommandHelp(CommandWord.DEADLINE));","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"            } else if (containsPipeCharacter) {","lastModifiedDate":"2022-09-07"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"\u0027|\u0027 characters are not allowed in the task description.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"                return new AddCommand(TaskType.DEADLINE, parsedTask[0], parsedTask[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"izzahaj"},"content":"    private static Command validateEvent(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":150,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankDescriptionWithoutDate \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":151,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankDescriptionWithoutDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":153,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.EVENT));","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"izzahaj"},"content":"            String[] parsedTask \u003d parsedCommand[1].split(\" /at \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"izzahaj"},"content":"            assert parsedTask.length \u003e 0 : \"Length of parsedTask should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":158,"author":{"gitId":"izzahaj"},"content":"            boolean hasBlankDescriptionWithDate \u003d parsedTask[0].startsWith(\"/at\") || parsedTask[0].isBlank();","lastModifiedDate":"2022-09-07"},{"lineNumber":159,"author":{"gitId":"izzahaj"},"content":"            boolean hasBlankDate \u003d parsedTask.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":160,"author":{"gitId":"izzahaj"},"content":"            boolean containsPipeCharacter \u003d parsedTask[0].contains(\"|\");","lastModifiedDate":"2022-09-07"},{"lineNumber":161,"author":{"gitId":"izzahaj"},"content":"            ","lastModifiedDate":"2022-09-07"},{"lineNumber":162,"author":{"gitId":"izzahaj"},"content":"            if (hasBlankDescriptionWithDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":163,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":164,"author":{"gitId":"izzahaj"},"content":"                        + Ui.getCommandHelp(CommandWord.EVENT));","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"izzahaj"},"content":"            } else if (hasBlankDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":166,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"You do realise deadlines and events usually have a time or date,\"","lastModifiedDate":"2022-09-03"},{"lineNumber":167,"author":{"gitId":"izzahaj"},"content":"                        + \" right?\\n\" + Ui.getCommandHelp(CommandWord.EVENT));","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"izzahaj"},"content":"            } else if (containsPipeCharacter) {","lastModifiedDate":"2022-09-07"},{"lineNumber":169,"author":{"gitId":"izzahaj"},"content":"                throw new MortException(\"\u0027|\u0027 characters are not allowed in the task description.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":170,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"izzahaj"},"content":"                return new AddCommand(TaskType.EVENT, parsedTask[0], parsedTask[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"izzahaj"},"content":"    private static Command validateDelete(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":177,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":178,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankTaskNumber \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":179,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankTaskNumber) {","lastModifiedDate":"2022-09-07"},{"lineNumber":180,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"Enter a task number, nitwit.\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.DELETE));","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"izzahaj"},"content":"            int num \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"izzahaj"},"content":"            return new DeleteCommand(num);","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"izzahaj"},"content":"    private static Command validateMark(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":189,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":190,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankTaskNumber \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":191,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankTaskNumber) {","lastModifiedDate":"2022-09-07"},{"lineNumber":192,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"Enter a task number, nitwit.\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":193,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.MARK));","lastModifiedDate":"2022-08-28"},{"lineNumber":194,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"izzahaj"},"content":"            int num \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"izzahaj"},"content":"            return new MarkCommand(num);","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"izzahaj"},"content":"    private static Command validateView(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-10"},{"lineNumber":201,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-10"},{"lineNumber":202,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankDate \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-10"},{"lineNumber":203,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankDate) {","lastModifiedDate":"2022-09-10"},{"lineNumber":204,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"You can\u0027t give me a blank date just because you can\u0027t \"","lastModifiedDate":"2022-09-10"},{"lineNumber":205,"author":{"gitId":"izzahaj"},"content":"                    + \"get any for yourself.\\n\" + Ui.getCommandHelp(CommandWord.VIEW));","lastModifiedDate":"2022-09-10"},{"lineNumber":206,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":207,"author":{"gitId":"izzahaj"},"content":"            return new ViewCommand(parsedCommand[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":208,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":209,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":210,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":211,"author":{"gitId":"izzahaj"},"content":"    private static Command validateFind(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":212,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":213,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankKeyword \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-08"},{"lineNumber":214,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankKeyword) {","lastModifiedDate":"2022-09-08"},{"lineNumber":215,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"You\u0027re so helpful. What exactly am I supposed to look for?\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":216,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.FIND));","lastModifiedDate":"2022-08-28"},{"lineNumber":217,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":218,"author":{"gitId":"izzahaj"},"content":"            return new FindCommand(parsedCommand[1]);","lastModifiedDate":"2022-08-28"},{"lineNumber":219,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":220,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":221,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-05"},{"lineNumber":222,"author":{"gitId":"izzahaj"},"content":"    private static Command validateUnmark(String[] parsedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":223,"author":{"gitId":"izzahaj"},"content":"        assert parsedCommand.length \u003e 0 : \"Length of parsedCommand should be greater than 0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":224,"author":{"gitId":"izzahaj"},"content":"        boolean hasBlankTaskNumber \u003d parsedCommand.length \u003c 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":225,"author":{"gitId":"izzahaj"},"content":"        if (hasBlankTaskNumber) {","lastModifiedDate":"2022-09-07"},{"lineNumber":226,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"Enter a task number, nitwit.\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":227,"author":{"gitId":"izzahaj"},"content":"                    + Ui.getCommandHelp(CommandWord.UNMARK));","lastModifiedDate":"2022-08-28"},{"lineNumber":228,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":229,"author":{"gitId":"izzahaj"},"content":"            int num \u003d Integer.parseInt(parsedCommand[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":230,"author":{"gitId":"izzahaj"},"content":"            return new UnmarkCommand(num);","lastModifiedDate":"2022-08-27"},{"lineNumber":231,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":232,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":233,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":234,"author":{"gitId":"izzahaj"},"content":"    private static Command validateList(String strippedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":235,"author":{"gitId":"izzahaj"},"content":"        if (strippedCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":236,"author":{"gitId":"izzahaj"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":237,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":238,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(Ui.getUnknownCommandMessage(strippedCommand));","lastModifiedDate":"2022-09-03"},{"lineNumber":239,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":240,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":241,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":242,"author":{"gitId":"izzahaj"},"content":"    private static Command validateBye(String strippedCommand) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":243,"author":{"gitId":"izzahaj"},"content":"        if (strippedCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":244,"author":{"gitId":"izzahaj"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":245,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":246,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(Ui.getUnknownCommandMessage(strippedCommand));","lastModifiedDate":"2022-09-03"},{"lineNumber":247,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":248,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":249,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":249}},{"path":"src/main/java/mort/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"import mort.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"import mort.task.*;","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":" * Class that contains methods to save tasks to a file","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":" * and load tasks from a file.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    /** Path to directory of saved file */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    private Path directory;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    /** Directory where file is saved */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    private File fileDirectory;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    /** Path to the saved file */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    /** List containing tasks loaded from file */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize directory and path of the saved file and","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * the list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    public Storage() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        this.directory \u003d Paths.get(\"data\");","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        this.fileDirectory \u003d new File(this.directory.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        this.filePath \u003d Paths.get(this.directory.toString(), \"mort.txt\");","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"     * Saves the list of tasks to a text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     * @throws MortException If tasks list cannot be saved.","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    public void save(TaskList tasks) throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"            String savedTasks \u003d tasks.getSaveFormat();","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"            if (Files.exists(this.directory)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"                Files.write(this.filePath, savedTasks.getBytes());","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"                this.fileDirectory.mkdirs();","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"                Files.write(this.filePath, savedTasks.getBytes());","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"            throw new MortException(\"  Error: Unable to save tasks.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"     * Loads the list of tasks from a given text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"     * @return List of tasks from the given text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"     * @throws MortException If task list cannot be loaded.","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"    public ArrayList\u003cTask\u003e load() throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"            if (Files.exists(this.directory) \u0026\u0026 Files.exists(this.filePath)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"                List\u003cString\u003e allLines \u003d Files.readAllLines(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"                for (String line : allLines) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"                    String[] parsedTask \u003d Parser.parseSavedTask(line);","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"                    Task task \u003d createTask(parsedTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2022-09-07"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            return this.tasks;","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"            throw new MortException();","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"    private Task createTask(String[] parsedTask) throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"        String taskType \u003d parsedTask[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"        boolean isDone \u003d parsedTask[1].contains(\"1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"        String description \u003d parsedTask[2];","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        switch (taskType) {","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        case \"T\":","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"            task \u003d new ToDo(description, isDone);","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"        case \"D\":","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"            task \u003d createDeadline(description, isDone, parsedTask[3]);","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"        case \"E\":","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"            task \u003d createEvent(description, isDone, parsedTask[3]);","lastModifiedDate":"2022-09-07"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"        return task;","lastModifiedDate":"2022-09-07"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-07"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"    private Deadline createDeadline(String description, boolean isDone, String dateString) throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"        boolean hasTime \u003d dateString.contains(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        if (hasTime) {","lastModifiedDate":"2022-09-07"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"            LocalDateTime dateTime \u003d Parser.convertStringToDateTime(dateString);","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"            return new Deadline(description, dateTime, isDone);","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"            LocalDate date \u003d Parser.convertStringToDate(dateString);","lastModifiedDate":"2022-09-07"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"            return new Deadline(description, date, isDone);","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"    private Event createEvent(String description, boolean isDone, String dateString) throws MortException {","lastModifiedDate":"2022-09-07"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"        boolean hasTime \u003d dateString.contains(\" \");","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"        if (hasTime) {","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"            LocalDateTime dateTime \u003d Parser.convertStringToDateTime(dateString);","lastModifiedDate":"2022-09-07"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"            return new Event(description, dateTime, isDone);","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"            LocalDate date \u003d Parser.convertStringToDate(dateString);","lastModifiedDate":"2022-09-07"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"            return new Event(description, date, isDone);","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    } // add full commit message, changes already added/staged for commit","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":122}},{"path":"src/main/java/mort/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Class that represents a deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Due date of the deadline */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private LocalDate byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /** Due date-time of the deadline */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /** If deadline has a specified time */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private final boolean hasTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date of","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * the deadline. Completion status is always false when deadline is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * @param byDate The deadline due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDate byDate) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date-time of","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"     * the deadline. Completion status is always false when deadline is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * @param byDateTime The deadline due date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDateTime byDateTime) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        this.byDate \u003d byDateTime.toLocalDate();","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date of","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     * the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * @param byDate The deadline due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The deadline completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDate byDate, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and due date-time of","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     * the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * @param desc The deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     * @param byDateTime The deadline due date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The deadline completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"    public Deadline(String desc, LocalDateTime byDateTime, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"        this.byDate \u003d byDateTime.toLocalDate();","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    private String formatBy() {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            return this.byDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"    private String saveFormatBy() {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"            return this.byDate.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"     * Checks if a given date matches due date of the deadline.","lastModifiedDate":"2022-09-10"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"     * @param date","lastModifiedDate":"2022-09-10"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"     * @return True if there is a match; false otherwise.","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"    public boolean isDateMatch(LocalDate date) {","lastModifiedDate":"2022-09-10"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"        return this.byDate.isEqual(date);","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"     * Converts the deadline to its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"        return \"D \" + super.getSaveFormat() + \" | \" + this.saveFormatBy();","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatBy() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":115}},{"path":"src/main/java/mort/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":" * Class that represents an event.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Date of the event */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    private LocalDate atDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    /** Date-time of the event */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private LocalDateTime atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /** If event has a specified time */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private final boolean hasTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when event is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     * @param atDate The event date.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDate atDate) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date-time of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when event is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * @param atDateTime The event date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDateTime atDateTime) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        this.atDate \u003d atDateTime.toLocalDate();","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     * @param atDate The event date.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The event completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDate atDate, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description, completion status and date-time of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * @param desc The event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     * @param atDateTime The event date-time.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The event completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    public Event(String desc, LocalDateTime atDateTime, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        this.atDate \u003d atDateTime.toLocalDate();","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    private String formatAt() {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"            return this.atDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mm a\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"            return this.atDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    private String saveFormatAt() {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        if (this.hasTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"            return this.atDateTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"            return this.atDate.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"     * Checks if a given date matches date of the event.","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"     * @param date","lastModifiedDate":"2022-09-10"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"     * @return True if there is a match; false otherwise.","lastModifiedDate":"2022-09-10"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"    public boolean isDateMatch(LocalDate date) {","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"        return this.atDate.isEqual(date);","lastModifiedDate":"2022-09-10"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"     * Converts the event to its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"        return \"E \" + super.getSaveFormat() + \" | \" + this.saveFormatAt();","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.formatAt() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":112}},{"path":"src/main/java/mort/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":" * Class that represents a task.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    /** Description of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"    protected String desc;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"    /** Completion status of the task */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when task is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"     * @param desc The task description","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    public Task(String desc) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * @param desc The task description.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The task completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"     * Gets the string representation of the task status.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the task status.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public String mark() {","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"You can\u0027t finish the same task twice, genius.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"You really took your time with this one, didn\u0027t you?\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        return sb.append(\"  \").append(this).append(\"\\n\").toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"    public String unmark() {","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"You\u0027re trying to unmark a task you haven\u0027t done.\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"                    + \"Let that sink in for a moment.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"And here I was thinking you were getting somewhere...\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        return sb.append(\"  \").append(this).append(\"\\n\").toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"     * Checks if the given keyword is contained within the task.","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"     * @param keyword The given keyword to be matched.","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"     * @return True if there is a match; false otherwise.","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        return this.toString().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"     * Returns the task as a string in its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"        return \"| \" + (isDone ? 1 : 0) + \" | \" + this.desc;","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"     * Checks if a given date matches date of the task.","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"     * @param date","lastModifiedDate":"2022-09-10"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"     * @return True if there is a match; false otherwise.","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    public abstract boolean isDateMatch(LocalDate date);","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.desc;","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"izzahaj":105}},{"path":"src/main/java/mort/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.util.List;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":" * Class that stores the list of tasks and methods to manipulate the tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    /** List of tasks */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize list of tasks using a given task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"     * @param tasks The given task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * Prints all tasks in the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    public String list() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        return convertTasksToString(tasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        /*","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        this.tasks.forEach(t -\u003e sb.append(this.tasks.indexOf(t) + 1)","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"                .append(\". \").append(t).append(\"\\n\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        ","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"        ","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"         */","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"     * Adds a given task to the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"     * Deletes a given task from the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"     * Marks a given task as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be marked as complete.","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"    public String markTask(int index) {","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        return this.tasks.get(index).mark();","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"     * Marks a given task as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"     * @param index The index of the task to be marked as incomplete.","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        return this.tasks.get(index).unmark();","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"     * Returns the task list as a string in its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        this.tasks.forEach(t -\u003e sb.append(t.getSaveFormat()).append(\"\\n\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"     * @return The size of the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"     * Searches for tasks that matches the given keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"     * @param keyword The given keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"     * @return A string representing all possible matches.","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"        List\u003cTask\u003e filteredTasks \u003d filterTasks(task -\u003e task.isMatch(keyword));","lastModifiedDate":"2022-09-10"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        return convertTasksToString(filteredTasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"     * Shows all tasks scheduled on a given date.","lastModifiedDate":"2022-09-10"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"     * @param date","lastModifiedDate":"2022-09-10"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of all tasks on a given date.","lastModifiedDate":"2022-09-10"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"    public String viewSchedule(LocalDate date) {","lastModifiedDate":"2022-09-10"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"        List\u003cTask\u003e filteredTasks \u003d filterTasks(task -\u003e task.isDateMatch(date));","lastModifiedDate":"2022-09-10"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"        return convertTasksToString(filteredTasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"     * Filters the task list with the given condition.","lastModifiedDate":"2022-09-10"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"     * @param condition","lastModifiedDate":"2022-09-10"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"     * @return A list of tasks satisfying the given condition.","lastModifiedDate":"2022-09-10"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"    private List\u003cTask\u003e filterTasks(Predicate\u003cTask\u003e condition) {","lastModifiedDate":"2022-09-10"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"        return tasks.stream()","lastModifiedDate":"2022-09-10"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"                .filter(condition)","lastModifiedDate":"2022-09-10"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-10"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"     * Converts a given list of tasks to its string representation.","lastModifiedDate":"2022-09-10"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"     * @param tasks","lastModifiedDate":"2022-09-10"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of a given list of tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"    private String convertTasksToString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"        tasks.forEach(task -\u003e sb.append(tasks.indexOf(task) + 1)","lastModifiedDate":"2022-09-10"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"                .append(\". \")","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"                .append(task)","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"                .append(\"\\n\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"    } ","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":143}},{"path":"src/main/java/mort/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":" * The types of tasks that can be used.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"izzahaj":8}},{"path":"src/main/java/mort/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":" * Class that represents a to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"     * Completion status is always false when to-do is first created.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"     * @param desc The to-do description.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"        super(desc);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"     * Constructor to initialize the description and completion status of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"     * @param desc The to-do description.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"     * @param isDone The to-do completion status.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public ToDo(String desc, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        super(desc, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    public boolean isDateMatch(LocalDate date) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        return false;","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"     * Converts the to-do to its saved format.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the saved format of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        return \"T \" + super.getSaveFormat();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"     * Returns the string representation of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"     * @return The string representation of the to-do.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":49}},{"path":"src/main/java/mort/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    private final Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    private void flip() {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    public static DialogBox getMortDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        db.flip();","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        return db;","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":64}},{"path":"src/main/java/mort/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import mort.Mort;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":" * A GUI for Mort using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    private Mort mort \u003d new Mort();","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"            stage.setTitle(\"Mort\");","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMort(mort);","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"            stage.show();","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":33}},{"path":"src/main/java/mort/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"import mort.Mort;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    private Mort mort;","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.png\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    private Image mortImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mort.png\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"    private BackgroundImage background \u003d new BackgroundImage(","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/parchmentbg.jpeg\")),","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"            BackgroundRepeat.REPEAT,","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"            BackgroundRepeat.REPEAT,","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"            BackgroundPosition.DEFAULT,","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"            BackgroundSize.DEFAULT);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        userInput.setStyle(\"-fx-control-inner-background: #DCD7C9; -fx-background-radius: 5px;\");","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        scrollPane.setBackground(new Background(background));","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        dialogContainer.setBackground(new Background(background));","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        sendButton.setStyle(\"-fx-background-color: #553939; -fx-background-radius: 5px; -fx-text-fill: #ffffff\");","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"    public void setMort(Mort m) {","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        mort \u003d m;","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        showWelcomeMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"        String response \u003d mort.getResponse(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"                DialogBox.getMortDialog(response, mortImage)","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        ","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"            //reused syinyichen","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            });","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"            pause.play();","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getMortDialog(mort.welcome(), mortImage));","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":85}},{"path":"src/main/java/mort/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import mort.command.CommandWord;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import mort.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":" * Class that deals with user interactions.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"public class Ui {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    public Ui() {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"        return \"Oh, it\u0027s you again...\\nMort, begrudgingly at your service.\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"                + \"Hmph, what do you want now?\";","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    public String getExitMessage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        return \"With all due disrespect, leave me alone next time.\";","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    public String getError(String errorMessage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        return errorMessage;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    public String getAddMessage(Task task, int size) {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        return \"Seriously? Another one?\\nGive me strength...\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"                + \"  \" + task + \"\\n\" + \"You have \" + size + \" task\"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"                + (size \u003e 1 ? \"s\" : \"\") + \". Bummer.\";","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"    public String getDeleteMessage(Task task, int size) {","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        return \"Good riddance, I say.\\n  \" + task","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"                + \"\\nYou have \" + size + \" task\" + (size \u003d\u003d 1 ? \"\" : \"s\") + \".\";","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"    public String getListMessage(String tasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        if (tasks.isBlank()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"            return \"You don\u0027t have any tasks. Make yourself useful.\\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"            return \"*rolls eyes*\\nFine. Here are your tasks:\\n\" + tasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    public String getMissingTaskError(CommandWord commandWord, int num) {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"        case DELETE:","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"Impressive. You\u0027ve figured out how to delete non-existent tasks.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        case MARK:","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"Brilliant. You\u0027ve asked me to mark an imaginary task as complete.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"Brilliant. You\u0027ve asked me to mark an imaginary task as incomplete.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        return sb.append(\"Task number \").append(num).append(\" does not exist.\").toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"    public static String getUnknownCommandMessage(String command) {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        return \"\u0027\" + command + \"\u0027 is not a valid command.\\nIf you want my help, the least \"","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"                + \"you could do is say something I understand.\";","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"    public static String getCommandHelp(CommandWord keyword) {","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Type \\\"\");","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"        case TODO:","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"todo \u003cdescription\u003e\\\" to add a new todo.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new deadline.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        case EVENT:","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new event.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        case MARK:","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"mark \u003ctask number\u003e\\\" to mark a task as complete.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"unmark \u003ctask number\u003e\\\" to mark a task as incomplete.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        case DELETE:","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"delete \u003ctask number\u003e\\\" to delete a task.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"        case FIND:","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"find \u003ckeyword\u003e\\\" to search for a task.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        case VIEW:","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"            sb.append(\"view \u003cdate\u003e\\\" to view all tasks on that date.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"            break;","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"    public String getFindMessage(String keyword, String result) {","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"        if (result.isBlank()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"            return \"No matches found for \u0027\" + keyword + \"\u0027. Did you have fun wasting my time?\";","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"            return \"Really? Find them yourself next time.\\nHere\u0027s what I found for \u0027\"","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"                    + keyword + \"\u0027:\\n\" + result;","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"    public String getViewMessage(String tasks, LocalDate date) {","lastModifiedDate":"2022-09-10"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"        if (tasks.isBlank()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"            return \"You don\u0027t have any tasks on \" + formattedDate + \". Make yourself useful.\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"            return \"Do I have to?\\nWhatever. Here are your tasks for \" + formattedDate + \":\\n\" + tasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":117}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"         xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"                \u003cInsets left\u003d\"10.0\" top\u003d\"5.0\" bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"                \u003cFont name\u003d\"Palatino\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"2.5\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"            prefHeight\u003d\"800.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/18\"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"mort.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"758.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"                   prefWidth\u003d\"424.0\" promptText\u003d\"Enter a command\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"                \u003cFont name\u003d\"Helvetica Neue\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"                \u003cFont name\u003d\"Helvetica Neue\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"             \u003c/font\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"752.0\" prefWidth\u003d\"488.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"izzahaj":32}},{"path":"src/test/java/mort/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"import mort.exception.MortException;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankString_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"   \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"Somehow you\u0027re even more unbearable when you\u0027re silent.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e2.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"    public void parse_pipeCharacter_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"deadline spanish | homework /by 31/12/2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"event birthday | party /at 31/12/2022\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"todo read| a book\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"\u0027|\u0027 characters are not allowed in the task description.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        String actual1 \u003d e1.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        String actual2 \u003d e2.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        String actual3 \u003d e3.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, actual1), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, actual2), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, actual3));","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"    public void parse_unknownCommand_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"random word\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"list sss\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"bye asda\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"        String msg \u003d \" is not a valid command.\\nIf you want my help, the least you could do is say \"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"                + \"something I understand.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d \"\u0027random word\u0027\" + msg;","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d \"\u0027list sss\u0027\" + msg;","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d \"\u0027bye asda\u0027\" + msg;","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected3, e3.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"    public void parse_emptyFindKeyword_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"find\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"find \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"find  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"You\u0027re so helpful. What exactly am I supposed to look for?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"find \u003ckeyword\u003e\\\" to search for a task.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e1.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e2.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e3.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"    public void parse_emptyViewDate_exceptionThrown() {","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"view\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"view \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"view  \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"You can\u0027t give me a blank date just because you can\u0027t get any for yourself.\\n\"","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"view \u003cdate\u003e\\\" to view all tasks on that date.\";","lastModifiedDate":"2022-09-10"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e1.getMessage());","lastModifiedDate":"2022-09-10"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e2.getMessage());","lastModifiedDate":"2022-09-10"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"        assertEquals(expected, e3.getMessage());","lastModifiedDate":"2022-09-10"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"    public void parse_wrongNumberFormat_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"delete asdf\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"mark a2a\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"unmark _3df\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"        String msg \u003d \"Do you need me to teach you what a number is?\\n\u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg + \"asdf\u0027 is not a number.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg + \"a2a\u0027 is not a number.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg + \"_3df\u0027 is not a number.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected3, e3.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"izzahaj"},"content":"    public void parse_missingTaskNumber_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"mark  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"unmark  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"delete  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"unmark\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"izzahaj"},"content":"        String msg \u003d \"Enter a task number, nitwit.\\nType \\\"\";","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg + \"mark \u003ctask number\u003e\\\" to mark a task as complete.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg + \"unmark \u003ctask number\u003e\\\" to mark a task as incomplete.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg + \"delete \u003ctask number\u003e\\\" to delete a task.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected3, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected1, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected3, e6.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankToDoDescription_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"todo  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"todo \u003cdescription\u003e\\\" to add a new todo.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e3.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankEventDescription_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event /at 1/1/2022 1630\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event  /at 1/1/2022 1630\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event /at Sunday\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new event.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":149,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e6.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"izzahaj"},"content":"    public void parse_blankDeadlineDescription_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline /by 1/1/2022 1630\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline  /by 1/1/2022 1630\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline /by Sunday\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"It seems you\u0027ve invented a way to do nothing. Typical...\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new deadline.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":162,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":167,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e6.getMessage())","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"izzahaj"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":170,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":171,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"izzahaj"},"content":"    public void parse_missingDeadlineDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":173,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline / by 1/4/2022 0815\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":174,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline spanish homework\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":175,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline spanish homework \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":176,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline spanish homework  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":177,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"deadline spanish homework/by\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":178,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":179,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"deadline spanish homework /by\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":180,"author":{"gitId":"izzahaj"},"content":"        Exception e7 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"izzahaj"},"content":"                Parser.parse(\"deadline spanish homework /by \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"You do realise deadlines and events usually have a time or date, right?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":184,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new deadline.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":186,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":189,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":191,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e6.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":192,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e7.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":193,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":194,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":195,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":196,"author":{"gitId":"izzahaj"},"content":"    public void parse_missingEventDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":197,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event / at 1/4/2022 0815\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":198,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event project meeting\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":199,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event project meeting \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":200,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event project meeting  \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":201,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event project meeting/at\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":202,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event project meeting /at\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":203,"author":{"gitId":"izzahaj"},"content":"        Exception e7 \u003d assertThrows(MortException.class, () -\u003e Parser.parse(\"event project meeting /at \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":204,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"You do realise deadlines and events usually have a time or date, right?\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":205,"author":{"gitId":"izzahaj"},"content":"                + \"Type \\\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e[optional]\\\" to add a new event.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":206,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":207,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":208,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":209,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":210,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":211,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":212,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, e6.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":213,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, e7.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":214,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":215,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":216,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDateTime_acceptedFormat_success() throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":217,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt1 \u003d Parser.convertStringToDateTime(\"1/4/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":218,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt2 \u003d Parser.convertStringToDateTime(\"1/04/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":219,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt3 \u003d Parser.convertStringToDateTime(\"01/4/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":220,"author":{"gitId":"izzahaj"},"content":"        LocalDateTime dt4 \u003d Parser.convertStringToDateTime(\"01/04/2022 0435\");","lastModifiedDate":"2022-08-28"},{"lineNumber":221,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"2022-04-01T04:35\";","lastModifiedDate":"2022-08-28"},{"lineNumber":222,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, dt1.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":223,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, dt2.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":224,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, dt3.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":225,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, dt4.toString()));","lastModifiedDate":"2022-08-28"},{"lineNumber":226,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":227,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":228,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDate_acceptedFormat_success() throws MortException {","lastModifiedDate":"2022-09-03"},{"lineNumber":229,"author":{"gitId":"izzahaj"},"content":"        LocalDate d1 \u003d Parser.convertStringToDate(\"1/4/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":230,"author":{"gitId":"izzahaj"},"content":"        LocalDate d2 \u003d Parser.convertStringToDate(\"1/04/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":231,"author":{"gitId":"izzahaj"},"content":"        LocalDate d3 \u003d Parser.convertStringToDate(\"01/4/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":232,"author":{"gitId":"izzahaj"},"content":"        LocalDate d4 \u003d Parser.convertStringToDate(\"01/04/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":233,"author":{"gitId":"izzahaj"},"content":"        String expected \u003d \"2022-04-01\";","lastModifiedDate":"2022-08-28"},{"lineNumber":234,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":235,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected, d1.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":236,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, d2.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":237,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected, d3.toString()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":238,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected, d4.toString()));","lastModifiedDate":"2022-08-28"},{"lineNumber":239,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":240,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":241,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":242,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDateTime_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":243,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":244,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1-4-2022 4 PM\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":245,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":246,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":247,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/4/22 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":248,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":249,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":250,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/4/2022  1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":251,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":252,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":253,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1 Apr 2022 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":254,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":255,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":256,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/4/2022 2500\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":257,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":258,"author":{"gitId":"izzahaj"},"content":"        Exception e6 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":259,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"32/4/2022 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":260,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":261,"author":{"gitId":"izzahaj"},"content":"        Exception e7 \u003d assertThrows(MortException.class, () -\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":262,"author":{"gitId":"izzahaj"},"content":"                Parser.convertStringToDateTime(\"1/13/2022 1600\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":263,"author":{"gitId":"izzahaj"},"content":"        String msg1 \u003d \"Invalid date or time: \u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":264,"author":{"gitId":"izzahaj"},"content":"        String msg2 \u003d \"\u0027\\nPlease enter a date and time with the following format: \u0027dd/mm/yyyy HHMM\u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":265,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg1 + \"1-4-2022 4 PM\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":266,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg1 + \"1/4/22 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":267,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg1 + \"1/4/2022  1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":268,"author":{"gitId":"izzahaj"},"content":"        String expected4 \u003d msg1 + \"1 Apr 2022 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":269,"author":{"gitId":"izzahaj"},"content":"        String expected5 \u003d msg1 + \"1/4/2022 2500\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":270,"author":{"gitId":"izzahaj"},"content":"        String expected6 \u003d msg1 + \"32/4/2022 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":271,"author":{"gitId":"izzahaj"},"content":"        String expected7 \u003d msg1 + \"1/13/2022 1600\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":272,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":273,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":274,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":275,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected3, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":276,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected4, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":277,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected5, e5.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":278,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected6, e6.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":279,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected7, e7.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":280,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":281,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":282,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":283,"author":{"gitId":"izzahaj"},"content":"    public void convertStringToDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":284,"author":{"gitId":"izzahaj"},"content":"        Exception e1 \u003d assertThrows(MortException.class, () -\u003e Parser.convertStringToDate(\"1-4-2022\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":285,"author":{"gitId":"izzahaj"},"content":"        Exception e2 \u003d assertThrows(MortException.class, () -\u003e Parser.convertStringToDate(\"1/4/22\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":286,"author":{"gitId":"izzahaj"},"content":"        Exception e3 \u003d assertThrows(MortException.class, () -\u003e Parser.convertStringToDate(\"32/4/2022\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":287,"author":{"gitId":"izzahaj"},"content":"        Exception e4 \u003d assertThrows(MortException.class, () -\u003e Parser.convertStringToDate(\"1/13/2022\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":288,"author":{"gitId":"izzahaj"},"content":"        Exception e5 \u003d assertThrows(MortException.class, () -\u003e Parser.convertStringToDate(\"1 Apr 2022\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":289,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":290,"author":{"gitId":"izzahaj"},"content":"        String msg1 \u003d \"Invalid date: \u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":291,"author":{"gitId":"izzahaj"},"content":"        String msg2 \u003d \"\u0027\\nPlease enter a date with the following format: \u0027dd/mm/yyyy\u0027\";","lastModifiedDate":"2022-08-28"},{"lineNumber":292,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":293,"author":{"gitId":"izzahaj"},"content":"        String expected1 \u003d msg1 + \"1-4-2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":294,"author":{"gitId":"izzahaj"},"content":"        String expected2 \u003d msg1 + \"1/4/22\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":295,"author":{"gitId":"izzahaj"},"content":"        String expected3 \u003d msg1 + \"32/4/2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":296,"author":{"gitId":"izzahaj"},"content":"        String expected4 \u003d msg1 + \"1/13/2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":297,"author":{"gitId":"izzahaj"},"content":"        String expected5 \u003d msg1 + \"1 Apr 2022\" + msg2;","lastModifiedDate":"2022-08-28"},{"lineNumber":298,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":299,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(expected1, e1.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":300,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected2, e2.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":301,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected3, e3.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":302,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(expected4, e4.getMessage()), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":303,"author":{"gitId":"izzahaj"},"content":"                assertEquals(expected5, e5.getMessage()));","lastModifiedDate":"2022-08-28"},{"lineNumber":304,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":305,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":306,"author":{"gitId":"izzahaj"},"content":"    public void testParseSavedTask() {","lastModifiedDate":"2022-08-28"},{"lineNumber":307,"author":{"gitId":"izzahaj"},"content":"        String[] p1 \u003d Parser.parseSavedTask(\"T | 0 | buy pen refill\");","lastModifiedDate":"2022-08-28"},{"lineNumber":308,"author":{"gitId":"izzahaj"},"content":"        String[] p2 \u003d Parser.parseSavedTask(\"E | 1 | birthday party | 1/1/2022\");","lastModifiedDate":"2022-08-28"},{"lineNumber":309,"author":{"gitId":"izzahaj"},"content":"        String[] p3 \u003d Parser.parseSavedTask(\"D | 0 | project meeting | 1/1/2022 1630\");","lastModifiedDate":"2022-08-28"},{"lineNumber":310,"author":{"gitId":"izzahaj"},"content":"        assertAll(() -\u003e assertEquals(p1.length, 3), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":311,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p1[0], \"T\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":312,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p1[1], \"0\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":313,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p1[2], \"buy pen refill\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":314,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2.length, 4), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":315,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[0], \"E\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":316,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[1], \"1\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":317,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[2], \"birthday party\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":318,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p2[3], \"1/1/2022\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":319,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3.length, 4), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":320,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3[0], \"D\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":321,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3[1], \"0\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":322,"author":{"gitId":"izzahaj"},"content":"                        assertEquals(p3[2], \"project meeting\"), () -\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":323,"author":{"gitId":"izzahaj"},"content":"                assertEquals(p3[3], \"1/1/2022 1630\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":324,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":325,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"izzahaj":325}},{"path":"src/test/java/mort/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"package mort.task;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"public class ToDoTest {","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"    private final ToDo todo1 \u003d new ToDo(\"buy apples\", true);","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"    private final ToDo todo2 \u003d new ToDo(\"buy 6 apples \u0026 chicken\", false);","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"    private final LocalDate date \u003d LocalDate.parse(\"31/12/1926\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"X\", todo1.getStatusIcon());","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\" \", todo2.getStatusIcon());","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"    public void testGetSaveFormat() {","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"T | 1 | buy apples\", todo1.getSaveFormat());","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"T | 0 | buy 6 apples \u0026 chicken\", todo2.getSaveFormat());","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"    public void testToString() {","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"[T][X] buy apples\", todo1.toString());","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"        assertEquals(\"[T][ ] buy 6 apples \u0026 chicken\", todo2.toString());","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"    public void testIsMatch() {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"        assertTrue(todo2.isMatch(\"appl\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"        assertTrue(todo2.isMatch(\"6 APpl\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"        assertTrue(todo2.isMatch(\"buy 6 Appl\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"        assertTrue(todo2.isMatch(\"appl\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"        assertFalse(todo2.isMatch(\"[X]\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"        assertFalse(todo2.isMatch(\"homework\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"        assertFalse(todo1.isMatch(\"[ ]\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"    ","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"    public void testIsDateMatch() {","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"        assertFalse(todo1.isDateMatch(date));","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"        assertFalse(todo2.isDateMatch(date));","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"izzahaj":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"izzahaj"},"content":"   ","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"izzahaj"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"izzahaj"},"content":"todo ","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"izzahaj"},"content":"todo window | door shopping","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"izzahaj"},"content":"todo read a book","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"izzahaj"},"content":"todo buy pen refill  ","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"izzahaj"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"izzahaj"},"content":"event ","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"izzahaj"},"content":"event /at Sunday 2-4pm","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"izzahaj"},"content":"event /at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"izzahaj"},"content":"event / at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"izzahaj"},"content":"event  /at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"event /at 1/1/2022 1630 /at","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"event project meeting","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"event project meeting ","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"event project meeting /at","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"event project meeting /at ","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"izzahaj"},"content":"event project meeting/at","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"event project meeting /at Sunday","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"izzahaj"},"content":"event project meeting /at Sunday 2-4pm","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"izzahaj"},"content":"event project meeting /at Sunday 2-4pm /at","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"izzahaj"},"content":"event birthday party /at 1/1/2022 ","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022 4.30pm","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"izzahaj"},"content":"event birthday party /at 1/1/2022 1630 ","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 32/1/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/13/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/1/2022 1665","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 01/01/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 1/01/2022 1630","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"izzahaj"},"content":"event project meeting /at 01/1/2022","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"izzahaj"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"izzahaj"},"content":"deadline ","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"izzahaj"},"content":"deadline /by Wednesday 6pm","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"izzahaj"},"content":"deadline /by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"izzahaj"},"content":"deadline / by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"izzahaj"},"content":"deadline  /by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"izzahaj"},"content":"deadline /by 1/4/2022 0815 /by","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework ","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by ","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework/by","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by Wednesday","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by Wednesday 6pm","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by Wednesday 6pm /by","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"izzahaj"},"content":"deadline assignment 2 /by 1/4/2022 ","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022 8.30am","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"izzahaj"},"content":"deadline assignment 2 /by 1/4/2022 0815 ","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 32/4/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/13/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/4/2022 2815","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 01/04/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 1/04/2022 0815","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"izzahaj"},"content":"deadline spanish homework /by 01/4/2022","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"izzahaj"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"izzahaj"},"content":"mark ","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"izzahaj"},"content":"unmark","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"izzahaj"},"content":"unmark ","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"izzahaj"},"content":"mark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"izzahaj"},"content":"unmark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"izzahaj"},"content":"mark 60","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"izzahaj"},"content":"unmark 60","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"izzahaj"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"izzahaj"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"izzahaj"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"izzahaj"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":76,"author":{"gitId":"izzahaj"},"content":"delete","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"izzahaj"},"content":"delete ","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"izzahaj"},"content":"delete -1","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"izzahaj"},"content":"delete 60","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"izzahaj"},"content":"delete 3","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"izzahaj"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"izzahaj"},"content":"find","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"izzahaj"},"content":"find  ","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"izzahaj"},"content":"find zebra","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"izzahaj"},"content":"find BOOK","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"izzahaj"},"content":"find book   ","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"izzahaj"},"content":"find    book","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"izzahaj"},"content":"find [d]","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"izzahaj"},"content":"find proj","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"izzahaj"},"content":"find [ ]","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"izzahaj"},"content":"find 7","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"izzahaj"},"content":"delete asdf","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"izzahaj"},"content":"mark asdwa","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"izzahaj"},"content":"unmark sawd","lastModifiedDate":"2022-08-16"},{"lineNumber":95,"author":{"gitId":"izzahaj"},"content":"list sss","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"izzahaj"},"content":"bye asda","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"izzahaj"},"content":"random word","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"izzahaj"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"izzahaj":98}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"izzahaj"},"content":"if [ -e \"./data/duke.txt\" ]","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"izzahaj"},"content":"then","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"izzahaj"},"content":"    rm data/duke.txt","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"izzahaj"},"content":"fi","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"izzahaj"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"izzahaj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*/*.java","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"izzahaj":6,"-":37}}]

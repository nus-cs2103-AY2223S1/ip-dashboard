[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    archiveBaseName \u003d \"shiba\"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"checkstyle {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jasonchristopher21":21,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"# Shiba - User Guide","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"Shiba is a **desktop app for managing tasks, deadlines and events, intended for use via a Command Line Interface** (CLI). ","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"## Contents","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"- [Usage](#usage)","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"- [Frequently Asked Questions](#frequently-asked-questions)","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"## Quick Start","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"2. Download the latest `Duke.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Shiba.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"   ![PlainUi](PlainUi.png)","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`**.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    * **`list`** : Lists all tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    * **`todo`**`something` : Adds a todo named `something` to the list of tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    * **`mark`**`1` : Marks task number `1` in the list of tasks as done.","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    * **`bye`** : Exits the app.","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"6. Refer to the [features](#features) below for details of each command.","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"## Features ","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"1. [Add task](#1-add-task)","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"   - [Add ToDo: `todo`](#todo---add-todo-task)","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"   - [Add Deadline: `deadline`](#deadline---add-deadline-task)","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"   - [Add Event: `event`](#event---add-event-task)","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"2. [List tasks: `list`](#2-list-tasks)","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"3. [Mark tasks as done](#3-mark-tasks-as-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"   - [Mark single task as done: `mark [number]`](#mark-task-number---mark-a-specific-task-as-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"   - [Mark a range of tasks as done: `mark [start of range] - [end of range]`](#mark-start-of-range---end-of-range---mark-a-range-of-tasks-as-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"   - [Mark all tasks as done: `mark all`](#mark-all---mark-all-tasks-as-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"4. [Mark tasks as not done](#4-mark-tasks-as-not-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"   - [Mark single task as not done: `unmark [number]`](#unmark-task-number---mark-a-specific-task-as-not-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"   - [Mark a range of tasks as not done: `unmark [start of range] - [end of range]`](#unmark-start-of-range---end-of-range---mark-a-range-of-tasks-as-not-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"   - [Mark all tasks as not done: `unmark all`](#unmark-all---mark-all-tasks-as-not-done)","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"5. [Delete tasks](#5-delete-tasks)","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"   - [Delete a single task: `mark [number]`](#delete-task-number---delete-a-specific-task)","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"   - [Delete a range of tasks: `delete [start of range] - [end of range]`](#delete-start-of-range---end-of-range---delete-a-range-of-tasks)","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"   - [Delete all tasks: `delete all`](#delete-all---delete-all-tasks)","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"6. [Find task: `find`](#6-find-tasks)","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"7. [Exit Shiba: `bye`](#7-exit-shiba)","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"* Items in square brackets are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"  e.g. in `todo [description]`, `description` is a parameter which can be used as `todo something`.","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"* Parameters must strictly be in order.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"  e.g. if the command specifies `deadline [description] /by [date] [time]`, order of parameters cannot be switched.","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"## 1. Add Task","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"### `todo` - Add ToDo task","lastModifiedDate":"2022-09-17"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"Adds a **ToDo** to the list of tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `todo [description]`","lastModifiedDate":"2022-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"* `todo buy groceries`","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"* `todo sleep`","lastModifiedDate":"2022-09-17"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with","lastModifiedDate":"2022-09-17"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to add this task: ","lastModifiedDate":"2022-09-17"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"[T][ ] buy groceries ","lastModifiedDate":"2022-09-17"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"### `deadline` - Add Deadline task","lastModifiedDate":"2022-09-17"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"Adds a **deadline** to the list of tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `deadline [description] /by [date] [time]`","lastModifiedDate":"2022-09-17"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"Important note:","lastModifiedDate":"2022-09-17"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"* `[date]` should be of the form `YYYY-MM-DD`.","lastModifiedDate":"2022-09-17"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"* `[time]` should be in the 24-hour format without any dots or spaces \u003cbr\u003e (i.e. 07.59 a.m. would be written as `0759`).","lastModifiedDate":"2022-09-17"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"* `deadline finish CS2103/T project /by 2022-09-16 2359`","lastModifiedDate":"2022-09-17"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"* `deadline read CS2103/T lecture /by 2022-09-20 0600`","lastModifiedDate":"2022-09-17"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with","lastModifiedDate":"2022-09-17"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to add this task: ","lastModifiedDate":"2022-09-17"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"[D][ ] finish CS2103/T project (by: Sep 16 2022 11.59p.m.) ","lastModifiedDate":"2022-09-17"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"### `event` - Add Event task","lastModifiedDate":"2022-09-17"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"Adds an **event** to the list of tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `event [description] /at [date] [time]`","lastModifiedDate":"2022-09-17"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"Important note:","lastModifiedDate":"2022-09-17"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"* `[date]` should be of the form `YYYY-MM-DD`.","lastModifiedDate":"2022-09-17"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"* `[time]` should be in the 24-hour format without any dots or spaces \u003cbr\u003e (i.e. 07.59 a.m. would be written as `0759`).","lastModifiedDate":"2022-09-17"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"* `event attend CS2103/T lecture /at 2022-09-16 1600`","lastModifiedDate":"2022-09-17"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"* `event recess week starts /at 2022-09-20 0600`","lastModifiedDate":"2022-09-17"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with","lastModifiedDate":"2022-09-17"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to add this event: ","lastModifiedDate":"2022-09-17"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"[E][ ] attend CS2103/T lecture (at: Sep 16 2022 4.00p.m.)","lastModifiedDate":"2022-09-17"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"## 2. List Tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"### `list` - Lists the current tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"Shows the list of all the tasks (todo, deadline and event) in your current list of tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage: `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with","lastModifiedDate":"2022-09-17"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":162,"author":{"gitId":"jasonchristopher21"},"content":"1.[E][ ] attend CS2103/T lecture (at: Sep 16 2022 4.00p.m.)","lastModifiedDate":"2022-09-17"},{"lineNumber":163,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":164,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":165,"author":{"gitId":"jasonchristopher21"},"content":"## 3. Mark Tasks as Done","lastModifiedDate":"2022-09-17"},{"lineNumber":166,"author":{"gitId":"jasonchristopher21"},"content":"### `mark [task number]` - Mark a specific task as done","lastModifiedDate":"2022-09-17"},{"lineNumber":167,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":168,"author":{"gitId":"jasonchristopher21"},"content":"Marks a specific task in the current list of tasks as done. The task is specified by providing the task order in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":169,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":170,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `mark [task number]`","lastModifiedDate":"2022-09-17"},{"lineNumber":171,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":172,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":173,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":174,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":175,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":176,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":177,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":178,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":179,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":180,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":181,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":182,"author":{"gitId":"jasonchristopher21"},"content":"Notice that task B appears as task number `2` in the given list. To mark task B as done, execute","lastModifiedDate":"2022-09-17"},{"lineNumber":183,"author":{"gitId":"jasonchristopher21"},"content":" ","lastModifiedDate":"2022-09-17"},{"lineNumber":184,"author":{"gitId":"jasonchristopher21"},"content":"`mark 2`","lastModifiedDate":"2022-09-17"},{"lineNumber":185,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":186,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":187,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":188,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":189,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":190,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":191,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to mark the following task(s) as done:","lastModifiedDate":"2022-09-17"},{"lineNumber":192,"author":{"gitId":"jasonchristopher21"},"content":"[T][X] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":193,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":194,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":195,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":196,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":197,"author":{"gitId":"jasonchristopher21"},"content":"### `mark [start of range] - [end of range]` - Mark a range of tasks as done","lastModifiedDate":"2022-09-17"},{"lineNumber":198,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":199,"author":{"gitId":"jasonchristopher21"},"content":"Marks a range of tasks in the current list as done. The task is specified by providing the order of the first task to be marked, followed by a hyphen and the order of the last task to be marked in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":200,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":201,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `mark [start of range] - [end of range]`","lastModifiedDate":"2022-09-17"},{"lineNumber":202,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":203,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":204,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":205,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":206,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":207,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":208,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":209,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":210,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":211,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":212,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":213,"author":{"gitId":"jasonchristopher21"},"content":"To mark task B and task C as done, run the command","lastModifiedDate":"2022-09-17"},{"lineNumber":214,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":215,"author":{"gitId":"jasonchristopher21"},"content":"`mark 2 - 3`","lastModifiedDate":"2022-09-17"},{"lineNumber":216,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":217,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":218,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":219,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":220,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":221,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":222,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to mark the following task(s) as done:","lastModifiedDate":"2022-09-17"},{"lineNumber":223,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][X] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":224,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][X] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":225,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":226,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":227,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":228,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":229,"author":{"gitId":"jasonchristopher21"},"content":"### `mark all` - Mark all tasks as done","lastModifiedDate":"2022-09-17"},{"lineNumber":230,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":231,"author":{"gitId":"jasonchristopher21"},"content":"Marks all tasks in the current list as done.","lastModifiedDate":"2022-09-17"},{"lineNumber":232,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":233,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `mark all`","lastModifiedDate":"2022-09-17"},{"lineNumber":234,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":235,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":236,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":237,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":238,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":239,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":240,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":241,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":242,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":243,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":244,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":245,"author":{"gitId":"jasonchristopher21"},"content":"To mark all tasks as done, run the command","lastModifiedDate":"2022-09-17"},{"lineNumber":246,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":247,"author":{"gitId":"jasonchristopher21"},"content":"`mark all`","lastModifiedDate":"2022-09-17"},{"lineNumber":248,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":249,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":250,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":251,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":252,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":253,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":254,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to mark the following task(s) as done:","lastModifiedDate":"2022-09-17"},{"lineNumber":255,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][X] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":256,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][X] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":257,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][X] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":258,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":259,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":260,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":261,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":262,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":263,"author":{"gitId":"jasonchristopher21"},"content":"## 4. Mark Tasks as Not Done","lastModifiedDate":"2022-09-17"},{"lineNumber":264,"author":{"gitId":"jasonchristopher21"},"content":"### `unmark [task number]` - Mark a specific task as not done","lastModifiedDate":"2022-09-17"},{"lineNumber":265,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":266,"author":{"gitId":"jasonchristopher21"},"content":"Marks a specific task in the current list of tasks as not done. The task is specified by providing the task order in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":267,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":268,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `unmark [task number]`","lastModifiedDate":"2022-09-17"},{"lineNumber":269,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":270,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":271,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":272,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":273,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":274,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":275,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][X] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":276,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][X] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":277,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][X] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":278,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":279,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":280,"author":{"gitId":"jasonchristopher21"},"content":"Notice that task B appears as task number `2` in the given list. To mark task B as not done, execute","lastModifiedDate":"2022-09-17"},{"lineNumber":281,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":282,"author":{"gitId":"jasonchristopher21"},"content":"`unmark 2`","lastModifiedDate":"2022-09-17"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":286,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":287,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":288,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":289,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to mark the following task(s) as not done:","lastModifiedDate":"2022-09-17"},{"lineNumber":290,"author":{"gitId":"jasonchristopher21"},"content":"[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":291,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":292,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":293,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":294,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":295,"author":{"gitId":"jasonchristopher21"},"content":"### `unmark [start of range] - [end of range]` - Mark a range of tasks as not done","lastModifiedDate":"2022-09-17"},{"lineNumber":296,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":297,"author":{"gitId":"jasonchristopher21"},"content":"Marks a range of tasks in the current list as not done. The task is specified by providing the order of the first task to be marked, followed by a hyphen and the order of the last task to be marked in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":299,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `unmark [start of range] - [end of range]`","lastModifiedDate":"2022-09-17"},{"lineNumber":300,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":301,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":302,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":303,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":304,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":305,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":306,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][X] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":307,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][X] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":308,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][X] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":309,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":311,"author":{"gitId":"jasonchristopher21"},"content":"To mark task B and task C as not done, run the command","lastModifiedDate":"2022-09-17"},{"lineNumber":312,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":313,"author":{"gitId":"jasonchristopher21"},"content":"`unmark 2 - 3`","lastModifiedDate":"2022-09-17"},{"lineNumber":314,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":315,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":316,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":317,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":318,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":319,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":320,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to mark the following task(s) as not done:","lastModifiedDate":"2022-09-17"},{"lineNumber":321,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":322,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":323,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":324,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":325,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":326,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":327,"author":{"gitId":"jasonchristopher21"},"content":"### `unmark all` - Mark all tasks as not done","lastModifiedDate":"2022-09-17"},{"lineNumber":328,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":329,"author":{"gitId":"jasonchristopher21"},"content":"Marks all tasks in the current list as not done.","lastModifiedDate":"2022-09-17"},{"lineNumber":330,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":331,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `unmark all`","lastModifiedDate":"2022-09-17"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":335,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":336,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":337,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":338,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][X] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":339,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][X] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":340,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][X] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":341,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":342,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":343,"author":{"gitId":"jasonchristopher21"},"content":"To mark all tasks as not done, run the command","lastModifiedDate":"2022-09-17"},{"lineNumber":344,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":345,"author":{"gitId":"jasonchristopher21"},"content":"`unmark all`","lastModifiedDate":"2022-09-17"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":349,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":350,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":351,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":352,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to mark the following task(s) as not done:","lastModifiedDate":"2022-09-17"},{"lineNumber":353,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":354,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":355,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":356,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":357,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":358,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":359,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":360,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":361,"author":{"gitId":"jasonchristopher21"},"content":"## 5. Delete Tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":362,"author":{"gitId":"jasonchristopher21"},"content":"### `delete [task number]` - Delete a specific task","lastModifiedDate":"2022-09-17"},{"lineNumber":363,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":364,"author":{"gitId":"jasonchristopher21"},"content":"Removes a specific task from the current list. The task is specified by providing the task order in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":365,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":366,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `delete [task number]`","lastModifiedDate":"2022-09-17"},{"lineNumber":367,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":368,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":369,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":370,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":371,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":372,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":373,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":374,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":375,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":376,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":377,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":378,"author":{"gitId":"jasonchristopher21"},"content":"Notice that task B appears as task number `2` in the given list. To delete task B, execute","lastModifiedDate":"2022-09-17"},{"lineNumber":379,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":380,"author":{"gitId":"jasonchristopher21"},"content":"`delete 2`","lastModifiedDate":"2022-09-17"},{"lineNumber":381,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":382,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":383,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":384,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":385,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":386,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":387,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to delete the following task(s):","lastModifiedDate":"2022-09-17"},{"lineNumber":388,"author":{"gitId":"jasonchristopher21"},"content":"[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":389,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":390,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":391,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":392,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":393,"author":{"gitId":"jasonchristopher21"},"content":"### `delete [start of range] - [end of range]` - Delete a range of tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":394,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":395,"author":{"gitId":"jasonchristopher21"},"content":"Removes a range of tasks from the current list of tasks. The task is specified by providing the order of the first task to be deleted, followed by a hyphen and the order of the last task to be deleted in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":396,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":397,"author":{"gitId":"jasonchristopher21"},"content":"Command Format: `delete [start of range] - [end of range]`","lastModifiedDate":"2022-09-17"},{"lineNumber":398,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":399,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":400,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":401,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":402,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":403,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":404,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":405,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":406,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":407,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":408,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":409,"author":{"gitId":"jasonchristopher21"},"content":"To delete task B and task C, run the command","lastModifiedDate":"2022-09-17"},{"lineNumber":410,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":411,"author":{"gitId":"jasonchristopher21"},"content":"`delete 2 - 3`","lastModifiedDate":"2022-09-17"},{"lineNumber":412,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":413,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":414,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":415,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":416,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":417,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":418,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to delete the following task(s):","lastModifiedDate":"2022-09-17"},{"lineNumber":419,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":420,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":421,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":422,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":423,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":424,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":425,"author":{"gitId":"jasonchristopher21"},"content":"### `delete all` - Delete all tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":426,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":427,"author":{"gitId":"jasonchristopher21"},"content":"Removes all tasks from the current list of tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":428,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":429,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `delete all`","lastModifiedDate":"2022-09-17"},{"lineNumber":430,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":431,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage:","lastModifiedDate":"2022-09-17"},{"lineNumber":432,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":433,"author":{"gitId":"jasonchristopher21"},"content":"Suppose `list` provides us with the following output","lastModifiedDate":"2022-09-17"},{"lineNumber":434,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":435,"author":{"gitId":"jasonchristopher21"},"content":"Listed below are the tasks I remember: ","lastModifiedDate":"2022-09-17"},{"lineNumber":436,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":437,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":438,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":439,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":440,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":441,"author":{"gitId":"jasonchristopher21"},"content":"To delete all tasks, run the command","lastModifiedDate":"2022-09-17"},{"lineNumber":442,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":443,"author":{"gitId":"jasonchristopher21"},"content":"`delete all`","lastModifiedDate":"2022-09-17"},{"lineNumber":444,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":445,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":446,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":447,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":448,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":449,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":450,"author":{"gitId":"jasonchristopher21"},"content":"Woof! I managed to delete the following task(s):","lastModifiedDate":"2022-09-17"},{"lineNumber":451,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task A","lastModifiedDate":"2022-09-17"},{"lineNumber":452,"author":{"gitId":"jasonchristopher21"},"content":"2.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":453,"author":{"gitId":"jasonchristopher21"},"content":"3.[T][ ] task C","lastModifiedDate":"2022-09-17"},{"lineNumber":454,"author":{"gitId":"jasonchristopher21"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":455,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":456,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":457,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":458,"author":{"gitId":"jasonchristopher21"},"content":"## 6. Find tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":459,"author":{"gitId":"jasonchristopher21"},"content":"### `find` - Find task containing keyword","lastModifiedDate":"2022-09-17"},{"lineNumber":460,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":461,"author":{"gitId":"jasonchristopher21"},"content":"Finds the task containing a specific keyword. Keyword can be a string or a number.","lastModifiedDate":"2022-09-17"},{"lineNumber":462,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":463,"author":{"gitId":"jasonchristopher21"},"content":":bulb: **Tip:**","lastModifiedDate":"2022-09-19"},{"lineNumber":464,"author":{"gitId":"jasonchristopher21"},"content":"The keyword is case-sensitive. Proper capitalisation is advised when using this command.","lastModifiedDate":"2022-09-19"},{"lineNumber":465,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":466,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `find [keyword]`","lastModifiedDate":"2022-09-17"},{"lineNumber":467,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":468,"author":{"gitId":"jasonchristopher21"},"content":"Example of usage: ","lastModifiedDate":"2022-09-17"},{"lineNumber":469,"author":{"gitId":"jasonchristopher21"},"content":"* `find B`","lastModifiedDate":"2022-09-17"},{"lineNumber":470,"author":{"gitId":"jasonchristopher21"},"content":"* `find CS2103`","lastModifiedDate":"2022-09-17"},{"lineNumber":471,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":472,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":473,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":474,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":475,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":476,"author":{"gitId":"jasonchristopher21"},"content":"Woof! Here\u0027s some results I found associated with \"B\": ","lastModifiedDate":"2022-09-17"},{"lineNumber":477,"author":{"gitId":"jasonchristopher21"},"content":"1.[T][ ] task B","lastModifiedDate":"2022-09-17"},{"lineNumber":478,"author":{"gitId":"jasonchristopher21"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":479,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-17"},{"lineNumber":480,"author":{"gitId":"jasonchristopher21"},"content":"## 7. Exit Shiba","lastModifiedDate":"2022-09-17"},{"lineNumber":481,"author":{"gitId":"jasonchristopher21"},"content":"### `bye` - Exits the Shiba app","lastModifiedDate":"2022-09-17"},{"lineNumber":482,"author":{"gitId":"jasonchristopher21"},"content":"Exits the Shiba app. Saves the current tasks in your computer for later use.","lastModifiedDate":"2022-09-17"},{"lineNumber":483,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":484,"author":{"gitId":"jasonchristopher21"},"content":"Command format: `bye`","lastModifiedDate":"2022-09-17"},{"lineNumber":485,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":486,"author":{"gitId":"jasonchristopher21"},"content":"Expected outcome:","lastModifiedDate":"2022-09-17"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":488,"author":{"gitId":"jasonchristopher21"},"content":"Shiba will respond with:","lastModifiedDate":"2022-09-17"},{"lineNumber":489,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":490,"author":{"gitId":"jasonchristopher21"},"content":"Shiba hope you had a productive time today!","lastModifiedDate":"2022-09-17"},{"lineNumber":491,"author":{"gitId":"jasonchristopher21"},"content":"Don\u0027t forget to come and work with me again ","lastModifiedDate":"2022-09-17"},{"lineNumber":492,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":493,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":494,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":495,"author":{"gitId":"jasonchristopher21"},"content":"## Frequently Asked Questions","lastModifiedDate":"2022-09-19"},{"lineNumber":496,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":497,"author":{"gitId":"jasonchristopher21"},"content":"**Q**: How do I run the application in my computer? The double click does not seem to be working \u003cbr\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":498,"author":{"gitId":"jasonchristopher21"},"content":"**A**: You can try opening your terminal in your computer and proceed to the directory containing the `Shiba.jar` file. ","lastModifiedDate":"2022-09-19"},{"lineNumber":499,"author":{"gitId":"jasonchristopher21"},"content":"Once opened, you can try to run `java -jar Shiba.jar`. \u003cbr\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":500,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":501,"author":{"gitId":"jasonchristopher21"},"content":"**Q**: I cannot input the date and format when running the `deadline` and `event` commands. What should I do? \u003cbr\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":502,"author":{"gitId":"jasonchristopher21"},"content":"**A**: You can first check the order of your arguments. It should be in the form `deadline [description] /by [date] [time]`","lastModifiedDate":"2022-09-19"},{"lineNumber":503,"author":{"gitId":"jasonchristopher21"},"content":"for deadline and `event [description] /at [date] [time] ` for event. \u003cbr\u003e ","lastModifiedDate":"2022-09-19"},{"lineNumber":504,"author":{"gitId":"jasonchristopher21"},"content":"You may also want to check your date and time format. \u003cbr\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":505,"author":{"gitId":"jasonchristopher21"},"content":"Dates should be in the form of `YYYY-MM-DD`, and time in the 24-hour format `HHMM` (e.g. 06.05 p.m. of Monday, 19th ","lastModifiedDate":"2022-09-19"},{"lineNumber":506,"author":{"gitId":"jasonchristopher21"},"content":"September 2022) would be written as `2022-09-19 1805`.","lastModifiedDate":"2022-09-19"},{"lineNumber":507,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":508,"author":{"gitId":"jasonchristopher21"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":509,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":510,"author":{"gitId":"jasonchristopher21"},"content":"## Command Summary","lastModifiedDate":"2022-09-19"},{"lineNumber":511,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":512,"author":{"gitId":"jasonchristopher21"},"content":"| Action                                                                                                       | Format                                     | Example                                              | ","lastModifiedDate":"2022-09-19"},{"lineNumber":513,"author":{"gitId":"jasonchristopher21"},"content":"|--------------------------------------------------------------------------------------------------------------|--------------------------------------------|------------------------------------------------------|","lastModifiedDate":"2022-09-19"},{"lineNumber":514,"author":{"gitId":"jasonchristopher21"},"content":"| [Add Todo](#todo---add-todo-task)                                                                            | `todo [description]`                       | `todo buy groceries`                                 |","lastModifiedDate":"2022-09-19"},{"lineNumber":515,"author":{"gitId":"jasonchristopher21"},"content":"| [Add Deadline](#deadline---add-deadline-task)                                                                | `deadline [description] /by [date] [time]` | `deadline read CS2103/T lecture /by 2022-09-20 0600` |","lastModifiedDate":"2022-09-19"},{"lineNumber":516,"author":{"gitId":"jasonchristopher21"},"content":"| [Add Event](#event---add-event-task)                                                                         | `event [description] /at [date] [time]`    | `event recess week starts /at 2022-09-20 0600`       |","lastModifiedDate":"2022-09-19"},{"lineNumber":517,"author":{"gitId":"jasonchristopher21"},"content":"| [List tasks](#2-list-tasks)                                                                                  | `list`                                     | `list`                                               |","lastModifiedDate":"2022-09-19"},{"lineNumber":518,"author":{"gitId":"jasonchristopher21"},"content":"| [Mark single task as done](#3-mark-tasks-as-done)                                                            | `mark [number]`                            | `mark 1`                                             |","lastModifiedDate":"2022-09-19"},{"lineNumber":519,"author":{"gitId":"jasonchristopher21"},"content":"| [Mark range of tasks as done](#mark-start-of-range---end-of-range---mark-a-range-of-tasks-as-done)           | `mark [start of range] - [end of range]`   | `mark 1 - 2`                                         |","lastModifiedDate":"2022-09-19"},{"lineNumber":520,"author":{"gitId":"jasonchristopher21"},"content":"| [Mark all tasks as done](#mark-all---mark-all-tasks-as-done)                                                 | `mark all`                                 | `mark all`                                           |","lastModifiedDate":"2022-09-19"},{"lineNumber":521,"author":{"gitId":"jasonchristopher21"},"content":"| [Mark single task as not done](#unmark-task-number---mark-a-specific-task-as-not-done)                       | `unmark [task number]`                     | `unmark 1`                                           |","lastModifiedDate":"2022-09-19"},{"lineNumber":522,"author":{"gitId":"jasonchristopher21"},"content":"| [Mark range of tasks as not done](#unmark-start-of-range---end-of-range---mark-a-range-of-tasks-as-not-done) | `unmark [start of range] - [end of range]` | `unmark 1 - 2`                                       |","lastModifiedDate":"2022-09-19"},{"lineNumber":523,"author":{"gitId":"jasonchristopher21"},"content":"| [Mark all tasks as not done](#unmark-all---mark-all-tasks-as-not-done)                                       | `unmark all`                               | `unmark all`                                         |","lastModifiedDate":"2022-09-19"},{"lineNumber":524,"author":{"gitId":"jasonchristopher21"},"content":"| [Delete a single task](#delete-task-number---delete-a-specific-task)                                         | `delete [task number]`                     | `delete 1`                                           |","lastModifiedDate":"2022-09-19"},{"lineNumber":525,"author":{"gitId":"jasonchristopher21"},"content":"| [Delete a range of tasks](#delete-start-of-range---end-of-range---delete-a-range-of-tasks)                   | `delete [start of range] - [end of range]` | `delete 1 - 2`                                       |","lastModifiedDate":"2022-09-19"},{"lineNumber":526,"author":{"gitId":"jasonchristopher21"},"content":"| [Delete all tasks](#delete-all---delete-all-tasks)                                                           | `delete all`                               | `delete all`                                         |","lastModifiedDate":"2022-09-19"},{"lineNumber":527,"author":{"gitId":"jasonchristopher21"},"content":"| [Find task](#6-find-tasks)                                                                                   | `find [keyword]`                           | `find something`                                     | ","lastModifiedDate":"2022-09-19"},{"lineNumber":528,"author":{"gitId":"jasonchristopher21"},"content":"| [Exit](#7-exit-shiba)                                                                                        | `bye`                                      | `bye`                                                |","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"jasonchristopher21":498,"-":30}},{"path":"src/main/data/userTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"N|todo task A","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"N|todo task C","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"N|todo say hello","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"jasonchristopher21":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    private void flip() {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        db.flip();","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        return db;","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Launcher is a class that launches the GUI for the chatbot.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class Launcher {","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"     * Main method to run the logic of the Launcher.","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args String of arguments.","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":16}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.Shiba;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    private Shiba shiba \u003d new Shiba();","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"            stage.setTitle(\"Shiba\");","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(shiba);","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"            stage.show();","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import duke.Shiba;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":" * Main Window for the application GUI","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    private Shiba duke;","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Neko.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Shiba.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    public void setDuke(Shiba d) {","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * Greets the user with a greeting message.","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    public void greetUser() {","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        String line1 \u003d \"Hello! I\u0027m Shiba \\uD83D\\uDC15\\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        String line2 \u003d \"The task management dog you can trust!\\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        String line3 \u003d \"What can I do for you today?\";","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"        String greetMessage \u003d line1 + line2 + line3;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"                DialogBox.getDukeDialog(greetMessage, dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"        if (duke.isClosed()) {","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"            CompletableFuture.delayedExecutor(2, TimeUnit.SECONDS).execute(Platform::exit);","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":73}},{"path":"src/main/java/duke/Shiba.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"public class Shiba {","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String LINE \u003d \"    __________________________________________________________________________\";","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String INDENT \u003d \"     \";","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    private boolean isClosed \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    private Parser parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Duke object. Initialises the fields ui, storage and parser.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    public Shiba() {","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"            tasks \u003d new TaskList(storage.retrieveTasks());","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args arguments supplied by the user at program launch","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"        Shiba duke \u003d new Shiba();","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        duke.run();","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    private void run() {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isByeCommand \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        while (!isByeCommand) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"                ui.drawLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"                isByeCommand \u003d c.isByeCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"            } finally {","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"                ui.drawLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"     * Runs the main logic of the program.","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"     * @return The response from executing the command.","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException If there are no commands.","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"            output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"            isClosed \u003d c.isByeCommand();","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        return output;","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"     * Checks if the last user command is a bye command","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     * @return true if the last user command is a bye command, false otherwise","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isClosed() {","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"        return isClosed;","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jasonchristopher21":96,"-":2}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to end the current session","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a ByeCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        return true;","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to store the current tasks to the local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        String msg \u003d getMessage();","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        storage.writeToFile(tasks.toArrayList());","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(msg);","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        return msg;","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the message to be returned from the ByeCommand","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the message to be returned from the ByeCommand","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    private String getMessage() {","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        return \"Shiba hope you had a productive time today!\\nDon\u0027t forget to come and work with me again \\uD83D\\uDC36\";","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":58}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * An abstract class that encapsulates the Command instance","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public abstract boolean isByeCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the result","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":32}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" * Command to add a deadline to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! I managed to add this task: \\n\";","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a DeadlineCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @param by The deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the date does not follow the correct format","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    public DeadlineCommand(String description, String by) throws DukeInvalidDateException {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        deadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to add the specified deadline task to the","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d getResultString(tasks, deadline);","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     * @param task The task to be printed","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks, Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + task + \" \" + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":73}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.MassOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * Command to delete a task from the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! I managed to delete the following task(s):\";","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private MassOperation massOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a DeleteCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @param massOperation the index of the task to be deleted","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public DeleteCommand(MassOperation massOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        this.massOperation \u003d massOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to delete the specified task from the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"            String tasksToShow \u003d tasks.deleteBasedOnMassOperation(massOperation);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            String result \u003d getResultString(tasks, tasksToShow);","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"            return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasksToShow A string representation of the tasks to be shown to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks, String tasksToShow) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + System.lineSeparator() + tasksToShow + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":72}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" * Adds an Event task to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! I managed to add this event: \\n\";","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    private Event event;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs an Event command instance","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @param at The date of the event","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the date of the event does not follow","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     *     the correct date format","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    public EventCommand(String description, String at) throws DukeInvalidDateException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"        event \u003d new Event(description, at);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to add the specified Event task to the","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        tasks.add(event);","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d getResultString(tasks, event);","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"     * @param task The event to be printed","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks, Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + event + System.lineSeparator() + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":73}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to find the commands that matches a given string","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! Here\u0027s some results I found associated with \\\"%s\\\": \";","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private String keyword;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a FindCommand instance","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * @param keyword the String to find in the list of tasks","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to find the command and show the list to the user","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found, or cannot be marked","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d getResultString(tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"        return String.format(MESSAGE_SUCCESS, keyword) + System.lineSeparator() + tasks.showFilteredList(keyword);","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jasonchristopher21":64}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to show an invalid command to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    private String message;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs an IncorrectCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @param message the message to be displayed to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public IncorrectCommand(String message) {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to display the command message to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d getResultString();","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showErrorMessage(result);","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the incorrect command message","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the incorrect command message","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"    private String getResultString() {","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        return \"Woof! \" + message;","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":60}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to display the list of tasks to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed below are the tasks I remember: \";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a ListCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public ListCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to display the list of tasks to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered when showing the list","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d getResultString(tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + System.lineSeparator() + tasks.showList();","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":59}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.MassOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * Command to mark a command as done","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! I managed to mark the following task(s) as done:\";","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private MassOperation massOp;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a MarkCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op the mass operation to be applied to the mark command","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public MarkCommand(MassOperation op) {","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        massOp \u003d op;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to mark the specified task as done","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found, or cannot be marked","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"            String tasksToShow \u003d tasks.markBasedOnMassOperation(massOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            String result \u003d getResultString(tasks, tasksToShow);","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"            return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasksToShow A string representation of the tasks to be shown to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks, String tasksToShow) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + System.lineSeparator() + tasksToShow + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":72}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Command to add a todo task to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! I managed to add this task: \\n\";","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    private Todo todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs the TodoCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"        todo \u003d new Todo(description);","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to add the specified todo task to the","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d getResultString(tasks, todo);","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * @param task The task to be printed","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks, Task task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + task + \" \" + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":69}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.MassOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * Command to mark a task as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! I managed to mark the following task(s) as not done:\";","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private MassOperation massOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs an UnmarkCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @param massOperation the mass operation specifying the range of the unmark operation","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public UnmarkCommand(MassOperation massOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        this.massOperation \u003d massOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to mark the specified task as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found, or cannot be marked","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"            String tasksToShow \u003d tasks.unmarkBasedOnMassOperation(massOperation);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            String result \u003d getResultString(tasks, tasksToShow);","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"            return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the result to be returned to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks An ArrayList of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasksToShow A string representation of the tasks to be shown to the user","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string presentation of the arraylist and the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResultString(TaskList tasks, String tasksToShow) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        return MESSAGE_SUCCESS + System.lineSeparator() + tasksToShow + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":72}},{"path":"src/main/java/duke/exceptions/DukeEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeEmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeEmptyDescriptionException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Commands todo, deadline and event should have a description\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Shiba says: \\\"OOPS! \" + message + \"\\\" ☹\");","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidCommandException() {","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"You have entered an invalid command\");","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/exceptions/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidDateException extends DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidDateException() {","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"An invalid date has been entered. Date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/exceptions/DukeInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidFormatException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidFormatException(String type, String missingExpr) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(type + \" should have a \" + missingExpr + \" command and a specified date in its description\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeInvalidNumberFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidNumberFormatException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidNumberFormatException(String command) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Invalid number format detected. Enter something like \\\"\" + command + \" 1 \\\"\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/exceptions/DukeOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeOutOfRangeException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeOutOfRangeException(int range) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Task not found! Your number should be from 0 to \" + range);","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeUnspecifiedNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeUnspecifiedNumberException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeUnspecifiedNumberException(String command) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(command + \" command should be specified with a task number\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/massops/AllOperation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.massops;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a MassOperation that executes a command to all instances of the task","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class AllOperation extends MassOperation {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    public String getOperationIdentifier() {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"        return \"all\";","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"jasonchristopher21":17}},{"path":"src/main/java/duke/massops/MassOperation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.massops;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Mass Operation in Duke","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public abstract class MassOperation {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public abstract String getOperationIdentifier();","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"jasonchristopher21":14}},{"path":"src/main/java/duke/massops/RangeOperation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.massops;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a RangeOperation in Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class RangeOperation extends MassOperation {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    protected int startRange;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    protected int endRange;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs the RangeOperation object with a start range and an end range","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     * @param startRange the index to start the execution from","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     * @param endRange the index to end the task execution","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    public RangeOperation(int startRange, int endRange) {","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"        this.startRange \u003d startRange;","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"        this.endRange \u003d endRange;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a RangeOperation object with an integer array of a start range as the first element and","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * an end range as the second element","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @param range","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    public RangeOperation(int[] range) {","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        assert(range.length \u003d\u003d 2);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"        this.startRange \u003d range[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        this.endRange \u003d range[1];","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    public String getOperationIdentifier() {","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"        return \"range\";","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public int getStartRange() {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        return startRange;","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    public int getEndRange() {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        return endRange;","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"jasonchristopher21":50}},{"path":"src/main/java/duke/massops/SingleOperation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.massops;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a mass operation that operates only on a single input","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class SingleOperation extends MassOperation {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    private int index;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs the SingleOperation object","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the index of the task to be executed","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public SingleOperation(int index) {","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the operation identifier for the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    public String getOperationIdentifier() {","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        return \"single\";","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the index of the specified task to be operated on","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the index of the specified task to be operated on","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    public int getIndex() {","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"        return index;","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"jasonchristopher21":37}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeEmptyDescriptionException;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidCommandException;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidFormatException;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.AllOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.MassOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.RangeOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.SingleOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":" * Parses the input from the user to their specific commands","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"public class Parser {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public static final Pattern STORED_TASK_DATA_RAW_FORMAT \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"            Pattern.compile(\"(N|M)\\\\|(event|todo|deadline)\\\\s+(.*)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the input from the user to their commands","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param input a string containing the command input by the user","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a Command corresponding to the input string","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        final Matcher matcher \u003d prepareMatcher(input);","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"        final String commandWord \u003d extractCommandWord(matcher);","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        final String arguments \u003d extractArguments(matcher);","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareTodo(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareDeadline(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareEvent(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareDelete(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareMark(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareUnmark(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareFind(arguments);","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(\"Command not found!\");","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Todo command","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Todo command","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Todo command","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareTodo(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"        return new TodoCommand(args.trim());","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Deadline command","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Deadline command","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Deadline command","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareDeadline(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"            String[] strArr \u003d parseDeadlineArgument(args);","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"            String description \u003d strArr[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"            String by \u003d strArr[1];","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"            return new DeadlineCommand(description.trim(), by.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising an Event command","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising an Event command","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising an Event command","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareEvent(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"            String[] strArr \u003d parseEventArgument(args);","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"            String description \u003d strArr[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"            String at \u003d strArr[1];","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"            return new EventCommand(description.trim(), at.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the arguments for the Deadline arguments","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args string containing the description and the deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string array where the first element represents the description","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"     *     and the second element represents the deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the description is empty or if the command doesn\u0027t","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"     *     follow a specific command","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] parseDeadlineArgument(String args) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"        String[] splittedStrings \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"        if (splittedStrings.length \u003c\u003d 1) {","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"        String[] descAndTime \u003d parseDeadlineDescriptionAndTime(splittedStrings);","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"        descAndTime \u003d trimSpaces(descAndTime);","lastModifiedDate":"2022-09-16"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"        return descAndTime;","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the arguments for the Event arguments","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args string containing the description and the time of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string array where the first element represents the description","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"     *     and the second element represents the time of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the description is empty or if the command doesn\u0027t","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"     *     follow a specific command","lastModifiedDate":"2022-09-09"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] parseEventArgument(String args) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"jasonchristopher21"},"content":"        String[] splittedStrings \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-09-16"},{"lineNumber":163,"author":{"gitId":"jasonchristopher21"},"content":"        if (splittedStrings.length \u003c\u003d 1) {","lastModifiedDate":"2022-09-16"},{"lineNumber":164,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":165,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":166,"author":{"gitId":"jasonchristopher21"},"content":"        String[] descAndTime \u003d parseEventDescriptionAndTime(splittedStrings);","lastModifiedDate":"2022-09-16"},{"lineNumber":167,"author":{"gitId":"jasonchristopher21"},"content":"        descAndTime \u003d trimSpaces(descAndTime);","lastModifiedDate":"2022-09-16"},{"lineNumber":168,"author":{"gitId":"jasonchristopher21"},"content":"        return descAndTime;","lastModifiedDate":"2022-09-16"},{"lineNumber":169,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":170,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":171,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":172,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Mark command","lastModifiedDate":"2022-09-09"},{"lineNumber":173,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":174,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Mark command","lastModifiedDate":"2022-09-09"},{"lineNumber":175,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Mark command","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareMark(String args) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":178,"author":{"gitId":"jasonchristopher21"},"content":"        MassOperation massOp \u003d parseMassOpsCommand(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":179,"author":{"gitId":"jasonchristopher21"},"content":"        return new MarkCommand(massOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":180,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":182,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":183,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising an Unmark command","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising an Unmark command","lastModifiedDate":"2022-09-09"},{"lineNumber":186,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising an Unmark command","lastModifiedDate":"2022-09-09"},{"lineNumber":187,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareUnmark(String args) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":189,"author":{"gitId":"jasonchristopher21"},"content":"        MassOperation massOperation \u003d parseMassOpsCommand(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":190,"author":{"gitId":"jasonchristopher21"},"content":"        return new UnmarkCommand(massOperation);","lastModifiedDate":"2022-09-16"},{"lineNumber":191,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":192,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":193,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Delete command","lastModifiedDate":"2022-09-09"},{"lineNumber":195,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":196,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Delete command","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Delete command","lastModifiedDate":"2022-09-09"},{"lineNumber":198,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareDelete(String args) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":200,"author":{"gitId":"jasonchristopher21"},"content":"        MassOperation massOperation \u003d parseMassOpsCommand(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":201,"author":{"gitId":"jasonchristopher21"},"content":"        return new DeleteCommand(massOperation);","lastModifiedDate":"2022-09-16"},{"lineNumber":202,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":203,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":204,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":205,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising an Event command","lastModifiedDate":"2022-09-10"},{"lineNumber":206,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":207,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising an Event command","lastModifiedDate":"2022-09-10"},{"lineNumber":208,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising an Event command","lastModifiedDate":"2022-09-10"},{"lineNumber":209,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":210,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareFind(String args) {","lastModifiedDate":"2022-09-10"},{"lineNumber":211,"author":{"gitId":"jasonchristopher21"},"content":"        return new FindCommand(args.trim());","lastModifiedDate":"2022-09-10"},{"lineNumber":212,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":213,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":214,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":215,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the arguments for converting a task from storage to a Task","lastModifiedDate":"2022-09-09"},{"lineNumber":216,"author":{"gitId":"jasonchristopher21"},"content":"     * instance that can be stored in the TaskList object","lastModifiedDate":"2022-09-09"},{"lineNumber":217,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":218,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the string retrieved from the local file","lastModifiedDate":"2022-09-14"},{"lineNumber":219,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the task after the arguments are parsed","lastModifiedDate":"2022-09-09"},{"lineNumber":220,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":221,"author":{"gitId":"jasonchristopher21"},"content":"    public static Task parseTask(String args) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":222,"author":{"gitId":"jasonchristopher21"},"content":"        Matcher m \u003d prepareStoredDataMatcher(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":223,"author":{"gitId":"jasonchristopher21"},"content":"        final boolean isMarked \u003d isMarked(m);","lastModifiedDate":"2022-09-16"},{"lineNumber":224,"author":{"gitId":"jasonchristopher21"},"content":"        final String commandWord \u003d extractStoredDataCommandWord(m);","lastModifiedDate":"2022-09-16"},{"lineNumber":225,"author":{"gitId":"jasonchristopher21"},"content":"        Task t;","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"jasonchristopher21"},"content":"        switch(commandWord) {","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"jasonchristopher21"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-16"},{"lineNumber":228,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d createStoredTodo(m);","lastModifiedDate":"2022-09-16"},{"lineNumber":229,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-16"},{"lineNumber":230,"author":{"gitId":"jasonchristopher21"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-16"},{"lineNumber":231,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d createStoredDeadline(m);","lastModifiedDate":"2022-09-16"},{"lineNumber":232,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-16"},{"lineNumber":233,"author":{"gitId":"jasonchristopher21"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-16"},{"lineNumber":234,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d createStoredEvent(m);","lastModifiedDate":"2022-09-16"},{"lineNumber":235,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-16"},{"lineNumber":236,"author":{"gitId":"jasonchristopher21"},"content":"        default:","lastModifiedDate":"2022-09-16"},{"lineNumber":237,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"Task was not parsed successfully\");","lastModifiedDate":"2022-09-16"},{"lineNumber":238,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":239,"author":{"gitId":"jasonchristopher21"},"content":"        markStoredTask(t, isMarked);","lastModifiedDate":"2022-09-16"},{"lineNumber":240,"author":{"gitId":"jasonchristopher21"},"content":"        return t;","lastModifiedDate":"2022-09-16"},{"lineNumber":241,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":242,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":243,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":244,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the Matcher object to be used for pattern matching on","lastModifiedDate":"2022-09-16"},{"lineNumber":245,"author":{"gitId":"jasonchristopher21"},"content":"     * commandWord and arguments","lastModifiedDate":"2022-09-16"},{"lineNumber":246,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":247,"author":{"gitId":"jasonchristopher21"},"content":"     * @param input The input string to be applied to the matcher","lastModifiedDate":"2022-09-16"},{"lineNumber":248,"author":{"gitId":"jasonchristopher21"},"content":"     * @return The matcher object ready to be extracted","lastModifiedDate":"2022-09-16"},{"lineNumber":249,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the input does not match the match pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":250,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":251,"author":{"gitId":"jasonchristopher21"},"content":"    private Matcher prepareMatcher(String input) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":252,"author":{"gitId":"jasonchristopher21"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(input.trim());","lastModifiedDate":"2022-09-16"},{"lineNumber":253,"author":{"gitId":"jasonchristopher21"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":254,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidCommandException();","lastModifiedDate":"2022-09-16"},{"lineNumber":255,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":256,"author":{"gitId":"jasonchristopher21"},"content":"        return matcher;","lastModifiedDate":"2022-09-16"},{"lineNumber":257,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":258,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":259,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":260,"author":{"gitId":"jasonchristopher21"},"content":"     * Extracts the command word from a matched pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":261,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":262,"author":{"gitId":"jasonchristopher21"},"content":"     * @param matcher The matched character sequence with the pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":263,"author":{"gitId":"jasonchristopher21"},"content":"     * @return The commandWord group of the matcher","lastModifiedDate":"2022-09-16"},{"lineNumber":264,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"jasonchristopher21"},"content":"    private String extractCommandWord(Matcher matcher) {","lastModifiedDate":"2022-09-16"},{"lineNumber":266,"author":{"gitId":"jasonchristopher21"},"content":"        return matcher.group(\"commandWord\");","lastModifiedDate":"2022-09-16"},{"lineNumber":267,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":268,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":269,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":270,"author":{"gitId":"jasonchristopher21"},"content":"     * Extracts the arguments from a matched pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":271,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":272,"author":{"gitId":"jasonchristopher21"},"content":"     * @param matcher The matched character sequence with the pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":273,"author":{"gitId":"jasonchristopher21"},"content":"     * @return The arguments group of the matcher","lastModifiedDate":"2022-09-16"},{"lineNumber":274,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":275,"author":{"gitId":"jasonchristopher21"},"content":"    private String extractArguments(Matcher matcher) {","lastModifiedDate":"2022-09-16"},{"lineNumber":276,"author":{"gitId":"jasonchristopher21"},"content":"        return matcher.group(\"arguments\");","lastModifiedDate":"2022-09-16"},{"lineNumber":277,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":278,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":279,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":280,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the description and time for the arguments of the Deadline constructor","lastModifiedDate":"2022-09-16"},{"lineNumber":281,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":282,"author":{"gitId":"jasonchristopher21"},"content":"     * @param splittedStrings An array of strings after being splitted","lastModifiedDate":"2022-09-16"},{"lineNumber":283,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string array containing the description as the first element and the date as the second element","lastModifiedDate":"2022-09-16"},{"lineNumber":284,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the deadline command does not follow the specified format","lastModifiedDate":"2022-09-16"},{"lineNumber":285,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":286,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] parseDeadlineDescriptionAndTime(String[] splittedStrings) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":287,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isSplitterFound \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":288,"author":{"gitId":"jasonchristopher21"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":289,"author":{"gitId":"jasonchristopher21"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":290,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c splittedStrings.length; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":291,"author":{"gitId":"jasonchristopher21"},"content":"            if (splittedStrings[i].equals(\"/by\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":292,"author":{"gitId":"jasonchristopher21"},"content":"                isSplitterFound \u003d true;","lastModifiedDate":"2022-09-16"},{"lineNumber":293,"author":{"gitId":"jasonchristopher21"},"content":"            } else if (isSplitterFound) {","lastModifiedDate":"2022-09-16"},{"lineNumber":294,"author":{"gitId":"jasonchristopher21"},"content":"                time +\u003d (splittedStrings[i] + \" \");","lastModifiedDate":"2022-09-16"},{"lineNumber":295,"author":{"gitId":"jasonchristopher21"},"content":"            } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":296,"author":{"gitId":"jasonchristopher21"},"content":"                description +\u003d (splittedStrings[i] + \" \");","lastModifiedDate":"2022-09-16"},{"lineNumber":297,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":298,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":299,"author":{"gitId":"jasonchristopher21"},"content":"        if (!isSplitterFound) {","lastModifiedDate":"2022-09-16"},{"lineNumber":300,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidFormatException(\"deadline\", \"/by\");","lastModifiedDate":"2022-09-16"},{"lineNumber":301,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":302,"author":{"gitId":"jasonchristopher21"},"content":"        return new String[] {description, time};","lastModifiedDate":"2022-09-16"},{"lineNumber":303,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":304,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":305,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":306,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the description and time for the arguments of the Event constructor","lastModifiedDate":"2022-09-16"},{"lineNumber":307,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":308,"author":{"gitId":"jasonchristopher21"},"content":"     * @param splittedStrings An array of strings after being splitted","lastModifiedDate":"2022-09-16"},{"lineNumber":309,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A string array containing the description as the first element and the date as the second element","lastModifiedDate":"2022-09-16"},{"lineNumber":310,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the event command does not follow the specified format","lastModifiedDate":"2022-09-16"},{"lineNumber":311,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":312,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] parseEventDescriptionAndTime(String[] splittedStrings) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":313,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isSplitterFound \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":314,"author":{"gitId":"jasonchristopher21"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":315,"author":{"gitId":"jasonchristopher21"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":316,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c splittedStrings.length; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":317,"author":{"gitId":"jasonchristopher21"},"content":"            if (splittedStrings[i].equals(\"/at\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":318,"author":{"gitId":"jasonchristopher21"},"content":"                isSplitterFound \u003d true;","lastModifiedDate":"2022-09-16"},{"lineNumber":319,"author":{"gitId":"jasonchristopher21"},"content":"            } else if (isSplitterFound) {","lastModifiedDate":"2022-09-16"},{"lineNumber":320,"author":{"gitId":"jasonchristopher21"},"content":"                time +\u003d (splittedStrings[i] + \" \");","lastModifiedDate":"2022-09-16"},{"lineNumber":321,"author":{"gitId":"jasonchristopher21"},"content":"            } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":322,"author":{"gitId":"jasonchristopher21"},"content":"                description +\u003d (splittedStrings[i] + \" \");","lastModifiedDate":"2022-09-16"},{"lineNumber":323,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":324,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":325,"author":{"gitId":"jasonchristopher21"},"content":"        if (!isSplitterFound) {","lastModifiedDate":"2022-09-16"},{"lineNumber":326,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidFormatException(\"event\", \"/at\");","lastModifiedDate":"2022-09-16"},{"lineNumber":327,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":328,"author":{"gitId":"jasonchristopher21"},"content":"        return new String[] {description, time};","lastModifiedDate":"2022-09-16"},{"lineNumber":329,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":330,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":331,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":332,"author":{"gitId":"jasonchristopher21"},"content":"     * Trims the trailing white spaces of the elements of a string array","lastModifiedDate":"2022-09-16"},{"lineNumber":333,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":334,"author":{"gitId":"jasonchristopher21"},"content":"     * @param arr an array of strings","lastModifiedDate":"2022-09-16"},{"lineNumber":335,"author":{"gitId":"jasonchristopher21"},"content":"     * @return an array of strings with the trailing white spaces removed","lastModifiedDate":"2022-09-16"},{"lineNumber":336,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":337,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] trimSpaces(String[] arr) {","lastModifiedDate":"2022-09-16"},{"lineNumber":338,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":339,"author":{"gitId":"jasonchristopher21"},"content":"            arr[i] \u003d arr[i].trim();","lastModifiedDate":"2022-09-16"},{"lineNumber":340,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":341,"author":{"gitId":"jasonchristopher21"},"content":"        return arr;","lastModifiedDate":"2022-09-16"},{"lineNumber":342,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":343,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":344,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":345,"author":{"gitId":"jasonchristopher21"},"content":"     * Checks whether a stored task is marked","lastModifiedDate":"2022-09-16"},{"lineNumber":346,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":347,"author":{"gitId":"jasonchristopher21"},"content":"     * @param matcher A matched character sequence with a pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":348,"author":{"gitId":"jasonchristopher21"},"content":"     * @return true if the stored task is marked, false otherwise","lastModifiedDate":"2022-09-16"},{"lineNumber":349,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":350,"author":{"gitId":"jasonchristopher21"},"content":"    private static boolean isMarked(Matcher matcher) {","lastModifiedDate":"2022-09-16"},{"lineNumber":351,"author":{"gitId":"jasonchristopher21"},"content":"        final String markedStatus \u003d matcher.group(1);","lastModifiedDate":"2022-09-16"},{"lineNumber":352,"author":{"gitId":"jasonchristopher21"},"content":"        switch (markedStatus) {","lastModifiedDate":"2022-09-03"},{"lineNumber":353,"author":{"gitId":"jasonchristopher21"},"content":"        case \"M\":","lastModifiedDate":"2022-09-03"},{"lineNumber":354,"author":{"gitId":"jasonchristopher21"},"content":"            return true;","lastModifiedDate":"2022-09-16"},{"lineNumber":355,"author":{"gitId":"jasonchristopher21"},"content":"        case \"N\":","lastModifiedDate":"2022-09-03"},{"lineNumber":356,"author":{"gitId":"jasonchristopher21"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":357,"author":{"gitId":"jasonchristopher21"},"content":"            return false;","lastModifiedDate":"2022-09-16"},{"lineNumber":358,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":359,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":360,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":361,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":362,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the matcher for the stored data","lastModifiedDate":"2022-09-16"},{"lineNumber":363,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":364,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the arguments to be matched to the Stored task data pattern","lastModifiedDate":"2022-09-16"},{"lineNumber":365,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the matcher containing the matched character sequence","lastModifiedDate":"2022-09-16"},{"lineNumber":366,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":367,"author":{"gitId":"jasonchristopher21"},"content":"    private static Matcher prepareStoredDataMatcher(String args) {","lastModifiedDate":"2022-09-16"},{"lineNumber":368,"author":{"gitId":"jasonchristopher21"},"content":"        Matcher m \u003d STORED_TASK_DATA_RAW_FORMAT.matcher(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":369,"author":{"gitId":"jasonchristopher21"},"content":"        m.find();","lastModifiedDate":"2022-09-16"},{"lineNumber":370,"author":{"gitId":"jasonchristopher21"},"content":"        return m;","lastModifiedDate":"2022-09-16"},{"lineNumber":371,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":372,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":373,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":374,"author":{"gitId":"jasonchristopher21"},"content":"     * Extracts the command word from a stored data","lastModifiedDate":"2022-09-16"},{"lineNumber":375,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":376,"author":{"gitId":"jasonchristopher21"},"content":"     * @param matcher the matcher containing the matched character sequence","lastModifiedDate":"2022-09-16"},{"lineNumber":377,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the extracted command word","lastModifiedDate":"2022-09-16"},{"lineNumber":378,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":379,"author":{"gitId":"jasonchristopher21"},"content":"    private static String extractStoredDataCommandWord(Matcher matcher) {","lastModifiedDate":"2022-09-16"},{"lineNumber":380,"author":{"gitId":"jasonchristopher21"},"content":"        final String commandWord \u003d matcher.group(2);","lastModifiedDate":"2022-09-16"},{"lineNumber":381,"author":{"gitId":"jasonchristopher21"},"content":"        return commandWord;","lastModifiedDate":"2022-09-16"},{"lineNumber":382,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":383,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":384,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":385,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks a stored task as done","lastModifiedDate":"2022-09-16"},{"lineNumber":386,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":387,"author":{"gitId":"jasonchristopher21"},"content":"     * @param task a Task object from the stored task data","lastModifiedDate":"2022-09-16"},{"lineNumber":388,"author":{"gitId":"jasonchristopher21"},"content":"     * @param isMarked a boolean value, true if the task is marked, false otherwise","lastModifiedDate":"2022-09-16"},{"lineNumber":389,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":390,"author":{"gitId":"jasonchristopher21"},"content":"    private static void markStoredTask(Task task, boolean isMarked) {","lastModifiedDate":"2022-09-16"},{"lineNumber":391,"author":{"gitId":"jasonchristopher21"},"content":"        if (isMarked) {","lastModifiedDate":"2022-09-16"},{"lineNumber":392,"author":{"gitId":"jasonchristopher21"},"content":"            task.markAsDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":393,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":394,"author":{"gitId":"jasonchristopher21"},"content":"            task.markAsNotDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":395,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":396,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":397,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":398,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":399,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates a Todo instance for the stored data","lastModifiedDate":"2022-09-16"},{"lineNumber":400,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":401,"author":{"gitId":"jasonchristopher21"},"content":"     * @param m the matcher containing the matched character sequence","lastModifiedDate":"2022-09-16"},{"lineNumber":402,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the Todo instance containing the description","lastModifiedDate":"2022-09-16"},{"lineNumber":403,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":404,"author":{"gitId":"jasonchristopher21"},"content":"    private static Task createStoredTodo(Matcher m) {","lastModifiedDate":"2022-09-16"},{"lineNumber":405,"author":{"gitId":"jasonchristopher21"},"content":"        return new Todo(m.group(3).trim());","lastModifiedDate":"2022-09-16"},{"lineNumber":406,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":407,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":408,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":409,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates a Deadline instance for the stored data","lastModifiedDate":"2022-09-16"},{"lineNumber":410,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":411,"author":{"gitId":"jasonchristopher21"},"content":"     * @param m the matcher containing the matched character sequence","lastModifiedDate":"2022-09-16"},{"lineNumber":412,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the Deadline instance containing the description and time","lastModifiedDate":"2022-09-16"},{"lineNumber":413,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the date cannot be parsed correctly in Deadline","lastModifiedDate":"2022-09-16"},{"lineNumber":414,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":415,"author":{"gitId":"jasonchristopher21"},"content":"    private static Task createStoredDeadline(Matcher m) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":416,"author":{"gitId":"jasonchristopher21"},"content":"        String[] deadlineStrArr \u003d parseDeadlineArgument(m.group(3));","lastModifiedDate":"2022-09-16"},{"lineNumber":417,"author":{"gitId":"jasonchristopher21"},"content":"        return createDeadlineFromArray(deadlineStrArr);","lastModifiedDate":"2022-09-16"},{"lineNumber":418,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":419,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":420,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":421,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates an Event instance for the stored data","lastModifiedDate":"2022-09-16"},{"lineNumber":422,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":423,"author":{"gitId":"jasonchristopher21"},"content":"     * @param m the matcher containing the matched character sequence","lastModifiedDate":"2022-09-16"},{"lineNumber":424,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the Event instance containing the description and time","lastModifiedDate":"2022-09-16"},{"lineNumber":425,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the date cannot be parsed correctly in Event","lastModifiedDate":"2022-09-16"},{"lineNumber":426,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":427,"author":{"gitId":"jasonchristopher21"},"content":"    private static Task createStoredEvent(Matcher m) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":428,"author":{"gitId":"jasonchristopher21"},"content":"        String[] eventStrArr \u003d parseEventArgument(m.group(3));","lastModifiedDate":"2022-09-16"},{"lineNumber":429,"author":{"gitId":"jasonchristopher21"},"content":"        return createEventFromArray(eventStrArr);","lastModifiedDate":"2022-09-16"},{"lineNumber":430,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":431,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":432,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":433,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates a Deadline instance from a string array containing the description and","lastModifiedDate":"2022-09-16"},{"lineNumber":434,"author":{"gitId":"jasonchristopher21"},"content":"     * the time","lastModifiedDate":"2022-09-16"},{"lineNumber":435,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":436,"author":{"gitId":"jasonchristopher21"},"content":"     * @param strArr a string array of 2 elements, containing the description and the time","lastModifiedDate":"2022-09-16"},{"lineNumber":437,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the Deadline instance containing the description and time","lastModifiedDate":"2022-09-16"},{"lineNumber":438,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException  if the date cannot be parsed correctly in Deadline","lastModifiedDate":"2022-09-16"},{"lineNumber":439,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":440,"author":{"gitId":"jasonchristopher21"},"content":"    private static Task createDeadlineFromArray(String[] strArr) throws DukeInvalidDateException {","lastModifiedDate":"2022-09-16"},{"lineNumber":441,"author":{"gitId":"jasonchristopher21"},"content":"        return new Deadline(strArr[0], strArr[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":442,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":443,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":444,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":445,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates an Event instance from a string array containing the description and","lastModifiedDate":"2022-09-16"},{"lineNumber":446,"author":{"gitId":"jasonchristopher21"},"content":"     * the time","lastModifiedDate":"2022-09-16"},{"lineNumber":447,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":448,"author":{"gitId":"jasonchristopher21"},"content":"     * @param strArr a string array of 2 elements, containing the description and the time","lastModifiedDate":"2022-09-16"},{"lineNumber":449,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the Event instance containing the description and time","lastModifiedDate":"2022-09-16"},{"lineNumber":450,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException  if the date cannot be parsed correctly in Event","lastModifiedDate":"2022-09-16"},{"lineNumber":451,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":452,"author":{"gitId":"jasonchristopher21"},"content":"    private static Task createEventFromArray(String[] strArr) throws DukeInvalidDateException {","lastModifiedDate":"2022-09-16"},{"lineNumber":453,"author":{"gitId":"jasonchristopher21"},"content":"        return new Event(strArr[0], strArr[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":454,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":455,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":456,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":457,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses an argument into a mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":458,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":459,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args The argument to be parsed to the mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":460,"author":{"gitId":"jasonchristopher21"},"content":"     * @return The mass operation corresponding to the argument","lastModifiedDate":"2022-09-16"},{"lineNumber":461,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the input is not a valid number (for number range and single number)","lastModifiedDate":"2022-09-16"},{"lineNumber":462,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":463,"author":{"gitId":"jasonchristopher21"},"content":"    private MassOperation parseMassOpsCommand(String args) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":464,"author":{"gitId":"jasonchristopher21"},"content":"        args \u003d args.trim();","lastModifiedDate":"2022-09-16"},{"lineNumber":465,"author":{"gitId":"jasonchristopher21"},"content":"        if (args.equals(\"all\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":466,"author":{"gitId":"jasonchristopher21"},"content":"            return new AllOperation();","lastModifiedDate":"2022-09-16"},{"lineNumber":467,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (args.contains(\"-\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":468,"author":{"gitId":"jasonchristopher21"},"content":"            int[] range \u003d parseRange(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":469,"author":{"gitId":"jasonchristopher21"},"content":"            return new RangeOperation(range);","lastModifiedDate":"2022-09-16"},{"lineNumber":470,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":471,"author":{"gitId":"jasonchristopher21"},"content":"            int idx \u003d tryParseToInteger(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":472,"author":{"gitId":"jasonchristopher21"},"content":"            return new SingleOperation(idx);","lastModifiedDate":"2022-09-16"},{"lineNumber":473,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":474,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":475,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":476,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":477,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses a range argument into an integer array for constructing RangeOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":478,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":479,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the arguments to be parsed to a RangeOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":480,"author":{"gitId":"jasonchristopher21"},"content":"     * @return an integer array containing the start and end of the range","lastModifiedDate":"2022-09-16"},{"lineNumber":481,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the values cannot be parsed into an integer","lastModifiedDate":"2022-09-16"},{"lineNumber":482,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":483,"author":{"gitId":"jasonchristopher21"},"content":"    private int[] parseRange(String args) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":484,"author":{"gitId":"jasonchristopher21"},"content":"        String[] rangeSplit \u003d args.split(\"-\");","lastModifiedDate":"2022-09-16"},{"lineNumber":485,"author":{"gitId":"jasonchristopher21"},"content":"        int startRange \u003d tryParseToInteger(rangeSplit[0].trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":486,"author":{"gitId":"jasonchristopher21"},"content":"        int endRange \u003d tryParseToInteger(rangeSplit[1].trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":487,"author":{"gitId":"jasonchristopher21"},"content":"        return new int[] { startRange, endRange };","lastModifiedDate":"2022-09-16"},{"lineNumber":488,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":489,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":490,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":491,"author":{"gitId":"jasonchristopher21"},"content":"     * Tries to parse a string to an integer","lastModifiedDate":"2022-09-16"},{"lineNumber":492,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":493,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args A string that represents an integer value","lastModifiedDate":"2022-09-16"},{"lineNumber":494,"author":{"gitId":"jasonchristopher21"},"content":"     * @return An integer value parsed from the string","lastModifiedDate":"2022-09-16"},{"lineNumber":495,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the number cannot be parsed to an integer","lastModifiedDate":"2022-09-16"},{"lineNumber":496,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":497,"author":{"gitId":"jasonchristopher21"},"content":"    private int tryParseToInteger(String args) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":498,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":499,"author":{"gitId":"jasonchristopher21"},"content":"            int idx \u003d Integer.valueOf(args);","lastModifiedDate":"2022-09-16"},{"lineNumber":500,"author":{"gitId":"jasonchristopher21"},"content":"            return idx;","lastModifiedDate":"2022-09-16"},{"lineNumber":501,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":502,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"A non-numerical value has been encountered\");","lastModifiedDate":"2022-09-16"},{"lineNumber":503,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":504,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":505,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":505}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.File;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":" * Performs read and write operations to the userTasks file in the user\u0027s","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":" * local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"public class Storage {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String HOME_DIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String TARGET_DIRECTORY \u003d HOME_DIRECTORY + \"/src/main/data\";","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String PATH \u003d TARGET_DIRECTORY + \"/userTasks.txt\";","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    private final File f;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    private ArrayList\u003cString\u003e stringArray;","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Storage class with a specified PATH constant","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the file cannot be created","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"        f \u003d initialize();","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the user tasks file for the storage directory","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A file containing the user tasks","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the file cannot be created","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    public File initialize() throws DukeException {","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"            File srcDirectory \u003d new File(HOME_DIRECTORY + \"/src\");","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"            if (!srcDirectory.exists()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"                srcDirectory.mkdir();","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"            File mainDirectory \u003d new File(HOME_DIRECTORY + \"/src/main\");","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"            if (!mainDirectory.exists()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"                mainDirectory.mkdir();","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"            File parentDirectory \u003d new File(TARGET_DIRECTORY);","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"            if (!parentDirectory.exists()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"                parentDirectory.mkdir();","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"            File userTasks \u003d new File(PATH);","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"            if (!userTasks.exists()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"                userTasks.createNewFile();","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"            return userTasks;","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"     * Retrieves the tasks read from the userTasks.txt file","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"     * @return an ArrayList of Strings containing the tasks from userTasks.txt","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the file to read from is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"    public ArrayList\u003cString\u003e retrieveTasks() throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        initialiseStringArray();","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"        addElementsToArray();","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"        return stringArray;","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the stringArray instance as an empty ArrayList of String objects","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"    private void initialiseStringArray() {","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"        stringArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"     * Adds the elements read from the file to the array","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the file to read from is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"    private void addElementsToArray() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"                String sentence \u003d sc.nextLine().trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"                stringArray.add(sentence);","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"     * Writes the tasks stored in a specified ArrayList to the userTasks.txt file","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks an ArrayList of tasks to be stored in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"    public void writeToFile(ArrayList\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"        assert(tasks !\u003d null);","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d getStringFromTasks(tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"        writeStringToPath(str);","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the tasks to be written to the file","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks an ArrayList of tasks to be stored in the local file","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the tasks to be written to the file","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"    private String getStringFromTasks(ArrayList\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"            String s \u003d task.toStringForFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d s + System.lineSeparator();","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"        return str;","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"     * Writes the string to a file of a specified path","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"     * @param str the string representation of the tasks to be written to the file","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"    private void writeStringToPath(String str) {","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"        try (BufferedWriter bf \u003d Files.newBufferedWriter(Path.of(PATH),","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"                StandardOpenOption.TRUNCATE_EXISTING)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"            BufferedWriter fw \u003d new BufferedWriter(new FileWriter(PATH, true));","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"            fw.append(str);","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"            fw.close();","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":161}},{"path":"src/main/java/duke/tasks/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Date object for use in the Deadline and","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" * Event classes","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"public class Date {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    protected int time;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Date object","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @param str A string containing the date and time in a specific format","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the date and time does not follow the","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     *     correct format","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    public Date(String str) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"        assert(str !\u003d \"\");","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        String[] splittedValues \u003d str.split(\"\\\\s+\");","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"        this.date \u003d parse(splittedValues[0]);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        if (splittedValues.length \u003e 1) {","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"            this.time \u003d Integer.valueOf(splittedValues[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the date string to the LocalDate object","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @param str A string containing the date in a specific format","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A LocalDate containing the date representation of str","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the string does not follow the correct","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     *     date format","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    private LocalDate parse(String str) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        assert(str !\u003d \"\");","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        LocalDate date;","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"            date \u003d LocalDate.parse(str);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidDateException();","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        return date;","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the date field","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the date field in the \"MMM d YYYY\" format","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    private String dateToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the time field","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the time field in the \"a.m/p.m\" format","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"    private String timeToString() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"        assert(time \u003e 0);","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        int hours \u003d calculateHourFromTime(time);","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"        int minutes \u003d calculateMinutesFromTime(time);","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"        String hourString \u003d getHours(hours);","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"        String minuteString \u003d getMinutes(minutes);","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"        String timeOfDay \u003d getTimeOfDay(hours);","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d concatenateStrings(hourString, minuteString, timeOfDay);","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"     * Calculates the number of hours given the time","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"     * @param time the Time instance of the deadline or event","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the number of hours in the time","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"    private int calculateHourFromTime(int time) {","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        return (int) Math.floor(time / 100);","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"     * Calculates the number of minutes given the time","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     * @param time the Time instance of the deadline or event","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the number of minutes in the time","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"    private int calculateMinutesFromTime(int time) {","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"        return time % 100;","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the number of hours","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"     * @param hours The number of hours in the date format","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the number of hours","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"    private String getHours(int hours) {","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"        if (hours \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"            return \"12.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (hours \u003e 12) {","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"            return (hours - 12) + \".\";","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"            return hours + \".\";","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the time of the day, whether it is a.m. or p.m.","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"     * @param hours The hour value of the time","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"     * @return \"a.m.\" if the hours is less than 12 p.m., \"p.m.\" otherwise","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"    private String getTimeOfDay(int hours) {","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"        assert(hours \u003e 0);","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"        if (hours \u003e 12) {","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"            hours -\u003d 12;","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"            return \"p.m.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (hours \u003d\u003d 12) {","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"            return \"a.m.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"            return \"a.m.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"     * Gets the string representation of the number of minutes","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"     * @param minutes The minutes in time","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string representation of minutes","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"    private String getMinutes(int minutes) {","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"        if (minutes \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"            return \"00\";","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (minutes \u003c 10) {","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"            return \"0\" + minutes;","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"            return Integer.toString(minutes);","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"     * Concatenates a variable number of strings together","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"     * @param strings a variable number of strings to concatenate","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string that is resulted from concatenating the multiple strings","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"    private String concatenateStrings(String... strings) {","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"        for (String s : strings) {","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"            builder.append(s);","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Date object","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Date object","lastModifiedDate":"2022-09-09"},{"lineNumber":167,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":171,"author":{"gitId":"jasonchristopher21"},"content":"            return dateToString() + \" \" + timeToString();","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":173,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-16"},{"lineNumber":174,"author":{"gitId":"jasonchristopher21"},"content":"            return \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":175,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":176,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jasonchristopher21":177}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Deadline task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    protected Date date;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Deadline object","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     * @param by The deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the string by does not follow the correct date format","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public Deadline(String description, String by) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"        this.date \u003d new Date(by);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Deadline object","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Deadline object","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Deadline object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Deadline object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        return super.toStringForFile() + \"deadline \" + this.description + \" /by \" + this.by;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates an Event task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    protected Date date;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialiises the Event object","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the Event task","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     * @param at The date of the Event task","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if string at does not follow the correct date format","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public Event(String description, String at) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"        this.date \u003d new Date(at);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Event object","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Event object","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Event object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Event object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        return super.toStringForFile() + \"event \" + this.description + \" /at \" + this.at;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":47}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Task object","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"        assert(description !\u003d \"\");","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the status icon that indicates whether the task is marked","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the status icon that indicates whether the task is marked","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Task object","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Task object","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task as done","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Task object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Task object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"            return \"M|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"            return \"N|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"     * Checks if the task description contains the specified keyword","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"     * @param keyword the keyword to be matched with the task description","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value, true if the description contains the keyword, false otherwise","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean checkIfContains(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"        assert(keyword !\u003d \"\");","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":78}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeOutOfRangeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.AllOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.MassOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.RangeOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.massops.SingleOperation;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a list of tasks in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"public class TaskList {","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    protected Storage storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the tasks array by using existing data stored in","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * the local machine","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @param data An ArrayList of strings containing the saved user data","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public TaskList(ArrayList\u003c? extends String\u003e data) {","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        assert(data !\u003d null);","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"            parseEachSentenceToTask(data);","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses each sentence in the Arraylist of strings to their own tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @param data an ArrayList of Strings","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if there is an exception encountered during parsing","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    public void parseEachSentenceToTask(ArrayList\u003c? extends String\u003e data) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        for (String sentence : data) {","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            this.tasks.add(Parser.parseTask(sentence));","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows the list of tasks currently added to the TaskList","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string containing the tasks added to the TaskList separated","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"     *     by a newline character","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"    public String showList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"        assert(tasks !\u003d null);","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"        return changeListToString(tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"     * as done.","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"     *     or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsDone(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"        assert(index \u003e 1 \u0026\u0026 index \u003c\u003d this.tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"     * as not done.","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"     *     or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsNotDone(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"        assert(index \u003e 1 \u0026\u0026 index \u003c\u003d this.tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"     * Adds a task to the ArrayList of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"     * @param task the task to be added to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"        assert(task !\u003d null);","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"     * Deletes a task from the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"     *      or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"        assert(index \u003e 1 \u0026\u0026 index \u003c\u003d this.tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"        Task task \u003d this.tasks.get(index - 1);;","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows the number of tasks in the TaskList","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the number of tasks in the TaskList","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"    public String showNumberOfTasks() {","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"        return \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-03"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"     * Retrieves the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"     *      or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"        assert(index \u003e 1 \u0026\u0026 index \u003c\u003d this.tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"        assert(tasks.get(index - 1) !\u003d null);","lastModifiedDate":"2022-09-15"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the tasks ArrayList","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the tasks ArrayList","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"    public ArrayList\u003cTask\u003e toArrayList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"        assert(tasks !\u003d null);","lastModifiedDate":"2022-09-15"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"        return tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":163,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":164,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":165,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows a list that is filtered by the keyword","lastModifiedDate":"2022-09-10"},{"lineNumber":166,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":167,"author":{"gitId":"jasonchristopher21"},"content":"    public String showFilteredList(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":168,"author":{"gitId":"jasonchristopher21"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d filterList(keyword);","lastModifiedDate":"2022-09-10"},{"lineNumber":169,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d changeListToString(filteredList);","lastModifiedDate":"2022-09-10"},{"lineNumber":170,"author":{"gitId":"jasonchristopher21"},"content":"        if (result \u003d\u003d \"\") {","lastModifiedDate":"2022-09-15"},{"lineNumber":171,"author":{"gitId":"jasonchristopher21"},"content":"            return String.format(\"Your %s keyword does not match any entries!\", keyword);","lastModifiedDate":"2022-09-15"},{"lineNumber":172,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":173,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-10"},{"lineNumber":174,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":175,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":176,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":177,"author":{"gitId":"jasonchristopher21"},"content":"     * Filters a list based on a keyword","lastModifiedDate":"2022-09-16"},{"lineNumber":178,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":179,"author":{"gitId":"jasonchristopher21"},"content":"     * @param keyword the keyword to filter the list with","lastModifiedDate":"2022-09-16"},{"lineNumber":180,"author":{"gitId":"jasonchristopher21"},"content":"     * @return an ArrayList of tasks that contains the keyword","lastModifiedDate":"2022-09-16"},{"lineNumber":181,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":182,"author":{"gitId":"jasonchristopher21"},"content":"    private ArrayList\u003cTask\u003e filterList(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":183,"author":{"gitId":"jasonchristopher21"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-10"},{"lineNumber":184,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-10"},{"lineNumber":185,"author":{"gitId":"jasonchristopher21"},"content":"            if (tasks.get(i).checkIfContains(keyword)) {","lastModifiedDate":"2022-09-10"},{"lineNumber":186,"author":{"gitId":"jasonchristopher21"},"content":"                filteredTasks.add(tasks.get(i));","lastModifiedDate":"2022-09-10"},{"lineNumber":187,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":188,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":189,"author":{"gitId":"jasonchristopher21"},"content":"        return filteredTasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":190,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":191,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":192,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":193,"author":{"gitId":"jasonchristopher21"},"content":"     * Provides the string representation of the list","lastModifiedDate":"2022-09-16"},{"lineNumber":194,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":195,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks an ArrayList of tasks to be converted to String","lastModifiedDate":"2022-09-16"},{"lineNumber":196,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the String representation of the ArrayList","lastModifiedDate":"2022-09-16"},{"lineNumber":197,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":198,"author":{"gitId":"jasonchristopher21"},"content":"    private String changeListToString(ArrayList\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":199,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-10"},{"lineNumber":200,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-09-10"},{"lineNumber":201,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d ((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":202,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":203,"author":{"gitId":"jasonchristopher21"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2022-09-10"},{"lineNumber":204,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d (tasks.size() + \".\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2022-09-10"},{"lineNumber":205,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":206,"author":{"gitId":"jasonchristopher21"},"content":"        return str;","lastModifiedDate":"2022-09-10"},{"lineNumber":207,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":208,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":209,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":210,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows the list of tasks in the range specified by the RangeOperation","lastModifiedDate":"2022-09-16"},{"lineNumber":211,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":212,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A RangeOperation instance specifying the range of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":213,"author":{"gitId":"jasonchristopher21"},"content":"     * @return THe string representation of the list of tasks in the range specified","lastModifiedDate":"2022-09-16"},{"lineNumber":214,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":215,"author":{"gitId":"jasonchristopher21"},"content":"    private String showListInRange(RangeOperation op) {","lastModifiedDate":"2022-09-16"},{"lineNumber":216,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":217,"author":{"gitId":"jasonchristopher21"},"content":"        int startRange \u003d op.getStartRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":218,"author":{"gitId":"jasonchristopher21"},"content":"        int endRange \u003d op.getEndRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":219,"author":{"gitId":"jasonchristopher21"},"content":"        int indexStart \u003d startRange - 1;","lastModifiedDate":"2022-09-16"},{"lineNumber":220,"author":{"gitId":"jasonchristopher21"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-09-16"},{"lineNumber":221,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d indexStart; i \u003c endRange - 1; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":222,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d (counter + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2022-09-16"},{"lineNumber":223,"author":{"gitId":"jasonchristopher21"},"content":"            counter++;","lastModifiedDate":"2022-09-16"},{"lineNumber":224,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":225,"author":{"gitId":"jasonchristopher21"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d (counter + \".\" + tasks.get(endRange - 1));","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":228,"author":{"gitId":"jasonchristopher21"},"content":"        return str;","lastModifiedDate":"2022-09-16"},{"lineNumber":229,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":230,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":231,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":232,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the tasks specified by the MassOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":233,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":234,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A MassOperation instance specifying the type of mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":235,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A String representation of the tasks executed","lastModifiedDate":"2022-09-16"},{"lineNumber":236,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the specified task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":237,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":238,"author":{"gitId":"jasonchristopher21"},"content":"    public String markBasedOnMassOperation(MassOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":239,"author":{"gitId":"jasonchristopher21"},"content":"        if (op instanceof AllOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":240,"author":{"gitId":"jasonchristopher21"},"content":"            markAll();","lastModifiedDate":"2022-09-16"},{"lineNumber":241,"author":{"gitId":"jasonchristopher21"},"content":"            return showList();","lastModifiedDate":"2022-09-16"},{"lineNumber":242,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (op instanceof RangeOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":243,"author":{"gitId":"jasonchristopher21"},"content":"            RangeOperation rangeOp \u003d (RangeOperation) op;","lastModifiedDate":"2022-09-16"},{"lineNumber":244,"author":{"gitId":"jasonchristopher21"},"content":"            markRange(rangeOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":245,"author":{"gitId":"jasonchristopher21"},"content":"            return showListInRange(rangeOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":246,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (op instanceof SingleOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":247,"author":{"gitId":"jasonchristopher21"},"content":"            SingleOperation singleOp \u003d (SingleOperation) op;","lastModifiedDate":"2022-09-16"},{"lineNumber":248,"author":{"gitId":"jasonchristopher21"},"content":"            return markSingle(singleOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":249,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":250,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"Operation not defined\");","lastModifiedDate":"2022-09-16"},{"lineNumber":251,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":252,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":253,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":254,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":255,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks all the tasks in the list of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":256,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":257,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found (which is not possible in this case)","lastModifiedDate":"2022-09-16"},{"lineNumber":258,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":259,"author":{"gitId":"jasonchristopher21"},"content":"    private void markAll() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":260,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":261,"author":{"gitId":"jasonchristopher21"},"content":"            markAsDone(i);","lastModifiedDate":"2022-09-16"},{"lineNumber":262,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":263,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":264,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":266,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks a range of tasks specified by the RangeOperation","lastModifiedDate":"2022-09-16"},{"lineNumber":267,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":268,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A RangeOperation instance specifying the range of tasks to be marked","lastModifiedDate":"2022-09-16"},{"lineNumber":269,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":270,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":271,"author":{"gitId":"jasonchristopher21"},"content":"    private void markRange(RangeOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":272,"author":{"gitId":"jasonchristopher21"},"content":"        int startRange \u003d op.getStartRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":273,"author":{"gitId":"jasonchristopher21"},"content":"        int endRange \u003d op.getEndRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":274,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d startRange; i \u003c\u003d endRange; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":275,"author":{"gitId":"jasonchristopher21"},"content":"            markAsDone(i);","lastModifiedDate":"2022-09-16"},{"lineNumber":276,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":277,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":278,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":279,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":280,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks a single task specified by the SingleOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":281,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":282,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A SingleOperation instance specifying the task to be marked","lastModifiedDate":"2022-09-16"},{"lineNumber":283,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-09-16"},{"lineNumber":284,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":285,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":286,"author":{"gitId":"jasonchristopher21"},"content":"    private String markSingle(SingleOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":287,"author":{"gitId":"jasonchristopher21"},"content":"        int index \u003d op.getIndex();","lastModifiedDate":"2022-09-16"},{"lineNumber":288,"author":{"gitId":"jasonchristopher21"},"content":"        markAsDone(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":289,"author":{"gitId":"jasonchristopher21"},"content":"        return getTask(index).toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":290,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":291,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":292,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":293,"author":{"gitId":"jasonchristopher21"},"content":"     * Unmarks the tasks specified by the MassOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":294,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":295,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A MassOperation instance specifying the type of mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":296,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A String representation of the tasks executed","lastModifiedDate":"2022-09-16"},{"lineNumber":297,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the specified task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":298,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":299,"author":{"gitId":"jasonchristopher21"},"content":"    public String unmarkBasedOnMassOperation(MassOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":300,"author":{"gitId":"jasonchristopher21"},"content":"        if (op instanceof AllOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":301,"author":{"gitId":"jasonchristopher21"},"content":"            unmarkAll();","lastModifiedDate":"2022-09-16"},{"lineNumber":302,"author":{"gitId":"jasonchristopher21"},"content":"            return showList();","lastModifiedDate":"2022-09-16"},{"lineNumber":303,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (op instanceof RangeOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":304,"author":{"gitId":"jasonchristopher21"},"content":"            RangeOperation rangeOp \u003d (RangeOperation) op;","lastModifiedDate":"2022-09-16"},{"lineNumber":305,"author":{"gitId":"jasonchristopher21"},"content":"            unmarkRange(rangeOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":306,"author":{"gitId":"jasonchristopher21"},"content":"            return showListInRange(rangeOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":307,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (op instanceof SingleOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":308,"author":{"gitId":"jasonchristopher21"},"content":"            SingleOperation singleOp \u003d (SingleOperation) op;","lastModifiedDate":"2022-09-16"},{"lineNumber":309,"author":{"gitId":"jasonchristopher21"},"content":"            return unmarkSingle(singleOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":310,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":311,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"Operation not defined\");","lastModifiedDate":"2022-09-16"},{"lineNumber":312,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":313,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":314,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":315,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":316,"author":{"gitId":"jasonchristopher21"},"content":"     * Unmarks all the tasks in the list of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":317,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":318,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found (which is not possible in this case)","lastModifiedDate":"2022-09-16"},{"lineNumber":319,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":320,"author":{"gitId":"jasonchristopher21"},"content":"    private void unmarkAll() throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":321,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":322,"author":{"gitId":"jasonchristopher21"},"content":"            markAsNotDone(i);","lastModifiedDate":"2022-09-16"},{"lineNumber":323,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":324,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":325,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":326,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":327,"author":{"gitId":"jasonchristopher21"},"content":"     * Unmarks a range of tasks specified by the RangeOperation","lastModifiedDate":"2022-09-16"},{"lineNumber":328,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":329,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A RangeOperation instance specifying the range of tasks to be unmarked","lastModifiedDate":"2022-09-16"},{"lineNumber":330,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":331,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":332,"author":{"gitId":"jasonchristopher21"},"content":"    private void unmarkRange(RangeOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":333,"author":{"gitId":"jasonchristopher21"},"content":"        int startRange \u003d op.getStartRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":334,"author":{"gitId":"jasonchristopher21"},"content":"        int endRange \u003d op.getEndRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":335,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d startRange; i \u003c\u003d endRange; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":336,"author":{"gitId":"jasonchristopher21"},"content":"            markAsNotDone(i);","lastModifiedDate":"2022-09-16"},{"lineNumber":337,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":338,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":339,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":340,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":341,"author":{"gitId":"jasonchristopher21"},"content":"     * Unmarks a single task specified by the SingleOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":342,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":343,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A SingleOperation instance specifying the task to be unmarked","lastModifiedDate":"2022-09-16"},{"lineNumber":344,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-09-16"},{"lineNumber":345,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":346,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":347,"author":{"gitId":"jasonchristopher21"},"content":"    private String unmarkSingle(SingleOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":348,"author":{"gitId":"jasonchristopher21"},"content":"        int index \u003d op.getIndex();","lastModifiedDate":"2022-09-16"},{"lineNumber":349,"author":{"gitId":"jasonchristopher21"},"content":"        markAsNotDone(index);","lastModifiedDate":"2022-09-17"},{"lineNumber":350,"author":{"gitId":"jasonchristopher21"},"content":"        return getTask(index).toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":351,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":352,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":353,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":354,"author":{"gitId":"jasonchristopher21"},"content":"     * Deletes the tasks specified by the MassOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":355,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":356,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A MassOperation instance specifying the type of mass operation","lastModifiedDate":"2022-09-16"},{"lineNumber":357,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A String representation of the tasks executed","lastModifiedDate":"2022-09-16"},{"lineNumber":358,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the specified task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":359,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":360,"author":{"gitId":"jasonchristopher21"},"content":"    public String deleteBasedOnMassOperation(MassOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":361,"author":{"gitId":"jasonchristopher21"},"content":"        if (op instanceof AllOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":362,"author":{"gitId":"jasonchristopher21"},"content":"            return deleteAll();","lastModifiedDate":"2022-09-16"},{"lineNumber":363,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (op instanceof RangeOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":364,"author":{"gitId":"jasonchristopher21"},"content":"            RangeOperation rangeOp \u003d (RangeOperation) op;","lastModifiedDate":"2022-09-16"},{"lineNumber":365,"author":{"gitId":"jasonchristopher21"},"content":"            return deleteRange(rangeOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":366,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (op instanceof SingleOperation) {","lastModifiedDate":"2022-09-16"},{"lineNumber":367,"author":{"gitId":"jasonchristopher21"},"content":"            SingleOperation singleOp \u003d (SingleOperation) op;","lastModifiedDate":"2022-09-16"},{"lineNumber":368,"author":{"gitId":"jasonchristopher21"},"content":"            return deleteSingle(singleOp);","lastModifiedDate":"2022-09-16"},{"lineNumber":369,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":370,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"Operation not defined\");","lastModifiedDate":"2022-09-16"},{"lineNumber":371,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":372,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":373,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":374,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":375,"author":{"gitId":"jasonchristopher21"},"content":"     * Deletes all the tasks in the list of tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":376,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":377,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found (which is not possible in this case)","lastModifiedDate":"2022-09-16"},{"lineNumber":378,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":379,"author":{"gitId":"jasonchristopher21"},"content":"    private String deleteAll() {","lastModifiedDate":"2022-09-16"},{"lineNumber":380,"author":{"gitId":"jasonchristopher21"},"content":"        String deletedTasks \u003d showList();","lastModifiedDate":"2022-09-16"},{"lineNumber":381,"author":{"gitId":"jasonchristopher21"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":382,"author":{"gitId":"jasonchristopher21"},"content":"        return deletedTasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":383,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":384,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":385,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":386,"author":{"gitId":"jasonchristopher21"},"content":"     * Deletes a range of tasks specified by the RangeOperation","lastModifiedDate":"2022-09-16"},{"lineNumber":387,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":388,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A RangeOperation instance specifying the range of tasks to be deleted","lastModifiedDate":"2022-09-16"},{"lineNumber":389,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":390,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":391,"author":{"gitId":"jasonchristopher21"},"content":"    private String deleteRange(RangeOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":392,"author":{"gitId":"jasonchristopher21"},"content":"        ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":393,"author":{"gitId":"jasonchristopher21"},"content":"        int startRange \u003d op.getStartRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":394,"author":{"gitId":"jasonchristopher21"},"content":"        int endRange \u003d op.getEndRange();","lastModifiedDate":"2022-09-16"},{"lineNumber":395,"author":{"gitId":"jasonchristopher21"},"content":"        if (endRange \u003e tasks.size()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":396,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"index out of range\");","lastModifiedDate":"2022-09-16"},{"lineNumber":397,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":398,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d startRange; i \u003c\u003d endRange; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":399,"author":{"gitId":"jasonchristopher21"},"content":"            Task t \u003d tasks.get(startRange - 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":400,"author":{"gitId":"jasonchristopher21"},"content":"            deletedTasks.add(t);","lastModifiedDate":"2022-09-16"},{"lineNumber":401,"author":{"gitId":"jasonchristopher21"},"content":"            deleteTask(startRange);","lastModifiedDate":"2022-09-16"},{"lineNumber":402,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":403,"author":{"gitId":"jasonchristopher21"},"content":"        return changeListToString(deletedTasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":404,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":405,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":406,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":407,"author":{"gitId":"jasonchristopher21"},"content":"     * Deletes a single task specified by the SingleOperation instance","lastModifiedDate":"2022-09-16"},{"lineNumber":408,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":409,"author":{"gitId":"jasonchristopher21"},"content":"     * @param op A SingleOperation instance specifying the task to be deleted","lastModifiedDate":"2022-09-16"},{"lineNumber":410,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-09-16"},{"lineNumber":411,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the task is not found","lastModifiedDate":"2022-09-16"},{"lineNumber":412,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":413,"author":{"gitId":"jasonchristopher21"},"content":"    private String deleteSingle(SingleOperation op) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":414,"author":{"gitId":"jasonchristopher21"},"content":"        int index \u003d op.getIndex();","lastModifiedDate":"2022-09-16"},{"lineNumber":415,"author":{"gitId":"jasonchristopher21"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":416,"author":{"gitId":"jasonchristopher21"},"content":"        deleteTask(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":417,"author":{"gitId":"jasonchristopher21"},"content":"        return t.toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":418,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":419,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":419}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Todo task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Todo object","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the Todo task","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Todo object","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Todo object","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Todo object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Todo object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"        return super.toStringForFile() + \"todo \" + this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":38}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":" * Displays messages and interacts with the user","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"public class Ui {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    // LINE provides the string representation of a horizontal line","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String LINE \u003d \"__________________________________________________________________________\";","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * Reads the command from the user\u0027s input","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string input by the user","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * Displays the greeting message upon startup of the app","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        drawLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"Hello! I\u0027m Shiba \\uD83D\\uDC15\");","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"The task management dog you can trust!\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        drawLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * Displays the error message when encountered an exception","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @param errMsg the error messages","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    public void showErrorMessage(String errMsg) {","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"Woof! I don\u0027t understand that :v\");","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(errMsg);","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * Displays the message in the appropriate horizontal line separator","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @param msg the message to be displayed","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(msg);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     * Draws a horizontal line to separate the comments from one another","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"    public void drawLine() {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 20; -fx-background-insets: 10; -fx-border-insets: 10; -fx-background-color: #FFCF7F; -fx-background-radius: 15; -fx-border-radius: 15\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Woof! Ask me anything!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #ffa712;\" text\u003d\"Send\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":19}},{"path":"src/test/java/duke/exceptions/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    public void exceptionMessageTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"Shiba says: \\\"OOPS! Test message\\\" ☹\", (new DukeException(\"Test message\")).getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jasonchristopher21":14}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"            assertEquals(\"[D][ ] Test message (by: Feb 2 2022 5.00p.m.)\", (new Deadline(\"Test message\", \"2022-02-02 1700\")).toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"            Deadline deadline2 \u003d new Deadline(\"Test marked message\", \"2022-02-02 1700\");","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"            deadline2.markAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"            assertEquals(\"[D][X] Test marked message (by: Feb 2 2022 5.00p.m.)\", deadline2.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringForFileTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"N|todo test message\", (new Todo(\"test message\")).toStringForFile());","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jasonchristopher21":27}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"[T][ ] Test message\", (new Todo(\"Test message\")).toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"        Todo todo2 \u003d new Todo(\"Test marked message\");","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"        todo2.markAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"[T][X] Test marked message\", todo2.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringForFileTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"N|todo test message\", (new Todo(\"test message\")).toStringForFile());","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jasonchristopher21":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"say hello","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"todo say hello","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"event go to dinner at 6 pm","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"event go to dinner /at 6 pm","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"deadline something /by 7 pm","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"delete 4","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jasonchristopher21":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jasonchristopher21":1,"-":37}},{"path":"userTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"N|say hello","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jasonchristopher21":5}}]

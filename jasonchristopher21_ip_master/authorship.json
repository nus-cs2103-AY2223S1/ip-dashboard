[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"checkstyle {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jasonchristopher21":20,"-":40}},{"path":"src/main/data/userTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"N|todo say hello","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"M|deadline do something /by 2022-02-02 2000","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"N|todo say hello","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    private void flip() {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        db.flip();","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        return db;","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Launcher is a class that launches the GUI for the chatbot.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class Launcher {","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"     * Main method to run the logic of the Launcher.","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args String of arguments.","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":16}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"            stage.show();","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Neko.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Shiba.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Greets the user with a greeting message.","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public void greetUser() {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Shiba \\uD83D\\uDC15\\nThe task management dog you can trust!\\nWhat can I do for you today?\";","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"                DialogBox.getDukeDialog(greetMessage, dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"        if (duke.isClosed()) {","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"            CompletableFuture.delayedExecutor(2, TimeUnit.SECONDS).execute(Platform::exit);","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":68}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String LINE \u003d \"    __________________________________________________________________________\";","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String INDENT \u003d \"     \";","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    private boolean isClosed \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    private Parser parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Duke object. Initialises the fields ui, storage and parser.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    public Duke() {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"            tasks \u003d new TaskList(storage.retrieveTasks());","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args arguments supplied by the user at program launch","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        duke.run();","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    private void run() {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isByeCommand \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        while (!isByeCommand) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"                ui.drawLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"                isByeCommand \u003d c.isByeCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"            } finally {","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"                ui.drawLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"     * Runs the main logic of the program.","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"     * @return The response from executing the command.","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException If there are no commands.","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"            output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"            isClosed \u003d c.isByeCommand();","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        return output;","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"     * Checks if the last user command is a bye command","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     * @return true if the last user command is a bye command, false otherwise","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isClosed() {","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"        return isClosed;","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jasonchristopher21":95,"-":3}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to end the current session","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a ByeCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        return true;","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to store the current tasks to the local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        storage.writeToFile(tasks.toArrayList());","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(\"Shiba hope you had a productive time today!\\nDon\u0027t forget to come and work with me again \\uD83D\\uDC36\");","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        return \"Shiba hope you had a productive time today!\\nDon\u0027t forget to come and work with me again \\uD83D\\uDC36\";","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":48}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * An abstract class that encapsulates the Command instance","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public abstract boolean isByeCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the result","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":33}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Command to add a deadline to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Yo, I managed to add this task: \\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a DeadlineCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * @param by The deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the date does not follow the correct format","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    public DeadlineCommand(String description, String by) throws DukeInvalidDateException {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"        deadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to add the specified deadline task to the","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d MESSAGE_SUCCESS + deadline + \" \" + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":60}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * Command to delete a task from the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Yo, I managed to delete this task: \\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private int taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a DeleteCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to delete the specified task from the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"            String t \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            String result \u003d MESSAGE_SUCCESS + t + System.lineSeparator() + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            tasks.deleteTask(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"            return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":62}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Adds an Event task to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Yo, I managed to add this event: \\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    private Event event;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs an Event command instance","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * @param at The date of the event","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the date of the event does not follow","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     *     the correct date format","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    public EventCommand(String description, String at) throws DukeInvalidDateException {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        event \u003d new Event(description, at);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to add the specified Event task to the","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        tasks.add(event);","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d MESSAGE_SUCCESS + event + \" \" + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":61}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to find the commands that matches a given string","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Woof! Here\u0027s some results I found associated with \\\"%s\\\": \";","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private String keyword;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a FindCommand instance","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * @param keyword the String to find in the list of tasks","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to find the command and show the list to the user","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found, or cannot be marked","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d String.format(MESSAGE_SUCCESS, keyword) + System.lineSeparator() + tasks.showFilteredList(keyword);","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jasonchristopher21":54}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to show an invalid command to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    private String message;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs an IncorrectCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @param message the message to be displayed to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public IncorrectCommand(String message) {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to display the command message to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showErrorMessage(message);","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        return message;","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":50}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to display the list of tasks to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed below are the tasks I remember: \";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a ListCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public ListCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to display the list of tasks to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered when showing the list","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d MESSAGE_SUCCESS + System.lineSeparator() + tasks.showList();","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":49}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to mark a command as done","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Yo, I managed to mark this task done: \";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private int taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs a MarkCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to mark the specified task as done","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found, or cannot be marked","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"            tasks.markAsDone(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"            String result \u003d MESSAGE_SUCCESS + System.lineSeparator() + tasks.getTask(taskIndex) + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":60}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * Command to add a todo task to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Yo, I managed to add this task: \\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    private Todo todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs the TodoCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        todo \u003d new Todo(description);","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to add the specified todo task to the","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if errors are encountered during execution","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d MESSAGE_SUCCESS + todo + \" \" + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":57}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.commands;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":" * Command to mark a task as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Yo, I managed to unmark this task: \";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    private int taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     * Constructs an UnmarkCommand instance","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * @param taskIndex the index of the task to be marked as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"        super();","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns a boolean value true if the command is a bye command,","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * false otherwise.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value on whether the command is a bye command","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * Executes the command to mark the specified task as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks The current list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * @param ui The Ui instance to return the result to the user","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param storage The Storage instance to store the result to local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the execution result","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if task is not found, or cannot be marked","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"            tasks.markAsNotDone(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"            String result \u003d MESSAGE_SUCCESS + System.lineSeparator() + tasks.getTask(taskIndex) + tasks.showNumberOfTasks();","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showMessage(result);","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            return result;","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":60}},{"path":"src/main/java/duke/exceptions/DukeEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeEmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeEmptyDescriptionException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Commands todo, deadline and event should have a description\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Shiba says: \\\"OOPS! \" + message + \"\\\" ☹\");","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidCommandException() {","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"You have entered an invalid command\");","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/exceptions/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidDateException extends DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidDateException() {","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"An invalid date has been entered. Date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/exceptions/DukeInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidFormatException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidFormatException(String type, String missingExpr) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(type + \" should have a \" + missingExpr + \" command and a specified date in its description\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeInvalidNumberFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeInvalidNumberFormatException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeInvalidNumberFormatException(String command) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Invalid number format detected. Enter something like \\\"\" + command + \" 1 \\\"\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/exceptions/DukeOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeOutOfRangeException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeOutOfRangeException(int range) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(\"Task not found! Your number should be from 0 to \" + range);","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":9}},{"path":"src/main/java/duke/exceptions/DukeUnspecifiedNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeUnspecifiedNumberException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"    public DukeUnspecifiedNumberException(String command) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"        super(command + \" command should be specified with a task number\");","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":8}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeEmptyDescriptionException;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidCommandException;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidFormatException;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":" * Parses the input from the user to their specific commands","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"public class Parser {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public static final Pattern STORED_TASK_DATA_RAW_FORMAT \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"            Pattern.compile(\"(N|M)\\\\|(event|todo|deadline)\\\\s+(.*)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the input from the user to their commands","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     * @param input a string containing the command input by the user","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a Command corresponding to the input string","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(input.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidCommandException();","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareTodo(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareDeadline(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareEvent(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareDelete(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareMark(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareUnmark(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"            return prepareFind(arguments);","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(\"Command not found!\");","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Todo command","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Todo command","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Todo command","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareTodo(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"        return new TodoCommand(args.trim());","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Deadline command","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Deadline command","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Deadline command","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareDeadline(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"            String[] strArr \u003d parseDeadlineArgument(args);","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"            String description \u003d strArr[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"            String by \u003d strArr[1];","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"            return new DeadlineCommand(description.trim(), by.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising an Event command","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising an Event command","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising an Event command","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareEvent(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"            String[] strArr \u003d parseEventArgument(args);","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"            String description \u003d strArr[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"            String at \u003d strArr[1];","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"            return new EventCommand(description.trim(), at.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the arguments for the Deadline arguments","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args string containing the description and the deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string array where the first element represents the description","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"     *     and the second element represents the deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the description is empty or if the command doesn\u0027t","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"     *     follow a specific command","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] parseDeadlineArgument(String args) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"        String by \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"        String[] splitted \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-09-03"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isSplitterFound \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"        if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c splitted.length; i++) {","lastModifiedDate":"2022-09-10"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"            if (splitted[i].equals(\"/by\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"                isSplitterFound \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"            } else if (isSplitterFound) {","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"                by \u003d by + splitted[i] + \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"            } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"                description \u003d description + splitted[i] + \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":163,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":164,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":165,"author":{"gitId":"jasonchristopher21"},"content":"        if (!isSplitterFound) {","lastModifiedDate":"2022-09-03"},{"lineNumber":166,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidFormatException(\"deadline\", \"/by\");","lastModifiedDate":"2022-09-03"},{"lineNumber":167,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":168,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":169,"author":{"gitId":"jasonchristopher21"},"content":"        String[] strArr \u003d new String[2];","lastModifiedDate":"2022-09-03"},{"lineNumber":170,"author":{"gitId":"jasonchristopher21"},"content":"        strArr[0] \u003d description.trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":171,"author":{"gitId":"jasonchristopher21"},"content":"        strArr[1] \u003d by.trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":172,"author":{"gitId":"jasonchristopher21"},"content":"        return strArr;","lastModifiedDate":"2022-09-03"},{"lineNumber":173,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":174,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":175,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the arguments for the Event arguments","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":178,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args string containing the description and the time of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":179,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string array where the first element represents the description","lastModifiedDate":"2022-09-09"},{"lineNumber":180,"author":{"gitId":"jasonchristopher21"},"content":"     *     and the second element represents the time of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":181,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if the description is empty or if the command doesn\u0027t","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"jasonchristopher21"},"content":"     *     follow a specific command","lastModifiedDate":"2022-09-09"},{"lineNumber":183,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"jasonchristopher21"},"content":"    private static String[] parseEventArgument(String args) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":185,"author":{"gitId":"jasonchristopher21"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":186,"author":{"gitId":"jasonchristopher21"},"content":"        String at \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":187,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":188,"author":{"gitId":"jasonchristopher21"},"content":"        String[] splitted \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2022-09-03"},{"lineNumber":189,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":190,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isSplitterFound \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":191,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":192,"author":{"gitId":"jasonchristopher21"},"content":"        if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2022-09-03"},{"lineNumber":193,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeEmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":194,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":195,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":196,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c splitted.length; i++) {","lastModifiedDate":"2022-09-10"},{"lineNumber":197,"author":{"gitId":"jasonchristopher21"},"content":"            if (splitted[i].equals(\"/at\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":198,"author":{"gitId":"jasonchristopher21"},"content":"                isSplitterFound \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":199,"author":{"gitId":"jasonchristopher21"},"content":"            } else if (isSplitterFound) {","lastModifiedDate":"2022-09-03"},{"lineNumber":200,"author":{"gitId":"jasonchristopher21"},"content":"                at \u003d at + splitted[i] + \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":201,"author":{"gitId":"jasonchristopher21"},"content":"            } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":202,"author":{"gitId":"jasonchristopher21"},"content":"                description \u003d description + splitted[i] + \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":203,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":204,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":205,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":206,"author":{"gitId":"jasonchristopher21"},"content":"        if (!isSplitterFound) {","lastModifiedDate":"2022-09-03"},{"lineNumber":207,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidFormatException(\"event\", \"/at\");","lastModifiedDate":"2022-09-03"},{"lineNumber":208,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":209,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":210,"author":{"gitId":"jasonchristopher21"},"content":"        String[] strArr \u003d new String[2];","lastModifiedDate":"2022-09-03"},{"lineNumber":211,"author":{"gitId":"jasonchristopher21"},"content":"        strArr[0] \u003d description.trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":212,"author":{"gitId":"jasonchristopher21"},"content":"        strArr[1] \u003d at.trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":213,"author":{"gitId":"jasonchristopher21"},"content":"        return strArr;","lastModifiedDate":"2022-09-03"},{"lineNumber":214,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":215,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":216,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":217,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Mark command","lastModifiedDate":"2022-09-09"},{"lineNumber":218,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":219,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Mark command","lastModifiedDate":"2022-09-09"},{"lineNumber":220,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Mark command","lastModifiedDate":"2022-09-09"},{"lineNumber":221,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":222,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareMark(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":223,"author":{"gitId":"jasonchristopher21"},"content":"        int taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":224,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":225,"author":{"gitId":"jasonchristopher21"},"content":"            taskIndex \u003d Integer.valueOf(args.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":226,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":227,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(\"Mark should be given a number input :)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":228,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":229,"author":{"gitId":"jasonchristopher21"},"content":"        return new MarkCommand(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":230,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":231,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":232,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":233,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising an Unmark command","lastModifiedDate":"2022-09-09"},{"lineNumber":234,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":235,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising an Unmark command","lastModifiedDate":"2022-09-09"},{"lineNumber":236,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising an Unmark command","lastModifiedDate":"2022-09-09"},{"lineNumber":237,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":238,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareUnmark(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":239,"author":{"gitId":"jasonchristopher21"},"content":"        int taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":240,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":241,"author":{"gitId":"jasonchristopher21"},"content":"            taskIndex \u003d Integer.valueOf(args.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":242,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":243,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(\"Unmark should be given a number input :)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":244,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":245,"author":{"gitId":"jasonchristopher21"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":246,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":247,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":248,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":249,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising a Delete command","lastModifiedDate":"2022-09-09"},{"lineNumber":250,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":251,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising a Delete command","lastModifiedDate":"2022-09-09"},{"lineNumber":252,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising a Delete command","lastModifiedDate":"2022-09-09"},{"lineNumber":253,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":254,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareDelete(String args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":255,"author":{"gitId":"jasonchristopher21"},"content":"        int taskIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":256,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":257,"author":{"gitId":"jasonchristopher21"},"content":"            taskIndex \u003d Integer.valueOf(args.trim());","lastModifiedDate":"2022-09-03"},{"lineNumber":258,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":259,"author":{"gitId":"jasonchristopher21"},"content":"            return new IncorrectCommand(\"Delete should be given a number input :)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":260,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":261,"author":{"gitId":"jasonchristopher21"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":262,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":263,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":264,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":265,"author":{"gitId":"jasonchristopher21"},"content":"     * Prepares the arguments for initialising an Event command","lastModifiedDate":"2022-09-10"},{"lineNumber":266,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":267,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the description for initialising an Event command","lastModifiedDate":"2022-09-10"},{"lineNumber":268,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the command of initialising an Event command","lastModifiedDate":"2022-09-10"},{"lineNumber":269,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":270,"author":{"gitId":"jasonchristopher21"},"content":"    private Command prepareFind(String args) {","lastModifiedDate":"2022-09-10"},{"lineNumber":271,"author":{"gitId":"jasonchristopher21"},"content":"        return new FindCommand(args.trim());","lastModifiedDate":"2022-09-10"},{"lineNumber":272,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":273,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":274,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":275,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the arguments for converting a task from storage to a Task","lastModifiedDate":"2022-09-09"},{"lineNumber":276,"author":{"gitId":"jasonchristopher21"},"content":"     * instance that can be stored in the TaskList object","lastModifiedDate":"2022-09-09"},{"lineNumber":277,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":278,"author":{"gitId":"jasonchristopher21"},"content":"     * @param args the string retrieved from the local file","lastModifiedDate":"2022-09-14"},{"lineNumber":279,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the task after the arguments are parsed","lastModifiedDate":"2022-09-09"},{"lineNumber":280,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":281,"author":{"gitId":"jasonchristopher21"},"content":"    public static Task parseTask(String args) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":282,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":283,"author":{"gitId":"jasonchristopher21"},"content":"        boolean isMarked \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":284,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":285,"author":{"gitId":"jasonchristopher21"},"content":"        Matcher m \u003d STORED_TASK_DATA_RAW_FORMAT.matcher(args);","lastModifiedDate":"2022-09-03"},{"lineNumber":286,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":287,"author":{"gitId":"jasonchristopher21"},"content":"        m.find();","lastModifiedDate":"2022-09-03"},{"lineNumber":288,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":289,"author":{"gitId":"jasonchristopher21"},"content":"        final String markedStatus \u003d m.group(1);","lastModifiedDate":"2022-09-03"},{"lineNumber":290,"author":{"gitId":"jasonchristopher21"},"content":"        final String commandWord \u003d m.group(2);","lastModifiedDate":"2022-09-03"},{"lineNumber":291,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":292,"author":{"gitId":"jasonchristopher21"},"content":"        switch (markedStatus) {","lastModifiedDate":"2022-09-03"},{"lineNumber":293,"author":{"gitId":"jasonchristopher21"},"content":"        case \"M\":","lastModifiedDate":"2022-09-03"},{"lineNumber":294,"author":{"gitId":"jasonchristopher21"},"content":"            isMarked \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":295,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":296,"author":{"gitId":"jasonchristopher21"},"content":"        case \"N\":","lastModifiedDate":"2022-09-03"},{"lineNumber":297,"author":{"gitId":"jasonchristopher21"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":298,"author":{"gitId":"jasonchristopher21"},"content":"            isMarked \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":299,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":300,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":301,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":302,"author":{"gitId":"jasonchristopher21"},"content":"        Task t;","lastModifiedDate":"2022-09-03"},{"lineNumber":303,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":304,"author":{"gitId":"jasonchristopher21"},"content":"        switch(commandWord) {","lastModifiedDate":"2022-09-03"},{"lineNumber":305,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":306,"author":{"gitId":"jasonchristopher21"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":307,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d new Todo(m.group(3).trim());","lastModifiedDate":"2022-09-10"},{"lineNumber":308,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":309,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":310,"author":{"gitId":"jasonchristopher21"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":311,"author":{"gitId":"jasonchristopher21"},"content":"            String[] deadlineStrArr \u003d parseDeadlineArgument(m.group(3));","lastModifiedDate":"2022-09-10"},{"lineNumber":312,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d new Deadline(deadlineStrArr[0], deadlineStrArr[1]);","lastModifiedDate":"2022-09-03"},{"lineNumber":313,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":314,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":315,"author":{"gitId":"jasonchristopher21"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":316,"author":{"gitId":"jasonchristopher21"},"content":"            String[] eventStrArr \u003d parseEventArgument(m.group(3));","lastModifiedDate":"2022-09-10"},{"lineNumber":317,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d new Event(eventStrArr[0], eventStrArr[1]);","lastModifiedDate":"2022-09-03"},{"lineNumber":318,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":319,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":320,"author":{"gitId":"jasonchristopher21"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":321,"author":{"gitId":"jasonchristopher21"},"content":"            t \u003d null;","lastModifiedDate":"2022-09-03"},{"lineNumber":322,"author":{"gitId":"jasonchristopher21"},"content":"            break;","lastModifiedDate":"2022-09-03"},{"lineNumber":323,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":324,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":325,"author":{"gitId":"jasonchristopher21"},"content":"        if (t \u003d\u003d null) {","lastModifiedDate":"2022-09-03"},{"lineNumber":326,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(\"hi\");","lastModifiedDate":"2022-09-03"},{"lineNumber":327,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":328,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":329,"author":{"gitId":"jasonchristopher21"},"content":"        if (isMarked) {","lastModifiedDate":"2022-09-03"},{"lineNumber":330,"author":{"gitId":"jasonchristopher21"},"content":"            t.markAsDone();","lastModifiedDate":"2022-09-03"},{"lineNumber":331,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":332,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":333,"author":{"gitId":"jasonchristopher21"},"content":"        return t;","lastModifiedDate":"2022-09-03"},{"lineNumber":334,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":335,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":335}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.File;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":" * Performs read and write operations to the userTasks file in the user\u0027s","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":" * local storage","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"public class Storage {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    private File f;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String PATH \u003d \"src/main/data/userTasks.txt\";","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Storage class with a specified PATH constant","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    public Storage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        f \u003d new File(PATH);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * Retrieves the tasks read from the userTasks.txt file","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @return an ArrayList of Strings containing the tasks from userTasks.txt","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    public ArrayList\u003cString\u003e retrieveTasks() throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"        ArrayList\u003cString\u003e strArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"                String sentence \u003d sc.nextLine().trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"                strArr.add(sentence);","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"         } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        return strArr;","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     * Writes the tasks stored in a specified ArrayList to the userTasks.txt file","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     * @param tasks an ArrayList of tasks to be stored in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    public void writeToFile(ArrayList\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"            String s \u003d tasks.get(i).toStringForFile();","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d s + System.lineSeparator();","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"        try (BufferedWriter bf \u003d Files.newBufferedWriter(Path.of(PATH),","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"                StandardOpenOption.TRUNCATE_EXISTING)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"            BufferedWriter fw \u003d new BufferedWriter(new FileWriter(PATH, true));","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"            fw.append(str);","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"            fw.close();","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":80}},{"path":"src/main/java/duke/tasks/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Date object for use in the Deadline and","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Event classes","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"public class Date {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    protected LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    protected int time;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Date object","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * @param str A string containing the date and time in a specific format","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the date and time does not follow the","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     *     correct format","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    public Date(String str) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        String[] splittedValues \u003d str.split(\"\\\\s+\");","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"        this.date \u003d parse(splittedValues[0]);","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"        if (splittedValues.length \u003e 1) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"            this.time \u003d Integer.valueOf(splittedValues[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"     * Parses the date string to the LocalDate object","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"     * @param str A string containing the date in a specific format","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * @return A LocalDate containing the date representation of str","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the string does not follow the correct","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     *     date format","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"    private LocalDate parse(String str) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"        LocalDate date;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"            date \u003d LocalDate.parse(str);","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeInvalidDateException();","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"        return date;","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the date field","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the date field in the \"MMM d YYYY\" format","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    private String dateToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the time field","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the time field in the \"a.m/p.m\" format","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"    private String timeToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"        int hours \u003d (int) Math.floor(time / 100);","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"        int minutes \u003d time % 100;","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"        String timeOfDay \u003d \"a.m.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"        if (hours \u003e 12) {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"            hours -\u003d 12;","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"            timeOfDay \u003d \"p.m.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (hours \u003d\u003d 12) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"            timeOfDay \u003d \"a.m.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"        if (hours \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"            result +\u003d \"12.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"            result +\u003d hours + \".\";","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"        if (minutes \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"            result +\u003d \"00\";","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        } else if (minutes \u003c 10) {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"            result +\u003d \"0\" + minutes;","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"            result +\u003d minutes;","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"        result +\u003d timeOfDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Date object","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Date object","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"        return dateToString() + \" \" + timeToString();","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jasonchristopher21":105}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Deadline task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    protected Date date;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Deadline object","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     * @param by The deadline of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if the string by does not follow the correct date format","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public Deadline(String description, String by) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"        this.date \u003d new Date(by);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Deadline object","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Deadline object","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Deadline object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Deadline object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        return super.toStringForFile() + \"deadline \" + this.description + \" /by \" + this.by;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates an Event task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    protected Date date;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialiises the Event object","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the Event task","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     * @param at The date of the Event task","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeInvalidDateException if string at does not follow the correct date format","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public Event(String description, String at) throws DukeInvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"        this.date \u003d new Date(at);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Event object","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Event object","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Event object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Event object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        return super.toStringForFile() + \"event \" + this.description + \" /at \" + this.at;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":47}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Task object","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the status icon that indicates whether the task is marked","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the status icon that indicates whether the task is marked","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Task object","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Task object","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task as done","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task as not done","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Task object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Task object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"            return \"M|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"            return \"N|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"     * Checks if the task description contains the specified keyword","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"     * @param keyword the keyword to be matched with the task description","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a boolean value, true if the description contains the keyword, false otherwise","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"    public boolean checkIfContains(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":76}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeOutOfRangeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a list of tasks in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"public class TaskList {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"    protected Storage storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the tasks array by using existing data stored in","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * the local machine","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * @param data An ArrayList of strings containing the saved user data","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"    public TaskList(ArrayList\u003c? extends String\u003e data) {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"            for (String sentence : data) {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"                this.tasks.add(Parser.parseTask(sentence));","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows the list of tasks currently added to the TaskList","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"     * @return a string containing the tasks added to the TaskList separated","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"     *     by a newline character","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"    public String showList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d ((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d (tasks.size() + \".\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"        return str;","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"     * as done.","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"jasonchristopher21"},"content":"     *     or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsDone(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"jasonchristopher21"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"jasonchristopher21"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"jasonchristopher21"},"content":"     * Marks the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"jasonchristopher21"},"content":"     * as not done.","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"jasonchristopher21"},"content":"     *     or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"jasonchristopher21"},"content":"    public void markAsNotDone(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"jasonchristopher21"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"jasonchristopher21"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jasonchristopher21"},"content":"     * Adds a task to the ArrayList of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"jasonchristopher21"},"content":"     * @param task the task to be added to the list of tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"jasonchristopher21"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jasonchristopher21"},"content":"     * Deletes a task from the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jasonchristopher21"},"content":"     *      or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"jasonchristopher21"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jasonchristopher21"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jasonchristopher21"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows the number of tasks in the TaskList","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the number of tasks in the TaskList","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"jasonchristopher21"},"content":"    public String showNumberOfTasks() {","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"jasonchristopher21"},"content":"        return \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"jasonchristopher21"},"content":"     * Retrieves the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"jasonchristopher21"},"content":"     * @param index the position of the task in the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the task in the index-th position of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"jasonchristopher21"},"content":"     * @throws DukeException if index exceeds the size of the tasks array","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"jasonchristopher21"},"content":"     *      or if index is less than or equal to 0","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"jasonchristopher21"},"content":"    public String getTask(int index) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"jasonchristopher21"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"jasonchristopher21"},"content":"            throw new DukeOutOfRangeException(this.tasks.size());","lastModifiedDate":"2022-09-03"},{"lineNumber":135,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"jasonchristopher21"},"content":"        return this.tasks.get(index - 1).toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the tasks ArrayList","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the tasks ArrayList","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"jasonchristopher21"},"content":"    public ArrayList\u003cTask\u003e toArrayList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"jasonchristopher21"},"content":"        return tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":148,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":149,"author":{"gitId":"jasonchristopher21"},"content":"     * Shows a list that is filtered by the keyword","lastModifiedDate":"2022-09-10"},{"lineNumber":150,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":151,"author":{"gitId":"jasonchristopher21"},"content":"    public String showFilteredList(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":152,"author":{"gitId":"jasonchristopher21"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d filterList(keyword);","lastModifiedDate":"2022-09-10"},{"lineNumber":153,"author":{"gitId":"jasonchristopher21"},"content":"        String result \u003d changeListToString(filteredList);","lastModifiedDate":"2022-09-10"},{"lineNumber":154,"author":{"gitId":"jasonchristopher21"},"content":"        return result;","lastModifiedDate":"2022-09-10"},{"lineNumber":155,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":156,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":157,"author":{"gitId":"jasonchristopher21"},"content":"    private ArrayList\u003cTask\u003e filterList(String keyword) {","lastModifiedDate":"2022-09-10"},{"lineNumber":158,"author":{"gitId":"jasonchristopher21"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-10"},{"lineNumber":159,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-10"},{"lineNumber":160,"author":{"gitId":"jasonchristopher21"},"content":"            if (tasks.get(i).checkIfContains(keyword)) {","lastModifiedDate":"2022-09-10"},{"lineNumber":161,"author":{"gitId":"jasonchristopher21"},"content":"                filteredTasks.add(tasks.get(i));","lastModifiedDate":"2022-09-10"},{"lineNumber":162,"author":{"gitId":"jasonchristopher21"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":163,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":164,"author":{"gitId":"jasonchristopher21"},"content":"        return filteredTasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":165,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":166,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":167,"author":{"gitId":"jasonchristopher21"},"content":"    private String changeListToString(ArrayList\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":168,"author":{"gitId":"jasonchristopher21"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-10"},{"lineNumber":169,"author":{"gitId":"jasonchristopher21"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-09-10"},{"lineNumber":170,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d ((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":171,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":172,"author":{"gitId":"jasonchristopher21"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2022-09-10"},{"lineNumber":173,"author":{"gitId":"jasonchristopher21"},"content":"            str +\u003d (tasks.size() + \".\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2022-09-10"},{"lineNumber":174,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":175,"author":{"gitId":"jasonchristopher21"},"content":"        return str;","lastModifiedDate":"2022-09-10"},{"lineNumber":176,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":177,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":177}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":" * Encapsulates a Todo task in Duke","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"     * Initialises the Todo object","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"     * @param description The descripttion of the Todo task","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Todo object","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Todo object","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     * Returns the string representation of the Todo object for storing","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"     * in the local file","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string representation of the Todo object for local file storing","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"        return super.toStringForFile() + \"todo \" + this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jasonchristopher21":38}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":" * Displays messages and interacts with the user","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"public class Ui {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    // LINE provides the string representation of a horizontal line","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    private static final String LINE \u003d \"__________________________________________________________________________\";","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"     * Reads the command from the user\u0027s input","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the string input by the user","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"     * Displays the greeting message upon startup of the app","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"     * @return the greeting message of the app, in string representation","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jasonchristopher21"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jasonchristopher21"},"content":"        drawLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"Hello! I\u0027m Shiba \\uD83D\\uDC15\");","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"The task management dog you can trust!\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jasonchristopher21"},"content":"        drawLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jasonchristopher21"},"content":"     * Displays the error message when encountered an exception","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jasonchristopher21"},"content":"     * @param errMsg the error messages","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jasonchristopher21"},"content":"    public void showErrorMessage(String errMsg) {","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(\"Woof! I don\u0027t understand that :v\");","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(errMsg);","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jasonchristopher21"},"content":"     * Displays the message in the appropriate horizontal line separator","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jasonchristopher21"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jasonchristopher21"},"content":"     * @param msg the message to be displayed","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jasonchristopher21"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(msg);","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jasonchristopher21"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jasonchristopher21"},"content":"     * Draws a horizontal line to separate the comments from one another","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jasonchristopher21"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jasonchristopher21"},"content":"    public void drawLine() {","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jasonchristopher21"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jasonchristopher21":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"jasonchristopher21":19}},{"path":"src/test/java/duke/exceptions/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    public void exceptionMessageTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"Shiba says: \\\"OOPS! Test message\\\" ☹\", (new DukeException(\"Test message\")).getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jasonchristopher21":14}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"            assertEquals(\"[D][ ] Test message (by: Feb 2 2022 5.00p.m.)\", (new Deadline(\"Test message\", \"2022-02-02 1700\")).toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"            Deadline deadline2 \u003d new Deadline(\"Test marked message\", \"2022-02-02 1700\");","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"            deadline2.markAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"            assertEquals(\"[D][X] Test marked message (by: Feb 2 2022 5.00p.m.)\", deadline2.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringForFileTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"N|todo test message\", (new Todo(\"test message\")).toStringForFile());","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jasonchristopher21":27}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"[T][ ] Test message\", (new Todo(\"Test message\")).toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"        Todo todo2 \u003d new Todo(\"Test marked message\");","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"        todo2.markAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"[T][X] Test marked message\", todo2.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jasonchristopher21"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jasonchristopher21"},"content":"    public void toStringForFileTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jasonchristopher21"},"content":"        assertEquals(\"N|todo test message\", (new Todo(\"test message\")).toStringForFile());","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jasonchristopher21"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jasonchristopher21"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jasonchristopher21":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"say hello","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"todo say hello","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"event go to dinner at 6 pm","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jasonchristopher21"},"content":"event go to dinner /at 6 pm","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jasonchristopher21"},"content":"deadline something /by 7 pm","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jasonchristopher21"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jasonchristopher21"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"delete 4","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jasonchristopher21"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jasonchristopher21"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jasonchristopher21"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jasonchristopher21"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jasonchristopher21":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jasonchristopher21"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"jasonchristopher21"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jasonchristopher21":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jasonchristopher21"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jasonchristopher21":1,"-":37}},{"path":"userTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jasonchristopher21"},"content":"N|","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jasonchristopher21"},"content":"N|say hello","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jasonchristopher21":5}}]

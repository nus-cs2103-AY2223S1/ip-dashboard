[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"D //   // test // 2019-12-02T18:00","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"D //   // do homework // 2019-12-02T18:00","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"T //   // test","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"T //   // test","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"T //   // test","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"T //   // test this","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"T //   // test this also","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"T //   // this also test","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"D //   // deadline test // 2022-03-02T00:00","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"E //   // read book // 2022-03-04T00:00","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"T //   // sample","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"T //   // testtest","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"T //   // read book","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"D //   // return book // 2022-06-06T00:00","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":14}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":" * Deadline class represents a type of Task that has a due date.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"     * @param description the String that describes the task","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"     * @param by the LocalDateTime of the deadline","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the task in a specific format to save it in the text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"     * @return the string that represents the task in a specific format","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"    public String getDataFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        return String.format(\"D // %s // %s // %s\", getStatusIcon(), description, by);","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     * @return a string that represents the task","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"                + by.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"PangKuangWei":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":" * Duke is a program that helps the user manage their tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"    enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"        TODO,","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"        EVENT","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"     * @param filePath the String that represents the relative path of the text document","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"     *                 to load or save from","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     * Runs the core part of the code","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        ui.printGreetings();","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        String str \u003d sc.nextLine().trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        while(!str.equals(\"bye\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"                Parser.parseCommand(str, tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"                ui.printMessage(e.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"            str \u003d sc.nextLine().trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"            storage.saveData(tasks.getTasks());","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"            ui.printMessage(e.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"        ui.printGoodbye();","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PangKuangWei":60,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":" * DukeException is a custom exception class for exceptions when using","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":" * the Duke program.","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"    private String message;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for DukeException","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"     * @param message the error message that is shown to the user","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the String representation of the exception.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"     * @return the string that represents the exception","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"        return \"Oops! \" + message;","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"PangKuangWei":29}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":" * Event class represents a type of task that has a date and time of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"     * @param description the String that describes the task","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"     * @param at the LocalDateTime of the event","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the task in a specific format to save it in the text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"     * @return the string that represents the task in a specific format","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"    public String getDataFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        return String.format(\"E // %s // %s // %s\", getStatusIcon(), description, at);","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     * @return a string that represents the task","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"                + at.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"PangKuangWei":44}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":" * Parser class deals with making sense of the user command.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"     * Parses the command typed by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"     * @param str the string input by the user","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"     * @param tasks the TaskList","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if command is invalid","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"    public static void parseCommand(String str, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"        String[] splitStr \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"        switch (splitStr[0]) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"        case \"list\":","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"            tasks.printTaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"            tasks.mark(splitStr);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"            tasks.unmark(splitStr);","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"            tasks.addTask(splitStr, Duke.TaskType.TODO);","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"            tasks.addTask(splitStr, Duke.TaskType.DEADLINE);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"        case \"event\":","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"            tasks.addTask(splitStr, Duke.TaskType.EVENT);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"            tasks.deleteTask(splitStr);","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        case \"find\":","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"            tasks.findTasks(splitStr);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"     * Parses a string into type LocalDateTime.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"     * @param str a string that represents date and time","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"     * @return a LocalDateTime representing the date and time","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if the given input is not in the specified format","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"    public static LocalDateTime parseDateTime(String str) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"        String[] dateTimeFormat \u003d {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy/MM/dd HHmm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy-MM-dd HHmm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"                \"dd/MM/yyyy HHmm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"                \"d/MM/yyyy HHmm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"                \"d/M/yyyy HHmm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"        };","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"        String[] dateFormat \u003d {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy/MM/dd\",","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy-MM-dd\",","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy-MM-d\",","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy-M-dd\",","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"                \"yyyy-M-d\",","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"                \"dd/MM/yyyy\",","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"                \"d/MM/yyyy\",","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"                \"d/M/yyyy\",","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"        };","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"        for (String format : dateTimeFormat) {","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"                return LocalDateTime.parse(str, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"        for (String format : dateFormat) {","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"                LocalDate date \u003d LocalDate.parse(str, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"        throw new DukeException(\"Please specify the date and time in YYYY-MM-DD TTTT format.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":91}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":" * Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"    private String filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"     * @param filePath the string that represents the path of the text file to","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"     *                 load tasks from or save tasks in","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"     * Returns an ArrayList of Task Objects that is loaded from the text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"     * Returns an empty ArrayList if the text file is empty or does not exist.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"     * @return an ArrayList of Task Objects","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if there is an error in accessing the file","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"        if (createDukeTextFile()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"                File dukeFile \u003d new File(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"                Scanner myReader \u003d new Scanner(dukeFile);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"                while (myReader.hasNextLine()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"                    String data \u003d myReader.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"                    char taskType \u003d data.charAt(0);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"                    switch (taskType) {","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"                        String[] todoSplit \u003d data.split(\" // \", 3);","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"                        Task todo \u003d new Todo(todoSplit[2]);","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"                        if (todoSplit[1].equals(\"X\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"                            todo.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"                        tasks.add(todo);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"                        break;","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"                        String[] deadlineSplit \u003d data.split(\" // \", 4);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"                        Task deadline \u003d new Deadline(deadlineSplit[2], LocalDateTime.parse(deadlineSplit[3]));","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"                        if (deadlineSplit[1].equals(\"X\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"                        break;","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"                        String[] eventSplit \u003d data.split(\" // \", 4);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"                        Task event \u003d new Event(eventSplit[2], LocalDateTime.parse(eventSplit[3]));","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"                        if (eventSplit[1].equals(\"X\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"                            event.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"                        tasks.add(event);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"                        break;","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"                    default:","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"                        throw new DukeException(\"Something is wrong with the text file.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"                myReader.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"                throw new DukeException(\"File does not exist.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"        return tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"     * Takes in an ArrayList of Task objects and saves them in the text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"     * @param tasks An ArrayList of Task objects","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if there is an error with writing to the text file","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"            writer.write(\"\");","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"                writer.append(task.getDataFormat()).append(\"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"            writer.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Something is wrong with the text file.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"PangKuangWei"},"content":"     * Creates a Duke.txt text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"PangKuangWei"},"content":"     * @return true if the text file already exists; fakse otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if an error occured during file creation","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"    public boolean createDukeTextFile() throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"PangKuangWei"},"content":"        boolean isAlreadyCreated \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"        File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"        File dukeFile \u003d new File(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"            dataFolder.mkdirs();","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"            if (!dukeFile.createNewFile()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"PangKuangWei"},"content":"                isAlreadyCreated \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"PangKuangWei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Something is wrong with the text file.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"PangKuangWei"},"content":"        return isAlreadyCreated;","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":119}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":" * Task is an abstract class that represents a task.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"     * @param description the String that describes the task","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    abstract public String getDataFormat();","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"     * Returns a string to indicate whether the task is marked as done or undone","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"     * with an X and whitespace respectively.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"     * @return a string \"X\" or \" \"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"     * Marks the Task as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"     * Marks the Task as undone.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"     * Splits the description of the task into individual words.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"     * @return An array of strings","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"    public String[] splitDescriptionToWords() {","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        return description.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"     * @return a string that represents the task","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"PangKuangWei":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":" * TaskList class contains the task list that has operations such as","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":" * to add or delete tasks in the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"    private int taskCount;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for TaskList. An empty ArrayList of type Task is created.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for TaskList that takes in an ArrayList of Task objects.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"     * @param arr an ArrayList of Task objects","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"        tasks \u003d arr;","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        taskCount \u003d tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     * @param splitStr the string input","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     * @param type the type of task","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if the input is invalid","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"    public void addTask(String[] splitStr, Duke.TaskType type) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        switch (type) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        case TODO:","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"            tasks.add(new Todo(splitStr[1]));","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"            taskCount++;","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task:\\n       \" + tasks.get(taskCount - 1)","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"                    + \"\\n     Now you have \" + taskCount + \" tasks in the list\");","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"            String[] strDeadline \u003d splitStr[1].split(\"/by\", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"            if (strDeadline.length \u003c 2 || strDeadline[1].equals(\"\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"                throw new DukeException(\"Please also specify the date and time.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"            LocalDateTime deadlineDateTime \u003d Parser.parseDateTime(strDeadline[1].trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"            tasks.add(new Deadline(strDeadline[0].trim(), deadlineDateTime));","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"            taskCount++;","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task:\\n       \" + tasks.get(taskCount - 1)","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"                    + \"\\n     Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"        case EVENT:","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"            String[] strEvent \u003d splitStr[1].split(\"/at\", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"            if (strEvent.length \u003c 2 || strEvent[1].equals(\"\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"                throw new DukeException(\"Please also specify the date and time.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"            LocalDateTime eventDateTime \u003d Parser.parseDateTime(strEvent[1].trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"            tasks.add(new Event(strEvent[0].trim(), eventDateTime));","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"            taskCount++;","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task:\\n       \" + tasks.get(taskCount - 1)","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"                    + \"\\n     Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"     * @param splitStr the string input","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if the input does not specify an int after delete","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"    public void deleteTask(String[] splitStr) throws DukeException{","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify task number to delete.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"        int deleteNo;","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"            deleteNo \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify task number to delete.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"        if (deleteNo \u003c\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"PangKuangWei"},"content":"        if (deleteNo \u003e taskCount) {","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"There are not that many tasks!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"PangKuangWei"},"content":"        taskCount--;","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"PangKuangWei"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task:\\n       \" + tasks.get(deleteNo - 1)","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"PangKuangWei"},"content":"                + \"\\n     Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"        tasks.remove(deleteNo - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"     * @param splitStr the string input","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if the input does not specify a valid number after mark","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"PangKuangWei"},"content":"    public void mark(String[] splitStr) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"PangKuangWei"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify task number to mark.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"PangKuangWei"},"content":"        int markNo;","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"PangKuangWei"},"content":"            markNo \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"PangKuangWei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify task number to mark.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"PangKuangWei"},"content":"        if (markNo \u003c\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"PangKuangWei"},"content":"        if (markNo \u003e taskCount) {","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"There are not that many tasks!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"PangKuangWei"},"content":"        tasks.get(markNo - 1).markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"PangKuangWei"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n       \" + tasks.get(markNo - 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"PangKuangWei"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"PangKuangWei"},"content":"     * @param splitStr the string input","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if the input does not specify a valid number after unmark","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"PangKuangWei"},"content":"    public void unmark(String[] splitStr) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"PangKuangWei"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify task number to unmark.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"PangKuangWei"},"content":"        int unmarkNo;","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"PangKuangWei"},"content":"            unmarkNo \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"PangKuangWei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify task number to unmark.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"PangKuangWei"},"content":"        if (unmarkNo \u003c\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"PangKuangWei"},"content":"        if (unmarkNo \u003e taskCount) {","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"There are not that many tasks!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"PangKuangWei"},"content":"        tasks.get(unmarkNo - 1).markAsUnDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"PangKuangWei"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as not done yet:\\n       \" + tasks.get(unmarkNo - 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"PangKuangWei"},"content":"     * Find a task by searching for a keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"PangKuangWei"},"content":"     * @param splitStr the string input","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"PangKuangWei"},"content":"     * @throws DukeException if the input does not specify a keyword","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"PangKuangWei"},"content":"    public void findTasks(String[] splitStr) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"PangKuangWei"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"PangKuangWei"},"content":"        String line \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2022-08-22"},{"lineNumber":168,"author":{"gitId":"PangKuangWei"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":169,"author":{"gitId":"PangKuangWei"},"content":"            throw new DukeException(\"Please specify keyword to search.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":170,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"PangKuangWei"},"content":"        String keyword \u003d splitStr[1].trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":172,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"PangKuangWei"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":175,"author":{"gitId":"PangKuangWei"},"content":"            String[] words \u003d t.splitDescriptionToWords();","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"PangKuangWei"},"content":"            for (String word : words) {","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"PangKuangWei"},"content":"                if (keyword.equals(word)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":178,"author":{"gitId":"PangKuangWei"},"content":"                    System.out.println(\"     \" + i + \".\" + t);","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"PangKuangWei"},"content":"                    i++;","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"PangKuangWei"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":181,"author":{"gitId":"PangKuangWei"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":183,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":184,"author":{"gitId":"PangKuangWei"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":185,"author":{"gitId":"PangKuangWei"},"content":"            System.out.println(\"     No results found!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":186,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":187,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-22"},{"lineNumber":188,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":189,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":190,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":191,"author":{"gitId":"PangKuangWei"},"content":"     * Prints the entire TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":193,"author":{"gitId":"PangKuangWei"},"content":"    public void printTaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"PangKuangWei"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":195,"author":{"gitId":"PangKuangWei"},"content":"        String line \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2022-08-22"},{"lineNumber":196,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-22"},{"lineNumber":197,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":198,"author":{"gitId":"PangKuangWei"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":199,"author":{"gitId":"PangKuangWei"},"content":"            System.out.println(\"     \" + i + \".\" + t);","lastModifiedDate":"2022-08-22"},{"lineNumber":200,"author":{"gitId":"PangKuangWei"},"content":"            i++;","lastModifiedDate":"2022-08-22"},{"lineNumber":201,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":202,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-22"},{"lineNumber":203,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":204,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":205,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":206,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the ArrayLIst of Task objects","lastModifiedDate":"2022-08-22"},{"lineNumber":207,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"PangKuangWei"},"content":"     * @return ArrayLIst of Task objects","lastModifiedDate":"2022-08-22"},{"lineNumber":209,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":210,"author":{"gitId":"PangKuangWei"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-22"},{"lineNumber":211,"author":{"gitId":"PangKuangWei"},"content":"        return tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":213,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":213}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":" * Todo class represents a type of task.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"     * @param description the String that describes the task","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the task in a specific format to save it in the text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"     * @return the string that represents the task in a specific format","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    public String getDataFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"        return String.format(\"T // %s // %s\", getStatusIcon(), description);","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"     * @return a string that represents the task","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"PangKuangWei":35}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":" * Ui class deals with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"public class Ui {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"    public Ui() {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"     * Prints a Message in a custom format.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"     * @param message a string with UI customisation","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"        String line \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"        String wrappedMessage \u003d line + \"\\n     \" + message + \"\\n\" + line;","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"        System.out.println(wrappedMessage);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"     * Prints a greeting message.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"    public void printGreetings() {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"        printMessage(\"Hello! I\u0027m Duke.\\n     What can I do for you?\");","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"    public void printGoodbye() {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     * Prints a message that informs the user of a loading error.","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        printMessage(\"There is a loading error.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":44}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"    public void parseDateTime_sampleDateTime() throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"        assertEquals(Parser.parseDateTime(\"2/12/2019 1800\").toString(), \"2019-12-02T18:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"    public void parseDateTime_notDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"            Parser.parseDateTime(\"soon\");","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"            fail(\"No exception thrown.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"            assertEquals(e.toString(), \"Oops! Please specify the date and time in YYYY-MM-DD TTTT format.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"    public void parseCommand_unknownCommand_exceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"            Parser.parseCommand(\"notACommand test\", new TaskList());","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"            fail(\"No exception thrown.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"            assertEquals(e.toString(), \"Oops! I\u0027m sorry, but I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":32}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"    public void todo_sampleTask() {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"        Task todoTask \u003d new Todo(\"Test\");","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"        assertEquals(todoTask.toString(), \"[T][ ] Test\");","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"PangKuangWei":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"todo go buy dinner","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"deadline do homework /by 2/12/2019 1800","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"deadline do another homework /by 2019/12/02 1800","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"event go there /at 2022/02/01 1920","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"event meeting /at 2019-10-15","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"todo Another task","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"mark NAN","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"unmark NAN","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"thisisnotacommand","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"todo ","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"deadline s","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"event s","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"delete 0","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"delete yes","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"PangKuangWei":25}}]

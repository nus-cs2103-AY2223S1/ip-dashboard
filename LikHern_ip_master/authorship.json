[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"LikHern":3,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    private final Ui ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    public void run() {","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        ui.readUserInputThenOutputMessage(taskList, storage);","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LikHern":25,"-":3}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"        setIsExitToTrue();","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":11}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"        return isExit;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    protected void setIsExitToTrue() {","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    public abstract void execute(TaskList taskList, Storage storage);","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":18}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    private final String deadlineDescription;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    private final String deadlineBy;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     * Parse the command from scanner and store the description as well as date for deadline task.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    public DeadlineCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        scanner.useDelimiter(\"/by\");","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        deadlineDescription \u003d scanner.next().strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        scanner.reset().skip(\"/by\");","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        deadlineBy \u003d scanner.nextLine().strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"     * Create new deadline task and store it in the task list. Finally, save the task list in storage.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that stores new deadline task.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"     * @param storage File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        taskList.add(deadlineTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadlineTask","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":38}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    private final int deleteIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     * Parse the command from scanner and store the index for the task to be deleted.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    public DeleteCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"        deleteIndex \u003d scanner.nextInt();","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     * Delete specified task from the task list. Finally, save the task list in storage.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that contains the specified task.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"     * @param storage File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        Task deletedTask \u003d taskList.get(deleteIndex - 1);","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        taskList.delete(deleteIndex - 1);","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":34}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    private final String eventDescription;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    private final String eventAt;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     * Parse the command from scanner and store the description as well as date for event task.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    public EventCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        scanner.useDelimiter(\"/at\");","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        eventDescription \u003d scanner.next().strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        scanner.reset().skip(\"/at\");","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        eventAt \u003d scanner.nextLine().strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"     * Create new event task and store it in the task list. Finally, save the task list in storage.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that stores new event task.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"     * @param storage File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"        Event eventTask \u003d new Event(eventDescription, eventAt);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        taskList.add(eventTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + eventTask","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":38}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.ListIterator;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    private final String keyword;","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    public FindCommand(Scanner scanner) {","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"        keyword \u003d scanner.nextLine().strip();","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        ListIterator\u003cTask\u003e listIterator \u003d tasklist.getListIterator();","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        while (listIterator.hasNext()) {","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"            int taskIndex \u003d listIterator.nextIndex() + 1;","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"            Task task \u003d listIterator.next();","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"            printIfMatchingTask(taskIndex, task);","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    private void printIfMatchingTask(int taskIndex, Task task) {","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        if (task.doesContain(keyword)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"            System.out.println(taskIndex + \".\" + task);","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"LikHern":32}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"     * Advance the scanner past the current line.","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    public IncorrectCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"        scanner.nextLine();","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"     * Print error message for invalid command.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means:-(\");","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":24}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.ListIterator;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"     * Returns a list of tasks that is currently stored in the task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that contains all the tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"        ListIterator\u003cTask\u003e listIterator \u003d taskList.getListIterator();","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"        while (listIterator.hasNext()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"            int taskIndex \u003d listIterator.nextIndex() + 1;","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"            Task task \u003d listIterator.next();","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"            System.out.println(taskIndex + \".\" + task);","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":24}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    private final int markIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"     * Parse the command from scanner and store the index for the task to be marked.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    public MarkCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"        markIndex \u003d scanner.nextInt();","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"     * Mark the specified task in the task list as done. Finally, save the task list in storage.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that contains the specified task.","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"     * @param storage File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"        taskList.get(markIndex - 1).markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":30}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    private final String toDoDescription;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     * Parse the command from scanner and store the description for to-do task.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    public ToDoCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"        toDoDescription \u003d scanner.nextLine().strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     * Create new to-do task and store it in the task list. Finally, save the task list in storage.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that stores new to-do task.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"     * @param storage File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        if (toDoDescription.isBlank()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"            ToDo toDoTask \u003d new ToDo(toDoDescription);","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"            taskList.add(toDoTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + toDoTask","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"                    + \"\\nNow you have \" + taskList.getSize() + \" tasks in your list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":38}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    private final int unmarkIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"     * Parse the command from scanner and store the index for the task to be unmarked.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     * @param scanner User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    public UnmarkCommand(Scanner scanner) {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"        unmarkIndex \u003d scanner.nextInt();","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"     * Mark the specified task in the task list as not done yet. Finally, save the task list in storage.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list that contains the specified task.","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"     * @param storage File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"        taskList.get(unmarkIndex - 1).markAsUndone();","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":30}},{"path":"src/main/java/duke/commands/UserCommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"public enum UserCommandList {","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND, BYE","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"LikHern":5}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.parser;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"import duke.commands.UserCommandList;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"public class Parser {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"     * Parse user input and returns the command to be executed.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     * @param userInput User input.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    public static Command parseUserInput(Scanner userInput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        UserCommandList command;","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"            command \u003d UserCommandList.valueOf(userInput.next().toUpperCase());","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"            return new IncorrectCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"        switch(command) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        case TODO:","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"            return new ToDoCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"            return new DeadlineCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"            return new EventCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"        case LIST:","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"LikHern"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"        case MARK:","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"            return new UnmarkCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"        case DELETE:","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"        case FIND:","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"        case BYE:","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"        default:","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"            throw new AssertionError(\"Should not reach this stage.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":55}},{"path":"src/main/java/duke/storage/FileDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.commands.UserCommandList;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"import java.io.File;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"public class FileDecoder {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     * Decode the tasks from file and store in task list. Finally, return the task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"     * @param dataFile File to be read from.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"     * @return Task list containing tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"     * @throws FileNotFoundException If file not found when trying to read from the said file.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    static TaskList decodeFile(File dataFile) throws FileNotFoundException {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        decodeLine(taskList, fileReader);","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"        return taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"     * Decode line by line in file and store the task in task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list to store the decoded task.","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"     * @param fileReader Line read by scanner.","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"    private static void decodeLine(TaskList taskList, Scanner fileReader) {","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"            fileReader.useDelimiter(\" \\\\| \");","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"            UserCommandList command \u003d UserCommandList.valueOf(fileReader.next().toUpperCase());","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"LikHern"},"content":"            Task task;","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"            switch (command) {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"            case TODO:","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"                String toDoDescription \u003d fileReader.next();","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"                task \u003d new ToDo(toDoDescription);","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"                taskList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"                break;","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"            case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"                String deadlineDescription \u003d fileReader.next();","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"                String deadlineBy \u003d fileReader.next();","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"                task \u003d new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"                taskList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"                break;","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"            case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"                String eventDescription \u003d fileReader.next();","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"                String eventAt \u003d fileReader.next();","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"                task \u003d new Event(eventDescription, eventAt);","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"                taskList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"LikHern"},"content":"                break;","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"LikHern"},"content":"            default:","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"LikHern"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + command);","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"LikHern"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"LikHern"},"content":"            String isDone \u003d fileReader.reset().skip(\" \\\\| \").nextLine();","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"LikHern"},"content":"            if (isDone.equals(\"true\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"LikHern"},"content":"                task.markAsDoneWithoutMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"LikHern"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":68}},{"path":"src/main/java/duke/storage/FileEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.io.File;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class FileEncoder {","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"     * Encode the tasks from task list and write it to file.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     * @param dataFile File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list to be saved.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * @throws IOException If error occurs when trying to write to file.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    static void encodeFile(File dataFile, TaskList taskList) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        FileWriter fileWriter \u003d new FileWriter(dataFile);","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        for (Task task : taskList.view()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"            encodeLine(fileWriter, task);","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        fileWriter.close();","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"     * Encode task in file format.","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"     * @param fileWriter File to be saved to.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"     * @param task Task to be saved.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"     * @throws IOException If error occurs when trying to write to file.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"    private static void encodeLine(FileWriter fileWriter, Task task) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        fileWriter.write(task.convertToFileFormat() + System.lineSeparator());","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":36}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import java.io.File;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"public class Storage {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    private final File dataFile;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"        dataFile \u003d new File(filePath);","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * Encode the task list and store in specified file path.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"     * @param taskList Task list to be saved.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"            FileEncoder.encodeFile(dataFile, taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"            System.err.println(\"Warning! Errors encountered when writing to file. \" +","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"                    \"Your data might not be saved.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"     * Decode the task list from specified file path, if exists. Else, create a new file.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"     * @return Task list containing tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"     * @throws IOException If error occurs when trying to read from file.","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        dataFile.createNewFile(); //temporary","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        return FileDecoder.decodeFile(dataFile);","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"        return String.format(\"deadline | %s | %s | %b\", super.description, by, super.isDone);","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"     * Returns string representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"LikHern":27}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"    protected String at;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        return String.format(\"event | %s | %s | %b\", super.description, at, super.isDone);","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     * Returns string representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"LikHern":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"    protected String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"    protected Task(String description) {","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     * Mark the task as done if not done yet.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"     * If the task is already marked as done, an error message is output.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"            System.out.println(\"This task is already marked as done!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + this);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"     * Mark the task as done without printing any message.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"    public void markAsDoneWithoutMessage() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"     * Mark the task as not done yet if done.","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"     * If the task is already marked as not done yet, an error message is output.","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"LikHern"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"        if (!isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"            System.out.println(\"This task is already marked as not done yet!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + this);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"    public abstract String convertToFileFormat();","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"    public boolean doesContain(String keyword) {","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"     * Returns string representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"LikHern"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"LikHern":63}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.List;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import java.util.ListIterator;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":" * Contains task list. Support operations such as add or delete tasks in the list.","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class TaskList {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    public List\u003cTask\u003e view() {","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"        return taskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        return taskList.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"    public ListIterator\u003cTask\u003e getListIterator() {","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        return taskList.listIterator();","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":39}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"        return String.format(\"todo | %s | %b\", super.description, super.isDone);","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"     * Returns string representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"LikHern":21}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class Ui {","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"     * Prints welcome message.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"     * Read user input, execute the command and output the message.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    public void readUserInputThenOutputMessage(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"            Command command \u003d Parser.parseUserInput(scanner);","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"            command.execute(taskList, storage);","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"                break;","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        scanner.close();","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"LikHern":32}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"        assertEquals(\"[D][ ] something (by: Jan 01 2000)\",","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"                new Deadline(\"something\", \"2000-01-01\").toString());","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"LikHern":13}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"public class EventTest {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"        assertEquals(\"[E][ ] something (at: some time)\",","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"                new Event(\"something\", \"some time\").toString());","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"LikHern":13}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"public class ToDoTest {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"        assertEquals(\"[T][ ] something\", new ToDo(\"something\").toString());","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"LikHern":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"todo read book","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"mark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"unmark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"unmark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"list","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"LikHern":9}}]

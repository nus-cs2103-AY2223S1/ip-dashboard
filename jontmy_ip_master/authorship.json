[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"# Knight","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"A greenfield Java project. It\u0027s named after the Hollow Knight character of the same name.","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"Given below are instructions on how to use it.","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"Unfortunately, we can\u0027t use the Knight and Hornet sprites from Hollow Knight as","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"they are copyrighted - we used an image of a knight chess piece instead. :(","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"## Quickstart","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"1. Ensure you have Java 11 or above installed.","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"2. Download the latest version of Knight from [here](https://github.com/jontmy/ip/releases).","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"3. Copy the `.jar` file to the folder you want to use.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds.","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"5. Enter commands in the command box and press Enter to execute them.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"## Command Summary","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"| action                    | command                                    |","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"|---------------------------|--------------------------------------------|","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"| add a todo                | `todo \u003cdescription\u003e`                       |","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"| add a deadline            | `deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e` |","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"| add an event              | `event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e`    |","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"| list all tasks            | `list`                                     |","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"| find a task               | `find \u003csearch term\u003e`                       |","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"| mark a task               | `mark \u003cindex\u003e`                             |","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"| unmark a task             | `unmark \u003cindex\u003e`                           |","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"| delete a task             | `delete \u003cindex\u003e`                           |","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"| create a command shortcut | `alias add \u003calias\u003e \u003ccommand\u003e`              |","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"| remove a command shortcut | `alias remove \u003calias\u003e \u003ccommand\u003e`           |","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"| list all command shortcut | `alias list`                               |","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"| exit the program          | `bye`                                      |","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jontmy":27,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"plugins {","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"repositories {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    mavenCentral() ","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"dependencies {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    ","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"application {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    mainClassName \u003d \u0027duke.ui.Launcher\u0027 ","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"test {","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"jar {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"    manifest {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        attributes(","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"                \u0027Main-Class\u0027: \u0027duke.ui.Launcher\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        )","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":50}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"## Quickstart","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"1. Ensure you have Java 11 or above installed.","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"2. Download the latest version of Knight from [here](https://github.com/jontmy/ip/releases).","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"3. Copy the `.jar` file to the folder you want to use.","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds.","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"5. Enter commands in the command box and press Enter to execute them.","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"## Command Summary","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"| action                    | command                                    |","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"|---------------------------|--------------------------------------------|","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"| add a todo                | `todo \u003cdescription\u003e`                       |","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"| add a deadline            | `deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e` |","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"| add an event              | `event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e`    |","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"| list all tasks            | `list`                                     |","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"| find a task               | `find \u003csearch term\u003e`                       |","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"| mark a task               | `mark \u003cindex\u003e`                             |","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"| unmark a task             | `unmark \u003cindex\u003e`                           |","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"| delete a task             | `delete \u003cindex\u003e`                           |","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"| create a command shortcut | `alias add \u003calias\u003e \u003ccommand\u003e`              |","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"| remove a command shortcut | `alias remove \u003calias\u003e \u003ccommand\u003e`           |","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"| list all command shortcut | `alias list`                               |","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"| exit the program          | `bye`                                      |","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"Notes about the command format:","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"- All commands are case sensitive and mandatory.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"- Words surrounded by `\u003c\u003e` are parameters to be supplied by the user.","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"- Some commands have alternative formats which are separated by `|`.","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"Adds a todo to the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"- `\u003cdescription\u003e` may contain spaces for multi-word descriptions.","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"Examples:","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"- `todo read book`","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"- `todo watch movie`","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"- `\u003cdescription\u003e` may contain spaces for multi-word descriptions.","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"- `\u003cdate\u003e` must be in the format `dd/mm/yyyy`.","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"- `\u003ctime\u003e` must be in the format `hh:mm`.","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"Examples:","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"- `deadline return book /by 11/09/2022 18:00`","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"- `deadline submit assignment /by 12/09/2022 23:59`","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"### Adding an event: `event`","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"Adds an event to the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"Format: `event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"- `\u003cdescription\u003e` may contain spaces for multi-word descriptions.","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"- `\u003cdate\u003e` must be in the format `dd/mm/yyyy`.","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"- `\u003ctime\u003e` must be in the format `hh:mm`.","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"Examples:","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"- `event project meeting /at 13/09/2022 18:00`","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"- `event friend\u0027s wedding /at 02/12/2022 10:00`","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"Format: `list`","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"### Finding tasks by keyword: `find`","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"jontmy"},"content":"Finds tasks whose descriptions contain a given search term.","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"Format: `find \u003csearch term\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"- `\u003csearch term\u003e` may contain spaces for multi-word search queries.","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"jontmy"},"content":"- The search is case-sensitive, i.e. `book` will not match `Book`.","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":"- The position of the search term in the description does not matter, e.g. `book` will match `read book`.","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"jontmy"},"content":"- Full words will be matched, e.g. `book` will match `books`.","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jontmy"},"content":"Example:","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"jontmy"},"content":"- `find book` returns `read book` and `return book`","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"jontmy"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"jontmy"},"content":"Marks a task as done.","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"jontmy"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jontmy"},"content":"- `\u003cindex\u003e` refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"jontmy"},"content":"- `\u003cindex\u003e` must be a positive integer starting from 1.","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jontmy"},"content":"- An error message will be shown if `\u003cindex\u003e` is invalid.","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jontmy"},"content":"Example:","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"jontmy"},"content":"- `mark 1` marks the first task in the task list as done.","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"jontmy"},"content":"### Un-marking a marked task: `unmark`","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"jontmy"},"content":"Un-marks a task that is marked as done.","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"jontmy"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"jontmy"},"content":"- `\u003cindex\u003e` refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"jontmy"},"content":"- `\u003cindex\u003e` must be a positive integer starting from 1.","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jontmy"},"content":"- An error message will be shown if `\u003cindex\u003e` is invalid.","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jontmy"},"content":"Example:","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"jontmy"},"content":"- `unmark 1` un-marks the first task in the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"jontmy"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"jontmy"},"content":"Deletes a task from the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"jontmy"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"jontmy"},"content":"- `\u003cindex\u003e` refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"jontmy"},"content":"- `\u003cindex\u003e` must be a positive integer starting from 1.","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"jontmy"},"content":"- An error message will be shown if `\u003cindex\u003e` is invalid.","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"jontmy"},"content":"Example:","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"jontmy"},"content":"- `delete 1` deletes the first task in the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"jontmy"},"content":"### Creating a command shortcut: `alias add`","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"jontmy"},"content":"Creates an alias for a command, which can be used instead to execute the command.","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"jontmy"},"content":"Only existing commands can be aliased; an alias cannot be created for another alias.","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jontmy"},"content":"This prevents circular loops of aliases.","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"jontmy"},"content":"Format: `alias add \u003calias\u003e \u003ccommand\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"jontmy"},"content":"- `\u003calias\u003e` must be a single word with no spaces and not already used as a command.","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"jontmy"},"content":"- `\u003ccommand\u003e` must be an valid pre-existing single-word command and not an alias.","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"jontmy"},"content":"Examples:","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"jontmy"},"content":"- `alias add l list` creates an alias `l` for the `list` command.","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"jontmy"},"content":"- `alias add l ls` is not allowed as `ls` is an alias.","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"jontmy"},"content":"- `alias add aa alias add` is not allowed as the command must be a single word.","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"jontmy"},"content":"### Deleting a command shortcut: `alias remove`","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"jontmy"},"content":"Removes an alias.","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"jontmy"},"content":"Format: `alias remove \u003calias\u003e`","lastModifiedDate":"2022-09-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":161,"author":{"gitId":"jontmy"},"content":"- `\u003calias\u003e` must be an existing alias.","lastModifiedDate":"2022-09-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"jontmy"},"content":"Example:","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"jontmy"},"content":"- `alias remove ls` removes the default alias `ls` for `list`.","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"jontmy"},"content":"### Listing all aliases: `alias list`","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"jontmy"},"content":"Shows a list of all aliases.","lastModifiedDate":"2022-09-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"jontmy"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2022-09-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"jontmy"},"content":"Exits the program automatically after 3 seconds.","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jontmy":158,"-":15}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"@rem","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"echo.","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"echo.","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"goto fail","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"echo.","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"echo.","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"goto fail","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":":execute","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":":end","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":":fail","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"jontmy"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"jontmy"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"exit /b 1","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":":mainEnd","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":":omega","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.internal.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" * The main class of the Duke application.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    private final Parser parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    private final MessageBuilder messageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     * Returns a new Duke object.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     * @param path the path to the storage file of tasks","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    public Duke(Path path) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        this.messageBuilder \u003d new MessageBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        TaskList tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"            Command command \u003d parser.parseString(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"            command.execute(tasks, storage, messageBuilder, parser);","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"            if (command.isTerminal()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"                ScheduledExecutorService executor \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"                executor.schedule(() -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"                    Platform.exit();","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"                    System.exit(0);","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"                }, 3, TimeUnit.SECONDS);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"                executor.shutdown();","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"            return messageBuilder.build();","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"            return e.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"    public String getWelcome() {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"        return \"Hello! I\u0027m the Knight!\\nWhat can I do for you?\";","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jontmy":64,"-":3}},{"path":"src/main/java/duke/command/AliasAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" * A command to add an alias.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * Usage: alias add [0] [1]","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * [0] the alias to add","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * [1] the command to add the alias to","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"public class AliasAddCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    private final String alias;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    private final String command;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"     * Creates a new AliasAddCommand.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     * @param alias the alias to add","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"     * @param command the command to add the alias to","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    public AliasAddCommand(String alias, String command) {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        parser.addAlias(alias, command);","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve added your alias for \" + command + \"!\")","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"                .addLine(String.format(\"You can now use `%s` in place of `%s`.\", alias, command));","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jontmy":43}},{"path":"src/main/java/duke/command/AliasListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" * A command to list all aliases.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * Usage: alias list","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"public class AliasListCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    private final String aliases;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    public AliasListCommand(String aliases) {","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"        this.aliases \u003d aliases;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"Here are your aliases!\").addLine(aliases);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jontmy":31}},{"path":"src/main/java/duke/command/AliasRemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" * A command to remove an alias.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * Usage: alias remove [0]","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * [0] the alias to remove","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"public class AliasRemoveCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    private final String alias;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"     * Creates a new AliasRemoveCommand.","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"     * @param alias the alias to remove","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    public AliasRemoveCommand(String alias) {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        String command \u003d parser.removeAlias(alias);","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(String.format(\"I\u0027ve removed your alias for %s!\", alias))","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"                .addLine(String.format(\"You\u0027ll have to use `%s` instead in future.\", command));","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jontmy":39}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * Command to exit the program.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * Usage: bye","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"        return true;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"Bye! Hope to see you again soon!\")","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"                .addLine(\"This window will close automatically in 3 seconds.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" * An executable Duke command.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"     * Returns whether Duke should exit after executing this command.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"     * @return true if the command is a terminal command, false otherwise.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    public abstract boolean isTerminal();","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"     * Executes this command, potentially modifying the task list, storage, and UI.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"     * @param tasks          the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"     * @param storage        the storage helper for the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"     * @param messageBuilder the user interface","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     * @param parser         the command parser","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     * @throws IOException if an I/O error occurs while writing to the storage","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public abstract void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                                 Parser parser) throws IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":32}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * A command to add a deadline task to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * Usage: deadline [1] /by [2]","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * [1]: description","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" * [2]: deadline (date)","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    private final String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    private final String deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     * Returns a new DeadlineCommand object.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    public DeadlineCommand(String description, String deadline) {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve added your deadline.\")","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"                .addLine(task.toString())","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"                .addTaskListSize(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":48}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * A command to delete a task from the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * Usage: delete [0]","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * [0]: index of the task to delete","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * Note that the index starts at 1.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    private final int index;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve deleted this task.\")","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"                .addLine(task.toString())","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"                .addTaskListSize(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":39}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * A command to add an event task to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * Usage: event [0] /at [1]","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * [0]: description","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" * [1]: date","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    private final String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    private final String datetime;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     * Returns a new EventCommand object.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the event task","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"     * @param datetime    the date and time of the event","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    public EventCommand(String description, String datetime) {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"        Task task \u003d new Event(description, datetime);","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve added your event.\")","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"                .addLine(task.toString())","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"                .addTaskListSize(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":48}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * Prints the tasks that contain a given search query in its description.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * Usage: find [0]","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" * [0]: search query","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" * @since Level-9","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    private final String query;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        List\u003cTask\u003e results \u003d tasks.stream()","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"                .filter(task -\u003e task.getDescription().contains(query))","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        if (results.isEmpty()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"            messageBuilder.addLine(\"No tasks matched your query.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"            return;","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"        String repr \u003d new TaskList(results).toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"Here are the tasks matching your query!\").addLine(repr);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":45}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" * A command to list all the tasks in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * Usage: list","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"            messageBuilder.addLine(\"You do not have any tasks at the moment.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"            messageBuilder.addLine(\"Here are your tasks!\").addLine(tasks.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":29}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * A command to mark a task in the task list as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * Usage: mark [0]","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * [0]: index of the task to mark as done","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * Note that the index starts at 1.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    public final int index;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve marked your task as done.\").addLine(task.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":37}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * A command to add a to-do task to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * Usage: todo [0]","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * [0]: description","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    private final String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve added your task.\")","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"                .addLine(task.toString())","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"                .addTaskListSize(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.internal.MessageBuilder;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import duke.internal.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import duke.internal.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * A command to unmark a task in the task list as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * Usage: unmark [0]","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" * [0]: index of the task to unmark as done","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * Note that the index starts at 1.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    private final int index;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    public boolean isTerminal() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        return false;","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public void execute(TaskList tasks, Storage storage, MessageBuilder messageBuilder,","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                        Parser parser) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        messageBuilder.addLine(\"I\u0027ve unmarked your task as done.\").addLine(task.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":37}},{"path":"src/main/java/duke/internal/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.internal;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":" * A typical exception thrown by the Duke application.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"        super(message);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":10}},{"path":"src/main/java/duke/internal/MessageBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.internal;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * Handles the building of messages of the user interface.","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" * Method calls can be chained for a more fluent API.","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"public class MessageBuilder {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    private final StringBuilder buffer;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"    public MessageBuilder() {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"        this.buffer \u003d new StringBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"     * Builds the message from the buffer.","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"     * @return the string message","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    public String build() {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"        String result \u003d buffer.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        buffer.setLength(0);","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"        return result;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     * Prints a normal message to the command line.","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     * @param message the message to print","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     * @return this UI object for method chaining","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public MessageBuilder addLine(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        buffer.append(message).append(\"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        return this;","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * Prints the size of a task list to the command line.","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     * @param tasks the task list","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * @return this UI object for method chaining","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    public MessageBuilder addTaskListSize(TaskList tasks) {","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        String message \u003d String.format(\"You now have %d %s!\\n\",","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"                tasks.size(),","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"                tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        buffer.append(message);","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"        return this;","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jontmy":52}},{"path":"src/main/java/duke/internal/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.internal;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.command.AliasAddCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import duke.command.AliasListCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import duke.command.AliasRemoveCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":" * A parser object can parse a command from a string,","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":" * and determine which Command object should be used to execute it.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"public class Parser {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    private static final Set\u003cString\u003e DEFAULT_COMMANDS \u003d Set.of(","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"            \"bye\",","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"            \"todo\",","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"            \"deadline\",","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"            \"event\",","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"            \"list\",","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"            \"find\",","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"            \"mark\",","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"            \"unmark\",","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"            \"delete\",","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"            \"alias\"","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"    );","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    private static final Map\u003cString, String\u003e DEFAULT_ALIASES \u003d Map.of(\"t\",","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"            \"todo\",","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"            \"d\",","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"            \"deadline\",","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"            \"e\",","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"            \"event\",","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"            \"m\",","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"            \"mark\",","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"            \"u\",","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"            \"unmark\",","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"            \"um\",","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"            \"unmark\",","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"            \"f\",","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"            \"find\",","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"            \"search\",","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"            \"find\",","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"            \"rm\",","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"            \"delete\",","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"            \"ls\",","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"            \"list\"","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"    );","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    private final Map\u003cString, String\u003e aliases \u003d new HashMap\u003c\u003e(DEFAULT_ALIASES);","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"     * Splits a string into an array of arguments, delimited by spaces.","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"     * @param command the string to split","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"     * @return the array of arguments","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"    private static String[] getArguments(String command) {","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"        if (command.isBlank()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"            return new String[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"        return command.split(\" \");","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"    private static ByeCommand getByeCommand() {","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"        return new ByeCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"    private static TodoCommand getTodoCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need a description for your todo!\\nUsage: todo \u003cdescription\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"        return new TodoCommand(Parser.concatenateArguments(arguments, 1));","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"jontmy"},"content":"    private static DeadlineCommand getDeadlineCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 3) {","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need a description and and datetime for your deadline!\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"jontmy"},"content":"                    + \"Usage: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"jontmy"},"content":"        // Find the \"/by\" delimiter to get the two arguments.","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"jontmy"},"content":"        int delimiter \u003d Parser.findArgumentIndex(arguments, \"/by\");","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"jontmy"},"content":"        assert delimiter \u003e 0 : \"/by should be present\";","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"jontmy"},"content":"        return new DeadlineCommand(Parser.concatenateArguments(arguments, 1, delimiter),","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"jontmy"},"content":"                Parser.concatenateArguments(arguments, delimiter + 1)","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jontmy"},"content":"    private static EventCommand getEventCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"jontmy"},"content":"        int delimiter;","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 3) {","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need a description and and datetime for your event!\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jontmy"},"content":"                    + \"Usage: event \u003cdescription\u003e /at \u003cdatetime\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"jontmy"},"content":"        delimiter \u003d Parser.findArgumentIndex(arguments, \"/at\");","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"jontmy"},"content":"        assert delimiter \u003e 0 : \"/at should be present\";","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"jontmy"},"content":"        return new EventCommand(Parser.concatenateArguments(arguments, 1, delimiter),","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"jontmy"},"content":"                Parser.concatenateArguments(arguments, delimiter + 1)","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"jontmy"},"content":"    private static ListCommand getListCommand() {","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"jontmy"},"content":"        return new ListCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jontmy"},"content":"    private static FindCommand getFindCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need the search term!\\nUsage: find \u003csearch term\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"jontmy"},"content":"        return new FindCommand(Parser.concatenateArguments(arguments, 1));","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"jontmy"},"content":"    private static MarkCommand getMarkCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need the task number!\\nUsage: mark \u003ctask number\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"jontmy"},"content":"        return new MarkCommand(Integer.parseInt(arguments[1]) - 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"jontmy"},"content":"    private static UnmarkCommand getUnmarkCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need the task number!\\nUsage: unmark \u003ctask number\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"jontmy"},"content":"        return new UnmarkCommand(Integer.parseInt(arguments[1]) - 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"jontmy"},"content":"    private static DeleteCommand getDeleteCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"I need the task number!\\nUsage: delete \u003ctask number\u003e\");","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"jontmy"},"content":"        return new DeleteCommand(Integer.parseInt(arguments[1]) - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":145,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":146,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"jontmy"},"content":"     * Returns the index of the first occurrence of a search string in an array of arguments.","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"jontmy"},"content":"     * @param arguments the array of arguments","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"jontmy"},"content":"     * @param query     the search string","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"jontmy"},"content":"     * @return the index of the first occurrence of the search string","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"jontmy"},"content":"     * @throws DukeException if the search string is not found","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"jontmy"},"content":"    private static int findArgumentIndex(String[] arguments, String query) {","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"jontmy"},"content":"        return IntStream.range(0, arguments.length)","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"jontmy"},"content":"                .filter(i -\u003e arguments[i].equals(query))","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"jontmy"},"content":"                .findFirst()","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"jontmy"},"content":"                .orElseThrow(() -\u003e new DukeException(String.format(\"Missing argument `%s`.\",","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"jontmy"},"content":"                        query","lastModifiedDate":"2022-09-09"},{"lineNumber":160,"author":{"gitId":"jontmy"},"content":"                )));","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":163,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"jontmy"},"content":"     * Parses a command from a string.","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"jontmy"},"content":"     * @param str the string to parse","lastModifiedDate":"2022-09-09"},{"lineNumber":167,"author":{"gitId":"jontmy"},"content":"     * @return the Command object to execute","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":169,"author":{"gitId":"jontmy"},"content":"    public Command parseString(String str) {","lastModifiedDate":"2022-09-09"},{"lineNumber":170,"author":{"gitId":"jontmy"},"content":"        String[] arguments \u003d Parser.getArguments(str);","lastModifiedDate":"2022-09-09"},{"lineNumber":171,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003d\u003d 0) {","lastModifiedDate":"2022-09-09"},{"lineNumber":172,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"Give me a command!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":173,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":174,"author":{"gitId":"jontmy"},"content":"        switch (arguments[0]) {","lastModifiedDate":"2022-09-09"},{"lineNumber":175,"author":{"gitId":"jontmy"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"jontmy"},"content":"            return getByeCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"jontmy"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-09"},{"lineNumber":178,"author":{"gitId":"jontmy"},"content":"            return getTodoCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":179,"author":{"gitId":"jontmy"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-09"},{"lineNumber":180,"author":{"gitId":"jontmy"},"content":"            return getDeadlineCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":181,"author":{"gitId":"jontmy"},"content":"        case \"event\":","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"jontmy"},"content":"            return getEventCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":183,"author":{"gitId":"jontmy"},"content":"        case \"list\":","lastModifiedDate":"2022-09-03"},{"lineNumber":184,"author":{"gitId":"jontmy"},"content":"            return getListCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"jontmy"},"content":"        case \"find\":","lastModifiedDate":"2022-09-09"},{"lineNumber":186,"author":{"gitId":"jontmy"},"content":"            return getFindCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":187,"author":{"gitId":"jontmy"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"jontmy"},"content":"            return getMarkCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"jontmy"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"jontmy"},"content":"            return getUnmarkCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"jontmy"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-09"},{"lineNumber":192,"author":{"gitId":"jontmy"},"content":"            return getDeleteCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":193,"author":{"gitId":"jontmy"},"content":"        case \"alias\":","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"jontmy"},"content":"            return getAliasCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":195,"author":{"gitId":"jontmy"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":196,"author":{"gitId":"jontmy"},"content":"            return expandAliasedCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":198,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":199,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":200,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":201,"author":{"gitId":"jontmy"},"content":"     * Adds an alias (shorthand command) to a command.","lastModifiedDate":"2022-09-03"},{"lineNumber":202,"author":{"gitId":"jontmy"},"content":"     * Binding an alias to another alias is not allowed to prevent infinite recursion","lastModifiedDate":"2022-09-03"},{"lineNumber":203,"author":{"gitId":"jontmy"},"content":"     * when expanding aliases during command parsing.","lastModifiedDate":"2022-09-03"},{"lineNumber":204,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":205,"author":{"gitId":"jontmy"},"content":"     * @param alias   the alias to add","lastModifiedDate":"2022-09-03"},{"lineNumber":206,"author":{"gitId":"jontmy"},"content":"     * @param command the command to bind the alias to","lastModifiedDate":"2022-09-03"},{"lineNumber":207,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":208,"author":{"gitId":"jontmy"},"content":"    public void addAlias(String alias, String command) {","lastModifiedDate":"2022-09-03"},{"lineNumber":209,"author":{"gitId":"jontmy"},"content":"        if (alias.equals(command)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":210,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"Sorry! I can\u0027t bind an alias to itself.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":211,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":212,"author":{"gitId":"jontmy"},"content":"        if (DEFAULT_COMMANDS.contains(alias)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":213,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"Sorry! I can\u0027t bind a command as an alias.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":214,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":215,"author":{"gitId":"jontmy"},"content":"        if (!DEFAULT_COMMANDS.contains(command)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":216,"author":{"gitId":"jontmy"},"content":"            // This prevents any circular aliases, because aliases can only be bound to commands.","lastModifiedDate":"2022-09-03"},{"lineNumber":217,"author":{"gitId":"jontmy"},"content":"            if (aliases.containsKey(command)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":218,"author":{"gitId":"jontmy"},"content":"                throw new DukeException(","lastModifiedDate":"2022-09-09"},{"lineNumber":219,"author":{"gitId":"jontmy"},"content":"                        \"Sorry! I can\u0027t bind an alias to existing aliases to prevent circular aliases.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":220,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":221,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(String.format(\"The command `%s` does not exist!\", command));","lastModifiedDate":"2022-09-09"},{"lineNumber":222,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":223,"author":{"gitId":"jontmy"},"content":"        if (aliases.containsKey(alias)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":224,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(String.format(\"The alias `%s` already exists!\", alias));","lastModifiedDate":"2022-09-09"},{"lineNumber":225,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":226,"author":{"gitId":"jontmy"},"content":"        aliases.put(alias, command);","lastModifiedDate":"2022-09-03"},{"lineNumber":227,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":228,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":229,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":230,"author":{"gitId":"jontmy"},"content":"     * Removes an alias bound to a command if it exists.","lastModifiedDate":"2022-09-03"},{"lineNumber":231,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":232,"author":{"gitId":"jontmy"},"content":"     * @param alias the alias to remove","lastModifiedDate":"2022-09-03"},{"lineNumber":233,"author":{"gitId":"jontmy"},"content":"     * @return the command the alias was bound to","lastModifiedDate":"2022-09-03"},{"lineNumber":234,"author":{"gitId":"jontmy"},"content":"     * @throws DukeException if the alias does not exist","lastModifiedDate":"2022-09-03"},{"lineNumber":235,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":236,"author":{"gitId":"jontmy"},"content":"    public String removeAlias(String alias) {","lastModifiedDate":"2022-09-03"},{"lineNumber":237,"author":{"gitId":"jontmy"},"content":"        if (!aliases.containsKey(alias)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":238,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"That alias does not exist!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":239,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":240,"author":{"gitId":"jontmy"},"content":"        String command \u003d aliases.get(alias);","lastModifiedDate":"2022-09-03"},{"lineNumber":241,"author":{"gitId":"jontmy"},"content":"        aliases.remove(alias);","lastModifiedDate":"2022-09-03"},{"lineNumber":242,"author":{"gitId":"jontmy"},"content":"        return command;","lastModifiedDate":"2022-09-03"},{"lineNumber":243,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":244,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":245,"author":{"gitId":"jontmy"},"content":"    private Command getAliasCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":246,"author":{"gitId":"jontmy"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-09-09"},{"lineNumber":247,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"Usage: alias [add|remove|list] [alias] [command]\");","lastModifiedDate":"2022-09-09"},{"lineNumber":248,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":249,"author":{"gitId":"jontmy"},"content":"        switch (arguments[1]) {","lastModifiedDate":"2022-09-09"},{"lineNumber":250,"author":{"gitId":"jontmy"},"content":"        case \"add\":","lastModifiedDate":"2022-09-09"},{"lineNumber":251,"author":{"gitId":"jontmy"},"content":"            if (arguments.length !\u003d 4) {","lastModifiedDate":"2022-09-09"},{"lineNumber":252,"author":{"gitId":"jontmy"},"content":"                throw new DukeException(","lastModifiedDate":"2022-09-09"},{"lineNumber":253,"author":{"gitId":"jontmy"},"content":"                        \"Invalid number of arguments. Usage: alias add [alias] [command]\");","lastModifiedDate":"2022-09-09"},{"lineNumber":254,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":255,"author":{"gitId":"jontmy"},"content":"            return new AliasAddCommand(arguments[2], arguments[3]);","lastModifiedDate":"2022-09-09"},{"lineNumber":256,"author":{"gitId":"jontmy"},"content":"        case \"remove\":","lastModifiedDate":"2022-09-09"},{"lineNumber":257,"author":{"gitId":"jontmy"},"content":"            if (arguments.length !\u003d 3) {","lastModifiedDate":"2022-09-09"},{"lineNumber":258,"author":{"gitId":"jontmy"},"content":"                throw new DukeException(\"Invalid number of arguments. Usage: alias remove [alias]\");","lastModifiedDate":"2022-09-09"},{"lineNumber":259,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":260,"author":{"gitId":"jontmy"},"content":"            return new AliasRemoveCommand(arguments[2]);","lastModifiedDate":"2022-09-09"},{"lineNumber":261,"author":{"gitId":"jontmy"},"content":"        case \"list\":","lastModifiedDate":"2022-09-09"},{"lineNumber":262,"author":{"gitId":"jontmy"},"content":"            if (arguments.length !\u003d 2) {","lastModifiedDate":"2022-09-09"},{"lineNumber":263,"author":{"gitId":"jontmy"},"content":"                throw new DukeException(\"Invalid number of arguments. Usage: alias list\");","lastModifiedDate":"2022-09-09"},{"lineNumber":264,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":265,"author":{"gitId":"jontmy"},"content":"            String allAliases \u003d this.aliases.entrySet()","lastModifiedDate":"2022-09-09"},{"lineNumber":266,"author":{"gitId":"jontmy"},"content":"                    .stream()","lastModifiedDate":"2022-09-09"},{"lineNumber":267,"author":{"gitId":"jontmy"},"content":"                    .map(entry -\u003e String.format(\"%s \u003d %s\\n\", entry.getKey(), entry.getValue()))","lastModifiedDate":"2022-09-09"},{"lineNumber":268,"author":{"gitId":"jontmy"},"content":"                    .collect(Collectors.joining());","lastModifiedDate":"2022-09-09"},{"lineNumber":269,"author":{"gitId":"jontmy"},"content":"            return new AliasListCommand(allAliases);","lastModifiedDate":"2022-09-09"},{"lineNumber":270,"author":{"gitId":"jontmy"},"content":"        default:","lastModifiedDate":"2022-09-09"},{"lineNumber":271,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(String.format(","lastModifiedDate":"2022-09-09"},{"lineNumber":272,"author":{"gitId":"jontmy"},"content":"                    \"Invalid argument `%s`. Usage: alias [add|remove|list] [alias] [command]\",","lastModifiedDate":"2022-09-09"},{"lineNumber":273,"author":{"gitId":"jontmy"},"content":"                    arguments[1]","lastModifiedDate":"2022-09-09"},{"lineNumber":274,"author":{"gitId":"jontmy"},"content":"            ));","lastModifiedDate":"2022-09-09"},{"lineNumber":275,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":276,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":277,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":278,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":279,"author":{"gitId":"jontmy"},"content":"     * Not to be mistaken for `getAliasCommand`, which handles the `alias` commands.","lastModifiedDate":"2022-09-09"},{"lineNumber":280,"author":{"gitId":"jontmy"},"content":"     * This method de-aliases aliased commands and returns the Command object to execute.","lastModifiedDate":"2022-09-09"},{"lineNumber":281,"author":{"gitId":"jontmy"},"content":"     * For example, it expands `m 1` to `mark 1`.","lastModifiedDate":"2022-09-09"},{"lineNumber":282,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":283,"author":{"gitId":"jontmy"},"content":"     * @return the Command object to execute","lastModifiedDate":"2022-09-09"},{"lineNumber":284,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":285,"author":{"gitId":"jontmy"},"content":"    private Command expandAliasedCommand(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":286,"author":{"gitId":"jontmy"},"content":"        String alias \u003d arguments[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":287,"author":{"gitId":"jontmy"},"content":"        if (!aliases.containsKey(alias)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":288,"author":{"gitId":"jontmy"},"content":"            throw new DukeException(\"Sorry! I didn\u0027t understand that command!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":289,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":290,"author":{"gitId":"jontmy"},"content":"        String command \u003d String.format(\"%s %s\",","lastModifiedDate":"2022-09-09"},{"lineNumber":291,"author":{"gitId":"jontmy"},"content":"                aliases.get(alias),","lastModifiedDate":"2022-09-09"},{"lineNumber":292,"author":{"gitId":"jontmy"},"content":"                Parser.concatenateArguments(arguments, 1)","lastModifiedDate":"2022-09-09"},{"lineNumber":293,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-09-09"},{"lineNumber":294,"author":{"gitId":"jontmy"},"content":"        return parseString(command);","lastModifiedDate":"2022-09-09"},{"lineNumber":295,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":296,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":297,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":298,"author":{"gitId":"jontmy"},"content":"     * Joins an array of arguments into a single string, with spaces between them.","lastModifiedDate":"2022-08-20"},{"lineNumber":299,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":300,"author":{"gitId":"jontmy"},"content":"     * @param arguments the array of arguments","lastModifiedDate":"2022-08-20"},{"lineNumber":301,"author":{"gitId":"jontmy"},"content":"     * @param start the index of the first argument (inclusive)","lastModifiedDate":"2022-08-20"},{"lineNumber":302,"author":{"gitId":"jontmy"},"content":"     * @param end the end index of the last argument (exclusive)","lastModifiedDate":"2022-08-20"},{"lineNumber":303,"author":{"gitId":"jontmy"},"content":"     * @return the joined string","lastModifiedDate":"2022-08-20"},{"lineNumber":304,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":305,"author":{"gitId":"jontmy"},"content":"    private static String concatenateArguments(String[] arguments, int start, int end) {","lastModifiedDate":"2022-08-19"},{"lineNumber":306,"author":{"gitId":"jontmy"},"content":"        return Arrays.stream(arguments, start, end)","lastModifiedDate":"2022-08-19"},{"lineNumber":307,"author":{"gitId":"jontmy"},"content":"                .map(str -\u003e str + \" \")","lastModifiedDate":"2022-08-20"},{"lineNumber":308,"author":{"gitId":"jontmy"},"content":"                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)","lastModifiedDate":"2022-08-19"},{"lineNumber":309,"author":{"gitId":"jontmy"},"content":"                .toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":310,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":311,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":312,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":313,"author":{"gitId":"jontmy"},"content":"     * Joins an array of arguments into a single string, with spaces between them.","lastModifiedDate":"2022-08-20"},{"lineNumber":314,"author":{"gitId":"jontmy"},"content":"     * Overloaded variant which concatenates all arguments from the start index,","lastModifiedDate":"2022-08-20"},{"lineNumber":315,"author":{"gitId":"jontmy"},"content":"     * to the end of the array.","lastModifiedDate":"2022-08-20"},{"lineNumber":316,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":317,"author":{"gitId":"jontmy"},"content":"     * @param arguments the array of arguments","lastModifiedDate":"2022-08-20"},{"lineNumber":318,"author":{"gitId":"jontmy"},"content":"     * @param start the index of the first argument (inclusive)","lastModifiedDate":"2022-08-20"},{"lineNumber":319,"author":{"gitId":"jontmy"},"content":"     * @return the joined string","lastModifiedDate":"2022-08-20"},{"lineNumber":320,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":321,"author":{"gitId":"jontmy"},"content":"    private static String concatenateArguments(String[] arguments, int start) {","lastModifiedDate":"2022-08-19"},{"lineNumber":322,"author":{"gitId":"jontmy"},"content":"        return Arrays.stream(arguments, start, arguments.length)","lastModifiedDate":"2022-08-19"},{"lineNumber":323,"author":{"gitId":"jontmy"},"content":"                .map(str -\u003e str + \" \")","lastModifiedDate":"2022-08-19"},{"lineNumber":324,"author":{"gitId":"jontmy"},"content":"                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)","lastModifiedDate":"2022-08-19"},{"lineNumber":325,"author":{"gitId":"jontmy"},"content":"                .toString()","lastModifiedDate":"2022-08-19"},{"lineNumber":326,"author":{"gitId":"jontmy"},"content":"                .strip();","lastModifiedDate":"2022-08-19"},{"lineNumber":327,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":328,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":328}},{"path":"src/main/java/duke/internal/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.internal;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * Handles the storage of the task list, reading and/or writing to a file.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"public class Storage {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    private final Path path;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    public Storage(Path path) {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     * Returns a new TaskList from a file of serialized tasks.","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"     * @return the new TaskList","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"     * @throws IOException if an I/O error occurs reading the file","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     * @since Level-7","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    public TaskList loadTasks() throws IOException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"        List\u003cTask\u003e tasks \u003d Files.readAllLines(path)","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                .stream()","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"                .map(Task::deserialize)","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"     * Writes the list of tasks to a file at the given path.","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * If the file already exists, it will be overwritten.","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     * @throws IOException if an I/O error occurs writing to the file","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * @since Level-7","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"            Files.createFile(path);","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        String serialized \u003d tasks.stream()","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"                .map(Task::serialize)","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"                .map(str -\u003e str + \"\\n\")","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"                .toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        Files.writeString(path, serialized);","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * A task that needs to be done before a specific date/time.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"     * Returns a new Deadline object.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        this(description, LocalDateTime.parse(deadline, Task.DATE_TIME_FORMATTER));","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     * Returns a new Deadline object.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     * @param isDone      whether the task is done","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        this(description, deadline);","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * Returns a Deadline deserialized from a string.","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     * @param str the string to deserialize","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * @return the deserialized Deadline","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    public static Task deserialize(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        String[] parts \u003d str.split(\"\\\\|\");","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        if (parts.length !\u003d 4 || !parts[0].equals(\"D\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"            throw new IllegalArgumentException(\"Invalid deadline format\");","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        return new Deadline(parts[2], parts[3], Boolean.parseBoolean(parts[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public String serialize() {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return String.format(","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"                \"D|%s|%s|%s\",","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"                isDone,","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"                description,","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"                Task.DATE_TIME_FORMATTER.format(deadline)","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"                super.toString(),","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"                Task.DATE_TIME_FORMATTER.format(deadline)","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * A task that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"     * Returns a new Event object.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the event task","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"     * @param dateTime    the date and time of the event","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    public Event(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        this(description, LocalDateTime.parse(dateTime, Task.DATE_TIME_FORMATTER));","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     * Returns a new Event object.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the event task","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     * @param dateTime    the date and time of the event","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     * @param isDone      whether the task is done","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public Event(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        this(description, dateTime);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * Returns an Event deserialized from a string.","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     * @param str the string to deserialize","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * @return the deserialized Event","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    public static Task deserialize(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        String[] parts \u003d str.split(\"\\\\|\");","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        if (parts.length !\u003d 4 || !parts[0].equals(\"E\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"            throw new IllegalArgumentException(\"Invalid event format\");","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        return new Event(parts[2], parts[3], Boolean.parseBoolean(parts[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public String serialize() {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return String.format(","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"                \"E|%s|%s|%s\",","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"                isDone,","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"                description,","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"                Task.DATE_TIME_FORMATTER.format(dateTime)","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"        return String.format(\"[E]%s (at: %s)\",","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"                super.toString(),","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"                Task.DATE_TIME_FORMATTER.format(dateTime)","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * A task has a description and a status tracking whether it is done or not.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" * Tasks cannot be instantiated directly - they should be inherited by a subclass.","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"            \"d/M/y H:mm\");","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"    protected final String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"     * Returns a new Task object.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"     * Returns a new Task object.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     * @param isDone      whether the task is done","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"     * Returns a task object from a serialized string.","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"     * Subclasses should implement this method as well to deserialize the task","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * and added below.","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     * @param str the serialized task","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * @return the deserialized task object","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     * @since Level-7","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"    public static Task deserialize(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        switch (str.charAt(0)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"            return Todo.deserialize(str);","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"            return Event.deserialize(str);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"            return Deadline.deserialize(str);","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"        default:","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"            throw new IllegalArgumentException(\"Invalid task format\");","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        return description;","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"     * Returns a string representation of this task, meant for writing to a file.","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"     * We will assume that no part of the task (e.g. description) contains","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"     * the delimiter used to separate the different parts of the task during serialization.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"     * @return the serialized task","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"     * @since Level-7","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"    public abstract String serialize();","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"     * Returns a checkmark `✓` if the task is done, an empty string otherwise.","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"     * @return the status icon","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"        return (isDone ? \"✓\" : \" \");","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"jontmy"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-08-13"},{"lineNumber":83,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":"     * Marks this task as undone.","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":91,"author":{"gitId":"jontmy"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":92,"author":{"gitId":"jontmy"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":93,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":94,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":95,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"jontmy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":97,"author":{"gitId":"jontmy"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":99,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":99}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import fp.Streamable;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" * A TaskList stores a list of tasks.","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"public class TaskList implements Streamable\u003cTask\u003e {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        return list.stream();","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     * @param task a string value of the task to add","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        list.add(task);","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * Deletes the task at the given index from the list.","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"        list.remove(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"     * @param index the index of the task to return","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"     * @return the task at the given index","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return list.get(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    public int size() {","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"        return list.size();","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"     * Enumerates the tasks stored in this TaskList.","lastModifiedDate":"2022-08-13"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"     * @return the enumerated list of tasks","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"        return IntStream.range(0, list.size())","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\\n\", i + 1, list.get(i)))","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":"                .toString()","lastModifiedDate":"2022-08-13"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"                .trim();","lastModifiedDate":"2022-08-13"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":79}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":" * A task without any date or time attached to it.","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"     * Returns a Todo deserialized from a string.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"     * @param str the string to deserialize","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"     * @return the deserialized Todo","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    public static Task deserialize(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"        String[] parts \u003d str.split(\"\\\\|\");","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        if (parts.length !\u003d 3 || !parts[0].equals(\"T\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"            throw new IllegalArgumentException(\"Invalid todo format\");","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        return new Todo(parts[2], Boolean.parseBoolean(parts[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public String serialize() {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"        return String.format(\"T|%s|%s\", isDone, description);","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":38}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":" * Source: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"    private void flip() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        db.flip();","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"        return db;","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jontmy":62}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" * Source: https://se-education.org/guides/tutorials/javaFxPart1.html","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"public class Launcher {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jontmy":13}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" * Source: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    private static final String FONTSTYLE_PATH \u003d \"/stylesheets/fontstyle.css\";","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    private static final String MAIN_WINDOW_FXML_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    private static final Path STORAGE_PATH \u003d Paths.get(","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"            System.getProperty(\"user.home\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"            \"duke\",","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"            \"tasks.txt\"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    );","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    private static final Image KNIGHT_IMAGE \u003d new Image(Objects.requireNonNull(MainWindow.class.getResourceAsStream(","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"            \"/images/icon.png\")));","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    private static final Duke DUKE \u003d new Duke(STORAGE_PATH);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"            FXMLLoader loader \u003d new FXMLLoader(Main.class.getResource(MAIN_WINDOW_FXML_PATH));","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"            Scene scene \u003d new Scene(loader.load());","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"            String fontstyle \u003d Objects.requireNonNull(getClass().getResource(FONTSTYLE_PATH))","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"                    .toExternalForm();","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"            scene.getStylesheets().add(fontstyle);","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"            loader.\u003cMainWindow\u003egetController().setDuke(DUKE);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"            stage.getIcons().add(KNIGHT_IMAGE);","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"            stage.setTitle(\"Knight\");","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"            stage.show();","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jontmy":50}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" * Source: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    private static final Image USER_IMAGE \u003d new Image(Objects.requireNonNull(MainWindow.class.getResourceAsStream(","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"            \"/images/hornet.png\")));","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    private static final Image DUKE_IMAGE \u003d new Image(Objects.requireNonNull(MainWindow.class.getResourceAsStream(","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"            \"/images/knight.png\")));","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public MainWindow() {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * Sets the Duke instance for the main window.","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     * Subsequently, the welcome message is displayed.","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"     * @param duke the Duke instance","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getWelcome(), DUKE_IMAGE));","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE),","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"                DialogBox.getDukeDialog(response, DUKE_IMAGE)","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jontmy":67}},{"path":"src/main/java/fp/Streamable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package fp;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * A streamable object must be able to be converted into a stream,","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" * usually a collection.","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":" * @param \u003cT\u003e the type of the objects in the stream","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"@FunctionalInterface","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"public interface Streamable\u003cT\u003e {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"     * Returns a stream of the objects in this streamable.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"     * @return a stream of objects of type T","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    Stream\u003cT\u003e stream();","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":17}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jontmy":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"850.0\" prefWidth\u003d\"550.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"450.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"450.0\" layoutY\u003d\"799.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"100.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"800.0\" prefWidth\u003d\"550.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"800.0\" prefWidth\u003d\"550.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jontmy":19}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"        taskList.addTask(new Todo(\"abc\", false));","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"        taskList.addTask(new Event(\"def ghi\", \"12/12/2022 12:12\"));","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"        taskList.addTask(new Deadline(\"jkl mno pqr\", \"1/1/1 1:01\", true));","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"        String expected \u003d \"1. [T][ ] abc\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"                + \"2. [E][ ] def ghi (at: 12/12/2022 12:12)\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"                + \"3. [D][✓] jkl mno pqr (by: 1/1/1 1:01)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":19}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"    @Test","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"        assertEquals(\"[T][ ] abc\", new Todo(\"abc\").toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jontmy":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"todo abc","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"deadline def /by tomorrow","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"event ghi /at tomorrow 2-4pm","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"mark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"unmark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"unmark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"unmark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"list","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"jontmy":15}}]

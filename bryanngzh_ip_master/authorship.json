[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"bryanngzh":1}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * The enum commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public enum Commands {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"    TODO,","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    EVENT,","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanngzh":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * Duke, a chatbot that helps you keep track of the tasks you have.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param filePath The location where the data is stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(\"Unable to load file.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * The main function that runs Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        ui.greet();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        while (isRunning) {","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"                ui.printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"                c.execute(ui, storage, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"                isRunning \u003d c.isRunning();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"                ui.formatMessage(String.valueOf(e));","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"            } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"                ui.printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"bryanngzh":57}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * Command that adds the task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    private Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * Adds the task as provided by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        taskList.loadTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        ui.formatMessage(\"Got it. I\u0027ve added this task:\\n\\t \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(String.format(\"Now you have %d task in the list.\", taskList.size()));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(String.format(\"Now you have %d tasks in the list.\", taskList.size()));","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":52}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * The abstract class which recognizes the user\u0027s command.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public abstract void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    public abstract boolean isRunning();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * Command that deletes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * Deletes the task as determined by the index number.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d taskList.getTask(this.index);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        taskList.remove(this.index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        int numTasks \u003d taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        ui.formatMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        ui.formatMessage(task.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(String.format(\"Now you have %d task in the list.\", taskList.size()));","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(String.format(\"Now you have %d tasks in the list.\", taskList.size()));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":60}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * Command that exits the bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * Displays the exit message.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList tasklist) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        ui.formatMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" * Command that finds a task by searching for a keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    private String keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     * @param keyword The keyword in the task description.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the tasks contains the keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The ui used to deal with interactions with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage used to store the data.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to check from.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException If there is an execution error.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getTasks().stream().filter(task -\u003e task.contains(keyword))","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        if (filteredTasks.size() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"                System.out.println(\"\\t \" + (i + 1) + \". \" + filteredTasks.get(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"            System.out.println(\"\\t You have no matching tasks!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the command results in Duke to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":63}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * Command that lists out all the tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * List all the tasks out.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"            System.out.println(\"\\t Here are your tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"            taskList.printString();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(\"You do not have any tasks.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":42}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * Checks the task to be completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param index The task of the said index to be marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" + \" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":54}},{"path":"src/main/java/duke/command/OnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":" * Checks if there are any tasks on the current date.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"public class OnDateCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for OnDateCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date which user checks if any task is on.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    public OnDateCommand(LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * Lists the tasks that are due on that date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getTasks().stream().filter(task -\u003e task.isOn(date))","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        if (filteredTasks.size() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"            System.out.println(String.format(\"\\t Here are the tasks you have on %s:\", formattedDate));","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"                System.out.println(\"\\t \" + (i + 1) + \". \" + filteredTasks.get(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"            System.out.println(String.format(\"\\t You have no tasks on %s\", formattedDate));","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":67}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * Unchecks the task to be not completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for UnMarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param index The task of the said index to be unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * Un-marks the task as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" + \" OK! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":54}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * Exceptions related to the Duke bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"     * @param message The error message to be shown.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the error.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanngzh":28}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"import duke.command.OnDateCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":" * Deals with making sense of user commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"public abstract class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * Parses the users input to check which command should be run.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException There is an error in returning the command to run.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        Command command;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        String firstWord \u003d inputArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new ExitCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"            if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! You need to mark a number\");","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new MarkCommand(Integer.parseInt((inputArray[1])));","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! You need to mark a number\");","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"            if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! You need to unmark a number\");","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new UnMarkCommand(Integer.parseInt((inputArray[1])));","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! You need to unmark a number\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"            if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"            command \u003d new AddCommand(new ToDo(secondWord));","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"                if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"                String[] dArray \u003d secondWord.split(\" /by \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"                if (dArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"                    throw new DukeException(\"OOPS!!! You need to add a deadline.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"                String description \u003d dArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"                String by \u003d dArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new AddCommand(new Deadline(description, LocalDate.parse(by)));","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"Invalid date format (yyyy-mm-dd)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"                if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"                String[] eArray \u003d secondWord.split(\" /at \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"                if (eArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"                    throw new DukeException(\"OOPS!!! You need to add a duration.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"bryanngzh"},"content":"                String description \u003d eArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"                String at \u003d eArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new AddCommand(new Event(description, LocalDate.parse(at)));","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"bryanngzh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"Invalid date format (yyyy-mm-dd)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"bryanngzh"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"bryanngzh"},"content":"            if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! You need to delete a number\");","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new DeleteCommand(Integer.parseInt(secondWord));","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"bryanngzh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"OOPS!!! You need to delete a number\");","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"bryanngzh"},"content":"        case \"on\":","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"bryanngzh"},"content":"                command \u003d new OnDateCommand(LocalDate.parse(secondWord));","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"bryanngzh"},"content":"                return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"bryanngzh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(\"Please enter a valid date (yyyy-mm-dd).\");","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"bryanngzh"},"content":"        case \"find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"bryanngzh"},"content":"            command \u003d new FindCommand(secondWord);","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"bryanngzh"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"bryanngzh"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":140}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":" * The storage where data for Duke is stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    private File currentFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * @param filePath The location where the data is stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"        this.currentFile \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * Loads the given file stored in filePath and checks if any existing data","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * is stored there. If so, the data is used for Duke\u0027s run. Else, a new","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * memory file will be created.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     * @return An ArrayList of Tasks stored in the filePath.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException File could not be found or created.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        File dataFile \u003d this.currentFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"        if (dataFile.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"                Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"                    String data \u003d s.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"                    char type \u003d data.charAt(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"                    switch (type) {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"                        ToDo todo \u003d ToDo.parseFile(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"                        taskList.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"                        Deadline deadline \u003d Deadline.parseFile(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"                        Event event \u003d Event.parseFile(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"                        taskList.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"                    default:","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"                        throw new DukeException(\"File format is invalid!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"     * Rewrites the file in the filePath location to include all the newly","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"     * edited and created tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"     * @param data The list of ArrayList of tasks to be added to the txt file.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException File could not be written.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"    public void writeFile(ArrayList\u003cTask\u003e data) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"            for (Task task: data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"                fw.write(task.toDataFormat() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"bryanngzh":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * The class represents a Deadline which is a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @param by The date which the task is due.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * Reads the input file and returns a deadline task based on","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * the data stored in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param data The extracted data from the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @return A new deadline that describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException If date format is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public static Deadline parseFile(String data) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"            String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"            Deadline deadline \u003d new Deadline(details[2], LocalDate.parse(details[3]));","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"            if (details[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"                deadline.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"            return deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            throw new DukeException(\"Invalid date format (yyyy-mm-dd)\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * Changes the format of the string description such that","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     * it fits with the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * @return A new string that fits the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        String completed \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        return \"D | \" +  completed + \" | \" + this.getDescription() + \" | \" + this.by;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the task is due on the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date the task is due on.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value, true if the task is due on said date.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"        return this.by.equals(date);","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the deadline task.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":87}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * The class represents an Event which is a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param at The date which the event occurs.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     * Reads the input file and returns a event task based on","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * the data stored in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * @param data The extracted data from the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return A new event that describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException If date format is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    public static Event parseFile(String data) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"            Event event \u003d new Event(details[2], LocalDate.parse(details[3]));","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"            if (details[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"                event.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"            return event;","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"            throw new DukeException(\"Invalid date format (yyyy-mm-dd)\");","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     * Changes the format of the string description such that","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * it fits with the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * @return A new string that fits the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        String completed \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        return \"E | \" +  completed + \" | \" + this.getDescription() + \" | \" + this.at;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the task is due on the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date the task is due on.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value, true if the task is due on said date.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"        return this.at.equals(date);","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":86}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * The class represents a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * @return The description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        return this.description;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * Changes the task to the data format.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * @return a String representation of the data format.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"        return \"The data are as follows:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the task is due on the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date the task is due on.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value, true if the task is due on said date.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the description contains this keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @param string The keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    public boolean contains(String string) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"        return description.contains(string);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"        /** Determines if there is an X icon to show completed */","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        String doneIcon \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"        return String.format(\"[%s] %s\", doneIcon, description);","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":87}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" * The class represents an arraylist of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * @param tasks Takes in an ArrayList of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * Displays how many tasks are there in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     * Returns user a list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     * @return an ArrayList of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     * Returns user the specific task in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     * @param index The location of the task in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * @return The task requested.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        int numTasks \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"            throw new DukeException(\"\\t You do not have any tasks.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        } else if (index \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"            throw new DukeException(\"\\t duke.task.Task number starts from one.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"        } else if (index \u003e numTasks){","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"            if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(String.format(\"You only have %d task.\", numTasks));","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"                throw new DukeException(String.format(\"You only have %d tasks.\", numTasks));","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"     * Removes task from list and returns user the task removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"     * @param index The location of the task in the list to be removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"     * @return The task removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"     * Prints out the tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"    public void printString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"        String strToReturn \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"            System.out.println(\"\\t \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":102}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * The class represents a todo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"     * @param description Describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * Reads the input file and returns a todo task based on","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * the data stored in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param data The extracted data from the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * @return A new todo that describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    public static ToDo parseFile(String data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        ToDo todo \u003d new ToDo(details[2]);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        if (details[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"            todo.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"        return todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * Changes the format of the string description such that","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * it fits with the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     * @return A new string that fits the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        String completed \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        return \"T | \" +  completed + \" | \" + this.getDescription();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the todo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":61}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" * Ui deals with interactions with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    public Ui() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * Prints out a line.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public static void printLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Greets the user when the bot starts.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        String logo \u003d \"\\t\" + \"  ____        _        \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"                + \"\\t\" + \" |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"                + \"\\t\" + \" | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"                + \"\\t\" + \" | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"                + \"\\t\" + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" + \" Hello from\\n\" + logo);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" +\" Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" +\" What can I do for you?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"     * Wishes the user farewell.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    public static void exit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t\" + \" Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * Reads in whatever input the user provides.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     * @return String format of what the user wrote.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"            return scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        return \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"     * Reads in whatever input the user provides.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"     * @param message is formatted to include an indent.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"    public void formatMessage(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"        System.out.println(\"\\t \" + message);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":71}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.command.OnDateCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    public void testByeCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"            assertEquals(false, Parser.parse(\"bye\").isRunning());","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    public void testOnCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"            assertTrue(Parser.parse(\"on 2022-10-15\") instanceof OnDateCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":29}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    public void taskListTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"            assertEquals(0, taskList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"            assertTrue(taskList.getTasks() instanceof ArrayList);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public void addTaskTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"            Task task \u003d new ToDo(\"Sleep\");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            taskList.loadTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"            assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"deadline return book /by 2022-10-15","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"event project meeting /at 2022-10-15","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"deadline do homework /by 2022-10-16","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"deadline return book /by blabla","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"event project meeting /at blabla","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"on 2022-10-15","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"on 2022-10-16","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"on 2022-10-17","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"mark 20","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"delete 20","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"boom shakalaka","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"event abc","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"deadline abc","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanngzh":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"bryanngzh":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"bryanngzh":1}}]

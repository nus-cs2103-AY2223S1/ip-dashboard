[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    mainClassName \u003d \"yuna.Yuna\"","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    archiveBaseName \u003d \"yuna\"","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"bryanngzh":21}},{"path":"data/yuna.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"T | 1 | buy bread","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"T | 0 | cs2101","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"D | 1 | cs2101 | 2022-10-10","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"E | 1 | cs2101 things | 2022-10-15","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"bryanngzh":4}},{"path":"src/main/java/yuna/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * The enum commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public enum Commands {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"    TODO,","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    EVENT,","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanngzh":13}},{"path":"src/main/java/yuna/Yuna.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.Command;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.parser.Parser;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * Yuna, a chatbot that helps you keep track of the tasks you have.","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"public class Yuna {","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Yuna.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param filePath The location where the data is stored for Yuna.","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public Yuna(String filePath) {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        } catch (YunaException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"            ui.formatMessage(\"Unable to load file.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * The message shown when Yuna starts up.","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     * @return The greeting for Yuna.","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    public String getGreeting() {","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        return Ui.greet();","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command specified.","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * @return the String representation of the reply.","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"            storage.writeFile(taskList.getTasks());","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"            return c.execute(ui, storage, taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"        } catch (YunaException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"            return ui.formatMessage(String.valueOf(e));","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"bryanngzh":58}},{"path":"src/main/java/yuna/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * Command that adds the task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    private Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Adds the task as provided by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        taskList.loadTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        String output \u003d ui.formatMessage(\"I\u0027ve added this to your schedule!\\n\" + task + \"\\n\");","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"            return output + ui.formatMessage(String.format(\"You got %d task to do :)\", taskList.size()));","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"            return output + ui.formatMessage(String.format(\"You got %d tasks to do :)\", taskList.size()));","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":55}},{"path":"src/main/java/yuna/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * The abstract class which recognizes the user\u0027s command.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    public abstract String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    public abstract boolean isRunning();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":31}},{"path":"src/main/java/yuna/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * Command that deletes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Deletes the task as determined by the index number.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d taskList.getTask(this.index);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        taskList.remove(this.index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        int numTasks \u003d taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        String output \u003d ui.formatMessage(\"I\u0027ve taken this out from your schedule!\\n\");","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        output +\u003d ui.formatMessage(task.toString()) + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"            return output + ui.formatMessage(String.format(\"You got %d task to do :)\", taskList.size()));","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            return output + ui.formatMessage(String.format(\"You got %d tasks to do :)\", taskList.size()));","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":58}},{"path":"src/main/java/yuna/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * Command that exits the bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * Displays the exit message.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        return ui.formatMessage(\"See you later :)\");","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":38}},{"path":"src/main/java/yuna/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" * Command that finds a task by searching for a keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    private String keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * @param keyword The keyword in the task description.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the tasks contains the keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The ui used to deal with interactions with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage used to store the data.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to check from.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException If there is an execution error.","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getTasks().stream()","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"                .filter(task -\u003e task.contains(keyword))","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        if (filteredTasks.size() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            String output \u003d \"Here you go!\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"                output +\u003d (i + 1) + \". \" + filteredTasks.get(i) + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"            assert output.length() \u003e 0 : \"The output of execute should always return a message.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"            return output;","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"            return \"I can\u0027t find anything like that :(\";","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the command results in Yuna to stop running.","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":65}},{"path":"src/main/java/yuna/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" * Command that lists out all the tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * List all the tasks out.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"            String output \u003d \"Your schedule!\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"            assert output.length() \u003e 0 : \"The output of execute should always return a message.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            return output + taskList.printString();","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"            return ui.formatMessage(\"You have nothing in your schedule! :)\");","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":44}},{"path":"src/main/java/yuna/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * Checks the task to be completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param index The task of the said index to be marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        String output \u003d \"Good job for finishing this! ^^\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        output +\u003d task;","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        assert output.length() \u003e 0 : \"The output of execute should always return a message.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        return output;","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":54}},{"path":"src/main/java/yuna/command/OnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":" * Checks if there are any tasks on the date given.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"public class OnDateCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for OnDateCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date which user checks if any task is on.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    public OnDateCommand(LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * Lists the tasks that are due on that date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.getTasks().stream().filter(task -\u003e task.isOn(date))","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        if (filteredTasks.size() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"            String output \u003d String.format(\"You have these on %s:\\n\", formattedDate);","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"                output +\u003d (i + 1) + \". \" + filteredTasks.get(i) + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"            assert output.length() \u003e 0 : \"The output of execute should always return a message.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"            return output;","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"            return String.format(\"You have nothing on %s\", formattedDate);","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":66}},{"path":"src/main/java/yuna/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.command;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import yuna.storage.Storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.TaskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.ui.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * Unchecks the task to be not completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for UnMarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param index The task of the said index to be unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * Un-marks the task as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * @param ui The interactions with user being used.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * @param storage The storage which the data is being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * @param taskList The list of tasks to be updated in the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of Yuna\u0027s reply.","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in execution.","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        String output \u003d \"Unmarked!! You should finish this soon! \u003e:(\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        output +\u003d task;","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"        assert output.length() \u003e 0 : \"The output of execute should always return a message.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        return output;","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"     * Checks if this command will result in the bot to stop running.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":54}},{"path":"src/main/java/yuna/exception/YunaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.exception;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * Exceptions related to the Yuna bot.","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public class YunaException extends Exception {","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for YunaException.","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"     * @param message The error message to be shown.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    public YunaException(String message) {","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the error.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanngzh":28}},{"path":"src/main/java/yuna/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.gui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    private Text dialog;","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //@@author chengseong-reused","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        //Reused from","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //https://github.com/chengseong/ip/blob/master/src/main/java/DialogBox.java","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        //to find out how to make the profile icon circle","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static DialogBox getYunaDialog(String text, Image img) {","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"-":27,"bryanngzh":39}},{"path":"src/main/java/yuna/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.gui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public class Launcher {","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"bryanngzh":12}},{"path":"src/main/java/yuna/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.gui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import yuna.Yuna;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" * A GUI for Yuna using FXML.","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    private Yuna yuna \u003d new Yuna(\"data/yuna.txt\");","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setYuna(yuna);","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendGreeting();","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"            stage.show();","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"bryanngzh":33}},{"path":"src/main/java/yuna/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.gui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import yuna.Yuna;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    private Yuna yuna;","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Zoro.jpeg\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    private Image yunaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Yuna.jpeg\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"    public void setYuna(Yuna y) {","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"        yuna \u003d y;","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public void sendGreeting() {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        dialogContainer.getChildren().add(DialogBox.getYunaDialog(yuna.getGreeting(), yunaImage));","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Yuna\u0027s reply and then appends them to","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"        String response \u003d yuna.getResponse(input);","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"                DialogBox.getYunaDialog(response, yunaImage)","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        );","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"                @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"                public void run() {","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"                    Platform.exit();","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"            }, 2000);","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"bryanngzh":70}},{"path":"src/main/java/yuna/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.parser;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.AddCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.Command;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.DeleteCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.ExitCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.FindCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.ListCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.MarkCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.OnDateCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.UnMarkCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Deadline;","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Event;","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.ToDo;","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":" * Deals with making sense of user commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"public abstract class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_INVALID_MARK_NUMBER \u003d \"OOPS!!! You need to mark a number.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_INVALID_UNMARK_NUMBER \u003d \"OOPS!!! You need to unmark a number.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_EMPTY_DESCRIPTION \u003d \"OOPS!!! The description cannot be empty.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_EMPTY_DATE \u003d \"OOPS!!! The date is missing.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_DATE_FORMAT \u003d \"Invalid date format (yyyy-mm-dd).\";","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_UNKNOWN_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"    public static final String ERROR_DELETE_NUMBER \u003d \"OOPS!!! You need to delete a number.\";","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command ExitCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    public static Command exitCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new ExitCommand();","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_UNKNOWN_MESSAGE);","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command ListCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    public static Command listCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new ListCommand();","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_UNKNOWN_MESSAGE);","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command MarkCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"    public static Command markCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"        if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_INVALID_MARK_NUMBER);","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new MarkCommand(Integer.parseInt((inputArray[1])));","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_INVALID_MARK_NUMBER);","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command UnMarkCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"    public static Command unmarkCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"        if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_INVALID_UNMARK_NUMBER);","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new UnMarkCommand(Integer.parseInt((inputArray[1])));","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_INVALID_UNMARK_NUMBER);","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":111,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":113,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command AddCommand for todos.","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":117,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"bryanngzh"},"content":"    public static Command todoCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":121,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":122,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":123,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":124,"author":{"gitId":"bryanngzh"},"content":"        if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-30"},{"lineNumber":125,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2022-09-15"},{"lineNumber":126,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"bryanngzh"},"content":"        Command command \u003d new AddCommand(new ToDo(secondWord));","lastModifiedDate":"2022-09-14"},{"lineNumber":128,"author":{"gitId":"bryanngzh"},"content":"        return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":130,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":131,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":132,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command AddCommand for deadlines.","lastModifiedDate":"2022-09-14"},{"lineNumber":133,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":134,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":135,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":136,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":137,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":138,"author":{"gitId":"bryanngzh"},"content":"    public static Command deadlineCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":139,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":140,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":141,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":142,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":143,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"bryanngzh"},"content":"            if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"bryanngzh"},"content":"                throw new YunaException(Parser.ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2022-09-15"},{"lineNumber":146,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"bryanngzh"},"content":"            String[] dArray \u003d secondWord.split(\" /by \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"bryanngzh"},"content":"            if (dArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"bryanngzh"},"content":"                throw new YunaException(Parser.ERROR_EMPTY_DATE);","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"bryanngzh"},"content":"            String description \u003d dArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"bryanngzh"},"content":"            String by \u003d dArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new AddCommand(new Deadline(description, LocalDate.parse(by)));","lastModifiedDate":"2022-09-14"},{"lineNumber":154,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_DATE_FORMAT);","lastModifiedDate":"2022-09-15"},{"lineNumber":157,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":159,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":160,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":161,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command AddCommand for events.","lastModifiedDate":"2022-09-14"},{"lineNumber":162,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":163,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":164,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":165,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":166,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":167,"author":{"gitId":"bryanngzh"},"content":"    public static Command eventCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":168,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":169,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":170,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":171,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":172,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"bryanngzh"},"content":"            if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"bryanngzh"},"content":"                throw new YunaException(Parser.ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2022-09-15"},{"lineNumber":175,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"bryanngzh"},"content":"            String[] eArray \u003d secondWord.split(\" /at \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"bryanngzh"},"content":"            if (eArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"bryanngzh"},"content":"                throw new YunaException(Parser.ERROR_EMPTY_DATE);","lastModifiedDate":"2022-09-15"},{"lineNumber":179,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"bryanngzh"},"content":"            String description \u003d eArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"bryanngzh"},"content":"            String at \u003d eArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new AddCommand(new Event(description, LocalDate.parse(at)));","lastModifiedDate":"2022-09-14"},{"lineNumber":183,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_DATE_FORMAT);","lastModifiedDate":"2022-09-15"},{"lineNumber":186,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":188,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":189,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":190,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command DeleteCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":191,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":192,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":193,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":194,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":195,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":196,"author":{"gitId":"bryanngzh"},"content":"    public static Command deleteCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":197,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":198,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":199,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":200,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":201,"author":{"gitId":"bryanngzh"},"content":"        if (secondWord.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":202,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_DELETE_NUMBER);","lastModifiedDate":"2022-09-15"},{"lineNumber":203,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":204,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":205,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new DeleteCommand(Integer.parseInt(secondWord));","lastModifiedDate":"2022-09-14"},{"lineNumber":206,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"bryanngzh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":208,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_DELETE_NUMBER);","lastModifiedDate":"2022-09-15"},{"lineNumber":209,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":210,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":211,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":212,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":213,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command OnDateCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":214,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":215,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":216,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":217,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":218,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":219,"author":{"gitId":"bryanngzh"},"content":"    public static Command onCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":220,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":221,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":222,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":223,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":224,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"bryanngzh"},"content":"            Command command \u003d new OnDateCommand(LocalDate.parse(secondWord));","lastModifiedDate":"2022-09-14"},{"lineNumber":226,"author":{"gitId":"bryanngzh"},"content":"            return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-09-06"},{"lineNumber":228,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_DATE_FORMAT);","lastModifiedDate":"2022-09-15"},{"lineNumber":229,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":231,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":232,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":233,"author":{"gitId":"bryanngzh"},"content":"     * Executes the command FindCommand.","lastModifiedDate":"2022-09-14"},{"lineNumber":234,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":235,"author":{"gitId":"bryanngzh"},"content":"     * @param inputArray The input from the user in an array.","lastModifiedDate":"2022-09-14"},{"lineNumber":236,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":237,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":238,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":239,"author":{"gitId":"bryanngzh"},"content":"    public static Command findCommand(String[] inputArray) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":240,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":241,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":242,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":243,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":244,"author":{"gitId":"bryanngzh"},"content":"        Command command \u003d new FindCommand(secondWord);","lastModifiedDate":"2022-09-14"},{"lineNumber":245,"author":{"gitId":"bryanngzh"},"content":"        return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":246,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":247,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":248,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":249,"author":{"gitId":"bryanngzh"},"content":"     * Parses the users input to check which command should be run.","lastModifiedDate":"2022-09-14"},{"lineNumber":250,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":251,"author":{"gitId":"bryanngzh"},"content":"     * @return The command that is required to run.","lastModifiedDate":"2022-09-14"},{"lineNumber":252,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException There is an error in returning the command to run.","lastModifiedDate":"2022-09-15"},{"lineNumber":253,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":254,"author":{"gitId":"bryanngzh"},"content":"    public static Command parse(String input) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":255,"author":{"gitId":"bryanngzh"},"content":"        Command command;","lastModifiedDate":"2022-09-14"},{"lineNumber":256,"author":{"gitId":"bryanngzh"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-14"},{"lineNumber":257,"author":{"gitId":"bryanngzh"},"content":"        String firstWord \u003d inputArray[0];","lastModifiedDate":"2022-09-14"},{"lineNumber":258,"author":{"gitId":"bryanngzh"},"content":"        String secondWord \u003d \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":259,"author":{"gitId":"bryanngzh"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":260,"author":{"gitId":"bryanngzh"},"content":"            secondWord \u003d inputArray[1];","lastModifiedDate":"2022-09-14"},{"lineNumber":261,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":262,"author":{"gitId":"bryanngzh"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-09-14"},{"lineNumber":263,"author":{"gitId":"bryanngzh"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-14"},{"lineNumber":264,"author":{"gitId":"bryanngzh"},"content":"            return exitCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":265,"author":{"gitId":"bryanngzh"},"content":"        case \"list\":","lastModifiedDate":"2022-09-14"},{"lineNumber":266,"author":{"gitId":"bryanngzh"},"content":"            return listCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":267,"author":{"gitId":"bryanngzh"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-14"},{"lineNumber":268,"author":{"gitId":"bryanngzh"},"content":"            return markCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":269,"author":{"gitId":"bryanngzh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-14"},{"lineNumber":270,"author":{"gitId":"bryanngzh"},"content":"            return unmarkCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":271,"author":{"gitId":"bryanngzh"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-14"},{"lineNumber":272,"author":{"gitId":"bryanngzh"},"content":"            return todoCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":273,"author":{"gitId":"bryanngzh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-14"},{"lineNumber":274,"author":{"gitId":"bryanngzh"},"content":"            return deadlineCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":275,"author":{"gitId":"bryanngzh"},"content":"        case \"event\":","lastModifiedDate":"2022-09-14"},{"lineNumber":276,"author":{"gitId":"bryanngzh"},"content":"            return eventCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":277,"author":{"gitId":"bryanngzh"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-14"},{"lineNumber":278,"author":{"gitId":"bryanngzh"},"content":"            return deleteCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":279,"author":{"gitId":"bryanngzh"},"content":"        case \"on\":","lastModifiedDate":"2022-09-14"},{"lineNumber":280,"author":{"gitId":"bryanngzh"},"content":"            return onCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":281,"author":{"gitId":"bryanngzh"},"content":"        case \"find\":","lastModifiedDate":"2022-09-14"},{"lineNumber":282,"author":{"gitId":"bryanngzh"},"content":"            return findCommand(inputArray);","lastModifiedDate":"2022-09-14"},{"lineNumber":283,"author":{"gitId":"bryanngzh"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":284,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(Parser.ERROR_UNKNOWN_MESSAGE);","lastModifiedDate":"2022-09-15"},{"lineNumber":285,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":286,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":287,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":287}},{"path":"src/main/java/yuna/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.storage;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Deadline;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Event;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"import yuna.task.ToDo;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":" * The storage where data for Yuna is stored.","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    private File currentFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * @param filePath The location where the data is stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        this.currentFile \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * Loads the given file stored in filePath and checks if any existing data","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     * is stored there. If so, the data is used for Yuna\u0027s run. Else, a new","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * memory file will be created.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     * @return An ArrayList of Tasks stored in the filePath.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException File could not be found or created.","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"        File dataFile \u003d this.currentFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        if (dataFile.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"                Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"                    String data \u003d s.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"                    char type \u003d data.charAt(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"                    switch (type) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"                        ToDo todo \u003d ToDo.parseFile(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"                        taskList.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"                        Deadline deadline \u003d Deadline.parseFile(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"                        Event event \u003d Event.parseFile(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"                        taskList.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"                        break;","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"                    default:","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"                        throw new YunaException(\"File format is invalid!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"     * Rewrites the file in the filePath location to include all the newly","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"     * edited and created tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"     * @param data The list of ArrayList of tasks to be added to the txt file.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException File could not be written.","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"    public void writeFile(ArrayList\u003cTask\u003e data) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"            FileWriter fw \u003d new FileWriter(\"data/yuna.txt\");","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"            for (Task task: data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"                fw.write(task.toDataFormat() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"bryanngzh":107}},{"path":"src/main/java/yuna/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.task;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * The class represents a Deadline which is a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @param by The date which the task is due.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * Reads the input file and returns a deadline task based on","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * the data stored in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param data The extracted data from the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @return A new deadline that describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException If date format is invalid.","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public static Deadline parseFile(String data) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"            String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"            Deadline deadline \u003d new Deadline(details[2], LocalDate.parse(details[3]));","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"            if (details[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"                deadline.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"            return deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(\"Invalid date format (yyyy-mm-dd)\");","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * Changes the format of the string description such that","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     * it fits with the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * @return A new string that fits the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        String completed \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        return \"D | \" + completed + \" | \" + this.getDescription() + \" | \" + this.by;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the task is due on the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date the task is due on.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value, true if the task is due on said date.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"        return this.by.equals(date);","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the deadline task.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":87}},{"path":"src/main/java/yuna/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.task;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * The class represents an Event which is a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * @param at The date which the event occurs.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"     * Reads the input file and returns a event task based on","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"     * the data stored in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * @param data The extracted data from the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @return A new event that describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException If date format is invalid.","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public static Event parseFile(String data) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"            Event event \u003d new Event(details[2], LocalDate.parse(details[3]));","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"            if (details[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"                event.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"            return event;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(\"Invalid date format (yyyy-mm-dd)\");","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * Changes the format of the string description such that","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     * it fits with the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * @return A new string that fits the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        String completed \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        return \"E | \" + completed + \" | \" + this.getDescription() + \" | \" + this.at;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the task is due on the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date the task is due on.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value, true if the task is due on said date.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"        return this.at.equals(date);","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":87}},{"path":"src/main/java/yuna/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.task;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * The class represents a Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"     * @return The description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"        return this.description;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"     * Changes the task to the data format.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * @return a String representation of the data format.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"        return \"The data are as follows:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the task is due on the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"     * @param date The date the task is due on.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value, true if the task is due on said date.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"        return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"     * Checks if the description contains this keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"     * @param string The keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"     * @return a boolean value.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"    public boolean contains(String string) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"        return description.contains(string);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"        String doneIcon \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"        return String.format(\"[%s] %s\", doneIcon, description);","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":86}},{"path":"src/main/java/yuna/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.task;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import yuna.exception.YunaException;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" * The class represents an arraylist of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for TaskList when duke.txt is empty.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for TaskList when duke.txt is not empty.","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     * @param tasks Takes in an ArrayList of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     * Displays how many tasks are there in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"     * Returns user a list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"     * @return an ArrayList of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"     * Returns user the specific task in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"     * @param index The location of the task in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * @return The task requested.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     * @throws YunaException If index is out of bounds.","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"    public Task getTask(int index) throws YunaException {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"        int numTasks \u003d tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(\"\\t You do not have any tasks.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"        } else if (index \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"            throw new YunaException(\"\\t duke.task.Task number starts from one.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"bryanngzh"},"content":"        } else if (index \u003e numTasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanngzh"},"content":"            if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanngzh"},"content":"                throw new YunaException(String.format(\"You only have %d task.\", numTasks));","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"bryanngzh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanngzh"},"content":"                throw new YunaException(String.format(\"You only have %d tasks.\", numTasks));","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"bryanngzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanngzh"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanngzh"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanngzh"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanngzh"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanngzh"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bryanngzh"},"content":"     * Removes task from list and returns user the task removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanngzh"},"content":"     * @param index The location of the task in the list to be removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bryanngzh"},"content":"     * @return The task removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bryanngzh"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bryanngzh"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"bryanngzh"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"bryanngzh"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"bryanngzh"},"content":"     * Returns the tasks in the list.","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"bryanngzh"},"content":"     * @return String representation of tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"bryanngzh"},"content":"    public String printString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":100,"author":{"gitId":"bryanngzh"},"content":"        String strToReturn \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"bryanngzh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"bryanngzh"},"content":"            strToReturn +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":103,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"bryanngzh"},"content":"        return strToReturn;","lastModifiedDate":"2022-08-30"},{"lineNumber":105,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":106}},{"path":"src/main/java/yuna/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.task;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":" * The class represents a todo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"     * @param description Describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * Reads the input file and returns a todo task based on","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     * the data stored in the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     * @param data The extracted data from the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"     * @return A new todo that describes the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    public static ToDo parseFile(String data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        ToDo todo \u003d new ToDo(details[2]);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"        if (details[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"            todo.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"        return todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"     * Changes the format of the string description such that","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"     * it fits with the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"     * @return A new string that fits the file\u0027s format.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    public String toDataFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"        String completed \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"        return \"T | \" + completed + \" | \" + this.getDescription();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanngzh"},"content":"     * Override the toString() method to display the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanngzh"},"content":"     * @return A String representing the todo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanngzh"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"bryanngzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"bryanngzh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanngzh":61}},{"path":"src/main/java/yuna/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":" * Ui deals with interactions with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":" * @author Bryan Ng Zi Hao","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"    public Ui() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"     * Greets the user when the bot starts.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"     * @return the string representation of the greeting message.","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    public static String greet() {","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        String output \u003d \" Hellloooo!\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        output +\u003d \" How\u0027s your day going?! ^^\";","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"        return output;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"     * Reads in whatever input the user provides.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"     * @return String format of what the user wrote.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanngzh"},"content":"            return scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanngzh"},"content":"        return \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanngzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanngzh"},"content":"     * Reads in whatever input the user provides.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanngzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanngzh"},"content":"     * @param message is formatted.","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"bryanngzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanngzh"},"content":"    public String formatMessage(String message) {","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"bryanngzh"},"content":"        return message;","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"        \u003cTextFlow style\u003d\"-fx-background-color: #f5f3cb#f5f3cb; -fx-background-radius: 20;\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"                \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"#ffe41f\" radius\u003d\"40.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"bryanngzh":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"yuna.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"1.0\" layoutY\u003d\"568.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"350.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"49.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"337.0\" layoutY\u003d\"568.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"49.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"            \u003cFont name\u003d\"Sana Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"568.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"32.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"bryanngzh":23}},{"path":"src/test/java/yuna/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.parser;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import yuna.command.OnDateCommand;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    public void testByeCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"            assertEquals(false, Parser.parse(\"bye\").isRunning());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"    public void testOnCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"            assertTrue(Parser.parse(\"on 2022-10-15\") instanceof OnDateCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":31}},{"path":"src/test/java/yuna/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"package yuna.task;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"    public void taskListTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"            assertEquals(0, taskList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"            assertTrue(taskList.getTasks() instanceof ArrayList);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"    public void addTaskTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanngzh"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanngzh"},"content":"            Task task \u003d new ToDo(\"Sleep\");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanngzh"},"content":"            taskList.loadTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanngzh"},"content":"            assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanngzh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanngzh"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanngzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanngzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanngzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanngzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanngzh":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanngzh"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"bryanngzh"},"content":"deadline return book /by 2022-10-15","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanngzh"},"content":"event project meeting /at 2022-10-15","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanngzh"},"content":"deadline do homework /by 2022-10-16","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanngzh"},"content":"deadline return book /by blabla","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanngzh"},"content":"event project meeting /at blabla","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"bryanngzh"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanngzh"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanngzh"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"bryanngzh"},"content":"on 2022-10-15","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanngzh"},"content":"on 2022-10-16","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanngzh"},"content":"on 2022-10-17","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"bryanngzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"mark 20","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"bryanngzh"},"content":"delete 20","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"bryanngzh"},"content":"boom shakalaka","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"bryanngzh"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"bryanngzh"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanngzh"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"bryanngzh"},"content":"event abc","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"bryanngzh"},"content":"deadline abc","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"bryanngzh"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanngzh":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bryanngzh"},"content":"javac  -cp ..\\src\\main\\java\\yuna -Xlint:none -d ..\\bin ..\\src\\main\\java\\yuna\\*.java","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bryanngzh"},"content":"java -classpath ..\\bin yuna.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"bryanngzh":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"bryanngzh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"bryanngzh":1}}]

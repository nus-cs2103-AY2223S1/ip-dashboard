[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasTYD":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"checkstyle {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasTYD":23,"-":40}},{"path":"src/main/java/duke/BannedDukeCharacterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Represents a Duke exception when the user input contains a forbidden character.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public class BannedDukeCharacterException extends DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    BannedDukeCharacterException(String character) {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"        super(character);","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":10}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":" * Represents a Deadline task with an end date and time.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    private LocalTime time;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes a new Deadline object which is a subclass of Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"     * @param date Due date of the Deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"     * @param time Due time of the Deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"     * @throws DateTimeParseException If the inputted time is invalid and cannot be parsed.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"    public Deadline(String description, String date, String time) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes a new Deadline object which is a subclass of Task, with the option to specify if the","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"     * task is done or not.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"     * @param status Completion state of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"     * @param date Due date of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"     * @param time Due time of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"     * @throws DateTimeParseException If the inputted time is invalid and cannot be parsed.","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"    public Deadline(String description, int status, String date, String time) {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"        this(description, date, time);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"        isDone \u003d status \u003d\u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"    private String formatAsMmmDdYyyy() {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"    private String formatAs12Hour() {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"    public String parseToSaveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"        return \"D\" + \"|\" + super.parseToSaveData() + \"|\" + date + \"|\" + time;","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"                + \" (by: \" + formatAsMmmDdYyyy() + \" \" + formatAs12Hour() + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"NicholasTYD":65}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"        db.flip();","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"        return db;","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"NicholasTYD":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import java.util.Timer;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":" * Represents the main part of the Duke program and is in charge of coordinating all the various supporting classes in","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":" * the duke package.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    private final Ui ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    private boolean isAcceptingInput;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    public Duke(String savePath, String saveName) {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"        this.storage \u003d new Storage(savePath, saveName);","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"        storage.loadFile(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"        isAcceptingInput \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"     * Returns if Duke is currently accepting input. Read only.","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"     * @return A boolean value indicating if Duke is currently accepting input.","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"    public boolean isAcceptingInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"        return isAcceptingInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"     * Takes in a user input, processes it, and returns a string to be displayed back to the Duke interface.","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"     * @param input A user input string.","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"     * @return A string to be displayed back to the Duke interface.","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"            assertClassReferencesPresent();","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"            assertCurrentlyAcceptingInput();","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"            String[] parsedOutput \u003d Parser.parseInput(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"            assertArrayElementsNotNull(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"            String cmd \u003d parsedOutput[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"            switch (cmd) {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"                return executeByeResponse();","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"            case \"list\":","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"                return executeListResponse();","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"            case \"help\":","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"                return executeHelpResponse();","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"            case \"find\":","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"                return executeFindResponse(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"                return executeMarkResponse(parsedOutput, cmd);","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"                return executeUnmarkResponse(parsedOutput, cmd);","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"                return executeDeleteResponse(parsedOutput, cmd);","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"NicholasTYD"},"content":"                return executeTodoResponse(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"NicholasTYD"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"NicholasTYD"},"content":"                return executeDeadlineResponse(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"NicholasTYD"},"content":"            case \"event\":","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"NicholasTYD"},"content":"                return executeEventResponse(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"NicholasTYD"},"content":"            default:","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"NicholasTYD"},"content":"                throw new InvalidDukeInputException();","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"NicholasTYD"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"NicholasTYD"},"content":"        } catch (BannedDukeCharacterException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"NicholasTYD"},"content":"            return ui.getBannedCharacterInputResponse(e.getMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"NicholasTYD"},"content":"        } catch (InvalidDukeInputException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"NicholasTYD"},"content":"            return ui.getInvalidInputResponse();","lastModifiedDate":"2022-09-05"},{"lineNumber":78,"author":{"gitId":"NicholasTYD"},"content":"        } catch (MissingDukeInputException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"NicholasTYD"},"content":"            return ui.getMissingInputResponse(e.getMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":80,"author":{"gitId":"NicholasTYD"},"content":"        } catch (InputIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"NicholasTYD"},"content":"            return executeIndexOutOfBoundsResponse(e);","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"NicholasTYD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":83,"author":{"gitId":"NicholasTYD"},"content":"            return ui.getBadNumberFormatResponse();","lastModifiedDate":"2022-09-05"},{"lineNumber":84,"author":{"gitId":"NicholasTYD"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"NicholasTYD"},"content":"            return ui.getDateTimeErrorResponse();","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"NicholasTYD"},"content":"        } finally {","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"NicholasTYD"},"content":"            storage.saveFile(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":88,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":91,"author":{"gitId":"NicholasTYD"},"content":"    private void assertClassReferencesPresent() {","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"NicholasTYD"},"content":"        assert tasks !\u003d null : \"There should be a TaskList at all times.\";","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"NicholasTYD"},"content":"        assert ui !\u003d null : \"There should be a UI at all times\";","lastModifiedDate":"2022-09-05"},{"lineNumber":94,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"NicholasTYD"},"content":"    private void assertCurrentlyAcceptingInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"NicholasTYD"},"content":"        assert isAcceptingInput : \"getResponse should not be run if not accepting input.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"NicholasTYD"},"content":"    private void assertArrayElementsNotNull(String[] arr) {","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"NicholasTYD"},"content":"        for (String i : arr) {","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"NicholasTYD"},"content":"            assert i !\u003d null : \"The string array should not have any null elements\";","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"NicholasTYD"},"content":"    private String executeByeResponse() {","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"NicholasTYD"},"content":"        isAcceptingInput \u003d false;","lastModifiedDate":"2022-09-04"},{"lineNumber":108,"author":{"gitId":"NicholasTYD"},"content":"        closeApplicationAfterDelay();","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getExitMessage();","lastModifiedDate":"2022-09-05"},{"lineNumber":110,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":112,"author":{"gitId":"NicholasTYD"},"content":"    private void closeApplicationAfterDelay() {","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"NicholasTYD"},"content":"        int applicationCloseDelay \u003d 1000;","lastModifiedDate":"2022-09-05"},{"lineNumber":114,"author":{"gitId":"NicholasTYD"},"content":"        TimerTask timerTask \u003d new TimerTask() {","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"NicholasTYD"},"content":"            @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"NicholasTYD"},"content":"            public void run() {","lastModifiedDate":"2022-09-04"},{"lineNumber":117,"author":{"gitId":"NicholasTYD"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"NicholasTYD"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"NicholasTYD"},"content":"        };","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"NicholasTYD"},"content":"        new Timer().schedule(timerTask, applicationCloseDelay);","lastModifiedDate":"2022-09-05"},{"lineNumber":121,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"NicholasTYD"},"content":"    private String executeListResponse() {","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"NicholasTYD"},"content":"        return ui.listTasks(tasks.getTasks());","lastModifiedDate":"2022-09-05"},{"lineNumber":125,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":126,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":127,"author":{"gitId":"NicholasTYD"},"content":"    private String executeHelpResponse() {","lastModifiedDate":"2022-09-11"},{"lineNumber":128,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getHelpMessage();","lastModifiedDate":"2022-09-11"},{"lineNumber":129,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":130,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":131,"author":{"gitId":"NicholasTYD"},"content":"    private String executeFindResponse(String[] parsedOutput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":132,"author":{"gitId":"NicholasTYD"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.find(parsedOutput[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":133,"author":{"gitId":"NicholasTYD"},"content":"        return ui.listFoundTasks(foundTasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":134,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":135,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":136,"author":{"gitId":"NicholasTYD"},"content":"    private String executeMarkResponse(String[] parsedOutput, String cmd) {","lastModifiedDate":"2022-09-04"},{"lineNumber":137,"author":{"gitId":"NicholasTYD"},"content":"        int taskIndex \u003d getTaskIndexFromParsedOutput(parsedOutput, cmd);","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"NicholasTYD"},"content":"        Task markedTask \u003d tasks.markTask(taskIndex);","lastModifiedDate":"2022-09-05"},{"lineNumber":139,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getMarkedTask(markedTask);","lastModifiedDate":"2022-09-05"},{"lineNumber":140,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":141,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":142,"author":{"gitId":"NicholasTYD"},"content":"    private String executeUnmarkResponse(String[] parsedOutput, String cmd) {","lastModifiedDate":"2022-09-04"},{"lineNumber":143,"author":{"gitId":"NicholasTYD"},"content":"        int taskIndex \u003d getTaskIndexFromParsedOutput(parsedOutput, cmd);","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"NicholasTYD"},"content":"        Task unmarkedTask \u003d tasks.unmarkTask(taskIndex);","lastModifiedDate":"2022-09-05"},{"lineNumber":145,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getUnmarkedTask(unmarkedTask);","lastModifiedDate":"2022-09-05"},{"lineNumber":146,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":147,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":148,"author":{"gitId":"NicholasTYD"},"content":"    private String executeDeleteResponse(String[] parsedOutput, String cmd) {","lastModifiedDate":"2022-09-04"},{"lineNumber":149,"author":{"gitId":"NicholasTYD"},"content":"        int taskIndex \u003d getTaskIndexFromParsedOutput(parsedOutput, cmd);","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"NicholasTYD"},"content":"        Task removedTask \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2022-09-05"},{"lineNumber":151,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getRemovedTask(removedTask, tasks.getTaskCount());","lastModifiedDate":"2022-09-05"},{"lineNumber":152,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":153,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":154,"author":{"gitId":"NicholasTYD"},"content":"    private int getTaskIndexFromParsedOutput(String[] parsedOutput, String cmd)","lastModifiedDate":"2022-09-05"},{"lineNumber":155,"author":{"gitId":"NicholasTYD"},"content":"            throws InputIndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2022-09-05"},{"lineNumber":156,"author":{"gitId":"NicholasTYD"},"content":"        int taskNum \u003d Integer.parseInt(parsedOutput[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":157,"author":{"gitId":"NicholasTYD"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":158,"author":{"gitId":"NicholasTYD"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTaskCount()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":159,"author":{"gitId":"NicholasTYD"},"content":"            throw new InputIndexOutOfBoundsException(cmd + \" \" + taskNum);","lastModifiedDate":"2022-09-04"},{"lineNumber":160,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":161,"author":{"gitId":"NicholasTYD"},"content":"        return taskIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":162,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":164,"author":{"gitId":"NicholasTYD"},"content":"    private String executeTodoResponse(String[] parsedOutput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":165,"author":{"gitId":"NicholasTYD"},"content":"        Task addedTask \u003d tasks.addTodo(parsedOutput[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":166,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getAddedTask(addedTask, tasks.getTaskCount());","lastModifiedDate":"2022-09-05"},{"lineNumber":167,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":169,"author":{"gitId":"NicholasTYD"},"content":"    private String executeDeadlineResponse(String[] parsedOutput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":170,"author":{"gitId":"NicholasTYD"},"content":"        String description \u003d parsedOutput[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"NicholasTYD"},"content":"        String date \u003d parsedOutput[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"NicholasTYD"},"content":"        String time \u003d parsedOutput[3];","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"NicholasTYD"},"content":"        Task addedTask \u003d tasks.addDeadline(description, date, time);","lastModifiedDate":"2022-09-05"},{"lineNumber":174,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getAddedTask(addedTask, tasks.getTaskCount());","lastModifiedDate":"2022-09-05"},{"lineNumber":175,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":176,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"NicholasTYD"},"content":"    private String executeEventResponse(String[] parsedOutput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":178,"author":{"gitId":"NicholasTYD"},"content":"        String description \u003d parsedOutput[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"NicholasTYD"},"content":"        String dateStart \u003d parsedOutput[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"NicholasTYD"},"content":"        String timeStart \u003d parsedOutput[3];","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"NicholasTYD"},"content":"        String dateEnd \u003d parsedOutput[4];","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"NicholasTYD"},"content":"        String timeEnd \u003d parsedOutput[5];","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"NicholasTYD"},"content":"        Task addedTask \u003d tasks.addEvent(description, dateStart, timeStart, dateEnd, timeEnd);","lastModifiedDate":"2022-09-05"},{"lineNumber":184,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getAddedTask(addedTask, tasks.getTaskCount());","lastModifiedDate":"2022-09-05"},{"lineNumber":185,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":186,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":187,"author":{"gitId":"NicholasTYD"},"content":"    private String executeIndexOutOfBoundsResponse(InputIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":188,"author":{"gitId":"NicholasTYD"},"content":"        String spaceSeparator \u003d \" \";","lastModifiedDate":"2022-09-05"},{"lineNumber":189,"author":{"gitId":"NicholasTYD"},"content":"        String[] cmdNum \u003d e.getMessage().split(spaceSeparator);","lastModifiedDate":"2022-09-05"},{"lineNumber":190,"author":{"gitId":"NicholasTYD"},"content":"        String cmd \u003d cmdNum[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"NicholasTYD"},"content":"        String inputNum \u003d cmdNum[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"NicholasTYD"},"content":"        return ui.getInputIndexOutOfBoundsResponse(cmd, inputNum);","lastModifiedDate":"2022-09-05"},{"lineNumber":193,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NicholasTYD":192,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Encapsulates custom Duke related exceptions thrown when using duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"        super(message);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"    DukeException() {","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"        super();","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"NicholasTYD":14}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":" * Represents an event task with a start date and time, as well as an end date and time.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    private LocalDate dateStart;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    private LocalTime timeStart;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    private LocalDate dateEnd;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"    private LocalTime timeEnd;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes a new Event object which is a subclass of Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"     * @param dateStart Start date of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"     * @param timeStart Start time of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"     * @param dateEnd End date of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"     * @param timeEnd End time of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"     * @throws DateTimeParseException If the inputted time is invalid and cannot be parsed.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"    public Event(String description,","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"                    String dateStart, String timeStart,","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"                    String dateEnd, String timeEnd) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"        this.dateStart \u003d LocalDate.parse(dateStart);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"        this.timeStart \u003d LocalTime.parse(timeStart);","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"        this.dateEnd \u003d LocalDate.parse(dateEnd);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"        this.timeEnd \u003d LocalTime.parse(timeEnd);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes a new Event object which is a subclass of Task, with the option to specify if the","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"     * task is done or not.","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"     * @param status Completion state of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"     * @param dateStart Start date of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"     * @param timeStart Start time of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"     * @param dateEnd End date of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"     * @param timeEnd End time of the Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"     * @throws DateTimeParseException If the inputted time is invalid and cannot be parsed.","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"    public Event(String description, int status,","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"                 String dateStart, String timeStart,","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"                 String dateEnd, String timeEnd) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"        this(description, dateStart, timeStart, dateEnd, timeEnd);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"        isDone \u003d status \u003d\u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"    private String formatAsMmmDdYyyy(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"    private String formatAs12Hour(LocalTime time) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"NicholasTYD"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"NicholasTYD"},"content":"    public String parseToSaveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"NicholasTYD"},"content":"        return \"E\" + \"|\" + super.parseToSaveData() + \"|\"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"NicholasTYD"},"content":"                + dateStart + \"|\" + timeStart + \"|\" + dateEnd + \"|\" + timeEnd;","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"NicholasTYD"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"NicholasTYD"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"NicholasTYD"},"content":"                + formatAsMmmDdYyyy(dateStart) + \" \" + formatAs12Hour(timeStart) + \" - \"","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"NicholasTYD"},"content":"                + formatAsMmmDdYyyy(dateEnd) + \" \" + formatAs12Hour(timeEnd) + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"NicholasTYD":80}},{"path":"src/main/java/duke/InputIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Represents a Duke exception when the user inputs a task number that exceeds the amount of tasks present.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public class InputIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    InputIndexOutOfBoundsException(String index) {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"        super(index);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"NicholasTYD":10}},{"path":"src/main/java/duke/InvalidDukeInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Represents a Duke exception when the user input contains a forbidden character.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public class InvalidDukeInputException extends DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    InvalidDukeInputException() {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"        super();","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"NicholasTYD":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":" * A class specifically for launching the Duke application.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"NicholasTYD":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":" * A class to that setups the GUI for Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    private Duke duke \u003d new Duke(\"savedata/\", \"duke.txt\");","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"            stage.show();","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"NicholasTYD":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes the Duke application and prints the Duke startup message.","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"        printStartupMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"    private void printStartupMessage() {","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"        String startupMsg \u003d Ui.getWelcomeMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(startupMsg, dukeImage));","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"        if (duke.isAcceptingInput()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"            );","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"NicholasTYD":63}},{"path":"src/main/java/duke/MissingDukeInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Represents a Duke exception when the user command is missing some key information.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public class MissingDukeInputException extends DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    MissingDukeInputException(String msg) {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"        super(msg);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"NicholasTYD":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":" * Deals with making sense of the user command and converting input into a format understandable by the Duke program.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"    private static final String SPACE_SEPARATOR \u003d \" \";","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    private static final HashMap\u003cString, String\u003e SHORTCUTS \u003d initialiseShortcuts();","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    private static HashMap\u003cString, String\u003e initialiseShortcuts() {","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"        HashMap\u003cString, String\u003e shortcuts \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"b\", \"bye\");","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"l\", \"list\");","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"h\", \"help\");","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"f\", \"find\");","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"m\", \"mark\");","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"um\", \"unmark\");","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"del\", \"delete\");","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"t\", \"todo\");","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"d\", \"deadline\");","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"        shortcuts.put(\"e\", \"event\");","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"        return shortcuts;","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"    private static void fillNullElementsWithEmptyString(String[] arr) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"            if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"                arr[i] \u003d EMPTY_STRING;","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"     * Parses an input string into a format that Duke can understand (An array of String).","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"     * @param input A user input string.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String array containing the parsed user input.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"     * @throws BannedDukeCharacterException If input contains a \u0027|\u0027 character.","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"     * @throws InvalidDukeInputException If input does not contain a recognised Duke command.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"     * @throws MissingDukeInputException If input contains a command that is lacking supporting information.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"    public static String[] parseInput(String input)","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"            throws BannedDukeCharacterException,","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"            InvalidDukeInputException,","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"            MissingDukeInputException {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"        // Remove spaces at the end of the input.","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"        checkForBannedCharacters(trimmedInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"        String[] parsedOutput \u003d splitInputIntoArray(trimmedInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"        checkForBadInput(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"        return parsedOutput;","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"    private static void checkForBannedCharacters(String input) throws BannedDukeCharacterException {","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"        String bannedCharacter \u003d \"|\";","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"        if (input.contains(bannedCharacter)) {","lastModifiedDate":"2022-09-05"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"            throw new BannedDukeCharacterException(bannedCharacter);","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"NicholasTYD"},"content":"    private static String[] splitInputIntoArray(String input) {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"NicholasTYD"},"content":"        // There are at most 6 parameters in an input. Status of task is assumed to be undone.","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"NicholasTYD"},"content":"        int parsedArraySize \u003d 6;","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"NicholasTYD"},"content":"        String[] parsedOutput \u003d new String[parsedArraySize];","lastModifiedDate":"2022-09-05"},{"lineNumber":71,"author":{"gitId":"NicholasTYD"},"content":"        /*","lastModifiedDate":"2022-09-05"},{"lineNumber":72,"author":{"gitId":"NicholasTYD"},"content":"         Splits the input into 2 halves, one containing the command itself and the other containing the","lastModifiedDate":"2022-09-05"},{"lineNumber":73,"author":{"gitId":"NicholasTYD"},"content":"         rest of the string.","lastModifiedDate":"2022-09-05"},{"lineNumber":74,"author":{"gitId":"NicholasTYD"},"content":"         */","lastModifiedDate":"2022-09-05"},{"lineNumber":75,"author":{"gitId":"NicholasTYD"},"content":"        String[] commandSplitInput \u003d input.split(SPACE_SEPARATOR, 2);","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"NicholasTYD"},"content":"        parsedOutput[0] \u003d parseCommand(commandSplitInput[0]);","lastModifiedDate":"2022-09-05"},{"lineNumber":77,"author":{"gitId":"NicholasTYD"},"content":"        parsedOutput[1] \u003d commandSplitInput.length !\u003d 1 ? commandSplitInput[1] : EMPTY_STRING;","lastModifiedDate":"2022-09-05"},{"lineNumber":78,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"NicholasTYD"},"content":"        String cmd \u003d parsedOutput[0];","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"NicholasTYD"},"content":"        switch (cmd) {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"NicholasTYD"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"NicholasTYD"},"content":"        case \"event\":","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"NicholasTYD"},"content":"            String deadlineSeparator \u003d \" /by \";","lastModifiedDate":"2022-09-05"},{"lineNumber":84,"author":{"gitId":"NicholasTYD"},"content":"            String eventSeparator \u003d \" /at \";","lastModifiedDate":"2022-09-05"},{"lineNumber":85,"author":{"gitId":"NicholasTYD"},"content":"            String splitWord \u003d cmd.equals(\"deadline\") ? deadlineSeparator : eventSeparator;","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"NicholasTYD"},"content":"            String[] str2 \u003d parsedOutput[1].split(splitWord, 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"NicholasTYD"},"content":"            if (str2.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"NicholasTYD"},"content":"                break;","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"NicholasTYD"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"NicholasTYD"},"content":"            String description \u003d str2[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"NicholasTYD"},"content":"            String[] dateTime \u003d Arrays.copyOf(str2[1].split(SPACE_SEPARATOR), 4);","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"NicholasTYD"},"content":"            parsedOutput[1] \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"NicholasTYD"},"content":"            parsedOutput[2] \u003d dateTime[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"NicholasTYD"},"content":"            parsedOutput[3] \u003d dateTime[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"NicholasTYD"},"content":"            parsedOutput[4] \u003d dateTime[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"NicholasTYD"},"content":"            parsedOutput[5] \u003d dateTime[3];","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-09-05"},{"lineNumber":98,"author":{"gitId":"NicholasTYD"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"NicholasTYD"},"content":"            // Do nothing","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"NicholasTYD"},"content":"        fillNullElementsWithEmptyString(parsedOutput);","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"NicholasTYD"},"content":"        return parsedOutput;","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"NicholasTYD"},"content":"    private static String parseCommand(String s) {","lastModifiedDate":"2022-09-05"},{"lineNumber":106,"author":{"gitId":"NicholasTYD"},"content":"        String parsedString \u003d s.toLowerCase();","lastModifiedDate":"2022-09-05"},{"lineNumber":107,"author":{"gitId":"NicholasTYD"},"content":"        if (SHORTCUTS.containsKey(s)) {","lastModifiedDate":"2022-09-05"},{"lineNumber":108,"author":{"gitId":"NicholasTYD"},"content":"            parsedString \u003d SHORTCUTS.get(s);","lastModifiedDate":"2022-09-05"},{"lineNumber":109,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":110,"author":{"gitId":"NicholasTYD"},"content":"        return parsedString;","lastModifiedDate":"2022-09-05"},{"lineNumber":111,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":112,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":113,"author":{"gitId":"NicholasTYD"},"content":"    private static void checkForBadInput(String[] parsedOutput)","lastModifiedDate":"2022-09-04"},{"lineNumber":114,"author":{"gitId":"NicholasTYD"},"content":"            throws InvalidDukeInputException, MissingDukeInputException {","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"NicholasTYD"},"content":"        String cmd \u003d parsedOutput[0];","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"NicholasTYD"},"content":"        int minimumArgumentsNeeded;","lastModifiedDate":"2022-09-04"},{"lineNumber":117,"author":{"gitId":"NicholasTYD"},"content":"        switch (cmd) {","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"NicholasTYD"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"NicholasTYD"},"content":"        case \"list\":","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"NicholasTYD"},"content":"        case \"help\":","lastModifiedDate":"2022-09-11"},{"lineNumber":121,"author":{"gitId":"NicholasTYD"},"content":"            minimumArgumentsNeeded \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"NicholasTYD"},"content":"        case \"find\":","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"NicholasTYD"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-04"},{"lineNumber":125,"author":{"gitId":"NicholasTYD"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-04"},{"lineNumber":126,"author":{"gitId":"NicholasTYD"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-04"},{"lineNumber":127,"author":{"gitId":"NicholasTYD"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-04"},{"lineNumber":128,"author":{"gitId":"NicholasTYD"},"content":"            minimumArgumentsNeeded \u003d 2;","lastModifiedDate":"2022-09-04"},{"lineNumber":129,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":130,"author":{"gitId":"NicholasTYD"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-04"},{"lineNumber":131,"author":{"gitId":"NicholasTYD"},"content":"            minimumArgumentsNeeded \u003d 4;","lastModifiedDate":"2022-09-04"},{"lineNumber":132,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":133,"author":{"gitId":"NicholasTYD"},"content":"        case \"event\":","lastModifiedDate":"2022-09-04"},{"lineNumber":134,"author":{"gitId":"NicholasTYD"},"content":"            minimumArgumentsNeeded \u003d 6;","lastModifiedDate":"2022-09-04"},{"lineNumber":135,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":136,"author":{"gitId":"NicholasTYD"},"content":"        default:","lastModifiedDate":"2022-09-04"},{"lineNumber":137,"author":{"gitId":"NicholasTYD"},"content":"            throw new InvalidDukeInputException();","lastModifiedDate":"2022-09-04"},{"lineNumber":138,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":140,"author":{"gitId":"NicholasTYD"},"content":"        int minimumArrayIndexNeededToBeFilled \u003d minimumArgumentsNeeded - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":141,"author":{"gitId":"NicholasTYD"},"content":"        boolean hasMissingArguments \u003d parsedOutput[minimumArrayIndexNeededToBeFilled].equals(EMPTY_STRING);","lastModifiedDate":"2022-09-04"},{"lineNumber":142,"author":{"gitId":"NicholasTYD"},"content":"        if (hasMissingArguments) {","lastModifiedDate":"2022-09-04"},{"lineNumber":143,"author":{"gitId":"NicholasTYD"},"content":"            throw new MissingDukeInputException(cmd);","lastModifiedDate":"2022-09-04"},{"lineNumber":144,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":145,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":146,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":146}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":" * Deals with saving Duke tasks as well as loading them from a file.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"    private final File saveFolder;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    private final File saveFile;","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"    public Storage(String savePath, String saveName) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"        this.saveFolder \u003d new File(savePath);","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"        this.saveFile \u003d new File(savePath + saveName);","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"     * Saves a list of tasks into the save location.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasks A TaskList of tasks to be saved.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    public void saveFile(TaskList tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"            createSaveFolderIfAbsent();","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"            writeToSaveFile(tasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"            String errorMsg \u003d \"An error occurred while attempting to save the file\";","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"            System.out.println(errorMsg);","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"    private void createSaveFolderIfAbsent() {","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"        if (!saveFolder.exists()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"            saveFolder.mkdir();","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"    private void writeToSaveFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"        FileWriter fw \u003d new FileWriter(saveFile);","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"            String saveTask \u003d t.parseToSaveData();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"            fw.write(saveTask + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"        fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"     * Loads a list of tasks from the save location.","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasks The destination for tasks to be loaded to.","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"    public void loadFile(TaskList tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"            if (saveFile.exists()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"                Scanner s \u003d new Scanner(saveFile);","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"                    String line \u003d s.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"                    loadTaskLineTo(tasks, line);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"                s.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"NicholasTYD"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"NicholasTYD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"NicholasTYD"},"content":"            String errorMsg \u003d \"The duke scanner is unable to load the information in the file.\";","lastModifiedDate":"2022-09-05"},{"lineNumber":69,"author":{"gitId":"NicholasTYD"},"content":"            System.out.println(errorMsg);","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"NicholasTYD"},"content":"     * Load one task into a TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasks The destination for the task to be loaded to.","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"NicholasTYD"},"content":"     * @param line The task to be loaded which is stored in a String format.","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"NicholasTYD"},"content":"    private void loadTaskLineTo(TaskList tasks, String line) {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"NicholasTYD"},"content":"        String[] taskInfo \u003d parseSavedTask(line);","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"NicholasTYD"},"content":"        addTaskTo(tasks, taskInfo);","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"NicholasTYD"},"content":"    private String[] parseSavedTask(String line) {","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"NicholasTYD"},"content":"        // There are at most 7 parameters in a saved task, including status.","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"NicholasTYD"},"content":"        int parsedArraySize \u003d 7;","lastModifiedDate":"2022-09-05"},{"lineNumber":87,"author":{"gitId":"NicholasTYD"},"content":"        String[] temp \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"NicholasTYD"},"content":"        String[] info \u003d Arrays.copyOf(temp, parsedArraySize);","lastModifiedDate":"2022-09-05"},{"lineNumber":89,"author":{"gitId":"NicholasTYD"},"content":"        return info;","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":91,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"NicholasTYD"},"content":"    private void addTaskTo(TaskList tasks, String[] taskInfo) {","lastModifiedDate":"2022-09-04"},{"lineNumber":93,"author":{"gitId":"NicholasTYD"},"content":"        String taskType \u003d taskInfo[0];","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"NicholasTYD"},"content":"        int status \u003d Integer.parseInt(taskInfo[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"NicholasTYD"},"content":"        String description \u003d taskInfo[2];","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"NicholasTYD"},"content":"        String date1 \u003d taskInfo[3];","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"NicholasTYD"},"content":"        String time1 \u003d taskInfo[4];","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"NicholasTYD"},"content":"        String date2 \u003d taskInfo[5];","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"NicholasTYD"},"content":"        String time2 \u003d taskInfo[6];","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"NicholasTYD"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"NicholasTYD"},"content":"        case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"NicholasTYD"},"content":"            tasks.addTask(new Todo(description, status));","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"NicholasTYD"},"content":"        case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"NicholasTYD"},"content":"            tasks.addTask(new Deadline(description, status, date1, time1));","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"NicholasTYD"},"content":"        case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"NicholasTYD"},"content":"            tasks.addTask(new Event(description, status, date1, time1, date2, time2));","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"NicholasTYD"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"NicholasTYD"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"NicholasTYD"},"content":"            System.out.println(\"Unknown task type\");","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":114}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Encapsulates a Task stored in Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"    protected Task(String description) {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"        return description.contains(s);","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"     * Returns deadline task into a savable format.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"     * @return A string representing the data stored in the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    public String parseToSaveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"        assertDescriptionNotNull();","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"        int isDoneNum \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"        return isDoneNum + \"|\" + description;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"        assertDescriptionNotNull();","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"    private void assertDescriptionNotNull() {","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"        assert description !\u003d null : \"Description should have something\";","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"NicholasTYD":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":" * Contains the list of Tasks stored in Duke, as well as methods to manipulate them.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"     * Returns the list of Tasks stored in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"     * @return An ArrayList of Tasks stored in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"     * Returns the number of Tasks stored in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"     * @return The amount of Tasks stored in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"     * Returns an ArrayList of Tasks that contains the inputted string.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"     * @param s The string to be compared with.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"     * @return An ArrayList of Tasks that contains the inputted string.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"    public ArrayList\u003cTask\u003e find(String s) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"            if (task.contains(s)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"                result.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"        return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"     * Returns the Task selected after marking it as complete.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"     * @param index The index of the Task to be marked, 1-indexed.","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"     * @return The marked Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"        return task;","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"     * Returns the Task selected after marking it as incomplete.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"     * @param index The index of the Task to be unmarked, 1-indexed.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"     * @return The unmarked Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"NicholasTYD"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"NicholasTYD"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"NicholasTYD"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"NicholasTYD"},"content":"        return task;","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"NicholasTYD"},"content":"     * Removes the Task selected from the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"NicholasTYD"},"content":"     * @param index The index of the Task to be removed, 1-indexed.","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"NicholasTYD"},"content":"     * @return The removed Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"NicholasTYD"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"NicholasTYD"},"content":"        return tasks.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"NicholasTYD"},"content":"     * Adds the Task inputted into the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"NicholasTYD"},"content":"     * @param task The task to add.","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"NicholasTYD"},"content":"     * @return The added Task.","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"NicholasTYD"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"NicholasTYD"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"NicholasTYD"},"content":"        return task;","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"NicholasTYD"},"content":"     * Adds a Todo task into the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"NicholasTYD"},"content":"     * @return The added Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"NicholasTYD"},"content":"    public Task addTodo(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"NicholasTYD"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"NicholasTYD"},"content":"        return addTask(todo);","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"NicholasTYD"},"content":"     * Adds a Deadline task into the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"NicholasTYD"},"content":"     * @param date Due date of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"NicholasTYD"},"content":"     * @param time Due time of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"NicholasTYD"},"content":"     * @return The added Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"NicholasTYD"},"content":"    public Task addDeadline(String description, String date, String time) {","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"NicholasTYD"},"content":"        Deadline deadline \u003d new Deadline(description, date, time);","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"NicholasTYD"},"content":"        return addTask(deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"NicholasTYD"},"content":"     * Adds an Event task into the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"NicholasTYD"},"content":"     * @param dateStart Start date of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"NicholasTYD"},"content":"     * @param timeStart Start time of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"NicholasTYD"},"content":"     * @param dateEnd End date of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"NicholasTYD"},"content":"     * @param timeEnd End time of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"NicholasTYD"},"content":"     * @return The added Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"NicholasTYD"},"content":"    public Task addEvent(String description,","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"NicholasTYD"},"content":"                          String dateStart, String timeStart,","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"NicholasTYD"},"content":"                          String dateEnd, String timeEnd) {","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"NicholasTYD"},"content":"        Event event \u003d new Event(description, dateStart, timeStart, dateEnd, timeEnd);","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"NicholasTYD"},"content":"        return addTask(event);","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":132}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":" * Represents an Todo task, with no date or time.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes a new Todo object which is a subclass of Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"     * Initializes a new Todo object which is a subclass of Task, with the option to specify if the","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"     * task is done or not.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"     * @param status Completion state of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"    public Todo(String description, int status) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"        this(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"        isDone \u003d status \u003d\u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"    public String parseToSaveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"        return \"T\" + \"|\" + super.parseToSaveData();","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"NicholasTYD":40}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":" * Encapsulates all the interactions between the Duke interface and the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    public static final String BORDER \u003d","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"            \"------------------------------------------------------------------------------\";","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string with the inputted message on the Duke interface.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"     * @param msg A String to be printed.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"     * @return The string with a border.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    public static String getMessage(String msg) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"        return BORDER + \"\\n\" + msg + \"\\n\" + BORDER;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string with the Duke startup welcome message.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"     * @return The Duke welcome message string with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"        String welcomeMsg \u003d \"Hello! I\u0027m duke.\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"                + \"If you need help, type \u0027help\u0027.\";","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(welcomeMsg);","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing the Duke exit message.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"     * @return The Duke exit String with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"    public String getExitMessage() {","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"        String exitMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(exitMsg);","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing the Duke help message.","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"NicholasTYD"},"content":"     * @return The Duke Help String with a border.","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"NicholasTYD"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"NicholasTYD"},"content":"        String whitespace \u003d \"\\n\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"NicholasTYD"},"content":"        String helpMsg \u003d \"Here are the commands you can use (shortcuts in brackets):\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"NicholasTYD"},"content":"                + \"bye(b) - Quit App\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"NicholasTYD"},"content":"                + \"list(l) - Get the list of tasks\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"NicholasTYD"},"content":"                + \"help(h) - Get to this help screen\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"NicholasTYD"},"content":"                + \"find(f) [text] - Search for tasks with the input text\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"NicholasTYD"},"content":"                + \"mark(m) [number] - Mark a task as done\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"NicholasTYD"},"content":"                + \"unmark(um) [number] - Mark a task as undone\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"NicholasTYD"},"content":"                + \"delete(del) [number] - Delete a task\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"NicholasTYD"},"content":"                + \"todo(t) [task] - Add a todo task\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"NicholasTYD"},"content":"                + \"deadline(d) [task] /by [YYYY-MM-DD] [HH:MM]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"NicholasTYD"},"content":"                + \" - Add a deadline task with an end time\" + whitespace","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"NicholasTYD"},"content":"                + \"event(e) [task] /at [YYYY-MM-DD] [HH:MM] [YYYY-MM-DD] [HH:MM]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"NicholasTYD"},"content":"                + \" - Add an event task with a start and end time.\";","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(helpMsg);","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing the list of tasks stored in Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasks A list of tasks stored.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String detailing the list of tasks stored with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"NicholasTYD"},"content":"    public String listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"NicholasTYD"},"content":"        String reply \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-09-05"},{"lineNumber":75,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(enumerateTasks(tasks, reply));","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing the list of tasks that matches a certain requirement in Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasks A list of tasks stored that matches a certain requirement.","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String detailing the list of tasks that matches a certain requirement with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"NicholasTYD"},"content":"    public String listFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"NicholasTYD"},"content":"        String reply \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(enumerateTasks(tasks, reply));","lastModifiedDate":"2022-09-05"},{"lineNumber":87,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"NicholasTYD"},"content":"    private String enumerateTasks(ArrayList\u003cTask\u003e tasks, String str) {","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"NicholasTYD"},"content":"        int pointer \u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"NicholasTYD"},"content":"        String returnedString \u003d str;","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"NicholasTYD"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"NicholasTYD"},"content":"            returnedString +\u003d \"\\n\" + pointer + \".\" + task;","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"NicholasTYD"},"content":"            pointer++;","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"NicholasTYD"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"NicholasTYD"},"content":"        return returnedString;","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing an acknowledgment message that a task has been marked.","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"NicholasTYD"},"content":"     * @param task The task that is marked.","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"NicholasTYD"},"content":"     * @return A string acknowledging the marked task with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"NicholasTYD"},"content":"    public String getMarkedTask(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"NicholasTYD"},"content":"        String acknowledgeTextMarked \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-09-05"},{"lineNumber":107,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(acknowledgeTextMarked + task);","lastModifiedDate":"2022-09-05"},{"lineNumber":108,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string with an acknowledgment message that a task has been unmarked.","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"NicholasTYD"},"content":"     * @param task The task that is unmarked.","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"NicholasTYD"},"content":"     * @return A string acknowledging the unmarked task with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"NicholasTYD"},"content":"    public String getUnmarkedTask(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"NicholasTYD"},"content":"        String acknowledgeTextUnmarked \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-09-05"},{"lineNumber":118,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(acknowledgeTextUnmarked + task);","lastModifiedDate":"2022-09-05"},{"lineNumber":119,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"NicholasTYD"},"content":"    private String getTaskCountReply(int count) {","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"NicholasTYD"},"content":"        String reply \u003d \"Now you have \" + count + \" task(s) in the list.\";","lastModifiedDate":"2022-09-05"},{"lineNumber":123,"author":{"gitId":"NicholasTYD"},"content":"        return reply;","lastModifiedDate":"2022-09-05"},{"lineNumber":124,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string with an acknowledgment message that a task has been removed and the number of tasks left.","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"NicholasTYD"},"content":"     * @param removedTask The task that is removed.","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasksCountLeft The number of tasks left after the task is removed.","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"NicholasTYD"},"content":"     * @return A string acknowledging the removed task along with the number of tasks remaining with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"NicholasTYD"},"content":"    public String getRemovedTask(Task removedTask, int tasksCountLeft) {","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"NicholasTYD"},"content":"        String msg \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"NicholasTYD"},"content":"                + removedTask + \"\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"NicholasTYD"},"content":"                + getTaskCountReply(tasksCountLeft);","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(msg);","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string with an acknowledgment message that a task has been added and the number of tasks now.","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"NicholasTYD"},"content":"     * @param task The task that is added.","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"NicholasTYD"},"content":"     * @param tasksCountLeft The number of tasks present after the task is added.","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String acknowledging the removed task along with the number of tasks left with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":146,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"NicholasTYD"},"content":"    public String getAddedTask(Task task, int tasksCountLeft) {","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"NicholasTYD"},"content":"        String msg \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-05"},{"lineNumber":149,"author":{"gitId":"NicholasTYD"},"content":"                + task + \"\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"NicholasTYD"},"content":"                + getTaskCountReply(tasksCountLeft);","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(msg);","lastModifiedDate":"2022-09-05"},{"lineNumber":152,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a String with an error message caused by usage of a forbidden character/string.","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"NicholasTYD"},"content":"     * @param s The forbidden String.","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String containing an error message with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"NicholasTYD"},"content":"    public String getBannedCharacterInputResponse(String s) {","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"NicholasTYD"},"content":"        String response \u003d \"Woah there!!! Your input contains a \\\"\" + s","lastModifiedDate":"2022-09-05"},{"lineNumber":162,"author":{"gitId":"NicholasTYD"},"content":"                + \"\\\" character which is not allowed!!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":164,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a String with an error message caused by invalid input.","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String containing an error message with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":170,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"NicholasTYD"},"content":"    public String getInvalidInputResponse() {","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"NicholasTYD"},"content":"        String response \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-09-05"},{"lineNumber":173,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":174,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing an error message caused by an input command missing some key information.","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"NicholasTYD"},"content":"     * @param s The input command.","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String containing an error message with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":181,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"NicholasTYD"},"content":"    public String getMissingInputResponse(String s) {","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"NicholasTYD"},"content":"        String response \u003d \"OOPS!!! The description after a \\\"\"","lastModifiedDate":"2022-09-05"},{"lineNumber":184,"author":{"gitId":"NicholasTYD"},"content":"                + s + \"\\\" is missing or incomplete!!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":185,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":186,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":189,"author":{"gitId":"NicholasTYD"},"content":"     * Returns a string containing a error message caused by having a number input that exceeds the number of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"NicholasTYD"},"content":"     * present in the program.","lastModifiedDate":"2022-08-28"},{"lineNumber":191,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"NicholasTYD"},"content":"     * @param cmd The attempted command.","lastModifiedDate":"2022-08-22"},{"lineNumber":193,"author":{"gitId":"NicholasTYD"},"content":"     * @param inputNum The inputted number.","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String containing an error message with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":195,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":196,"author":{"gitId":"NicholasTYD"},"content":"    public String getInputIndexOutOfBoundsResponse(String cmd, String inputNum) {","lastModifiedDate":"2022-08-28"},{"lineNumber":197,"author":{"gitId":"NicholasTYD"},"content":"        String response \u003d \"OOPS!!! You tried to \" + cmd + \" task \" + inputNum","lastModifiedDate":"2022-09-05"},{"lineNumber":198,"author":{"gitId":"NicholasTYD"},"content":"                + \" but it doesn\u0027t exist in the list!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":199,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":200,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"NicholasTYD"},"content":"    public String getBadNumberFormatResponse() {","lastModifiedDate":"2022-09-05"},{"lineNumber":203,"author":{"gitId":"NicholasTYD"},"content":"        String response \u003d \"OOPS!!! I don\u0027t think you\u0027ve typed in a proper number!!!!\";","lastModifiedDate":"2022-09-05"},{"lineNumber":204,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":205,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":206,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":207,"author":{"gitId":"NicholasTYD"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"NicholasTYD"},"content":"     * Prints an error message caused by having date input that is unable to be parsed by the program.","lastModifiedDate":"2022-08-22"},{"lineNumber":209,"author":{"gitId":"NicholasTYD"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":210,"author":{"gitId":"NicholasTYD"},"content":"     * @return A String containing an error message with a border.","lastModifiedDate":"2022-08-29"},{"lineNumber":211,"author":{"gitId":"NicholasTYD"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"NicholasTYD"},"content":"    public String getDateTimeErrorResponse() {","lastModifiedDate":"2022-08-28"},{"lineNumber":213,"author":{"gitId":"NicholasTYD"},"content":"        String response \u003d \"OOPS!!! I can\u0027t recognise the date you just inputted :-(\\n\"","lastModifiedDate":"2022-09-05"},{"lineNumber":214,"author":{"gitId":"NicholasTYD"},"content":"                + \"Dates should be inputted in a \u0027YYYY-MM-DD HH:MM\u0027 format, and events should have 2 dates.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":215,"author":{"gitId":"NicholasTYD"},"content":"        return getMessage(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":216,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":217,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":217}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"446.0\" prefWidth\u003d\"446.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"      \u003cAnchorPane prefHeight\u003d\"35.0\" prefWidth\u003d\"12.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: #3C3C3C;\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxWidth\u003d\"335.0\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"                  \u003cFont name\u003d\"Arial Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"NicholasTYD":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"665.0\" prefWidth\u003d\"460.0\" style\u003d\"-fx-background-color: #1E1E1E;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"383.0\" promptText\u003d\"uwu\" style\u003d\"-fx-background-color: #505050; -fx-text-fill: white;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"381.0\" layoutY\u003d\"623.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"78.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" prefHeight\u003d\"623.0\" prefWidth\u003d\"460.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"621.0\" prefWidth\u003d\"446.0\" style\u003d\"-fx-background-color: #1E1E1E;\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"NicholasTYD":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"class DeadlineTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"    private Deadline generateCorrectDeadline() {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"        return new Deadline(\"something\",","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"                1, \"2019-12-31\", \"12:34\");","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    public void getStatusIcon_markedTask_returnX() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"        assertEquals(generateCorrectDeadline().getStatusIcon(),","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"                \"X\");","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"    public void parseToSaveData_correctInput_correctParsedOutput() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"        assertEquals(\"D|1|something|2019-12-31|12:34\",","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"                generateCorrectDeadline().parseToSaveData());","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"        assertEquals(generateCorrectDeadline().toString(),","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"                \"[D][X] something (by: Dec 31 2019 12:34 PM)\");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":31}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"    void parseInput_unknownInput_invalidInputExceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"        assertThrows(InvalidDukeInputException.class, () -\u003e Parser.parseInput(\"uselessInfo\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"    void parseInput_incompleteDateTime_missingInputExceptionThrown() {","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"        assertThrows(MissingDukeInputException.class, () -\u003e Parser.parseInput(\"deadline test /by 2000-12-31\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"    void parseInput_forbiddenCharacter_bannedExceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"        assertThrows(BannedDukeCharacterException.class, () -\u003e Parser.parseInput(\"Something with | in it\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"    void parseInput_correctDateline_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"        assertArrayEquals(new String[] {\"deadline\", \"test\", \"2000-12-31\", \"00:00\", \"\", \"\"},","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"                Parser.parseInput(\"deadline test /by 2000-12-31 00:00\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":30}},{"path":"text-ui-test-savingTest/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"delete 7","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"todo finish these test cases","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"event cry /at 12345","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"deadline something /by somedate","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"event 1 2 3 4 /at 1234-12-30 05:12 2222-12-30 08:10","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"delete 7","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"delete 7","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"delete 7","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"todo |","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":15}},{"path":"text-ui-test-savingTest/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"@ECHO OFF","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"REM delete output from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"    exit /b 1","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":")","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"REM compare the output to the expected output","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":21}},{"path":"text-ui-test-savingTest/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"    mkdir ../bin","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"fi","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"# delete output from previous run","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"fi","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"    exit 1","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"fi","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"# convert to UNIX format","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"# compare the output to the expected output","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"    exit 0","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"else","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"    exit 1","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"fi","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":38}},{"path":"text-ui-test-savingTest/savedata/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"D|0|finish ip|2000-12-30|12:34","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"E|1|go to school|2001-12-30|05:12|2011-12-30|08:10","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"E|0|some event|1234-12-30|05:12|2222-12-30|13:10","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"T|0|a b c d e f g 123141534! /by /at test","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"D|0|a b c d|2000-12-12|12:34","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"E|0|1 2 3 4|1234-12-30|05:12|2222-12-30|08:10","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"NicholasTYD":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"NicholasTYD"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"NicholasTYD"},"content":"unmark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"NicholasTYD"},"content":"todo finish this ip","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"NicholasTYD"},"content":"deadline finish ip /by 2000-12-30 12:34","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"NicholasTYD"},"content":"event go to school /at 2001-12-30 05:12 2011-12-30 08:10","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"NicholasTYD"},"content":"event some event /at 1234-12-30 05:12 2222-12-30 13:10","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"NicholasTYD"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"NicholasTYD"},"content":"unmark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"NicholasTYD"},"content":"unmark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"NicholasTYD"},"content":"mark -1","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"NicholasTYD"},"content":"unmark -1","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"NicholasTYD"},"content":"todo a b c d e f g 123141534! /by /at test","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"deadline missingBy","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"NicholasTYD"},"content":"event missingAt","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"NicholasTYD"},"content":"deadline nothingAfter /by","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"NicholasTYD"},"content":"event nothingAfter /at","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"NicholasTYD"},"content":"deadline wrongTag /at","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"NicholasTYD"},"content":"event wrongTag /by","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"NicholasTYD"},"content":"deadline /by1234","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"NicholasTYD"},"content":"event /by1234","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"NicholasTYD"},"content":"deadline a b c d /by 2000-12-12 12:34","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"NicholasTYD"},"content":"event 1 2 3 4 /at 1234-12-30 05:12 2222-12-30 08:10","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"NicholasTYD"},"content":"mark","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"NicholasTYD"},"content":"delete -1","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"NicholasTYD"},"content":"delete 1","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"NicholasTYD"},"content":"delete 7","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"NicholasTYD"},"content":"event sleep /at 0000-2400hrs","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"NicholasTYD"},"content":"deadline bad date /by 2000-88-88","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"NicholasTYD"},"content":"deadline wrongFormat /by 01-01-2000","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"NicholasTYD"},"content":"event wrongFormat /at 2000-12-34","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"NicholasTYD"},"content":"find finish","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"NicholasTYD"},"content":"find e ip ip ip","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"NicholasTYD"},"content":"find 1","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"NicholasTYD"},"content":"list","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"NicholasTYD"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"NicholasTYD":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"NicholasTYD"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NicholasTYD"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasTYD":2,"-":19}}]

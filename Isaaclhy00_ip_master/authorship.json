[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"# duke project template","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Isaaclhy00":2,"-":22}},{"path":"src/main/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"T|0|read book","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"D|0|return book| Monday","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":" * Main Duke class","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    private final UI ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     * Runs the main logic of Duke.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     * Handles Welcome and Goodbye messages, as well as all commands.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    public void run() {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"                ui.showLineBreak();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"            finally {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"                ui.showLineBreak();","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"    ","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Isaaclhy00":51,"-":4}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    private final String input;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    public AddDeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"        if (!checkValid(input)) throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"        if (!input.contains(\"/by\")) throw new DukeException(\" ☹ OOPS!!! Please enter in the format : \\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"                \"     deadline {task description} /by {day / date : YYYY-MM-DD / time}\");","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the destination task list for the deadline to be added","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task is added","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        String taskDesc \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"        StringBuilder date \u003d new StringBuilder(input.substring(input.indexOf(\u0027/\u0027) + 3));","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        String[] dateArray \u003d date.toString().split(\" \");","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        if (isDate(dateArray[0])) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"            LocalDateTime ld \u003d LocalDateTime.parse(dateArray[0]);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"            date \u003d new StringBuilder(ld.format(DTF) + \"  \" + ld.getDayOfWeek());","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"            for (int i \u003d 1; i \u003c dateArray.length; i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"                date.append(\" \").append(dateArray[i]);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"        Deadline deadline \u003d new Deadline(taskDesc, date.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"        ui.addTaskMessage(deadline, taskList.getSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":56}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    private final String input;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    public AddEventCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"        if (!checkValid(input))","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        if (!input.contains(\"/at\")) throw new DukeException(\" ☹ OOPS!!! Please enter in the format : \\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"                \"     event {task description} /at {day / date : YYYY-MM-DD / time : no spaces}\");","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the destination task list for the event to be added","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task is added","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"        String taskDesc \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        StringBuilder deadline \u003d new StringBuilder(input.substring(input.indexOf(\u0027/\u0027) + 3));","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        String[] deadlineArray \u003d deadline.toString().split(\" \");","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        if (isDate(deadlineArray[0])) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"            LocalDateTime ld \u003d LocalDateTime.parse(deadlineArray[0]);","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"            deadline \u003d new StringBuilder(ld.format(DTF) + \"  \" + ld.getDayOfWeek());","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"            for (int i \u003d 1; i \u003c deadlineArray.length; i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"                deadline.append(\" \").append(deadlineArray[i]);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        Event event \u003d new Event(taskDesc, deadline.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        ui.addTaskMessage(event, taskList.getSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":57}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"    private final String input;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    public AddTodoCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"        if (!checkValid(input))","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds a new Todo task to the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the destination task list for the todo to be added","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task is added","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        // Index of beginning of Todo description after the \"todo\" keyword in command.","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        int BEGIN_INDEX \u003d 5;","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        String taskDesc \u003d input.substring(BEGIN_INDEX);","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        Todo todo \u003d new Todo(taskDesc);","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        ui.addTaskMessage(todo, taskList.getSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":46}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"    // Formatter to standardize the display of dates","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    protected static final DateTimeFormatter DTF \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * Executes the given command.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * @param tasks the TaskList to be operated on","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display messages","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the Storage to store changes to the TaskList","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage);","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     * Checks if the input is a Date or a Day.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * @param input the input to be checked","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     * @return True if the input is a Date","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    public static boolean isDate(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"       return input.matches(\".[0-9].*\");","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"     * Checks that the input String is a valid command","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"     * @param input the input String to be checked","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"     * @return True if the input is valid","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    public static boolean checkValid(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        String[] str \u003d input.split(\" \");","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"        return ((str.length !\u003d 1) \u0026\u0026  (str.length !\u003d 0));","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":47}},{"path":"src/main/java/duke/commands/DeleteAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class DeleteAllCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"     * Clears out the entire task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the task list to be cleared","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task list has been cleared","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.deleteAll();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        ui.deleteAllMessage();","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":33}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    private final int taskId;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    public DeleteTaskCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"        if (!checkValid(input)) { throw new DukeException(\" ☹ OOPS!!! Please enter task to delete.\"); }","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"        this.taskId \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     * Deletes a specific task in the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the task list from which the task is to be deleted","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task is deleted","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        ui.deleteTaskMessage(taskList.getTask(taskId), taskList.getSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.deleteTask(taskId);","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":40}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"     * Exits the program","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList placeholder to match parameters defined in parent abstract class Command","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display Goodbye message","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage placeholder to match parameters defined in parent abstract class Command","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        ui.goodbyeMessage();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     *  Terminates the program in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     * @return True as this is the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        return true;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":30}},{"path":"src/main/java/duke/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    private final int KEYWORD_START_INDEX \u003d 5;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    private final String keywords;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    public FindTaskCommand(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"        this.keywords \u003d input.substring(KEYWORD_START_INDEX);","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * Prints all the tasks in the task list that matches the keywords searched for by the user.","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     * @param tasks the TaskList to be search in","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display messages","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage placeholder to match parameters defined in parent abstract class Command","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        ui.findMessage();","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        tasks.findTask(this.keywords);","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":33}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"     * Informs the user that the command is not recognised.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList placeholder to match parameters defined in parent abstract class Command","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display incorrect command message","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage placeholder to match parameters defined in parent abstract class Command","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        ui.incorrectCommandMessage();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":30}},{"path":"src/main/java/duke/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    private final int taskId;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    public MarkTaskCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"        if (!checkValid(input)) throw new DukeException(\" ☹ OOPS!!! Please enter task to unmark.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"        this.taskId \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     * Marks the specified task in the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the task list which contains the task","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task is marked","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.markTask(this.taskId);","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        ui.markTaskMessage(taskList.getTask(this.taskId));","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":40}},{"path":"src/main/java/duke/commands/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"     * Prints out the current task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the task list to be printed","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task list is printed","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage placeholder to match parameters defined in parent abstract class Command","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.printList();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        ui.printListMessage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":31}},{"path":"src/main/java/duke/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    private final int taskId;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    public UnmarkTaskCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"        if (!checkValid(input)) throw new DukeException(\" ☹ OOPS!!! Please enter task to unmark.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"        this.taskId \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     * Unmarks the specified task in the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskList the task list which contains the task","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * @param ui the ui to display message after the task is unmarked","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     * @param storage the storage to handle storing of the new task list","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.unmarkTask(this.taskId);","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        ui.unmarkTaskMessage(taskList.getTask(this.taskId));","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        storage.store(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     * Prevents the program from terminating in Duke.run().","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * @return False as this is not the \u0027exit\u0027 command","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":40}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"         super(\"    \" + message +\"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":8}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.parser;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.commands.*;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"public class Parser {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"     * Parses the input and directs Duke to execute the appropriate command.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"     * @param input input String from the user","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     * @return Command to be executed in Duke.run()","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws DukeException to handle inappropriate inputs","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"        //Fetch and display taskList","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.equals(\"list\")) return new PrintListCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        // Mark a task","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"mark\")) return new MarkTaskCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"        // Unmark a task","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"unmark\")) return new UnmarkTaskCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        // Deletes all tasks from the list","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.equals(\"delete all\")) return new DeleteAllCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"        // Delete a task","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"delete\")) return new DeleteTaskCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        // Add todo to taskList","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"todo\")) return new AddTodoCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"        // Add deadline to taskList","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"deadline\")) return new AddDeadlineCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        // Add event to taskList","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"event\")) return new AddEventCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        // Finds the tasks matching the given keywords","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"find\")) return new FindTaskCommand(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"        // Exits program","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        if (input.startsWith(\"exit\")) return new ExitCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"        // In case of an unrecognised command","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        return new IncorrectCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":53}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.io.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"public class Storage {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    /** Default file path used if the user does not provide the file name. */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    static String path \u003d Paths.get(\".\").toAbsolutePath().toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    private static final String RELATIVE_FILEPATH \u003d path.substring(0, path.length() - 1) + \"src/main/\";","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    private String filePath \u003d \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"     * Saves file to a default path if one was not provided by the user.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"    public Storage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"        this.filePath \u003d RELATIVE_FILEPATH + \"data/tasks.txt\";","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     * Saves the file to the file path specified by the user.","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     * @param filePath path for the file to be stored","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"            this.filePath \u003d RELATIVE_FILEPATH + filePath;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"     * Stores the given task list to the given path.","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"     * @param toStore the task list to be stored","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"    public void store(TaskList toStore) {","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(toStore);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"            for (String task : encodedTaskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"                writer.write(\"\\n\" + task);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"            writer.close();","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"     * Loads the stored task list from the specified file path.","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"     * @return an ArrayList\u003cTask\u003e to be passed as parameters for the TaskList constructor","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"            List\u003cString\u003e encodedTaskList\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"            String line;","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"                encodedTaskList.add(line);","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"            reader.close();","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"            result \u003d  TaskListDecoder.decodeTaskList(encodedTaskList);","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"        return result;","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":83}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.*;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":" * Decodes the storage data file into a {@code TaskList} object.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"public class TaskListDecoder {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * Decodes a List\u003cString\u003e into a TaskList containing the decoded tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * @param encodedTaskList the task list to be decoded","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the decoded task list","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    public static ArrayList\u003cTask\u003e decodeTaskList(List\u003cString\u003e encodedTaskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"        ArrayList\u003cTask\u003e decodedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"            decodedTaskList.add(decodeTaskFromString(encodedTask));","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        decodedTaskList.remove(null);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        return decodedTaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     * Decodes the given String into a task.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     * @param encodedTask the String to be decoded","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the task represented by the encoded String","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"    public static Task decodeTaskFromString(String encodedTask) {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        Task result \u003d null;","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"        String[] str \u003d encodedTask.split(\"\\\\|\");","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"        switch (str[0]) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"            case \"T\":","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"                Todo todo \u003d new Todo(str[2]);","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"                if (Objects.equals(str[1], \"1\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"                    todo.mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"                result \u003d todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"            case \"D\":","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"                Deadline deadline \u003d new Deadline(str[2], str[3]);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"                if (Objects.equals(str[1], \"1\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"                    deadline.mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"                result \u003d deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"            case \"E\":","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"                Event event \u003d new Event(str[2], str[3]);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"                if (Objects.equals(str[1], \"1\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"                    event.mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"                result \u003d event;","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"        return result;","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":65}},{"path":"src/main/java/duke/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.List;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":" * Encode the {@code TaskList} object into a data file for storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"public class TaskListEncoder {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * Encodes a task list into a List\u003cString\u003e containing the decoded tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * @param toEncode the task list to be encoded","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the encoded task list","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList toEncode) {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"        final List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"        for (Task task : toEncode.getAllTasks()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"            encodedTaskList.add(encodeTaskToString(task));","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        return encodedTaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     * Encodes the given task into a template format to be stored.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     * @param task the task to be encoded","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * @return a String representing the encoded task","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    public static String encodeTaskToString(Task task) {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        return task.getTaskType() + \"|\"","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"                + (task.isCompleted() ? 1 : 0) + \"|\"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"                + task.getDesc();","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":41}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"    private final String date;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"    private final String taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"    public Deadline(String taskDesc, String date) {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"        super(taskDesc);","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the type of task for identification during encoding and decoding for storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * @return a Character \u0027D\u0027 representing Deadline","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public char getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the description of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the description of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    public String getDesc() {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        return this.taskDesc + \"|\" + this.date;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":37}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"    private final String deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"    private final String taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"    public Event(String taskDesc, String deadline) {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"        super(taskDesc);","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the type of task for identification during encoding and decoding for storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     * @return a Character \u0027E\u0027 representing Event","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    public char getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the description of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the description of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    public String getDesc() {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"        return this.taskDesc + \"|\" + this.deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + deadline + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":37}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"    private final String taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"    private boolean completed;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"    public Task(String taskDesc) {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the description of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the description of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    public String getDesc() {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        return this.taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * Checks if the task has been marked as completed.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"     * @return True if the task is completed","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"        return this.completed;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the type of task for identification during encoding and decoding for storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"     * @return a Character representing the type of task","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    public abstract char getTaskType();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    public void mark() {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"        if (completed) {","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"            return \"[X] \" + taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"        } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"            return \"[ ] \" + taskDesc;","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":59}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"public class TaskList {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     * Constructs new TaskList using the given ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskArrayList the ArrayList to construct the TaskList from","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"     * @throws DukeException to handle if the given ArrayList is empty or invalid","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"        taskList \u003d taskArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"     * Constructs an empty TaskList if no ArrayList\u003cTask\u003e is given.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"     * @return true if the task list is empty","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"        return taskList.size() \u003d\u003d 0;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the current number of tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"     * @return an Integer representing the current number of tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"     * Prints out the current task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"    public void printList() {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"            if (isEmpty()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"                throw new DukeException(\" ☹ OOPS!!! Seems like your list is empty.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"            } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++)","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"                    System.out.println(\"     \" + (i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"     * Prints out list of tasks that contains the keyword searched for by the user","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"     * @param input the keyword to be searched for by the user","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"    public void findTask(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"        boolean noMatches \u003d true;","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"            if (task.getDesc().contains(input)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"                noMatches \u003d false;","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"                System.out.println(\"     \" + (i + 1) + \". \" + task);","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"        if (noMatches) {","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"            try {","lastModifiedDate":"2022-08-30"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"                throw new DukeException(\" ☹ OOPS!!! Seems like there are no tasks matching this description.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"Isaaclhy00"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskIndex the index of the task to be marked","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"Isaaclhy00"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.get(taskIndex).mark();","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"Isaaclhy00"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskIndex the index of the task to be marked","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":100,"author":{"gitId":"Isaaclhy00"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2022-08-30"},{"lineNumber":101,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.get(taskIndex).unmark();","lastModifiedDate":"2022-08-30"},{"lineNumber":102,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":103,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":104,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":105,"author":{"gitId":"Isaaclhy00"},"content":"     * Adds given task to the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":107,"author":{"gitId":"Isaaclhy00"},"content":"     * @param task the task to be added","lastModifiedDate":"2022-08-30"},{"lineNumber":108,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":109,"author":{"gitId":"Isaaclhy00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-30"},{"lineNumber":110,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":111,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":112,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":113,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":114,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the task at the given index of the list.","lastModifiedDate":"2022-08-30"},{"lineNumber":115,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":116,"author":{"gitId":"Isaaclhy00"},"content":"     * @param taskId index of the task to be fetched","lastModifiedDate":"2022-08-30"},{"lineNumber":117,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":118,"author":{"gitId":"Isaaclhy00"},"content":"     * @return the task at the given index","lastModifiedDate":"2022-08-30"},{"lineNumber":119,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":120,"author":{"gitId":"Isaaclhy00"},"content":"    public Task getTask(int taskId) {","lastModifiedDate":"2022-08-30"},{"lineNumber":121,"author":{"gitId":"Isaaclhy00"},"content":"        return taskList.get(taskId);","lastModifiedDate":"2022-08-30"},{"lineNumber":122,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":123,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":124,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":125,"author":{"gitId":"Isaaclhy00"},"content":"     * Deletes the task at the given index from the list.","lastModifiedDate":"2022-08-30"},{"lineNumber":126,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":127,"author":{"gitId":"Isaaclhy00"},"content":"     * @param index index of the task to be deleted","lastModifiedDate":"2022-08-30"},{"lineNumber":128,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":129,"author":{"gitId":"Isaaclhy00"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"Isaaclhy00"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-08-30"},{"lineNumber":131,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":133,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":134,"author":{"gitId":"Isaaclhy00"},"content":"     * Clears out the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":135,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":136,"author":{"gitId":"Isaaclhy00"},"content":"    public void deleteAll() {","lastModifiedDate":"2022-08-30"},{"lineNumber":137,"author":{"gitId":"Isaaclhy00"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":138,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":139,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":140,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":141,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches all the tasks in the task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":142,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":143,"author":{"gitId":"Isaaclhy00"},"content":"     * @return an ArrayList containing all the tasks in the task list","lastModifiedDate":"2022-08-30"},{"lineNumber":144,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":145,"author":{"gitId":"Isaaclhy00"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2022-08-30"},{"lineNumber":146,"author":{"gitId":"Isaaclhy00"},"content":"        return taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":147,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":148,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Isaaclhy00":148}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"    public Todo(String task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"        super(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"     * Fetches the type of task for identification during encoding and decoding for storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"     * @return a Character \u0027T\u0027 representing Todo","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"    public char getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Isaaclhy00":22}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"public class UI {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    public void showLineBreak() {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"        String logo \u003d \" ____        _        \\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"                \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"                \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"                \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"                \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"        showLineBreak();","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"        showLineBreak();","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Isaaclhy00"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Isaaclhy00"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Isaaclhy00"},"content":"    public boolean checkValid(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Isaaclhy00"},"content":"        String[] str \u003d input.split(\" \");","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Isaaclhy00"},"content":"        return (str.length \u003e 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Isaaclhy00"},"content":"    public void printListMessage(TaskList taskList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" You have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Isaaclhy00"},"content":"    public void findMessage() {","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    Here are the matching tasks in your list: \");","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Isaaclhy00"},"content":"    public void addTaskMessage(Task task, int listSize) {","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Now you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Isaaclhy00"},"content":"    public void deleteTaskMessage(Task task, int listSize) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Got it. I\u0027ve removed this task: \");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Now you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Isaaclhy00"},"content":"    public void deleteAllMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Got it. I\u0027ve removed all tasks\");","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Now you have 0 tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"Isaaclhy00"},"content":"    public void markTaskMessage(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"Isaaclhy00"},"content":"    public void unmarkTaskMessage(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"Isaaclhy00"},"content":"    public void incorrectCommandMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"Isaaclhy00"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(\"    \" + \" Loading error!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"Isaaclhy00"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"Isaaclhy00"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":86}},{"path":"src/test/java/jUnitTests/CheckValidInputTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package jUnitTests;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"public class CheckValidInputTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"    void shouldCheckValidInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"        assertAll(() -\u003e assertFalse(ui.checkValid(\" \")),","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"                () -\u003e assertFalse(ui.checkValid(\"deadline\")),","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"                () -\u003e assertTrue(ui.checkValid(\"mark 1\")),","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"                () -\u003e assertTrue(ui.checkValid(\"deadline read book /by Monday\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":18}},{"path":"src/test/java/jUnitTests/GetTaskTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package jUnitTests;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"public class GetTaskTypeTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    void todoShouldReturnT() {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"        Todo todo \u003d new Todo(\"dummy task\");","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"        assertEquals(\u0027T\u0027, todo.getTaskType());","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Isaaclhy00"},"content":"    void deadlineShouldReturnT() {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Isaaclhy00"},"content":"        Deadline deadline \u003d new Deadline(\"dummy task\", \"Monday\");","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Isaaclhy00"},"content":"        assertEquals(\u0027D\u0027, deadline.getTaskType());","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Isaaclhy00"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Isaaclhy00"},"content":"    void eventShouldReturnT() {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Isaaclhy00"},"content":"        Event event \u003d new Event(\"dummy task\", \"Monday 2-4pm\");","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Isaaclhy00"},"content":"        assertEquals(\u0027E\u0027, event.getTaskType());","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":29}},{"path":"src/test/java/jUnitTests/ParseMarkTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Isaaclhy00"},"content":"package jUnitTests;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Isaaclhy00"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Isaaclhy00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Isaaclhy00"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Isaaclhy00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Isaaclhy00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Isaaclhy00"},"content":"public class ParseMarkTaskCommandTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Isaaclhy00"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Isaaclhy00"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Isaaclhy00"},"content":"    void shouldParseMarkTask() throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Isaaclhy00"},"content":"        Command c \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Isaaclhy00"},"content":"        assertFalse(c.isExit());","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Isaaclhy00"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Isaaclhy00":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Isaaclhy00"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Isaaclhy00":1,"-":20}}]

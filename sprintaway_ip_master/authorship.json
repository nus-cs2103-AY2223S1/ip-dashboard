[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a06876","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"3. After that, locate the `src/java.main/java/Duke.java` file, right-click it, and choose `Run Duke.java.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a11804","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sprintaway":4,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sprintaway":22,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"[T][X] bye tile","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"[D][ ] tile yo (by: Aug 09 2018)","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"[D][X] live (by: Sep 09 2019)","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"[E][ ] start writing (at: Jun 03 2018)","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"[D][ ] try eating (by: Aug 07 2018)","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"[T][X] yell","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"[T][ ] aspdoq","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"[T][X] explode for 9 hours straight","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"[D][X] what in the world (by: Aug 08 2020)","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sprintaway":11}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":" * Duke class that runs the program","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"    private Scene scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Malfurion.jpg\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Medivh.jpg\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"    private Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"     * Empty constructor for Duke so that launcher can run without error","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"    public Duke() {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"     * Constructor for Duke","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"     * @param filePath","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"        tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"sprintaway"},"content":"     * Initializes the stage","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"sprintaway"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"sprintaway"},"content":"     * the application scene can be set.","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"sprintaway"},"content":"     * Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"sprintaway"},"content":"     * primary stages.","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"sprintaway"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"sprintaway"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"sprintaway"},"content":"        tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"sprintaway"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"sprintaway"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"sprintaway"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"sprintaway"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"sprintaway"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"sprintaway"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"sprintaway"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"sprintaway"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"sprintaway"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"sprintaway"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"sprintaway"},"content":"        stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"sprintaway"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"sprintaway"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"sprintaway"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"sprintaway"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"sprintaway"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"sprintaway"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"sprintaway"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"sprintaway"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"sprintaway"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"sprintaway"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"sprintaway"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"sprintaway"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-08-29"},{"lineNumber":107,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"sprintaway"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"sprintaway"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"sprintaway"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"sprintaway"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"sprintaway"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":117,"author":{"gitId":"sprintaway"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":118,"author":{"gitId":"sprintaway"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-08-29"},{"lineNumber":119,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"sprintaway"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-08-29"},{"lineNumber":121,"author":{"gitId":"sprintaway"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"sprintaway"},"content":"            userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"sprintaway"},"content":"        });","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":125,"author":{"gitId":"sprintaway"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"sprintaway"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"sprintaway"},"content":"            userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"sprintaway"},"content":"        });","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":130,"author":{"gitId":"sprintaway"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"sprintaway"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-08-29"},{"lineNumber":133,"author":{"gitId":"sprintaway"},"content":"            handleUserInput();","lastModifiedDate":"2022-08-29"},{"lineNumber":134,"author":{"gitId":"sprintaway"},"content":"        });","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"sprintaway"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"sprintaway"},"content":"            handleUserInput();","lastModifiedDate":"2022-08-29"},{"lineNumber":138,"author":{"gitId":"sprintaway"},"content":"        });","lastModifiedDate":"2022-08-29"},{"lineNumber":139,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":140,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":141,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":142,"author":{"gitId":"sprintaway"},"content":"     * Iteration 1:","lastModifiedDate":"2022-08-29"},{"lineNumber":143,"author":{"gitId":"sprintaway"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-08-29"},{"lineNumber":144,"author":{"gitId":"sprintaway"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-08-29"},{"lineNumber":145,"author":{"gitId":"sprintaway"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-08-29"},{"lineNumber":146,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":147,"author":{"gitId":"sprintaway"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"sprintaway"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-08-29"},{"lineNumber":149,"author":{"gitId":"sprintaway"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":150,"author":{"gitId":"sprintaway"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-08-29"},{"lineNumber":151,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"sprintaway"},"content":"        return textToAdd;","lastModifiedDate":"2022-08-29"},{"lineNumber":153,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":154,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":155,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":156,"author":{"gitId":"sprintaway"},"content":"     * Iteration 2:","lastModifiedDate":"2022-08-29"},{"lineNumber":157,"author":{"gitId":"sprintaway"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":158,"author":{"gitId":"sprintaway"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":160,"author":{"gitId":"sprintaway"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":161,"author":{"gitId":"sprintaway"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-08-29"},{"lineNumber":162,"author":{"gitId":"sprintaway"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-08-29"},{"lineNumber":163,"author":{"gitId":"sprintaway"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":164,"author":{"gitId":"sprintaway"},"content":"                DialogBox.getUserDialog(userText.getText(), user),","lastModifiedDate":"2022-08-29"},{"lineNumber":165,"author":{"gitId":"sprintaway"},"content":"                DialogBox.getDukeDialog(dukeText.getText(), duke)","lastModifiedDate":"2022-08-29"},{"lineNumber":166,"author":{"gitId":"sprintaway"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":167,"author":{"gitId":"sprintaway"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":168,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":169,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":170,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":171,"author":{"gitId":"sprintaway"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-08-29"},{"lineNumber":172,"author":{"gitId":"sprintaway"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-08-29"},{"lineNumber":173,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":174,"author":{"gitId":"sprintaway"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":175,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":176,"author":{"gitId":"sprintaway"},"content":"            Command command \u003d Parser.parse(input, tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":177,"author":{"gitId":"sprintaway"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":178,"author":{"gitId":"sprintaway"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-08-29"},{"lineNumber":179,"author":{"gitId":"sprintaway"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-08-29"},{"lineNumber":180,"author":{"gitId":"sprintaway"},"content":"                delay.play();","lastModifiedDate":"2022-08-29"},{"lineNumber":181,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":182,"author":{"gitId":"sprintaway"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":183,"author":{"gitId":"sprintaway"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":184,"author":{"gitId":"sprintaway"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":185,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":186,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":187,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":188,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":189,"author":{"gitId":"sprintaway"},"content":"     * Gets Ui","lastModifiedDate":"2022-08-29"},{"lineNumber":190,"author":{"gitId":"sprintaway"},"content":"     * @return the ui","lastModifiedDate":"2022-08-29"},{"lineNumber":191,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":192,"author":{"gitId":"sprintaway"},"content":"    public Ui getUi() {","lastModifiedDate":"2022-08-29"},{"lineNumber":193,"author":{"gitId":"sprintaway"},"content":"        return ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":194,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":195,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":195}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    public Main() throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"            scene.getStylesheets().add(\"view/stylesheet.css\");","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Malfurion.jpg\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Medivh.jpg\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getUi().showGreetings(), dukeImage));","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":54}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" * An extension of the Command class, AddCommand, used to add tasks to taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    private Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * Constructor for AddCommand class","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     * @param task the task to be added to constructor","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"        assert task !\u003d null : \"Task is empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     * Returns false to indicate this command does not cause Duke to exit","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     * @return the boolean false","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"     * Adds tasks to taskList, saves the taskList to Duke.txt file, and displays Ui to show update to taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that tasks are added to","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of user commands","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        return ui.showTaskAdded(taskList);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" * An abstract command class, other commands inherit the methods execute and isExit for different implementations","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"     * Abstract method with different implementations for other commands","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that contains tasks to be modified, added, or removed","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of user commands","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves or loads the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"     * Abstract method that determines if the commands will end the program.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * @return true if the command ends the program and vice versa","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" * An extension of the Command class, DeleteCommand, used to delete tasks to taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    private int integer;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * Constructor for DeleteCommand class","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     * @param integer integer that determines which item is to be deleted","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    public DeleteCommand(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        this.integer \u003d integer;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"        assert integer \u003e 0 : \"Integer is not valid!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     * Returns false to indicate this command does not cause Duke to exit","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     * @return the boolean false","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"     * Removes tasks from taskList, saves the taskList to Duke.txt file, and displays Ui to show update to taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that tasks are removed from","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of user commands","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"        Task deletedTask \u003d taskList.getTask(integer - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        taskList.remove(integer);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"        return ui.showTaskDeleted(taskList, deletedTask);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":50}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" * An extension of the Command class, ExitCommand, used to exit Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"     * Returns true to tell that this command makes Duke exit.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"     * @return true","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        return true;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"     * Shows the exit message.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that contains tasks to be modified, added, or removed","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of user commands","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves or loads the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"        return ui.showBye();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" * FindCommand that inherits Command to search for a keyword","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    private String string;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"     * Constructor of FindCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * @param string the string to be initialised","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    public FindCommand(String string) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        this.string \u003d string;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"        assert string !\u003d null : \"String is empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"     * Returns false to indicate this does not cause program to exit","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * @return false","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"     * Returns the temporary tasklist containing tasks that contains the keyword","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the tasklist to be executed","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"     * @param ui the ui to be executed","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"     * @param storage the storage to be executed","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"        TaskList tempList \u003d taskList.findTasks(string);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"        return ui.showTasksFound(tempList);","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"sprintaway":44}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" * An extension of the Command class, ListCommand, used to show tasks in taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"     * Returns false to indicate this command does not cause Duke to exit","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"     * @return the boolean false","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"     * Shows tasks in taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that contains tasks to be modified, added, or removed","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of user commands","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves or loads the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"        return ui.showTasksInList(taskList);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":34}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" * An extension of the Command class, MarkCommand, used to mark tasks as done in taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    private int integer;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"     * Constructor for MarkCommand class","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     * @param integer integer that determines which item is to be marked as done","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    public MarkCommand(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"        this.integer \u003d integer;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        assert integer \u003e 0 : \"Integer is not valid!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * Returns false to indicate this command does not cause Duke to exit","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"     * @return the boolean false","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"     * Marks tasks in taskList, saves the taskList to Duke.txt file, and displays Ui to show update to taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that contains tasks to be marked as done","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of marking tasks in taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"        taskList.markAsDone(integer);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        return ui.showMarkAsDone(taskList, integer);","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":48}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" * An extension of the Command class, UnmarkCommand, used to unmark tasks as not done in taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    private int integer;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"     * Constructor for MarkCommand class","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     * @param integer integer that determines which item is to be marked as not done","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    public UnmarkCommand(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"        this.integer \u003d integer;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        assert integer \u003e 0 : \"Integer is not valid!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * Returns false to indicate this command does not cause Duke to exit","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"     * @return the boolean false","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"        return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"     * Marks tasks in taskList, saves the taskList to Duke.txt file, and displays Ui to show update to taskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     * @param taskList tasklist that contains tasks to be marked as done","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     * @param ui ui that displays results of marking tasks in taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"     * @param storage storage that saves the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains ui message","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"        taskList.markAsNotDone(integer);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        return ui.showMarkAsNotDone(taskList, integer);","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":48}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":" * Class type of exceptions unique to Duke","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"    private String message;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"     * Constructor for DukeException class","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"     * @param string shows the different types of exceptions possible","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    public DukeException(String string) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"        super(string);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"        message \u003d string;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"     * A getter function","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"     * @return message an error message","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"        return message;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"sprintaway":28}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":" * Parser class for parsing inputs from user","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"     * Turns date from MMM dd yyyy format to yyyy-MM-dd format","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"     * @param string of a MMM dd yyyy format","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"     * @return string of a yyyy-MM-dd format","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"    public static String parseLocalDate(String string) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"        LocalDate localdate \u003d LocalDate.parse(string, format);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"        return localdate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"     * Checks what the user types and calls whatever command that the user types corresponds with","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"     * @param fullCommand input from user to be checked against available commands","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the taskList to be modified with tasks depending on command","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"     * @return a command that does different tasks depending on user input","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"    public static Command parse(String fullCommand, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! No tasks available!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.length() \u003e\u003d 5 \u0026\u0026 (fullCommand.startsWith(\"mark\")","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 (Character.isWhitespace(fullCommand.charAt(4)))","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 fullCommand.substring(5).chars().allMatch(Character::isDigit))) {","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"sprintaway"},"content":"            int number \u003d parseInt(fullCommand.substring(5));","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"sprintaway"},"content":"            if (number \u003e taskList.getTaskListSize() || number \u003c\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"sprintaway"},"content":"                assert number \u003e 0 : \"Integer is not valid!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"sprintaway"},"content":"                return new MarkCommand(number);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.length() \u003e\u003d 7 \u0026\u0026 (fullCommand.startsWith(\"unmark\")","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 (Character.isWhitespace(fullCommand.charAt(6)))","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 fullCommand.substring(7).chars().allMatch(Character::isDigit))) {","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"sprintaway"},"content":"            int number \u003d parseInt(fullCommand.substring(7));","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"sprintaway"},"content":"            if (number \u003e taskList.getTaskListSize() || number \u003c\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"sprintaway"},"content":"                assert number \u003e 0 : \"Integer is not valid!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"sprintaway"},"content":"                return new UnmarkCommand(number);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.length() \u003e\u003d 7 \u0026\u0026 (fullCommand.startsWith(\"delete\")","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 (Character.isWhitespace(fullCommand.charAt(6)))","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 fullCommand.substring(7).chars().allMatch(Character::isDigit))) {","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"sprintaway"},"content":"            int number \u003d parseInt(fullCommand.substring(7));","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"sprintaway"},"content":"            if (number \u003e taskList.getTaskListSize() || number \u003c\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"sprintaway"},"content":"                assert number \u003e 0 : \"Integer is not valid!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"sprintaway"},"content":"                return new DeleteCommand(number);","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.equals(\"todo\")","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"sprintaway"},"content":"                || (fullCommand.startsWith(\"todo\") \u0026\u0026 fullCommand.substring(5).isBlank())) {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.length() \u003e\u003d 5 \u0026\u0026 (fullCommand.startsWith(\"find\")","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 (Character.isWhitespace(fullCommand.charAt(4))))) {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"sprintaway"},"content":"            String string \u003d fullCommand.substring(5);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"sprintaway"},"content":"            if (string.isBlank()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! Enter keyword to find.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"sprintaway"},"content":"                assert string !\u003d null : \"String is empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"sprintaway"},"content":"                return new FindCommand(string);","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.equals(\"todo\") || (fullCommand.startsWith(\"todo\")","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 fullCommand.substring(5).isBlank())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"sprintaway"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.startsWith(\"todo\") \u0026\u0026 Character.isWhitespace(fullCommand.charAt(4))) {","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"sprintaway"},"content":"            return new AddCommand(new ToDo(fullCommand));","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.equals(\"deadline\") || (fullCommand.startsWith(\"deadline\")","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 fullCommand.substring(9).isBlank())) {","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"sprintaway"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.startsWith(\"deadline\") \u0026\u0026 Character.isWhitespace(fullCommand.charAt(8))) {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"sprintaway"},"content":"            if (!fullCommand.contains(\"/by\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! Please use the correct format!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"sprintaway"},"content":"                try {","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"sprintaway"},"content":"                    return new AddCommand(new Deadline(fullCommand));","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"sprintaway"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"OOPS!!! Please use the correct date format!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.equals(\"event\")","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"sprintaway"},"content":"                || (fullCommand.startsWith(\"event\") \u0026\u0026 fullCommand.substring(6).isBlank())) {","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.equals(\"event\") || (fullCommand.startsWith(\"event\")","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"sprintaway"},"content":"                \u0026\u0026 fullCommand.substring(6).isBlank())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"sprintaway"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"sprintaway"},"content":"        } else if (fullCommand.startsWith(\"event\") \u0026\u0026 Character.isWhitespace(fullCommand.charAt(5))) {","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"sprintaway"},"content":"            if (!fullCommand.contains(\"/at\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"OOPS!!! Please use the correct format!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"sprintaway"},"content":"                try {","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"sprintaway"},"content":"                    return new AddCommand(new Event(fullCommand));","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"sprintaway"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"OOPS!!! Please use the correct date format!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"sprintaway"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"sprintaway"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"sprintaway"},"content":"        return null;","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":139}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.io.File;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":" * Storage class that is used to save and load files","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"    private File file;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     * Constructor of Storage class","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"     * @param filePath it was meant to be used as the file path, but I decided to hard code the path instead","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"        file \u003d new File(path);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"        assert file !\u003d null : \"File is null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"     * Loads /data/duke.txt and converts it to a command that is parsable, enters the commands line by line","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"     * @return ArrayList of tasks filled with tasks that were previously saved","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"    public static ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        String directory \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"        File directoryFolder \u003d new File(directory);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"        if (!directoryFolder.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"            directoryFolder.mkdir();","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"            Ui.showDirectoryCreation();","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"            Ui.showFileCreation();","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"sprintaway"},"content":"            FileReader filereader \u003d new FileReader(path);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"sprintaway"},"content":"            BufferedReader bufferedreader \u003d new BufferedReader(filereader);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"sprintaway"},"content":"            String line;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"sprintaway"},"content":"            Ui.showLoadSuccessful();","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"sprintaway"},"content":"            while ((line \u003d bufferedreader.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"sprintaway"},"content":"                Task toDo \u003d new ToDo(line.substring(0, 5) + line.substring(7));","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"sprintaway"},"content":"                if (line.startsWith(\"[T][X]\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"sprintaway"},"content":"                    tasks.add(toDo);","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"sprintaway"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"sprintaway"},"content":"                } else if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"sprintaway"},"content":"                    tasks.add(toDo);","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"sprintaway"},"content":"                    String substring \u003d line.substring(line.lastIndexOf(\"]\") + 1, line.lastIndexOf(\"(\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"sprintaway"},"content":"                    String substring1 \u003d line.substring(line.lastIndexOf(\":\")","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"sprintaway"},"content":"                            + 2, line.lastIndexOf(\")\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"sprintaway"},"content":"                    if (line.startsWith(\"[D][X]\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"sprintaway"},"content":"                        String tempDeadline \u003d \"deadline\"","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"sprintaway"},"content":"                                + substring","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"sprintaway"},"content":"                                + \"/by \"","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"sprintaway"},"content":"                                + Parser.parseLocalDate(substring1);","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"sprintaway"},"content":"                        tasks.add(new Deadline(tempDeadline));","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"sprintaway"},"content":"                        tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"sprintaway"},"content":"                    } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"sprintaway"},"content":"                        String tempDeadline \u003d \"deadline\"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"sprintaway"},"content":"                                + substring","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"sprintaway"},"content":"                                + \"/by \"","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"sprintaway"},"content":"                                + Parser.parseLocalDate(substring1);","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"sprintaway"},"content":"                        tasks.add(new Deadline(tempDeadline));","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"sprintaway"},"content":"                    } else if (line.startsWith(\"[E][X]\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"sprintaway"},"content":"                        String tempEvent \u003d \"event\"","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"sprintaway"},"content":"                                + substring","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"sprintaway"},"content":"                                + \"/at \"","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"sprintaway"},"content":"                                + Parser.parseLocalDate(substring1);","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"sprintaway"},"content":"                        tasks.add(new Event(tempEvent));","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"sprintaway"},"content":"                        tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"sprintaway"},"content":"                    } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"sprintaway"},"content":"                        String tempEvent \u003d \"event\"","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"sprintaway"},"content":"                                + substring","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"sprintaway"},"content":"                                + \"/at \"","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"sprintaway"},"content":"                                + Parser.parseLocalDate(substring1);","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"sprintaway"},"content":"                        tasks.add(new Event(tempEvent));","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"sprintaway"},"content":"            bufferedreader.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"sprintaway"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"sprintaway"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"sprintaway"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"sprintaway"},"content":"     * Saves the tasklist line by line in a duke.txt file","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"sprintaway"},"content":"     * @param taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"sprintaway"},"content":"    public static void saveFile(TaskList taskList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"sprintaway"},"content":"        String directory \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"sprintaway"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"sprintaway"},"content":"        File directoryFolder \u003d new File(directory);","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"sprintaway"},"content":"        if (!directoryFolder.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"sprintaway"},"content":"            Ui.showDirectoryCreation();","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"sprintaway"},"content":"            directoryFolder.mkdir();","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"sprintaway"},"content":"            FileWriter filewriter \u003d new FileWriter(path);","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"sprintaway"},"content":"            for (Task task : taskList.getArray()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"sprintaway"},"content":"                filewriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"sprintaway"},"content":"            filewriter.flush();","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"sprintaway"},"content":"            filewriter.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"sprintaway"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"sprintaway"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"sprintaway"},"content":"        Ui.showSaveSuccessful();","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":141}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":" * Deadline class that inherits task","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    protected String by \u003d description.substring(description.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    private DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    private LocalDate date \u003d LocalDate.parse(by, formatted);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * Constructor of Deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     * @param description what the task contains","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    // Adapted from","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"    // https://stackoverflow.com/questions/14316487/","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    // java-getting-a-substring-from-a-string-starting-after-a-particular-character","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"     * Returns the string representation of deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"     * @return string that is representation of the deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"        return \"[D]\" + super.toString().substring(0, 4) + getSubstring()","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"                + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"    // To return substring before \"/\"","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    // Adapted from","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"    // https://stackoverflow.com/questions/7683448/in-java-how-to-get-substring-from-a-string-till-a-character-c","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"     * Returns a string containing task to be done (ie. \"Go shopping\")","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"     * @return string containing task to be done","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"    private String getSubstring() {","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"        int index \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"            return description.substring(9, index);","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"        return null;","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":" * Event class that inherits task","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    protected String at \u003d description.substring(description.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    private DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    private LocalDate date \u003d LocalDate.parse(at, formatted);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * Constructor of Event","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     * @param description what the task contains","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    public Event(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     * Returns the string representation of event","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"     * @return string that is representation of the event","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"        return \"[E]\" + super.toString().substring(0, 4) + getSubstring()","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"                + \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"     * Returns a string containing task to be done (ie. \"Go shopping\")","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     * @return string containing task to be done","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    private String getSubstring() {","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"        int index \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"            return description.substring(6, index);","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"        return null;","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":" * Task class that contains types of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"     * Constructor of task and sets task to be not done","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"     * @param description initialises string description","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"     * Marks task with X if done and \" \" if not done","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"     * @return a status icon of \"X\" or \" \"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     * Returns the string of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     * @return","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     * Marks task as done","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"     * Marks task as not done","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":49}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":" * Event class that inherits task","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"     * Constructor of ToDo","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"     * @param description what the task contains","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"     * Returns the string representation of toDo","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"     * @return string that is representation of toDo","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"        return \"[T]\" + super.toString().substring(0, 4)","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"                + super.toString().substring(9);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":27}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.tasklist;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":" * TaskList class that contains arraylist of tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"     * Empty constructor of TaskList that initializes tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"     * Constructor that initializes tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"     * @param tasks takes in tasks and stores it here","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"     * Getter that gets tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"     * @return tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    public ArrayList\u003cTask\u003e getArray() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"     * Adds tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"     * @param task the task to be added to tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"     * Removes tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"     * @param integer the index of the item that is to be removed","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"    public void remove(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"        tasks.remove(integer - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"     * Returns the last task","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"     * @return the last task in the tasks arraylist","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"sprintaway"},"content":"    public Task latestTask() {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"sprintaway"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"sprintaway"},"content":"     * Returns the size of the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"sprintaway"},"content":"     * @return the size of the taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"sprintaway"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"sprintaway"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"sprintaway"},"content":"     * Gets the task indexed at integer","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"sprintaway"},"content":"     * @param integer gets the task indexed here","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"sprintaway"},"content":"     * @return the task indexed at integer","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"sprintaway"},"content":"    public Task getTask(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"sprintaway"},"content":"        return tasks.get(integer);","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"sprintaway"},"content":"     * Checks if the task array is empty","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"sprintaway"},"content":"     * @return true if the task array is empty","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"sprintaway"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"sprintaway"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"sprintaway"},"content":"     * Marks task indexed at integer to be done","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"sprintaway"},"content":"     * @param integer the task array index","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"sprintaway"},"content":"    public void markAsDone(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"sprintaway"},"content":"        tasks.get(integer - 1).markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"sprintaway"},"content":"     * Marks task indexed at integer to be not done","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"sprintaway"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"sprintaway"},"content":"     * @param integer the task array index","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"sprintaway"},"content":"    public void markAsNotDone(int integer) {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"sprintaway"},"content":"        tasks.get(integer - 1).markAsNotDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"sprintaway"},"content":"     * Creates a taskList containing tasks with the keyword string found inside","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"sprintaway"},"content":"     * @param string the keyword to be found in tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"sprintaway"},"content":"     * @return a taskList that contains tasks with the string found inside","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"sprintaway"},"content":"    public TaskList findTasks(String string) {","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"sprintaway"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"sprintaway"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"sprintaway"},"content":"            if (task.toString().contains(string)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"sprintaway"},"content":"                taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"sprintaway"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":127}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":" * Ui class responsible for handling Ui and error messages","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    private PrintStream out;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"     * Constructor of Ui","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    public Ui() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"        out \u003d System.out;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"     * Shows Greetings Ui","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    public String showGreetings() {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"        String greetings \u003d \"_______________________________________\\nHello! I\u0027m Duke\"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"                + \"\\nWhat can I do for you?\\n_______________________________________\";","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"        return greetings;","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"     * Shows Bye Ui","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains bye message","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    public static String showBye() {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"        return (\"_______________________________________\\nBye. Hope to see you again soon!\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"                + \"_______________________________________\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"     * Shows message when directory is created","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"    public static void showDirectoryCreation() {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"        System.out.println(\"Creating new /data/ directory folder.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"     * Shows message when file is created","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"    public static void showFileCreation() {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"        System.out.println(\"Creating new duke.txt file under /data/ directory folder.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"     * Shows successful load","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"sprintaway"},"content":"    public static void showLoadSuccessful() {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"sprintaway"},"content":"        System.out.println(\"Loaded successfully!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"sprintaway"},"content":"     * Shows successful save","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"sprintaway"},"content":"    public static void showSaveSuccessful() {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"sprintaway"},"content":"        System.out.println(\"Saved successfully!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"sprintaway"},"content":"     * Shows the tasks in taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the tasks to be shown","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains tasks in list","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"sprintaway"},"content":"    public static String showTasksInList(TaskList taskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"sprintaway"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"sprintaway"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"sprintaway"},"content":"            stringBuilder.append(i + 1 + \". \" + taskList.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"sprintaway"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"sprintaway"},"content":"     * Shows the error message","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"sprintaway"},"content":"     * @param message the error message","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains error message","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"sprintaway"},"content":"    public String showError(String message) {","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"sprintaway"},"content":"        return message;","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"sprintaway"},"content":"     * Shows when task is added","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the taskList that the task is added to","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains task added","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"sprintaway"},"content":"    public String showTaskAdded(TaskList taskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"sprintaway"},"content":"        return (\"Got it. I\u0027ve added this task:\")","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"sprintaway"},"content":"                + \"\\n\" + (taskList.latestTask() + \"\\nNow you have \" + taskList.getTaskListSize()","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"sprintaway"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"sprintaway"},"content":"     * Shows when task is deleted","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the taskList that the task is deleted from","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"sprintaway"},"content":"     * @param deletedTask the task which is deleted","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"sprintaway"},"content":"     * @return string that shows task deleted","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"sprintaway"},"content":"    public String showTaskDeleted(TaskList taskList, Task deletedTask) {","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"sprintaway"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"sprintaway"},"content":"                + deletedTask) +","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"sprintaway"},"content":"                (\"\\nNow you have \" + (taskList.getTaskListSize()) + \" tasks in the list.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"sprintaway"},"content":"     * Shows when task is marked as done","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the taskList that the task is marked from","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"sprintaway"},"content":"     * @param integer the index of the task which is marked","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"sprintaway"},"content":"     * @return string that shows task marked as done","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"sprintaway"},"content":"    public String showMarkAsDone(TaskList taskList, int integer) {","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"sprintaway"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"sprintaway"},"content":"                + taskList.getTask(integer - 1).toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"sprintaway"},"content":"     * Shows when task is marked as not done","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the taskList that the task is marked from","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"sprintaway"},"content":"     * @param integer the index of the task which is marked as not done","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"sprintaway"},"content":"     * @return string that shows task marked as not done","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"sprintaway"},"content":"    public String showMarkAsNotDone(TaskList taskList, int integer) {","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"sprintaway"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":138,"author":{"gitId":"sprintaway"},"content":"                + taskList.getTask(integer - 1).toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"sprintaway"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"sprintaway"},"content":"     * Displays Ui when task is found","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"sprintaway"},"content":"     * @param taskList the tasklist to be displayed","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"sprintaway"},"content":"     * @return string that contains tasks found","lastModifiedDate":"2022-08-29"},{"lineNumber":145,"author":{"gitId":"sprintaway"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"sprintaway"},"content":"    public String showTasksFound(TaskList taskList) {","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"sprintaway"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"sprintaway"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"sprintaway"},"content":"            stringBuilder.append(i + 1 + \". \" + taskList.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":150,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"sprintaway"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":153}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"        \u003cHBox fx:id\u003d\"speechBubble\" minHeight\u003d\"-Infinity\" styleClass\u003d\"speech-bubble\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"                \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog\" text\u003d\"Label\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" styleClass\u003d\"picture\" fitHeight\u003d\"130.0\" fitWidth\u003d\"130.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"dialog-container\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"sprintaway":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    public void parseDateTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"        assertEquals(Parser.parseLocalDate(\"Aug 06 2015\"), \"2015-08-06\");","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":16}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    public void addToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"        Deadline deadline \u003d new Deadline(\"deadline die /by 2018-08-09\");","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"        assertEquals(\"[D][ ] die (by: Aug 09 2018)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    public void markToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        Deadline deadline \u003d new Deadline(\"deadline die /by 2018-08-09\");","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        deadline.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"        assertEquals(\"[D][X] die (by: Aug 09 2018)\", deadline.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":22}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"public class EventTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    public void addToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"        Event event \u003d new Event(\"event die /at 2018-08-09\");","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"        assertEquals(\"[E][ ] die (at: Aug 09 2018)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    public void markToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        Event event \u003d new Event(\"event die /at 2018-08-09\");","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        event.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"        assertEquals(\"[E][X] die (at: Aug 09 2018)\", event.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":22}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"    public void addToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"        ToDo toDo \u003d new ToDo(\"todo asking\");","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"        assertEquals(\"[T][ ] asking\", toDo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    public void markToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        ToDo toDo \u003d new ToDo(\"todo asking\");","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        toDo.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"        assertEquals(\"[T][X] asking\", toDo.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"sprintaway":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"todo Cry over homework","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"event meet friends /at Sunday, 12pm","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"event Go to school /at Monday, 8am","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"deadline Finish CS2103 iP Week 2 /by next Friday","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"mark 3","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"mark 4","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"unmark 3","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"sprintaway":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"javac  -cp ..\\src\\java.main\\java -Xlint:none -d ..\\bin ..\\src\\java.main\\java\\*.java","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sprintaway":2,"-":19}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_a06876","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"3. After that, locate the `src/java.main/java/Duke.java` file, right-click it, and choose `Run Duke.java.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e .merge_file_a11804","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sprintaway":4,"-":24}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"[T][ ] ry","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"[D][ ] die (by: Sep 09 2019)","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"[T][X] cry","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"[D][ ] kill soeul (by: May 05 2015)","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"[T][X] ur","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"[E][ ] crpao (at: Aug 06 2022)","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"[D][ ] cry (by: Aug 08 2018)","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"sprintaway":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package main.java;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    // Adapted from","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    // https://stackoverflow.com/questions/14316487/java-getting-a-substring-from-a-string-starting-after-a-particular-character","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    protected String by \u003d description.substring(description.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    private DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    private LocalDate date \u003d LocalDate.parse(by, formatted);","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"        return \"[D]\" + super.toString().substring(0, 4) + getSubstring()","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"                + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"    // To return substring before \"/\"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    // Adapted from","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    // https://stackoverflow.com/questions/7683448/in-java-how-to-get-substring-from-a-string-till-a-character-c","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    private String getSubstring() {","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"        int index \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"        if (index !\u003d - 1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"            return description.substring(9, index);","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"        return null;","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"    /*","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"        return \"D \" + \"| \" + getStringStatusIcon() + \" | \" + getSubstring() + \"|\" + by + \"\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"    */","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package main.java;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"import java.io.*;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    public static void main(String[] args) throws DukeException, IOException, FileNotFoundException {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"        String greetings \u003d \"_________________________________________________\\nHello! I\u0027m Duke\"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"                + \"\\nWhat can I do for you?\\n_________________________________________________\";","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"        System.out.println(greetings);","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"        loadFile();","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"        String echo \u003d sc.nextLine();","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"        while (!Objects.equals(echo, \"bye\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"            if (Objects.equals(echo, \"list\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"                if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! No tasks available!\");","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"                        System.out.println(i + 1 + \". \" + tasks.get(i).toString());","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"                // checks if it starts with mark, has a space after mark, and are all numbers after the space","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.length() \u003e\u003d 5 \u0026\u0026 (echo.startsWith(\"mark\") \u0026\u0026","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"sprintaway"},"content":"                    (Character.isWhitespace(echo.charAt(4))) \u0026\u0026","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"sprintaway"},"content":"                    echo.substring(5).chars().allMatch(Character::isDigit))) {","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"sprintaway"},"content":"                int number \u003d parseInt(echo.substring(5));","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"sprintaway"},"content":"                if (number \u003e tasks.size() || number \u003c\u003d 0) {","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"sprintaway"},"content":"                    tasks.get(number - 1).markAsDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"sprintaway"},"content":"                            + tasks.get(number - 1).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"sprintaway"},"content":"                //int number \u003d Character.getNumericValue(echo.charAt(5));","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"sprintaway"},"content":"                //similar logic as above","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.length() \u003e\u003d 7 \u0026\u0026 (echo.startsWith(\"unmark\") \u0026\u0026","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"sprintaway"},"content":"                    (Character.isWhitespace(echo.charAt(6))) \u0026\u0026","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"sprintaway"},"content":"                    echo.substring(7).chars().allMatch(Character::isDigit))) {","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"sprintaway"},"content":"                int number \u003d parseInt(echo.substring(7));","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"sprintaway"},"content":"                if (number \u003e tasks.size() || number \u003c\u003d 0) {","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"sprintaway"},"content":"                    tasks.get(number - 1).markAsNotDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"sprintaway"},"content":"                            + tasks.get(number - 1).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"sprintaway"},"content":"                //int number \u003d Character.getNumericValue(echo.charAt(5));","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.length() \u003e\u003d 7 \u0026\u0026 (echo.startsWith(\"delete\") \u0026\u0026","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"sprintaway"},"content":"                    (Character.isWhitespace(echo.charAt(6))) \u0026\u0026","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"sprintaway"},"content":"                    echo.substring(7).chars().allMatch(Character::isDigit))) {","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"sprintaway"},"content":"                int number \u003d parseInt(echo.substring(7));","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"sprintaway"},"content":"                if (number \u003e tasks.size() || number \u003c\u003d 0) {","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! Task number does not exist.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"sprintaway"},"content":"                            + tasks.get(number - 1).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"sprintaway"},"content":"                    tasks.remove(number - 1);","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.equals(\"todo\") || (echo.startsWith(\"todo\") \u0026\u0026 echo.substring(5).isBlank())) {","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.startsWith(\"todo\") \u0026\u0026 Character.isWhitespace(echo.charAt(4))) {","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"sprintaway"},"content":"                    tasks.add(new ToDo(echo));","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(tasks.get(tasks.size() - 1) + \"\\nNow you have \" + tasks.size() +","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"sprintaway"},"content":"                            \" tasks in the list.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.equals(\"deadline\") || (echo.startsWith(\"deadline\")","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"sprintaway"},"content":"                    \u0026\u0026 echo.substring(9).isBlank())) {","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.startsWith(\"deadline\") \u0026\u0026 Character.isWhitespace(echo.charAt(8))) {","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"sprintaway"},"content":"                if (!echo.contains(\"/by\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please use the correct format!\");","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"sprintaway"},"content":"                    try {","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"sprintaway"},"content":"                        tasks.add(new Deadline(echo));","lastModifiedDate":"2022-08-13"},{"lineNumber":91,"author":{"gitId":"sprintaway"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"sprintaway"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please use the correct date format!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(tasks.get(tasks.size() - 1) + \"\\nNow you have \" + tasks.size() +","lastModifiedDate":"2022-08-14"},{"lineNumber":97,"author":{"gitId":"sprintaway"},"content":"                            \" tasks in the list.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":98,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-13"},{"lineNumber":99,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.equals(\"event\") || (echo.startsWith(\"event\") \u0026\u0026 echo.substring(6).isBlank())) {","lastModifiedDate":"2022-08-14"},{"lineNumber":100,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":101,"author":{"gitId":"sprintaway"},"content":"            } else if (echo.startsWith(\"event\") \u0026\u0026 Character.isWhitespace(echo.charAt(5))) {","lastModifiedDate":"2022-08-14"},{"lineNumber":102,"author":{"gitId":"sprintaway"},"content":"                if (!echo.contains(\"/at\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":103,"author":{"gitId":"sprintaway"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please use the correct format!\");","lastModifiedDate":"2022-08-14"},{"lineNumber":104,"author":{"gitId":"sprintaway"},"content":"                } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":105,"author":{"gitId":"sprintaway"},"content":"                    try {","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"sprintaway"},"content":"                        tasks.add(new Event(echo));","lastModifiedDate":"2022-08-13"},{"lineNumber":107,"author":{"gitId":"sprintaway"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"sprintaway"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please use the correct date format!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"sprintaway"},"content":"                    System.out.println(tasks.get(tasks.size() - 1) + \"\\nNow you have \"","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"sprintaway"},"content":"                            + tasks.size() +","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"sprintaway"},"content":"                            \" tasks in the list.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":115,"author":{"gitId":"sprintaway"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":116,"author":{"gitId":"sprintaway"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-14"},{"lineNumber":117,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":118,"author":{"gitId":"sprintaway"},"content":"            echo \u003d sc.nextLine();","lastModifiedDate":"2022-08-13"},{"lineNumber":119,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":120,"author":{"gitId":"sprintaway"},"content":"        System.out.println(\"_________________________________________________\\nBye. Hope to see you again soon!\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"sprintaway"},"content":"                + \"_________________________________________________\\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"sprintaway"},"content":"        saveFile();","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":125,"author":{"gitId":"sprintaway"},"content":"    public static void saveFile() {","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"sprintaway"},"content":"        String directory \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"sprintaway"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"sprintaway"},"content":"        File directoryFolder \u003d new File(directory);","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":130,"author":{"gitId":"sprintaway"},"content":"        if (!directoryFolder.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"sprintaway"},"content":"            System.out.println(\"Creating new /data/ directory folder.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"sprintaway"},"content":"            directoryFolder.mkdir();","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":134,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"sprintaway"},"content":"            FileWriter filewriter \u003d new FileWriter(path);","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"sprintaway"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"sprintaway"},"content":"                filewriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":140,"author":{"gitId":"sprintaway"},"content":"            filewriter.flush();","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"sprintaway"},"content":"            filewriter.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"sprintaway"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":143,"author":{"gitId":"sprintaway"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-20"},{"lineNumber":144,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":145,"author":{"gitId":"sprintaway"},"content":"        System.out.println(\"Saved successfully!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":146,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"sprintaway"},"content":"    public static void loadFile() throws IOException {","lastModifiedDate":"2022-08-20"},{"lineNumber":149,"author":{"gitId":"sprintaway"},"content":"        String directory \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"sprintaway"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2022-08-20"},{"lineNumber":151,"author":{"gitId":"sprintaway"},"content":"        File directoryFolder \u003d new File(directory);","lastModifiedDate":"2022-08-20"},{"lineNumber":152,"author":{"gitId":"sprintaway"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-08-20"},{"lineNumber":153,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":154,"author":{"gitId":"sprintaway"},"content":"        if (!directoryFolder.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":155,"author":{"gitId":"sprintaway"},"content":"            System.out.println(\"Creating new /data/ directory folder.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":156,"author":{"gitId":"sprintaway"},"content":"            directoryFolder.mkdir();","lastModifiedDate":"2022-08-20"},{"lineNumber":157,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":158,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":159,"author":{"gitId":"sprintaway"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":160,"author":{"gitId":"sprintaway"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-20"},{"lineNumber":161,"author":{"gitId":"sprintaway"},"content":"            System.out.println(\"Creating new duke.txt file under /data/ directory folder.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":162,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":163,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":164,"author":{"gitId":"sprintaway"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":165,"author":{"gitId":"sprintaway"},"content":"            FileReader filereader \u003d new FileReader(path);","lastModifiedDate":"2022-08-20"},{"lineNumber":166,"author":{"gitId":"sprintaway"},"content":"            BufferedReader bufferedreader \u003d new BufferedReader(filereader);","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"sprintaway"},"content":"            String line;","lastModifiedDate":"2022-08-20"},{"lineNumber":168,"author":{"gitId":"sprintaway"},"content":"            System.out.println(\"Loaded successfully!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":169,"author":{"gitId":"sprintaway"},"content":"            while ((line \u003d bufferedreader.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-20"},{"lineNumber":170,"author":{"gitId":"sprintaway"},"content":"                if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":171,"author":{"gitId":"sprintaway"},"content":"                    tasks.add(new ToDo(line.substring(0, 5) + line.substring(7)));","lastModifiedDate":"2022-08-20"},{"lineNumber":172,"author":{"gitId":"sprintaway"},"content":"                    if (line.startsWith(\"[T][X]\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":173,"author":{"gitId":"sprintaway"},"content":"                        tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":174,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":175,"author":{"gitId":"sprintaway"},"content":"                } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":176,"author":{"gitId":"sprintaway"},"content":"                    String tempDeadline \u003d \"deadline\"","lastModifiedDate":"2022-08-20"},{"lineNumber":177,"author":{"gitId":"sprintaway"},"content":"                            + line.substring(line.lastIndexOf(\"]\") + 1, line.lastIndexOf(\"(\"))","lastModifiedDate":"2022-08-20"},{"lineNumber":178,"author":{"gitId":"sprintaway"},"content":"                            + \"/by \" + parseLocalDate(line.substring(line.lastIndexOf(\":\") + 2, line.lastIndexOf(\")\")));","lastModifiedDate":"2022-08-20"},{"lineNumber":179,"author":{"gitId":"sprintaway"},"content":"                    tasks.add(new Deadline(tempDeadline));","lastModifiedDate":"2022-08-20"},{"lineNumber":180,"author":{"gitId":"sprintaway"},"content":"                    if (line.startsWith(\"[D][X]\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":181,"author":{"gitId":"sprintaway"},"content":"                        tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":182,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":183,"author":{"gitId":"sprintaway"},"content":"                } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":184,"author":{"gitId":"sprintaway"},"content":"                    String tempEvent \u003d \"event\"","lastModifiedDate":"2022-08-20"},{"lineNumber":185,"author":{"gitId":"sprintaway"},"content":"                            + line.substring(line.lastIndexOf(\"]\") + 1, line.lastIndexOf(\"(\"))","lastModifiedDate":"2022-08-20"},{"lineNumber":186,"author":{"gitId":"sprintaway"},"content":"                            + \"/at \" + parseLocalDate(line.substring(line.lastIndexOf(\":\") + 2, line.lastIndexOf(\")\")));","lastModifiedDate":"2022-08-20"},{"lineNumber":187,"author":{"gitId":"sprintaway"},"content":"                    tasks.add(new Event(tempEvent));","lastModifiedDate":"2022-08-20"},{"lineNumber":188,"author":{"gitId":"sprintaway"},"content":"                    if (line.startsWith(\"[E][X]\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"sprintaway"},"content":"                        tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":190,"author":{"gitId":"sprintaway"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":191,"author":{"gitId":"sprintaway"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":192,"author":{"gitId":"sprintaway"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":193,"author":{"gitId":"sprintaway"},"content":"            bufferedreader.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":194,"author":{"gitId":"sprintaway"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":195,"author":{"gitId":"sprintaway"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-20"},{"lineNumber":196,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":199,"author":{"gitId":"sprintaway"},"content":"    public static String parseLocalDate(String string) {","lastModifiedDate":"2022-08-20"},{"lineNumber":200,"author":{"gitId":"sprintaway"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-20"},{"lineNumber":201,"author":{"gitId":"sprintaway"},"content":"        LocalDate localdate \u003d LocalDate.parse(string, format);","lastModifiedDate":"2022-08-20"},{"lineNumber":202,"author":{"gitId":"sprintaway"},"content":"        return localdate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sprintaway":200,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package main.java;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"    public DukeException(String string) {","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"        super(string);","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"sprintaway":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package main.java;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"    public Event(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    protected String at \u003d description.substring(description.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    private DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    private LocalDate date \u003d LocalDate.parse(at, formatted);","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"            return \"[E]\" + super.toString().substring(0, 4) + getSubstring()","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"                    +  \"(at: \" +  date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"    private String getSubstring() {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"        int index \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"        if (index !\u003d - 1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"            return description.substring(6, index);","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"        return null;","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"    /*","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"        return \"D \" + \"| \" + getStringStatusIcon() + \" | \" + getSubstring() + \"|\" + at + \"\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"    */","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package main.java;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"    /*","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"sprintaway"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"sprintaway"},"content":"        return description;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"sprintaway"},"content":"    public String getStringStatusIcon() {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"sprintaway"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"sprintaway"},"content":"    */","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"sprintaway"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"sprintaway"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"sprintaway"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"sprintaway"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":38}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"package main.java;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"sprintaway"},"content":"        return \"[T]\" + super.toString().substring(0, 4)","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"sprintaway"},"content":"                + super.toString().substring(9);","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"sprintaway"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"sprintaway"},"content":"    /*","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"sprintaway"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"sprintaway"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"sprintaway"},"content":"        return \"T \" + \"| \" + getStringStatusIcon() + \" | \" + super.toString().substring(9) + \"\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"sprintaway"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"sprintaway"},"content":"    */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"sprintaway"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"sprintaway":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sprintaway"},"content":"todo Cry over homework","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"sprintaway"},"content":"event meet friends /at Sunday, 12pm","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"sprintaway"},"content":"event Go to school /at Monday, 8am","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"sprintaway"},"content":"deadline Finish CS2103 iP Week 2 /by next Friday","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"sprintaway"},"content":"mark 3","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"sprintaway"},"content":"mark 4","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"unmark 3","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"sprintaway"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"sprintaway"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"sprintaway":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"sprintaway"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sprintaway"},"content":"javac  -cp ..\\src\\java.main\\java -Xlint:none -d ..\\bin ..\\src\\java.main\\java\\*.java","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sprintaway":2,"-":19}}]

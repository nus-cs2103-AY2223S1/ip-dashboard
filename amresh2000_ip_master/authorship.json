[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"[T][ ] read book","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"[T][ ] return book","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"[T][ ] go library","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"[D][ ] go sch (by: by sunday)","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"[E][ ] project meeting  (at: Mon 2-4pm)","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"[T][X] go meet rueben","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"[T][ ] go back home","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":" * Dealine Class to represent a class that will store Deadline object that extends from Tasks Class","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * Method to convert deadline String to LocalDate format","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     * @return boolean true value if converted","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"    public boolean convertToDate() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"            LocalDate localDate \u003d LocalDate.parse(this.by, formatter);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"            this.date \u003d localDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"            this.by \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"        } catch(Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Main class that runs Duke Bot","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"    protected Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    protected Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"    protected Parser parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"     * Constructor to initialize Duke object","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     * @param filePath Location where data is and will be stored","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"        tasks \u003d new TaskList(storage.loadFile(), storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"     * Main logic and sequence of project","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"        ui.greeting();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"        parser.parseFunc();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        ui.farewell();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"    public static void echo(String userInput) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"        System.out.println(userInput);","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amresh2000":37,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"amresh2000":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Event class that extends from Task","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    protected String duration;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"     * Constructor for Event object","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"     * @param description Description of Event","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"     * @param duration Duration to be completed in","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"    public Event(String description, String duration) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" * Parser Class to represent a class that will hold all the Parse methods","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     * Constructor for Parser Class to create Parse object","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     * @param tasks TaskList object","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * Method that runs to parse userInput","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public void parseFunc() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"                tasks.list();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"                int inputTaskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"                tasks.mark(inputTaskIndex);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"                int inputTaskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"                tasks.unmark(inputTaskIndex);","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"                int inputTaskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"                tasks.deleteTask(inputTaskIndex);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"            if(userInput.split(\" \", 2)[0].equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"                String search \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"                tasks.find(search);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"                tasks.userInputCheck(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"                if (userInput.split(\" \", 2)[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"                    String taskInput \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"                    tasks.todo(taskInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"                if (userInput.split(\" \", 2)[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"                    String taskInput \u003d userInput.split(\" \", 2)[1].split(\"/\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"                    String by \u003d userInput.split(\"/\", 2)[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"                    tasks.deadline(taskInput, by);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"                if (userInput.split(\" \", 2)[0].equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"                    String taskInput \u003d userInput.split(\" \", 2)[1].split(\"/\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"                    String duration \u003d userInput.split(\"/\", 2)[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"                    tasks.event(taskInput, duration);","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"            tasks.addTask(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":87}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.io.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":" * Class that creates Storage object to do file manipulation","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    protected String filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    protected ArrayList\u003cTask\u003e storeLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"     * Constructor that creates Storage object","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * @param filePath Location where file is stored","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"     * Loads file at the beginning of the program","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"     * @return ArrayList\u003cTask\u003e that will return when method runs","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"            File myObj \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"No tasks at the moment\");","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"                    printFileContents(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"                    System.out.println(\"File not found\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"        return storeLists;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"     * Prints File Contents onto console","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"     * @param filePath Location where file is stored","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"     * @throws FileNotFoundException Throws exception if file is not available","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"    public void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"            String line;","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"                renderStringsAsTasks(line);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"     * Method that parses strings and converts them to Tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"     * @param taskStr String that will be passed into method to convert","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"    public void renderStringsAsTasks(String taskStr) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"        String taskType \u003d String.valueOf(taskStr.charAt(1));","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"        String taskDescription \u003d taskStr.split(\"] \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"            Todo t \u003d new Todo(taskDescription);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"            storeLists.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"            String duration \u003d taskDescription.split(\"y: \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"            taskDescription \u003d taskDescription.split(\"\\\\(\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"            Deadline d \u003d new Deadline(taskDescription, duration);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"            storeLists.add(d);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"            String duration \u003d taskDescription.split(\"t: \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"            taskDescription \u003d taskDescription.split(\"\\\\(\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"            Event e \u003d new Event(taskDescription, duration);","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"            storeLists.add(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"     * To add to file when tasks are added","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"     * @param textToAppend Text that is required to be added","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"amresh2000"},"content":"    public void appendToFile(String textToAppend) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"            File newFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"            if(newFile.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"                fw.write(textToAppend);","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"                fw.write(\"\\n\" + textToAppend);","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"     * To edit Text in file primarily to mark or unmark tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"     * @param newText New text to replace old text","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"     * @param oldText Old text that is meant to be replaced","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"    public void editTextInFile(String newText, String oldText) {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"            Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"            List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"            for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"                if (fileContent.get(i).equals(oldText)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"                    fileContent.set(i, newText);","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"            Files.write(path, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"     * To remove line when tasks is required to be removed","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"     * @param textToRemove Text to be removed","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"    public void removeLineInText(String textToRemove) {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"amresh2000"},"content":"            File inFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"            if (!inFile.isFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"Parameter is not an existing file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"                return;","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"            //Construct the new file that will later be renamed to the original filename.","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"amresh2000"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"amresh2000"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"amresh2000"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileWriter(tempFile));","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"            String line \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"amresh2000"},"content":"            //Read from the original file and write to the new","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"amresh2000"},"content":"            //unless content matches data to be removed.","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"amresh2000"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"amresh2000"},"content":"                if (!line.trim().equals(textToRemove)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"amresh2000"},"content":"                    pw.println(line);","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"amresh2000"},"content":"                    pw.flush();","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"amresh2000"},"content":"            pw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"amresh2000"},"content":"            br.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"amresh2000"},"content":"            //Delete the original file","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"amresh2000"},"content":"            if (!inFile.delete()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"Could not delete file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"amresh2000"},"content":"                return;","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"amresh2000"},"content":"            //Rename the new file to the filename the original file had.","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"amresh2000"},"content":"            if (!tempFile.renameTo(inFile))","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"Could not rename file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"amresh2000"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":178}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Task class that Deadline, Todo and Event extends from","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"     * Constructor that initializes Task object","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"     * @param description Descripion of task","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"     * Return icon to state whether task is completed","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * @return Return string to signify marked or not marked","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"     * Alters isDone field to signify marked","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"\\t[X] \" + this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"     * Alters isDone field to signify unmarked","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"\\t[ ] \" + this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" * TaskList Class to represent a class that will hold all the Task methods","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"    protected ArrayList\u003cTask\u003e storeLists;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    protected Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     * Overload constructor to initialize TaskList Object","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"     * @param storage Storage object passed into constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     * Overload constructor to initialize TaskList Object","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"     * @param storeList ArrayList\u003cTask\u003e passed into constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"     * @param storage Storage object passed into constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    public TaskList(ArrayList\u003cTask\u003e storeList, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        this.storeLists \u003d storeList;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"     * Method to add task to list","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"     * @param userInput User\u0027s Input that will be added to storeList","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"    public void addTask(String userInput) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"        Task t \u003d new Task(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"        storeLists.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"added: \" + t.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(t.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"     * Method to remove task from list","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"     * @param taskIndex Index of task that is required to be removed","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"\\t\" + storeLists.get(taskIndex).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"        storage.removeLineInText(storeLists.get(taskIndex).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"        storeLists.remove(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Now you have \" + storeLists.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"     * Method to list all the tasks in storeList","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"    public void list() {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"        for (int i\u003d0; i \u003c storeLists.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"//            System.out.printf(\"%i. [%c] %s\", i + 1, storeList.get(i).getStatusIcon(), storeList.get(i).description);","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"            System.out.println(i + 1 + \". \" + storeLists.get(i).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"     * To mark tasks as marked","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"     * @param search String that needs to be searched","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"    public void find(String search) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"        for(int i \u003d 0; i \u003c storeLists.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"            if(storeLists.get(i).description.contains(search)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"                count++;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"                if(count \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"                System.out.println(i + 1 + \". \" + storeLists.get(i).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"        if(count \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"            System.out.println(\"No tasks match the search term\");","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"    ","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"    public void mark(int taskIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"        String oldText \u003d storeLists.get(taskIndex).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"amresh2000"},"content":"        storeLists.get(taskIndex).markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"        String newText \u003d storeLists.get(taskIndex).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"        storage.editTextInFile(newText, oldText);","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"amresh2000"},"content":"     * To unmark tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"     * @param taskIndex Index of tasks to be changed to unmark","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"    public void unmark(int taskIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"        String oldText \u003d storeLists.get(taskIndex).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"        storeLists.get(taskIndex).markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"        String newText \u003d storeLists.get(taskIndex).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"        storage.editTextInFile(newText, oldText);","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"     * To allow user to create a Todo task","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"     * @throws DukeException Throws a Exception specific to the program","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"    public void todo(String userInput) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"        Todo todo \u003d new Todo(userInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        storeLists.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"\\t\" + todo.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Now you have \" + storeLists.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(todo.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"     * To allow user to create a Deadline Task","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"     * @param by Due date for the deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"    public void deadline(String userInput, String by) {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"        Deadline deadline \u003d new Deadline(userInput, by);","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"        dateProcessor(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"        storeLists.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"\\t\" + deadline.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Now you have \" + storeLists.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(deadline.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"amresh2000"},"content":"     * To allow user to create an Event task","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"     * @param duration Duration given to the user to complete within","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"    public void event(String userInput, String duration) {","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"        Event event \u003d new Event(userInput, duration);","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"        storeLists.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"\\t\" + event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Now you have \" + storeLists.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"amresh2000"},"content":"     * Method to check for errors for the input that is given","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"amresh2000"},"content":"     * @throws DukeException Error thrown that is specific to Duke","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"amresh2000"},"content":"    public void userInputCheck(String userInput) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"amresh2000"},"content":"        String firstCommand \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"amresh2000"},"content":"        if (!firstCommand.equals(\"todo\") \u0026\u0026 !firstCommand.equals(\"deadline\") \u0026\u0026 !firstCommand.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"amresh2000"},"content":"        if (userInput.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a \" + firstCommand + \" cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"amresh2000"},"content":"        if((firstCommand.equals(\"deadline\") || firstCommand.equals(\"event\")) \u0026\u0026 userInput.split(\"/\", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The time due or needed cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"amresh2000"},"content":"     * Method that activates convertToDate method","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"amresh2000"},"content":"     * @param d Deadline object passed in as parameter","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"amresh2000"},"content":"    public static void dateProcessor(Deadline d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"amresh2000"},"content":"        d.convertToDate();","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":178}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Todo class that extends from Task","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"     * Constructor for Todo object","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"     * @param description Description of Todo","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Class to handle Ui interactions","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"    protected String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     * Method to run at the start of running program","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    public void greeting() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        String greet \u003d \"Hello! I\u0027m Duke \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"                + \"What can I do for you? \\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"        System.out.println(greet);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"     * Method to run at the end of running program","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"    public void farewell() {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        System.out.println(bye);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":31}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"import duke.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    public void convertToDate_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"        assertEquals(true, new Deadline(\"read book\", \"2019-12-01\").convertToDate());","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"        assertEquals(true, new Deadline(\"return book\", \"2020-01-01\").convertToDate());","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"        assertEquals(true, new Deadline(\"go to school\", \"2020-02-01\").convertToDate());","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"amresh2000":14}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"import duke.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"        assertEquals(\" \", new Task(\"read book\").getStatusIcon());","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"        assertEquals(\" \", new Task(\"return book\").getStatusIcon());","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"amresh2000":12}}]

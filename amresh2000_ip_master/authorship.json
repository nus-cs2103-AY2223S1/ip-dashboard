[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"checkstyle {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amresh2000":20,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"[E][ ] project meeting  (at: Mon 2-4pm)","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"[T][X] go meet rueben","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"[T][X] go back to hall","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"[T][ ] rueben","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"[D][ ] go beach  (by: Sunday)","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"[E][ ] go to drink water  (at: Tuesday 2-4pm)","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"[T][ ] use computer","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"[T][ ] go where","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"[D][ ] drink coke  (by: Sunday)","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"[T][ ] bye bye","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"[T][ ] go where","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"amresh2000":12}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":" * Dealine Class to represent a class that will store Deadline object that extends from Tasks Class","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"     * Method to convert deadline String to LocalDate format","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"     * @return boolean true value if converted","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    public boolean convertToDate() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"            LocalDate localDate \u003d LocalDate.parse(this.by, formatter);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"            this.date \u003d localDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"            this.by \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"        } catch(Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"        if(obj \u003d\u003d this) {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"            Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"            return super.equals(deadline) \u0026\u0026 this.by.equals(deadline.by);","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"        return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":51}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    private Label text;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        text \u003d l;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"amresh2000":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":" * Main class that runs Duke Bot","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    protected Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"    protected Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    protected Parser parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    protected String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"     * Constructor to initialize Duke object","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"    public Duke() {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        tasks \u003d new TaskList(storage.loadFile(), storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"        parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"     * Main logic and sequence of project","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"        ui.greeting();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"        parser.parseFunc();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"        ui.farewell();","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"     * Base Layout of GUI","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"     * @param stage Window that is being created","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"        stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"amresh2000"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"amresh2000"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"            userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        });","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-09-01"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"            userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"        });","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"     * Iteration 1:","lastModifiedDate":"2022-09-01"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-09-01"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-09-01"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-09-01"},{"lineNumber":138,"author":{"gitId":"amresh2000"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-09-01"},{"lineNumber":139,"author":{"gitId":"amresh2000"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-09-01"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"        return textToAdd;","lastModifiedDate":"2022-09-01"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":146,"author":{"gitId":"amresh2000"},"content":"     * Iteration 2:","lastModifiedDate":"2022-09-01"},{"lineNumber":147,"author":{"gitId":"amresh2000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":148,"author":{"gitId":"amresh2000"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-01"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":153,"author":{"gitId":"amresh2000"},"content":"        String printStatement \u003d parser.guiParseFunc(userText.getText());","lastModifiedDate":"2022-09-01"},{"lineNumber":154,"author":{"gitId":"amresh2000"},"content":"        Label dukeResult \u003d new Label(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":155,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":156,"author":{"gitId":"amresh2000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"amresh2000"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-01"},{"lineNumber":158,"author":{"gitId":"amresh2000"},"content":"                DialogBox.getDukeDialog(dukeResult, new ImageView(duke))","lastModifiedDate":"2022-09-01"},{"lineNumber":159,"author":{"gitId":"amresh2000"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":160,"author":{"gitId":"amresh2000"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":161,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":162,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":163,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"amresh2000"},"content":"    public static void echo(String userInput) {","lastModifiedDate":"2022-08-17"},{"lineNumber":166,"author":{"gitId":"amresh2000"},"content":"        System.out.println(userInput);","lastModifiedDate":"2022-08-17"},{"lineNumber":167,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amresh2000":167,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"amresh2000":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Event class that extends from Task","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    protected String duration;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"     * Constructor for Event object","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"     * @param description Description of Event","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"     * @param duration Duration to be completed in","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"    public Event(String description, String duration) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"        if(obj \u003d\u003d this) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"            return super.equals(event) \u0026\u0026 this.duration.equals(event.duration);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":36}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"amresh2000":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" * Parser Class to represent a class that will hold all the Parse methods","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"    protected Ui ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     * Constructor for Parser Class to create Parse object","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"     * @param tasks TaskList object","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"     * Method that runs to parse userInput when using CLI","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    public void parseFunc() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        String printStatement;","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"                printStatement \u003d tasks.list();","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"                ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"                int inputTaskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"                printStatement \u003d tasks.mark(inputTaskIndex);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"                ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"                int inputTaskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"                printStatement \u003d tasks.unmark(inputTaskIndex);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"                ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"                int inputTaskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"                printStatement \u003d tasks.deleteTask(inputTaskIndex);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"                ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"            if(userInput.split(\" \", 2)[0].equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"                String search \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"                printStatement \u003d tasks.find(search);","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"                ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"                tasks.userInputCheck(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"                if (userInput.split(\" \", 2)[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"                    String taskInput \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"                    printStatement \u003d tasks.todo(taskInput);","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"                    ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"                if (userInput.split(\" \", 2)[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"                    String taskInput \u003d userInput.split(\" \", 2)[1].split(\"/\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"                    String by \u003d userInput.split(\"/\", 2)[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"                    printStatement \u003d tasks.deadline(taskInput, by);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"                    ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"                if (userInput.split(\" \", 2)[0].equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"                    String taskInput \u003d userInput.split(\" \", 2)[1].split(\"/\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"                    String duration \u003d userInput.split(\"/\", 2)[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"                    printStatement \u003d tasks.event(taskInput, duration);","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"                    ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"                continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"amresh2000"},"content":"            printStatement \u003d tasks.addTask(userInput);","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"            ui.print(printStatement);","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"     * Method that runs to parse UserInput when GUI is being used","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"     * @param userInput userInput that is parsed","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"     * @return String that will be printed on the GUI","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"    public String guiParseFunc(String userInput) {","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"            return tasks.list();","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"        if (userInput.split(\" \", 2)[0].equals(\"mark\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"            int inputTaskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"            return tasks.mark(inputTaskIndex);","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"        if (userInput.split(\" \", 2)[0].equals(\"unmark\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"            int inputTaskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"            return tasks.unmark(inputTaskIndex);","lastModifiedDate":"2022-09-01"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"        if (userInput.split(\" \", 2)[0].equals(\"delete\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"            int inputTaskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"            return tasks.deleteTask(inputTaskIndex);","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"        if(userInput.split(\" \", 2)[0].equals(\"find\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"            String search \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"            return tasks.find(search);","lastModifiedDate":"2022-09-01"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"            tasks.userInputCheck(userInput);","lastModifiedDate":"2022-09-01"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"todo\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"                String taskInput \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-09-01"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"                return tasks.todo(taskInput);","lastModifiedDate":"2022-09-01"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"deadline\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":138,"author":{"gitId":"amresh2000"},"content":"                String taskInput \u003d userInput.split(\" \", 2)[1].split(\"/\", 2)[0];","lastModifiedDate":"2022-09-01"},{"lineNumber":139,"author":{"gitId":"amresh2000"},"content":"                String by \u003d userInput.split(\"/\", 2)[1].split(\" \", 2)[1];","lastModifiedDate":"2022-09-01"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"                return tasks.deadline(taskInput, by);","lastModifiedDate":"2022-09-01"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"            if (userInput.split(\" \", 2)[0].equals(\"event\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"                String taskInput \u003d userInput.split(\" \", 2)[1].split(\"/\", 2)[0];","lastModifiedDate":"2022-09-01"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"                String duration \u003d userInput.split(\"/\", 2)[1].split(\" \", 2)[1];","lastModifiedDate":"2022-09-01"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"                return tasks.event(taskInput, duration);","lastModifiedDate":"2022-09-01"},{"lineNumber":146,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":147,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":148,"author":{"gitId":"amresh2000"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"amresh2000"},"content":"            return err.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"        return tasks.addTask(userInput);","lastModifiedDate":"2022-09-01"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":153,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":154,"author":{"gitId":"amresh2000"},"content":"    private static int getTaskIndex(String userInput) {","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"amresh2000"},"content":"        return Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":159,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":159}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.io.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":" * Class that creates Storage object to do file manipulation","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    protected String filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    protected ArrayList\u003cTask\u003e storeLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"     * Constructor that creates Storage object","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * @param filePath Location where file is stored","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"     * Loads file at the beginning of the program","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"     * @return ArrayList\u003cTask\u003e that will return when method runs","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"            File myObj \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"No tasks at the moment\");","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"                    printFileContents(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"                    System.out.println(\"File not found\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"        return storeLists;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"     * Prints File Contents onto console","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"     * @param filePath Location where file is stored","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"     * @throws FileNotFoundException Throws exception if file is not available","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"    public void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"            String line;","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"                renderStringsAsTasks(line);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"     * Method that parses strings and converts them to Tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"     * @param taskStr String that will be passed into method to convert","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"    public void renderStringsAsTasks(String taskStr) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"        String taskType \u003d String.valueOf(taskStr.charAt(1));","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"        String taskDescription \u003d taskStr.split(\"] \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"            Todo t \u003d new Todo(taskDescription);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"            storeLists.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"            String duration \u003d taskDescription.split(\"y: \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"            taskDescription \u003d taskDescription.split(\"\\\\(\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"            Deadline d \u003d new Deadline(taskDescription, duration);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"            storeLists.add(d);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"            String duration \u003d taskDescription.split(\"t: \", 2)[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"            taskDescription \u003d taskDescription.split(\"\\\\(\", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"            Event e \u003d new Event(taskDescription, duration);","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"            storeLists.add(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"     * To add to file when tasks are added","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"     * @param textToAppend Text that is required to be added","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"amresh2000"},"content":"    public void appendToFile(String textToAppend) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"            File newFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"            if(newFile.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"                fw.write(textToAppend);","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"                fw.write(\"\\n\" + textToAppend);","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"     * To edit Text in file primarily to mark or unmark tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"     * @param newText New text to replace old text","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"     * @param oldText Old text that is meant to be replaced","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"    public void editTextInFile(String newText, String oldText) {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"            Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"            List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"            for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"                if (fileContent.get(i).equals(oldText)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"                    fileContent.set(i, newText);","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"            Files.write(path, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"     * To remove line when tasks is required to be removed","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"     * @param textToRemove Text to be removed","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"    public void removeLineInText(String textToRemove) {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"amresh2000"},"content":"            File inFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"            if (!inFile.isFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"Parameter is not an existing file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"                return;","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"            //Construct the new file that will later be renamed to the original filename.","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"amresh2000"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"amresh2000"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"amresh2000"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileWriter(tempFile));","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"            String line \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"amresh2000"},"content":"            //Read from the original file and write to the new","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"amresh2000"},"content":"            //unless content matches data to be removed.","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"amresh2000"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"amresh2000"},"content":"                if(line.trim().equals(textToRemove)) {","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"amresh2000"},"content":"                    continue;","lastModifiedDate":"2022-09-01"},{"lineNumber":158,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-09-01"},{"lineNumber":159,"author":{"gitId":"amresh2000"},"content":"                if (!line.trim().equals(textToRemove)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"amresh2000"},"content":"                    pw.println(line);","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"amresh2000"},"content":"                    pw.flush();","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"amresh2000"},"content":"            pw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"amresh2000"},"content":"            br.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"amresh2000"},"content":"            //Delete the original file","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"amresh2000"},"content":"            if (!inFile.delete()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"Could not delete file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"amresh2000"},"content":"                return;","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"amresh2000"},"content":"            //Rename the new file to the filename the original file had.","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"amresh2000"},"content":"            if (!tempFile.renameTo(inFile))","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"amresh2000"},"content":"                System.out.println(\"Could not rename file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"amresh2000"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"amresh2000"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"amresh2000"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":181}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Task class that Deadline, Todo and Event extends from","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"     * Constructor that initializes Task object","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"     * @param description Description of task","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"     * Return icon to state whether task is completed","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * @return Return string to signify marked or not marked","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"     * Alters isDone field to signify marked","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"     * @return Return string to show it is done","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"    public String markAsDone() {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t[X] \" + this.description;","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"     * Alters isDone field to signify unmarked","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"     * @return Return string to show it is not done","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"    public String markAsNotDone() {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\\t[ ] \" + this.description;","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"            Task task \u003d (Task) obj;","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"            return task.description.equals(this.description);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"        return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":63}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" * TaskList Class to represent a class that will hold all the Task methods","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"    protected ArrayList\u003cTask\u003e storeTasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    protected Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"    protected String printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     * Overload constructor to initialize TaskList Object","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"     * @param storage Storage object passed into constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"     * Overload constructor to initialize TaskList Object","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"     * @param storeTasks ArrayList\u003cTask\u003e passed into constructor","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"     * @param storage Storage object passed into constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    public TaskList(ArrayList\u003cTask\u003e storeTasks, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"        assert storeTasks !\u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"        this.storeTasks \u003d storeTasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"     * Method to add task to list","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"     * @param userInput User\u0027s Input that will be added to storeList","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"    public String addTask(String userInput) {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        Task t \u003d new Task(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"        storeTasks.add(t);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(t.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        return \"added: \" + t.description;","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"     * Method to remove task from list","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"     * @param taskIndex Index of task that is required to be removed","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"        String printStatement \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"\\t\" + storeTasks.get(taskIndex).toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"        storage.removeLineInText(storeTasks.get(taskIndex).toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"        storeTasks.remove(taskIndex);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"Now you have \" + storeTasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"     * Method to list all the tasks in storeList","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"     * @return Print Statement String","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"    public String list() {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"        printStatement \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"        for (int i \u003d 0; i \u003c storeTasks.size(); i++) {","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"            printStatement +\u003d i + 1 + \". \" + storeTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"     * To find tasks that match Search string","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"     * @param search String that needs to be searched","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"     * @return String containing searchResults formatted for printing","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"amresh2000"},"content":"    public String find(String search) {","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"amresh2000"},"content":"        for(int i \u003d 0; i \u003c storeTasks.size(); i++) {","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"            if(storeTasks.get(i).description.contains(search)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"                count++;","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"                if(count \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"                    printStatement \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"                printStatement +\u003d i + 1 + \". \" + storeTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"        if(count \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"amresh2000"},"content":"            printStatement \u003d \"No tasks match the search term\";","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"amresh2000"},"content":"     * To mark tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"amresh2000"},"content":"     * @param taskIndex Index of tasks to be changed to unmark","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"     * @return PrintStatement String","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"    public String mark(int taskIndex) {","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"        String oldText \u003d storeTasks.get(taskIndex).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"        printStatement \u003d storeTasks.get(taskIndex).markAsDone();","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"        String newText \u003d storeTasks.get(taskIndex).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"        storage.editTextInFile(newText, oldText);","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"     * To unmark tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"     * @param taskIndex Index of tasks to be changed to unmark","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"     * @return PrintStatement String","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"    public String unmark(int taskIndex) {","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"        String oldText \u003d storeTasks.get(taskIndex).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"        printStatement \u003d storeTasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"        String newText \u003d storeTasks.get(taskIndex).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        storage.editTextInFile(newText, oldText);","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"     * To allow user to create a Todo task","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"     * @return printStatement","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"     * @throws DukeException Throws an Exception specific to the program","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"    public String todo(String userInput) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"        Todo todo \u003d new Todo(userInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"        if(duplicateCheck(todo)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"            return \"Duplicate item entered\";","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"        storeTasks.add(todo);","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"        printStatement \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"\\t\" + todo.toString() + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"Now you have \" + storeTasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(todo.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":139,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"     * To allow user to create a Deadline Task","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"     * @param by Due date for the deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"amresh2000"},"content":"     * @return printStatement","lastModifiedDate":"2022-09-01"},{"lineNumber":147,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"amresh2000"},"content":"    public String deadline(String userInput, String by) {","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"amresh2000"},"content":"        Deadline deadline \u003d new Deadline(userInput, by);","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"        dateProcessor(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"        if(duplicateCheck(deadline)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"            return \"Duplicate item entered\";","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"amresh2000"},"content":"        storeTasks.add(deadline);","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"amresh2000"},"content":"        printStatement \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":156,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"\\t\" + deadline.toString() + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"Now you have \" + storeTasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(deadline.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":160,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"amresh2000"},"content":"     * To allow user to create an Event task","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"amresh2000"},"content":"     * @param duration Duration given to the user to complete within","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"amresh2000"},"content":"     * @return printStatement","lastModifiedDate":"2022-09-01"},{"lineNumber":167,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"amresh2000"},"content":"    public String event(String userInput, String duration) {","lastModifiedDate":"2022-09-01"},{"lineNumber":169,"author":{"gitId":"amresh2000"},"content":"        Event event \u003d new Event(userInput, duration);","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"amresh2000"},"content":"        if(duplicateCheck(event)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":171,"author":{"gitId":"amresh2000"},"content":"            return \"Duplicate item entered\";","lastModifiedDate":"2022-09-09"},{"lineNumber":172,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":173,"author":{"gitId":"amresh2000"},"content":"        storeTasks.add(event);","lastModifiedDate":"2022-09-08"},{"lineNumber":174,"author":{"gitId":"amresh2000"},"content":"        printStatement \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":175,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"\\t\" + event.toString() + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":176,"author":{"gitId":"amresh2000"},"content":"        printStatement +\u003d \"Now you have \" + storeTasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":177,"author":{"gitId":"amresh2000"},"content":"        storage.appendToFile(event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"amresh2000"},"content":"        return printStatement;","lastModifiedDate":"2022-09-01"},{"lineNumber":179,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"amresh2000"},"content":"     * Method to check for errors for the input that is given","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"amresh2000"},"content":"     * @param userInput Input given by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"amresh2000"},"content":"     * @throws DukeException Error thrown that is specific to Duke","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":186,"author":{"gitId":"amresh2000"},"content":"    public void userInputCheck(String userInput) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"amresh2000"},"content":"        String firstCommand \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":188,"author":{"gitId":"amresh2000"},"content":"        if (!firstCommand.equals(\"todo\") \u0026\u0026 !firstCommand.equals(\"deadline\") \u0026\u0026 !firstCommand.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"amresh2000"},"content":"        if (userInput.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":192,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a \" + firstCommand + \" cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":193,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":194,"author":{"gitId":"amresh2000"},"content":"        if((firstCommand.equals(\"deadline\") || firstCommand.equals(\"event\")) \u0026\u0026 userInput.split(\"/\", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":195,"author":{"gitId":"amresh2000"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The time due or needed cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":196,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":199,"author":{"gitId":"amresh2000"},"content":"    public boolean duplicateCheck(Task task) {","lastModifiedDate":"2022-09-09"},{"lineNumber":200,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"check\");","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"amresh2000"},"content":"        for(int i \u003d 0; i \u003c storeTasks.size(); i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":202,"author":{"gitId":"amresh2000"},"content":"            if(storeTasks.get(i).equals(task)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":203,"author":{"gitId":"amresh2000"},"content":"                return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":204,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":205,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":206,"author":{"gitId":"amresh2000"},"content":"        return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":207,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":208,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":209,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":210,"author":{"gitId":"amresh2000"},"content":"     * Method that activates convertToDate method","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"amresh2000"},"content":"     * @param d Deadline object passed in as parameter","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"amresh2000"},"content":"    public static void dateProcessor(Deadline d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":214,"author":{"gitId":"amresh2000"},"content":"        d.convertToDate();","lastModifiedDate":"2022-08-24"},{"lineNumber":215,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":216,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":217,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":217}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Todo class that extends from Task","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" * @author amresh A0235398R","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"     * Constructor for Todo object","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"     * @param description Description of Todo","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"        if(obj \u003d\u003d this) {","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"            Todo todo \u003d (Todo) obj;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"            return super.equals(todo);","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"        return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"amresh2000":33}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":" * Class to handle Ui interactions","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"    protected String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"     * Method to run at the start of running program","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    public void greeting() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"        String greet \u003d \"Hello! I\u0027m Duke \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"                + \"What can I do for you? \\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"        System.out.println(greet);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public void print(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        System.out.println(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"     * Method to run at the end of running program","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    public void farewell() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"        System.out.println(bye);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"amresh2000":35}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"import duke.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"    public void convertToDate_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"        assertEquals(true, new Deadline(\"read book\", \"2019-12-01\").convertToDate());","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"        assertEquals(true, new Deadline(\"return book\", \"2020-01-01\").convertToDate());","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"        assertEquals(true, new Deadline(\"go to school\", \"2020-02-01\").convertToDate());","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"amresh2000":14}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"import duke.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"        assertEquals(\" \", new Task(\"read book\").getStatusIcon());","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"        assertEquals(\" \", new Task(\"return book\").getStatusIcon());","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"amresh2000":12}}]

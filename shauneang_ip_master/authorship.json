[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shauneang":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shauneang":18,"-":42}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":" * Abstraction of all commands possibly received on duke,","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":" * and executes all commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"public class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"    static final String EXITWORD \u003d \"bye\";","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"    private FileLoaderSaver storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"    private String fullCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"    private CommandTypes commandType;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"    // enum of all command types","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    public enum CommandTypes {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"        LIST,","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"        TODO,","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"        EVENT,","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"        MARK,","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"        UNMARK,","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        DELETE,","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"        FIND,","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"     * Constructor for command objects","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"     * @param commandType type of command this command with execute","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"     * @param fullCommand full user input command in String","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"    public Command (CommandTypes commandType, String fullCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"     * Executes tasks based on the command type of the command","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"     * @param taskList list containing all the current tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"     * @param storage duke.FileLoaderSaver object for saving tasks after creating, deletion or manipulation","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"    public String execute(TaskList taskList, FileLoaderSaver storage) throws IOException, Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"        switch (commandType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"            case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"                response +\u003d taskList.listTasks();","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"            case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"                response +\u003d addToDo(fullCommand) + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"                response +\u003d taskList.displayListSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(taskList.createTxtFile());","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"shauneang"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"shauneang"},"content":"                response +\u003d addDeadline(fullCommand) + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"shauneang"},"content":"                response +\u003d taskList.displayListSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(taskList.createTxtFile());","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"shauneang"},"content":"            case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"shauneang"},"content":"                response +\u003d addEvent(fullCommand) + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"shauneang"},"content":"                response +\u003d taskList.displayListSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(taskList.createTxtFile());","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"shauneang"},"content":"            case MARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"shauneang"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"shauneang"},"content":"                response +\u003d changeMark(fullCommand);","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(taskList.createTxtFile());","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"shauneang"},"content":"            case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"shauneang"},"content":"                response +\u003d deleteTask(fullCommand);","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"shauneang"},"content":"                response +\u003d taskList.displayListSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(taskList.createTxtFile());","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"shauneang"},"content":"            case FIND:","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"shauneang"},"content":"                response +\u003d findTask(fullCommand);","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"shauneang"},"content":"            default:","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"shauneang"},"content":"                response \u003d \"I am sorry, I do not comprehend such commands. Please Try again...\";","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"shauneang"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"shauneang"},"content":"     * Changes isCompleted of the task according to index given","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"shauneang"},"content":"     * @param command change mark command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"shauneang"},"content":"    private String changeMark(String command) throws Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"shauneang"},"content":"        String[] splitComm \u003d command.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"shauneang"},"content":"        String action \u003d splitComm[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"shauneang"},"content":"        int index \u003d Integer.parseInt(splitComm[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"shauneang"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"shauneang"},"content":"            return taskList.complete(index);","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"shauneang"},"content":"        } else if (action.equals(\"unmark\")){","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"shauneang"},"content":"            return taskList.incomplete(index);","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"shauneang"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"Input Error.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":127,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"shauneang"},"content":"     * Deletes task according to index given","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"shauneang"},"content":"     * @param command delete task command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"shauneang"},"content":"    private String deleteTask(String command) {","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"shauneang"},"content":"        String[] splitComm \u003d command.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"shauneang"},"content":"        int index \u003d Integer.parseInt(splitComm[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"shauneang"},"content":"        return taskList.delete(index);","lastModifiedDate":"2022-09-01"},{"lineNumber":140,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"shauneang"},"content":"     * Creates a duke.task.ToDos instance and adds it to duke.ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"shauneang"},"content":"     * @param command todo command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"shauneang"},"content":"    private String addToDo(String command) throws Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"shauneang"},"content":"        if (!command.matches(\"todo \\\\S.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"shauneang"},"content":"        String name \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"shauneang"},"content":"        return taskList.addTask(new ToDos(name));","lastModifiedDate":"2022-09-01"},{"lineNumber":155,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"shauneang"},"content":"     * Creates a duke.task.Deadline instance and adds it to duke.ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"shauneang"},"content":"     * @param command deadline command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"shauneang"},"content":"    private String addDeadline(String command) throws Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":164,"author":{"gitId":"shauneang"},"content":"        if (!command.matches(\"deadline \\\\S.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"shauneang"},"content":"        } else if (!command.contains(\"/by\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description is missing a deadline.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"shauneang"},"content":"        String details \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"shauneang"},"content":"        String name \u003d details.split(\" /by \")[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"shauneang"},"content":"        String deadline \u003d details.split(\" /by \")[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"shauneang"},"content":"        return taskList.addTask(new Deadline(name, deadline));","lastModifiedDate":"2022-09-01"},{"lineNumber":175,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"shauneang"},"content":"     * Creates a duke.task.Event instance and adds it to duke.ToDoList","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"shauneang"},"content":"     * @param command event command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"shauneang"},"content":"    private String addEvent(String command) throws Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":184,"author":{"gitId":"shauneang"},"content":"        if (!command.matches(\"event \\\\S.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":186,"author":{"gitId":"shauneang"},"content":"        } else if (!command.contains(\"/at\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description is missing a time.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":188,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":189,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":190,"author":{"gitId":"shauneang"},"content":"        String details \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"shauneang"},"content":"        String name \u003d details.split(\" /at \")[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"shauneang"},"content":"        String time \u003d details.split(\" /at \")[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"shauneang"},"content":"        return taskList.addTask(new Event(name, time));","lastModifiedDate":"2022-09-01"},{"lineNumber":195,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":196,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":198,"author":{"gitId":"shauneang"},"content":"     * Finds tasks whose name matches search","lastModifiedDate":"2022-08-26"},{"lineNumber":199,"author":{"gitId":"shauneang"},"content":"     * @param command","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-26"},{"lineNumber":201,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":202,"author":{"gitId":"shauneang"},"content":"    private String findTask(String command) throws Exception {","lastModifiedDate":"2022-09-01"},{"lineNumber":203,"author":{"gitId":"shauneang"},"content":"        String searchString \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"shauneang"},"content":"        return taskList.findTasks(searchString);","lastModifiedDate":"2022-09-01"},{"lineNumber":205,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":206,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":207,"author":{"gitId":"shauneang"},"content":"    public static class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":208,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":209,"author":{"gitId":"shauneang"},"content":"        @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":210,"author":{"gitId":"shauneang"},"content":"        private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":211,"author":{"gitId":"shauneang"},"content":"        @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":212,"author":{"gitId":"shauneang"},"content":"        private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":213,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":214,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":215,"author":{"gitId":"shauneang"},"content":"        private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":216,"author":{"gitId":"shauneang"},"content":"            Circle clip \u003d new Circle(img.getWidth()/3, img.getWidth()/3,50);","lastModifiedDate":"2022-09-01"},{"lineNumber":217,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":218,"author":{"gitId":"shauneang"},"content":"            try {","lastModifiedDate":"2022-09-01"},{"lineNumber":219,"author":{"gitId":"shauneang"},"content":"                FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":220,"author":{"gitId":"shauneang"},"content":"                fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":221,"author":{"gitId":"shauneang"},"content":"                fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":222,"author":{"gitId":"shauneang"},"content":"                fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":223,"author":{"gitId":"shauneang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":224,"author":{"gitId":"shauneang"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":225,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":226,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":227,"author":{"gitId":"shauneang"},"content":"            dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":228,"author":{"gitId":"shauneang"},"content":"            displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":229,"author":{"gitId":"shauneang"},"content":"            displayPicture.setClip(clip);","lastModifiedDate":"2022-09-01"},{"lineNumber":230,"author":{"gitId":"shauneang"},"content":"            this.setBackground(new Background(new BackgroundFill(Color.AQUA, null, null)));","lastModifiedDate":"2022-09-01"},{"lineNumber":231,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":232,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":233,"author":{"gitId":"shauneang"},"content":"        /**","lastModifiedDate":"2022-09-01"},{"lineNumber":234,"author":{"gitId":"shauneang"},"content":"         * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":235,"author":{"gitId":"shauneang"},"content":"         */","lastModifiedDate":"2022-09-01"},{"lineNumber":236,"author":{"gitId":"shauneang"},"content":"        private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":237,"author":{"gitId":"shauneang"},"content":"            ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":238,"author":{"gitId":"shauneang"},"content":"            Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":239,"author":{"gitId":"shauneang"},"content":"            getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":240,"author":{"gitId":"shauneang"},"content":"            setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":241,"author":{"gitId":"shauneang"},"content":"            this.setBackground(new Background(new BackgroundFill(Color.DEEPPINK, null, null)));","lastModifiedDate":"2022-09-01"},{"lineNumber":242,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":243,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":244,"author":{"gitId":"shauneang"},"content":"        public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":245,"author":{"gitId":"shauneang"},"content":"            return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":246,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":247,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":248,"author":{"gitId":"shauneang"},"content":"        public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":249,"author":{"gitId":"shauneang"},"content":"            var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":250,"author":{"gitId":"shauneang"},"content":"            db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":251,"author":{"gitId":"shauneang"},"content":"            return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":252,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":253,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":254,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":254}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" * Main duke.Duke class where duke program is ran","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"public class Duke {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    private FileLoaderSaver storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"        return textToAdd;","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        String response;","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"        String fullCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"            fullCommand \u003d input;","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"            response \u003d c.execute(taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"        } catch (InputMismatchException exception) {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"            return \"Error: please only input String commands.\";","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"            return \"Index specified out of range, please try again...\";","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"            return exception.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"     * duke.Duke Constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"     * @param filePath path to the saved todolist txt file if available","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"        storage \u003d new FileLoaderSaver(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"            taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":65}},{"path":"src/main/java/duke/FileLoaderSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":" * duke.FileLoaderSaver class loads and saves a given String of code into a txt file in path","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"public class  FileLoaderSaver {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     * Constructs duke.FileLoaderSaver object","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"     * @param filePath path to saving and loading location","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"    public FileLoaderSaver(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"        this.filePath \u003d Path.of(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * Returns list of saved tasks in String to be decoded","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     * @return list of saved tasks in String","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    public List\u003cString\u003e loadFile() throws IOException{","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        //Find existing toDoList","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        if (!Files.exists(filePath))","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"        {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        List\u003cString\u003e txtFile \u003d Files.readAllLines(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"        return txtFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"     * Saves file into a new txtFile at a path","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"     * @param txtFile String of text to write into the text file","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"    public void writeToFile(String txtFile) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath.toString())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"            fw.write(txtFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"shauneang":49}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import duke.controller.Main;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shauneang":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" * duke.Parser class helps to interpret command Strings and returns a duke.Command object with type of command user wants","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"     * Returns a duke.Command object based on the command given by user input","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"     * @param command User Input","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"     * @return duke.Command object with type of command user wants","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    public static Command parse(String command) throws Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.LIST, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"todo\")) { // create todos","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.TODO, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"deadline\")) { // create deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.DEADLINE, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"event\")) { // create event","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.EVENT, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"mark [0-9]+\")){ // mark","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.MARK, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"unmark [0-9]+\")) { // unmark","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.UNMARK, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"delete [0-9]+\")) { // delete","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.DELETE, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"find\")) { // find","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.FIND, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"        else {","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"I am sorry, I do not comprehend such commands. Please Try again...\");","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     * Returns a duke.Command object based on the command given by user input","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"     * @param command User Input","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"     * @return duke.Command object with type of command user wants","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"    public static Command parseFromTxtFile(String command) throws Exception {","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.LIST, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"todo\")) { // create todos","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.TODO, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"deadline\")) { // create deadline","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.DEADLINE, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"event\")) { // create event","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.EVENT, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"mark [0-9]+\")){ // mark","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.MARK, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"unmark [0-9]+\")) { // unmark","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.UNMARK, command);","lastModifiedDate":"2022-09-07"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"delete [0-9]+\")) { // delete","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.DELETE, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"find\")) { // find","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.FIND, command);","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"        else {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"I am sorry, I do not comprehend such commands. Please Try again...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":" * duke.ToDoList class manages all the tasks created by user","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     * Creates empty duke.ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     * Creates duke.ToDoList based on saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"     * @param txtFile List of Strings representing the tasks saved","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     * @throws Exception when adding task from file fails","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    TaskList(List\u003cString\u003e txtFile) throws Exception {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"        addTaskFromFile(txtFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"    /** ","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"     * Sets isComplete status of task at index to be complete","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"     * @param index index of task in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"    public String complete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"        if (index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"        return taskList.get(index).mark();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    /** Sets isComplete status of task at index to be incomplete","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"     * @param index index of task in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"    public String incomplete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"        if (index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"        return taskList.get(index).unmark();","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"     *  Adds task to todoList","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"     * @param task task to be added to toDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task;","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"     * Displays all tasks in toDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"    public String listTasks() {","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"        if (taskList.size() \u003c 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"            return \"You don\u0027t have any pending tasks.\";","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"            if (currentTask !\u003d null){","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"shauneang"},"content":"                response +\u003d String.format(\"%d. %s\\n\", i + 1, currentTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"shauneang"},"content":"        assert taskList.size() \u003e\u003d 0 : \"Task list size is negative\";","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"shauneang"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"shauneang"},"content":"     * Deletes a duke.task.Task","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"shauneang"},"content":"     * @param index index to delete","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"shauneang"},"content":"     * @Throws IndexOutOfBoundsException","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"shauneang"},"content":"    public String delete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"shauneang"},"content":"        assert (index \u003c taskList.size() \u0026\u0026 index \u003e\u003d0): \"index needs to be within bounds of list\";","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"shauneang"},"content":"        if (index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"shauneang"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"shauneang"},"content":"        else {","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"shauneang"},"content":"            Task tempTask \u003d taskList.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"shauneang"},"content":"            taskList.remove(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"shauneang"},"content":"            return \"Noted. I\u0027ve removed this task:/n\" + tempTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"shauneang"},"content":"     * Loads all the saved tasks into list","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"shauneang"},"content":"     * @param txtFile list of tasks in String ","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"shauneang"},"content":"    private void addTaskFromFile(List\u003cString\u003e txtFile) throws Exception {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"shauneang"},"content":"        if (txtFile.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"shauneang"},"content":"            return;","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"shauneang"},"content":"        for (String line : txtFile) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"shauneang"},"content":"            Task task \u003d createTaskFromString(line);","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"shauneang"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"shauneang"},"content":"                throw new Exception(\"Unable to load task\");","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"shauneang"},"content":"            taskList.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"shauneang"},"content":"    public Task createTaskFromString(String task) {","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"shauneang"},"content":"        String[] details \u003d task.split(\" # \");","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"shauneang"},"content":"        String taskType \u003d details[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"shauneang"},"content":"        boolean isComplete \u003d Boolean.parseBoolean(details[1]);","lastModifiedDate":"2022-09-07"},{"lineNumber":126,"author":{"gitId":"shauneang"},"content":"        String taskName \u003d details[2];","lastModifiedDate":"2022-09-07"},{"lineNumber":127,"author":{"gitId":"shauneang"},"content":"        String eventInfo \u003d details.length \u003e 3 ? details[3] : \"\";","lastModifiedDate":"2022-09-07"},{"lineNumber":128,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":129,"author":{"gitId":"shauneang"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"shauneang"},"content":"            case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"shauneang"},"content":"                return new ToDos(taskName, isComplete);","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"shauneang"},"content":"            case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"shauneang"},"content":"                return new Deadline(taskName, eventInfo, isComplete);","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"shauneang"},"content":"            case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"shauneang"},"content":"                return new Event(taskName, eventInfo, isComplete);","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"shauneang"},"content":"            default:","lastModifiedDate":"2022-09-07"},{"lineNumber":137,"author":{"gitId":"shauneang"},"content":"                return null;","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"shauneang"},"content":"    ","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"shauneang"},"content":"    /** Returns todolist formatted for saving in duke.Duke.txt file in hard disk","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"shauneang"},"content":"     * @return String of tasks in todolist","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"shauneang"},"content":"    public String createTxtFile() {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"shauneang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"shauneang"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"shauneang"},"content":"            if (t instanceof ToDos) {","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"shauneang"},"content":"                ToDos td \u003d (ToDos) t;","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"shauneang"},"content":"                result +\u003d String.format(\"T # %b # %s\\n\", td.getStatus(), td.getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"shauneang"},"content":"            } ","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"shauneang"},"content":"            else if (t instanceof Deadline){","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"shauneang"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"shauneang"},"content":"                result +\u003d String.format(\"D # %b # %s # %s\\n\", d.getStatus(), d.getName(), d.getDeadline());","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"shauneang"},"content":"            else if (t instanceof Event) {","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"shauneang"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"shauneang"},"content":"                result +\u003d String.format(\"E # %b # %s # %s\\n\", e.getStatus(), e.getName(), e.getTime());","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"shauneang"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"shauneang"},"content":"     * Prints number of tasks in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"shauneang"},"content":"    public String displayListSize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":168,"author":{"gitId":"shauneang"},"content":"        return String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2022-09-01"},{"lineNumber":169,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"shauneang"},"content":"     * Searches for searchString by iterating through all the names of the tasks in toDoList","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"shauneang"},"content":"     * @param searchString","lastModifiedDate":"2022-08-26"},{"lineNumber":174,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":175,"author":{"gitId":"shauneang"},"content":"    public String findTasks(String searchString) {","lastModifiedDate":"2022-09-01"},{"lineNumber":176,"author":{"gitId":"shauneang"},"content":"        int findCount \u003d 0;","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"shauneang"},"content":"        String response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":178,"author":{"gitId":"shauneang"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"shauneang"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"shauneang"},"content":"            if (currentTask.nameContains(searchString)){","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"shauneang"},"content":"                findCount++;","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"shauneang"},"content":"                response +\u003d String.format(\"%d. %s\\n\", findCount, currentTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":183,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"shauneang"},"content":"        if (findCount \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"shauneang"},"content":"            response \u003d String.format(\"No tasks were found matching: %s\\n\", searchString);","lastModifiedDate":"2022-09-01"},{"lineNumber":188,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"shauneang"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":190,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shauneang":191}},{"path":"src/main/java/duke/controller/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke.controller;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"    private Duke duke \u003d new Duke(\"/Users/shaune/Desktop/NUS/CS2103T/Duke.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shauneang":32}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke.controller;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import duke.Command;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"        greet();","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"        if (input.equals(\"quit\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"            Platform.exit();","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"        assert !response.isBlank() : \"Please key in a non-empty command\";","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"        response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"                Command.DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"                Command.DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"     * Greets user","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"    private void greet() {","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"                Command.DialogBox.getDukeDialog(\"Hello I\u0027m DUKE!\\nWhat can I do for you?\", dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shauneang":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" * duke.task.Deadline class creates deadlines","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    LocalDate deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"     * duke.task.Deadline constructor for task creation by user","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * duke.task.Deadline constructor for task loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"     * @param status completed status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    public Deadline(String name, String deadline, boolean status) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        super(name, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"     * String format for displaying deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"     * @return string format for displaying deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     * Returns deadline of the duke.task.Deadline object","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"     * @return deadline to string in YYYY-MM-DD format","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"        return deadline.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" * duke.task.Event class creates event","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    LocalDate time;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"     * duke.task.Event constructor for task creation by user","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"     * @param time deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * duke.task.Event constructor for task loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     * @param time deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"     * @param status completed status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    public Event(String name, String time, boolean status) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        super(name, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"     * String format for displaying event task","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"     * @return string format for displaying event task","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[E] %s (at: %s)\", super.toString(), time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     * Returns deadline of the duke.task.Deadline object","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"     * @return deadline to string in YYYY-MM-DD format","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"        return time.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" * Abstract duke.task.Task class encapsulates all the different types of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"    private String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    private Boolean isCompleted \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     * duke.task.Task constructor for tasks created by user","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"     * duke.task.Task constructor for tasks loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"     * @param isCompleted Completion status of task","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"    public Task(String name, boolean isCompleted) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"     * Changes isCompleted to done","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    public String mark() {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        String message;","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"        if (isCompleted \u003d\u003d true) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\t This task is already marked:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"            isCompleted \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\tGood Job on completing the task! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"        return message + \"\\n\" + toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     * Changes isCompleted to not done","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"    public String unmark() {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"        String message;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"        if (isCompleted \u003d\u003d false) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\t This task is already unmarked:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"            isCompleted \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\tOK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"        return message + \"\\n\" + toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"     * Returns name of task and its status to be used when list is called","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"     * @return Returns String of name of task formatted with status showing","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"        String mark \u003d isCompleted ? \"X\" : \" \";","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[%s] %s\", mark, name);","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"     * Returns completion status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"     * @return completion status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"        return isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"     * Returns name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"     * @return name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"shauneang"},"content":"    public String getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"shauneang"},"content":"        return name;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"shauneang"},"content":"     * Returns true if task name contains the searchString","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"shauneang"},"content":"     * @param searchString","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"shauneang"},"content":"     * @return true if task name contains searchString","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"shauneang"},"content":"    public boolean nameContains (String searchString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"shauneang"},"content":"        return name.contains(searchString);","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shauneang":91}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" * duke.task.ToDos class creates todos","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"public class ToDos extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"     * Creates duke.task.ToDos from user input","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    public ToDos(String name) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     * duke.task.ToDos constructor for task loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     * @param status completed status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    public ToDos(String name, boolean status) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        super(name, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     * String format for displaying todos tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"     * @return string format for displaying event task","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shauneang":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shauneang":19}},{"path":"src/test/java/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import duke.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import duke.FileLoaderSaver;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"public class CommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    public void execute_createEventAndMarkDone_eventSaved(){","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"            String filePath \u003d \"/Users/shaune/Desktop/NUS/CS2103T/ip-1/src/test/actualOutput.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"            TaskList toDoList \u003d new TaskList();","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"            FileLoaderSaver storage \u003d new FileLoaderSaver(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"            String userInput \u003d \"event Justin Bieber Concert /at 2019-08-19\";","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"            Command c \u003d new Command(Command.CommandTypes.EVENT, userInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"            c.execute(toDoList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"            userInput \u003d \"mark 1\";","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"            c \u003d new Command(Command.CommandTypes.MARK, userInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"            c.execute(toDoList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"            String expectedOutput \u003d \"E # true # Justin Bieber Concert # 2019-08-19\";","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"            List\u003cString\u003e taskList \u003d storage.loadFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"            String actualOutput \u003d String.join(\" \", taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"            Files.deleteIfExists(Path.of(filePath));","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"            assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":38}},{"path":"src/test/java/FileLoaderSaverTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import duke.FileLoaderSaver;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"public class FileLoaderSaverTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    private String filePath \u003d \"/Users/shaune/Desktop/NUS/CS2103T/ip-1/src/test/testData.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"    private String createFilePath \u003d \"/Users/shaune/Desktop/NUS/CS2103T/ip-1/src/test/actualOutput.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    public void loadFile_properlyStoredTwoTasks_tasksExtractedProperly(){","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"        try{","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"            FileLoaderSaver fls \u003d new FileLoaderSaver(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"            List\u003cString\u003e taskList \u003d fls.loadFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"            String actualOutput \u003d String.join(\" \", taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"            String expectedOutput \u003d \"T # false # hello E # false # hello concert # 2019-10-08\";","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"            assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"    public void writeToFile_writeTwoTasks_tasksStoredProperly()","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"        try{","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"            FileLoaderSaver fls \u003d new FileLoaderSaver(createFilePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"            String input \u003d \"T # false # hello\\nE # false # hello concert # 2019-10-08\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"            fls.writeToFile(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"            List\u003cString\u003e actualOutputList \u003d Files.readAllLines(Path.of(filePath));","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"            String expectedOutput \u003d \"T # false # hello E # false # hello concert # 2019-10-08\";","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"            Files.deleteIfExists(Path.of(createFilePath));","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"            assertEquals(expectedOutput, String.join(\" \", actualOutputList));","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":41}},{"path":"src/test/testData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"T # false # hello","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"E # false # hello concert # 2019-10-08","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"todo eat","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"deadline sleep /by 1030","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"event concert /at monday 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shauneang":1,"-":20}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shauneang":3,"-":43}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" * Abstraction of all commands possibly received on duke,","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * and executes all commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"public class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    static final String EXITWORD \u003d \"bye\";","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    private FileLoaderSaver storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    private String fullCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"    private CommandTypes commandType;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"    // enum of all command types","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    public enum CommandTypes {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"        LIST,","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        TODO,","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        EVENT,","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"        MARK,","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"        UNMARK,","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"        DELETE,","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"        EXIT","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"     * Constructor for command objects","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"     * @param commandType type of command this command with execute","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"     * @param fullCommand full user input command in String","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"    public Command (CommandTypes commandType, String fullCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"     * Checks if command entered is EXITWORD","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"     * @return true if command is EXITWORD else false","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"        return fullCommand.equals(EXITWORD);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"     * Executes tasks based on the command type of the command","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"     * @param toDoList list containing all the current tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"     * @param ui user interaction object for output","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"     * @param storage FileLoaderSaver object for saving tasks after creating, deletion or manipulation","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"    public void execute(ToDoList toDoList, Ui ui, FileLoaderSaver storage) throws IOException, Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"        switch (commandType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"            case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"                toDoList.listTasks();","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"            case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"                addToDo(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(toDoList.createTxtFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"                toDoList.displayListSize();","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"                addDeadline(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(toDoList.createTxtFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"                toDoList.displayListSize();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"            case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"                addEvent(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(toDoList.createTxtFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"                toDoList.displayListSize();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"shauneang"},"content":"            case MARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"shauneang"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"shauneang"},"content":"                changeMark(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(toDoList.createTxtFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"shauneang"},"content":"            case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"shauneang"},"content":"                deleteTask(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"shauneang"},"content":"                storage.writeToFile(toDoList.createTxtFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"shauneang"},"content":"                toDoList.displayListSize();","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"shauneang"},"content":"            case EXIT:","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"shauneang"},"content":"                Ui.goodBye();","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"shauneang"},"content":"     * Changes status of the task according to index given","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"shauneang"},"content":"     * @param command change mark command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"shauneang"},"content":"    private void changeMark(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"shauneang"},"content":"        String[] splitComm \u003d command.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"shauneang"},"content":"        String action \u003d splitComm[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"shauneang"},"content":"        int index \u003d Integer.parseInt(splitComm[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"shauneang"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"shauneang"},"content":"            toDoList.complete(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"shauneang"},"content":"        } else if (action.equals(\"unmark\")){","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"shauneang"},"content":"            toDoList.incomplete(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"shauneang"},"content":"     * Changes status of the task according to index given","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"shauneang"},"content":"     * @param command delete task command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"shauneang"},"content":"    private void deleteTask(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"shauneang"},"content":"        String[] splitComm \u003d command.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"shauneang"},"content":"        int index \u003d Integer.parseInt(splitComm[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"shauneang"},"content":"        toDoList.delete(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"shauneang"},"content":"     * Creates a ToDos instance and adds it to ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"shauneang"},"content":"     * @param command todo command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"shauneang"},"content":"    private void addToDo(String command) throws Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"shauneang"},"content":"        if (!command.matches(\"todo \\\\S.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"shauneang"},"content":"        String name \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"shauneang"},"content":"        toDoList.addTask(new ToDos(name));","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"shauneang"},"content":"     * Creates a Deadline instance and adds it to ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"shauneang"},"content":"     * @param command deadline command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"shauneang"},"content":"    private void addDeadline(String command) throws Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"shauneang"},"content":"        if (!command.matches(\"deadline \\\\S.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"shauneang"},"content":"        } else if (!command.contains(\"/by\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description is missing a deadline.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"shauneang"},"content":"        String details \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"shauneang"},"content":"        String name \u003d details.split(\" /by \")[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"shauneang"},"content":"        String deadline \u003d details.split(\" /by \")[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"shauneang"},"content":"        toDoList.addTask(new Deadline(name, deadline));","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"shauneang"},"content":"     * Creates an Event instance and adds it to ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"shauneang"},"content":"     * @param command event command from user","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"shauneang"},"content":"    private void addEvent(String command) throws Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"shauneang"},"content":"        if (!command.matches(\"event \\\\S.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"shauneang"},"content":"        } else if (!command.contains(\"/at\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"The description is missing a time.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"shauneang"},"content":"        String details \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"shauneang"},"content":"        String name \u003d details.split(\" /at \")[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"shauneang"},"content":"        String time \u003d details.split(\" /at \")[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"shauneang"},"content":"        toDoList.addTask(new Event(name, time));","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":178}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * Deadline class creates deadlines","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    LocalDate deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     * Deadline constructor for task creation by user","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    Deadline(String name, String deadline) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"     * Deadline constructor for task loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * @param status completed status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    Deadline(String name, String deadline, boolean status) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"        super(name, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"     * String format for displaying deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"     * @return string format for displaying deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     * Returns deadline of the Deadline object","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     * @return deadline to string in YYYY-MM-DD format","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        return deadline.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":48}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" * Main Duke class where duke program is ran","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    private FileLoaderSaver storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"     * Initiates duke task with pathname to saved todolist and runs Duke","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     * @param args","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        new Duke(\"/Users/shaune/Desktop/NUS/CS2103T/Duke.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * Duke Constructor","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     * @param filePath path to the saved todolist txt file if available","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        storage \u003d new FileLoaderSaver(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"            toDoList \u003d new ToDoList(storage.loadFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"            toDoList \u003d new ToDoList();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     * Runs duke program","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"        Ui.greet(); //Ui","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"            String fullCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"                fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"                c.execute(toDoList, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"            } catch (InputMismatchException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"                System.out.println(\"\\tError: please only input String commands.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"                System.out.println(\"\\tIndex specified out of range, please try again...\");","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"                System.out.println(\"\\t\" + e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"            } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"shauneang":66,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * Event class creates event","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    LocalDate time;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     * Event constructor for task creation by user","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"     * @param time deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    Event(String name, String time) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"     * Event constructor for task loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * @param time deadline of task","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * @param status completed status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    Event(String name, String time, boolean status) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"        super(name, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"     * String format for displaying event task","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"     * @return string format for displaying event task","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[E] %s (at: %s)\", super.toString(), time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     * Returns deadline of the Deadline object","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     * @return deadline to string in YYYY-MM-DD format","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        return time.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":48}},{"path":"src/main/java/FileLoaderSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":" * FileLoaderSaver class loads and saves a given String of code into a txt file in path","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"public class FileLoaderSaver {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"     * Constructs FileLoaderSaver object","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"     * @param filePath path to saving and loading location","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    FileLoaderSaver(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"        this.filePath \u003d Path.of(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"     * Returns list of saved tasks in String to be decoded","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * @return list of saved tasks in String","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    public List\u003cString\u003e loadFile() throws IOException{","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"        //Find existing toDoList","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"        if (!Files.exists(filePath))","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"        {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        List\u003cString\u003e txtFile \u003d Files.readAllLines(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"        return txtFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"     * Saves file into a new txtFile at a path","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"     * @param txtFile String of text to write into the text file","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"    public void writeToFile(String txtFile) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath.toString())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"            fw.write(txtFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"shauneang":47}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":" * Parser class helps to interpret command Strings and returns a Command object with type of command user wants","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"     * Returns a Command object based on the command given by user input","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"     * @param command User Input","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"     * @return Command object with type of command user wants","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"     * @throws Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    public static Command parse(String command) throws Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.LIST, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"todo\")) { // create todos","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.TODO, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"        else if (command.startsWith(\"deadline\")) { // create deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.DEADLINE, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        else if(command.startsWith(\"event\")) { // create event","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.EVENT, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"mark [0-9]+\") || command.matches(\"unmark [0-9]+\")) { // mark","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"            if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"                return new Command(Command.CommandTypes.MARK, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"            else{","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"                return new Command(Command.CommandTypes.UNMARK, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        else if (command.matches(\"delete [0-9]+\")) { // delete","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.DELETE, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"        else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"            return new Command(Command.CommandTypes.EXIT, command);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"        else {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"            throw new Exception(\"I am sorry, I do not comprehend such commands. Please Try again...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":43}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":" * Abstract Task class encapsulates all the different types of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"abstract class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"    private String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"    private Boolean status \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"     * Task constructor for tasks created by user","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"     * Task constructor for tasks loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"     * @param status Completion status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"    public Task(String name, boolean status) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     * Changes status to done","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    public void mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        String message;","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"        if (status \u003d\u003d true) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\t This task is already marked:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"            status \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\tGood Job on completing the task! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\t   \" + toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     * Changes status to not done","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"      */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        String message;","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"        if (status \u003d\u003d false) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\t This task is already unmarked:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"            status \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"            message \u003d \"\\tOK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\t   \" + toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"     * Returns name of task and its status to be used when list is called","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"     * @return Returns String of name of task formatted with status showing","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"        String mark \u003d status ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[%s] %s\", mark, name);","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"     * Returns completion status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"     * @return completion status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"        return status;","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"     * Returns name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"     * @return name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"shauneang"},"content":"    public String getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"shauneang"},"content":"        return name;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shauneang":82}},{"path":"src/main/java/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * ToDoList class manages all the tasks created by user","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"public class ToDoList {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    ArrayList\u003cTask\u003e toDoList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     * Creates empty ToDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    ToDoList() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"        toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     * Creates ToDoList based on saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"     * @param txtFile List of Strings representing the tasks saved","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"    ToDoList(List\u003cString\u003e txtFile) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"        toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"        addTaskFromFile(txtFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    /** ","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     * Sets status of task at index to be complete","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"     * @param index index of task in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    public void complete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"        if (index \u003e\u003d toDoList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"        toDoList.get(index).mark();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    /** Sets status of task at index to be incomplete","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"     * @param index index of task in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"    public void incomplete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"        if (index \u003e\u003d toDoList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"        toDoList.get(index).unmark();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"shauneang"},"content":"     *  Adds task to todoList","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"shauneang"},"content":"     * @param task task to be added to toDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"shauneang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"shauneang"},"content":"        toDoList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"shauneang"},"content":"     * Displays all tasks in toDoList","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"shauneang"},"content":"    public void listTasks() {","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"shauneang"},"content":"        if (toDoList.size() \u003c 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"shauneang"},"content":"            System.out.println(\"\\tYou don\u0027t have any pending tasks.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"shauneang"},"content":"            return;","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"shauneang"},"content":"        for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"shauneang"},"content":"            if (toDoList.get(i) !\u003d null){","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"shauneang"},"content":"                System.out.printf(\"\\t%d. %s\\n\", i + 1, toDoList.get(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"shauneang"},"content":"     * Deletes a Task","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"shauneang"},"content":"     * @param index index to delete","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"shauneang"},"content":"     * @Throws IndexOutOfBoundsException","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"shauneang"},"content":"    public void delete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"shauneang"},"content":"        if (index \u003e\u003d toDoList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"shauneang"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"shauneang"},"content":"        else {","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"shauneang"},"content":"            Task tempTask \u003d toDoList.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"shauneang"},"content":"            toDoList.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"shauneang"},"content":"            System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"shauneang"},"content":"            System.out.println(\"\\t  \" + tempTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"shauneang"},"content":"     * Loads all the saved tasks into list","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"shauneang"},"content":"     * @param txtFile list of tasks in String ","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"shauneang"},"content":"    private void addTaskFromFile(List\u003cString\u003e txtFile) {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"shauneang"},"content":"        if (txtFile.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"shauneang"},"content":"            return;","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"shauneang"},"content":"        for (String line : txtFile) {","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"shauneang"},"content":"            String[] details \u003d line.split(\" # \");","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"shauneang"},"content":"            String taskType \u003d details[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"shauneang"},"content":"            boolean status \u003d Boolean.parseBoolean(details[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"shauneang"},"content":"            String taskName \u003d details[2];","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"shauneang"},"content":"            String eventInfo \u003d details.length \u003e 3 ? details[3] : \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"shauneang"},"content":"            Task task;","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"shauneang"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"shauneang"},"content":"            case \"T\": ","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"shauneang"},"content":"                task \u003d new ToDos(taskName, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"shauneang"},"content":"                toDoList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"shauneang"},"content":"            case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"shauneang"},"content":"                task \u003d new Deadline(taskName, eventInfo, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"shauneang"},"content":"                toDoList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"shauneang"},"content":"            case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"shauneang"},"content":"                task \u003d new Event(taskName, eventInfo, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"shauneang"},"content":"                toDoList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"shauneang"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"shauneang"},"content":"    ","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"shauneang"},"content":"    /** Returns todolist formatted for saving in Duke.txt file in hard disk","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"shauneang"},"content":"     * @return String of tasks in todolist","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"shauneang"},"content":"    public String createTxtFile() {","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"shauneang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"shauneang"},"content":"        for (Task t : toDoList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"shauneang"},"content":"            if (t instanceof ToDos) {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"shauneang"},"content":"                ToDos td \u003d (ToDos) t;","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"shauneang"},"content":"                result +\u003d String.format(\"T # %b # %s\\n\", td.getStatus(), td.getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"shauneang"},"content":"            } ","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"shauneang"},"content":"            else if (t instanceof Deadline){","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"shauneang"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"shauneang"},"content":"                result +\u003d String.format(\"D # %b # %s # %s\\n\", d.getStatus(), d.getName(), d.getDeadline());","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"shauneang"},"content":"            else if (t instanceof Event) {","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"shauneang"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"shauneang"},"content":"                result +\u003d String.format(\"E # %b # %s # %s\\n\", e.getStatus(), e.getName(), e.getTime());","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"shauneang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"shauneang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"shauneang"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"shauneang"},"content":"     * Prints number of tasks in the list","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"shauneang"},"content":"    public void displayListSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"shauneang"},"content":"        System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", toDoList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shauneang":158}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":" * ToDos class creates todos","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"public class ToDos extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"     * Creates ToDos from user input","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"    ToDos(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"     * ToDos constructor for task loaded from saved file","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"     * @param name name of task","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"     * @param status completed status of task","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"    ToDos(String name, boolean status) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"        super(name, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"     * String format for displaying todos tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"     * @return string format for displaying event task","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":31}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":" * Manages the user interaction of Duke","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":" * @author Shaune Ang","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"    private static final String HLINE \u003d \"\\t____________________________________________\";","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    private Scanner myScanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"     * Ui constructor initiates scanner object","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    public Ui() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"        myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shauneang"},"content":"     * Prints generic greet message","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shauneang"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shauneang"},"content":"        System.out.println(HLINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\tHello I\u0027m DUKE!\\n\\tWhat can I do for you?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shauneang"},"content":"        System.out.println(HLINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shauneang"},"content":"     * Prints generic good bye message","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shauneang"},"content":"    public static void goodBye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shauneang"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shauneang"},"content":"     * Prints horizontal line","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shauneang"},"content":"    public static void showLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shauneang"},"content":"        System.out.println(HLINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shauneang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shauneang"},"content":"     * Reads and returns full command given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shauneang"},"content":"     * @return full command given by user","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shauneang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shauneang"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shauneang"},"content":"        return myScanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":48}},{"path":"src/test/java/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"public class ToDosTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shauneang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shauneang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shauneang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shauneang"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shauneang"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shauneang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shauneang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shauneang":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shauneang"},"content":"todo eat","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"shauneang"},"content":"deadline sleep /by 1030","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"shauneang"},"content":"event concert /at monday 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shauneang"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shauneang"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shauneang"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shauneang"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shauneang":7}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"    mainClassName \u003d \"mia.Main\"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    archiveBaseName \u003d \"mia\"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RichDom2185":2,"-":39}},{"path":"src/main/java/general/ui/ChatWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package general.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":" * A {@code ChatWindow} formats messages as chat bubbles. There are two","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":" * types of messages: commands, which are sent by the user and appear on the left,","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":" * and responses, which are sent by the program and appear on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"public class ChatWindow {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    private final int windowWidth;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"    public ChatWindow(int windowWidth) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"    private static Text[] breakLines(Text data) {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"        // Break strings at the next word after line length hits 30 characters","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"        return data.lines()","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"                .flatMap((s) -\u003e Arrays.stream(s.split(\"(?\u003c\u003d\\\\G\\\\b?.{30,}\\\\s)\")))","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"                .map(Text::strip)","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"                .toArray(Text[]::new);","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"    public void dispose() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"        sc.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"    public String prompt(String helperText) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"        System.out.print(helperText);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"        return sc.nextLine().strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"    public void printResponse(Text response) {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"        final Text[] lines \u003d breakLines(response);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"        int maxLength \u003d 3; // prevents negative count","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"            if (maxLength \u003c lines[i].length()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"                maxLength \u003d lines[i].length();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"        final int paddingLength \u003d windowWidth - maxLength - 4;","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"        StringBuilder sb \u003d new StringBuilder(\" \".repeat(paddingLength))","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"                .append(\"╭\").append(\"─\".repeat(maxLength + 2)).append(\"╮\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"        // Pad lines right","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"        final String formatString \u003d \"%-\" + maxLength + \"s\";","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"            sb.append(\" \".repeat(paddingLength))","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"                    .append(\"│ \").append(String.format(formatString, lines[i])).append(\" │\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"        sb.append(\" \".repeat(paddingLength))","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"                .append(\"╰\").append(\"─\".repeat(maxLength)).append(\"╮┬╯\\n\")","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"                .append(\" \".repeat(windowWidth - 7)).append(\"MIA ╰╯ \\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"        System.out.printf(sb.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"    public void printCommand(Text command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"        final Text[] lines \u003d breakLines(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"        int maxLength \u003d 3; // prevents negative count","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"            if (maxLength \u003c lines[i].length()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"                maxLength \u003d lines[i].length();","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"        StringBuilder sb \u003d new StringBuilder(\"╭\").append(\"─\".repeat(maxLength + 2)).append(\"╮\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"RichDom2185"},"content":"        // Pad lines right","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"RichDom2185"},"content":"        final String formatString \u003d \"%-\" + maxLength + \"s\";","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"RichDom2185"},"content":"            sb.append(\"│ \").append(String.format(formatString, lines[i])).append(\" │\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"RichDom2185"},"content":"        sb.append(\"╰┬╭\").append(\"─\".repeat(maxLength)).append(\"╯\\n\")","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"RichDom2185"},"content":"                .append(\" ╰╯ You\").append(\" \".repeat(maxLength - 3)).append(\"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"RichDom2185"},"content":"        System.out.printf(sb.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"RichDom2185":80}},{"path":"src/main/java/general/ui/Span.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package general.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":" * Base class substitute for String that is compatible with general.ui.Text","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"public class Span implements Text {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"    private final String text;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"    public Span(String text) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    public String getText() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"        return text;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"    public int length() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"        return text.length();","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"    public Stream\u003cSpan\u003e lines() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"        return text.lines().map(Span::new);","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"    public Text[] split(String regex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"        return Stream.of(text.split(regex)).map(Span::new).toArray(Span[]::new);","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    public Text strip() {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"        return new Span(text.strip());","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"        return text;","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"RichDom2185":46}},{"path":"src/main/java/general/ui/Text.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package general.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"public interface Text {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"    String getText();","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"    int length();","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    Stream\u003c? extends Text\u003e lines();","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"    Text[] split(String regex);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    Text strip();","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"RichDom2185":15}},{"path":"src/main/java/general/utils/RegexHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package general.utils;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":" * A utility class containing useful methods to parse dates and times from a given string.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"public class RegexHelper {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"    // TODO: Make regex validate months date according to month length","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    /** The Regex pattern used to parse various date formats. */","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    public static final Pattern DATE_REGEX \u003d Pattern.compile(\"\\\\b\" // word boundary","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"                    + \"(?:[1-9]|[0-2]\\\\d|3[0-1])\" // 1-31, 01-31 accepted","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"                    + \" \"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"                    + \"(?:JAN(?:UARY)?\" // both 3-letter and full month names are accepted","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"                    + \"|FEB(?:RUARY)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"                    + \"|MAR(?:CH)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"                    + \"|APR(?:IL)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"                    + \"|MAY\"","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"                    + \"|JUN(?:E)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"                    + \"|JUL(?:Y)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"                    + \"|AUG(?:UST)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"                    + \"|SEP(?:TEMBER)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"                    + \"|OCT(?:OBER)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"                    + \"|NOV(?:EMBER)?\"","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"                    + \"|DEC(?:EMBER)?)\"","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"                    + \" \"","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"                    + \"\\\\d{4}\" // all 4 digit years are accepted","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"                    + \"(?\u003d\\\\b|$)\",","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"            Pattern.CASE_INSENSITIVE); // word boundary (lookahead)","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"    // TODO: Differentiate lack of separator from 4-digit year","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"    /** The Regex pattern used to parse various time formats. */","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"    public static final Pattern TIME_REGEX \u003d Pattern.compile(\"\\\\b\" // word boundary","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"            + \"(?:\\\\d|[0-1]\\\\d|2[0-3])\" // hour (1-2 digits, 24h format from 0 to 23)","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"            + \"[:.]\" // hour-minute separator (non-optional until above TODO is done)","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"            + \"[0-5]\\\\d\" // minute (always 2 digits)","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"            + \"(?\u003dh\\\\b|\\\\b|$)\"); // word boundary or optional \u0027h\u0027 time unit (lookahead)","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"     * Extracts and parses the first date from an input string (which contains the date).","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"     * @param text The input string to extract the date from","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"     * @return an optional LocalDate object with the date specified in the string","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"    public static Optional\u003cLocalDate\u003e extractAndParseDate(String text) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"        final Matcher matcher \u003d DATE_REGEX.matcher(text);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"        // Replace full month with 3-letter equivalent so that DateTimeFormatter","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"        // can parse it correctly.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"        final String extractedDate \u003d matcher.group()","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"                .replaceFirst(\"(?\u003c\u003d\\\\s[a-zA-Z]{3})[a-zA-Z]+(?\u003d\\\\s)\", \"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"        final DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"                .appendPattern(\"d MMM yyyy\")","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"                .toFormatter();","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"        return Optional.of(LocalDate.parse(extractedDate, formatter));","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"     * Extracts and parses the first time from an input string (which contains the time).","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"RichDom2185"},"content":"     * @param text The input string to extract the time from","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"RichDom2185"},"content":"     * @return an optional LocalTime object with the time specified in the string","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"RichDom2185"},"content":"    public static Optional\u003cLocalTime\u003e extractAndParseTime(String text) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"RichDom2185"},"content":"        final Matcher matcher \u003d TIME_REGEX.matcher(text);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"RichDom2185"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"RichDom2185"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"RichDom2185"},"content":"        // Standardise hour-minute separator so that DateTimeFormatter","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"RichDom2185"},"content":"        // can parse it correctly.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"RichDom2185"},"content":"        final String extractedTime \u003d matcher.group()","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"RichDom2185"},"content":"                .replaceFirst(\"[:.]\", \":\");","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"RichDom2185"},"content":"        final DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"RichDom2185"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"RichDom2185"},"content":"                .appendPattern(\"HH:mm\")","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"RichDom2185"},"content":"                .toFormatter();","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"RichDom2185"},"content":"        return Optional.of(LocalTime.parse(extractedTime, formatter));","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"RichDom2185":90}},{"path":"src/main/java/general/utils/StoredFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package general.utils;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import java.io.File;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":" * A utility class that wraps abstracts the boilerplate of reading and writing to a file.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"abstract public class StoredFile {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    public static StoredFile from(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"        final File file \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"            return new ExistentFile(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"        return new NonExistentFile(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"    private static void createFileIfNotExists(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"            File directory \u003d new File(filePath.replaceFirst(\"/[^/\\\\\\\\]+$\", \"\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"                directory.mkdirs();","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"     * Checks whether the {@code StoredFile} points to an existing file.","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the {@code StoredFile} points to an existing file, {@code false} otherwise","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"    abstract public boolean fileExists();","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"     * Returns the content of the {@code StoredFile} as a string.","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"     * @return The content of the {@code StoredFile}, interpreted as a string","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"     * @throws FileNotFoundException When the {@code StoredFile} points to a non-existent file","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"    abstract public String getTextContent() throws FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"     * Overwrites the contents of the {@code StoredFile} with the text specified by the {@code text} parameter.","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"     * If the file does not exist, it will be created.","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"     * @param text The text to be written to the file","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"    abstract public void writeText(String text);","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"    private static class ExistentFile extends StoredFile {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"        private final String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"        private ExistentFile(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"            super();","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"        public boolean fileExists() {","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"            return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"RichDom2185"},"content":"        public String getTextContent() throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"RichDom2185"},"content":"            Scanner sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"RichDom2185"},"content":"            final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"RichDom2185"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"RichDom2185"},"content":"                sb.append(sc.nextLine());","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"RichDom2185"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"RichDom2185"},"content":"            return sb.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"RichDom2185"},"content":"        public void writeText(String text) {","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"RichDom2185"},"content":"            StoredFile.createFileIfNotExists(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"RichDom2185"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"RichDom2185"},"content":"                writer.write(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"RichDom2185"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"RichDom2185"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"RichDom2185"},"content":"    private static class NonExistentFile extends StoredFile {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"RichDom2185"},"content":"        private final String filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"RichDom2185"},"content":"        private NonExistentFile(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"RichDom2185"},"content":"            super();","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"RichDom2185"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"RichDom2185"},"content":"        public boolean fileExists() {","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"RichDom2185"},"content":"            return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"RichDom2185"},"content":"        public String getTextContent() throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"RichDom2185"},"content":"            throw new FileNotFoundException(\"File does not exist!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"RichDom2185"},"content":"        public void writeText(String text) {","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"RichDom2185"},"content":"            StoredFile.createFileIfNotExists(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"RichDom2185"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"RichDom2185"},"content":"                writer.write(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"RichDom2185"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"RichDom2185"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"RichDom2185":123}},{"path":"src/main/java/mia/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":" * A {@code Command} is an actionable item that can be run by {@code Mia}.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"abstract class Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"    private final Mia context;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"    private Command(Mia context) {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"        this(context, false);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    private Command(Mia context, boolean isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"        this.context \u003d context;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"     * Parses a user input string into a command that is appropriate for the calling context.","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"     * @param context The context the command is intended to be executed from","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"     * @param input The user input string to parse","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"     * @return A {@code Command} for the context to call","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"     * @throws IllegalArgumentException When a parsing error occurs","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"    public static Command from(Mia context, String input) throws IllegalArgumentException {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"            return new ExitCommand(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"            return new ListCommand(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"            return new CreateTodoTaskCommand(context, args);","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input, \"/by\");","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"            return new CreateDeadlineTaskCommand(context, args);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input, \"/at\");","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"            return new CreateEventTaskCommand(context, args);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"            return new DeleteTaskCommand(context, args);","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"            return new UpdateTaskCommand(context, true, args);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"            return new UpdateTaskCommand(context, false, args);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"            final String[] args \u003d Command.getArguments(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"            return new FindTaskCommand(context, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"        throw new IllegalArgumentException(\"Sorry boss, I don\u0027t know what you are trying to say 😟\");","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"    private static String[] getArguments(String command, String... delimiters) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"        final ArrayIndexOutOfBoundsException e \u003d new ArrayIndexOutOfBoundsException(\"Invalid number of arguments\");","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"        final String[] args \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"            throw e;","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"        final String[] parsed \u003d new String[delimiters.length + 1];","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"        String remaining \u003d args[1].strip();","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c delimiters.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"            final String[] splits \u003d remaining.split(delimiters[i], 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"            if (splits.length \u003c 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"                throw e;","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"RichDom2185"},"content":"            parsed[i] \u003d splits[0].strip();","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"RichDom2185"},"content":"            remaining \u003d splits[1].strip();","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"RichDom2185"},"content":"        parsed[delimiters.length] \u003d remaining;","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"RichDom2185"},"content":"        return parsed;","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"RichDom2185"},"content":"     * Determine whether the {@code Command} intends for the calling context to be exited subsequently.","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the {@code Command} intends for an exit, {@code false} otherwise","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"RichDom2185"},"content":"    public boolean shouldExitContext() {","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"RichDom2185"},"content":"        return isExit;","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"RichDom2185"},"content":"     * Executes the actionable item that the {@code Command} is associated with.","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"RichDom2185"},"content":"    public abstract void run();","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"RichDom2185"},"content":"    private static class ExitCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"RichDom2185"},"content":"        private ExitCommand(Mia context) {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"RichDom2185"},"content":"            super(context, true);","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(\"See you!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"RichDom2185"},"content":"    private static class ListCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"RichDom2185"},"content":"        private ListCommand(Mia context) {","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(super.context.getTasks().toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"RichDom2185"},"content":"    private static class CreateTodoTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"RichDom2185"},"content":"        private final String[] args;","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"RichDom2185"},"content":"        private CreateTodoTaskCommand(Mia context, String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"RichDom2185"},"content":"            assert args.length \u003d\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"RichDom2185"},"content":"            this.args \u003d args;","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"RichDom2185"},"content":"            final Task todo \u003d new Todo(args[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"RichDom2185"},"content":"            super.context.getTasks().addTask(todo);","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(String.format(\"Added todo \\\"%s\\\" to tasks list!\", todo.getTitle()));","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"RichDom2185"},"content":"    private static class CreateDeadlineTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"RichDom2185"},"content":"        private final String[] args;","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"RichDom2185"},"content":"        private CreateDeadlineTaskCommand(Mia context, String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"RichDom2185"},"content":"            assert args.length \u003d\u003d 2;","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"RichDom2185"},"content":"            this.args \u003d args;","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"RichDom2185"},"content":"            final Task deadline \u003d new Deadline(args[0], args[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"RichDom2185"},"content":"            super.context.getTasks().addTask(deadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(String.format(\"Added \\\"%s\\\" (task with deadline) to tasks list!\", deadline.getTitle()));","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"RichDom2185"},"content":"    private static class CreateEventTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"RichDom2185"},"content":"        private final String[] args;","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"RichDom2185"},"content":"        private CreateEventTaskCommand(Mia context, String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"RichDom2185"},"content":"            assert args.length \u003d\u003d 2;","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"RichDom2185"},"content":"            this.args \u003d args;","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"RichDom2185"},"content":"            final Task event \u003d new Event(args[0], args[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"RichDom2185"},"content":"            super.context.getTasks().addTask(event);","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(String.format(\"Added new event \\\"%s\\\" to tasks list!\", event.getTitle()));","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":168,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":169,"author":{"gitId":"RichDom2185"},"content":"    private static class UpdateTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":170,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"RichDom2185"},"content":"        private final boolean isCompleted;","lastModifiedDate":"2022-08-22"},{"lineNumber":172,"author":{"gitId":"RichDom2185"},"content":"        private final String[] args;","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"RichDom2185"},"content":"        private UpdateTaskCommand(Mia context, boolean isCompleted, String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":175,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"RichDom2185"},"content":"            assert args.length \u003d\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"RichDom2185"},"content":"            this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-22"},{"lineNumber":178,"author":{"gitId":"RichDom2185"},"content":"            this.args \u003d args;","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":181,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":183,"author":{"gitId":"RichDom2185"},"content":"            final int number;","lastModifiedDate":"2022-08-22"},{"lineNumber":184,"author":{"gitId":"RichDom2185"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":185,"author":{"gitId":"RichDom2185"},"content":"                number \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":186,"author":{"gitId":"RichDom2185"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":187,"author":{"gitId":"RichDom2185"},"content":"                super.context.respond(String.format(\"You specified an invalid task number %s!\", args[0]));","lastModifiedDate":"2022-08-22"},{"lineNumber":188,"author":{"gitId":"RichDom2185"},"content":"                return;","lastModifiedDate":"2022-08-22"},{"lineNumber":189,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":190,"author":{"gitId":"RichDom2185"},"content":"            if (isCompleted) {","lastModifiedDate":"2022-08-22"},{"lineNumber":191,"author":{"gitId":"RichDom2185"},"content":"                if (super.context.getTasks().checkTask(number)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"RichDom2185"},"content":"                    super.context.respond(\"Task has been marked as done!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":193,"author":{"gitId":"RichDom2185"},"content":"                } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"RichDom2185"},"content":"                    super.context.respond(String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"RichDom2185"},"content":"                            \"Task not modified! Either the task is already done, or you specified an invalid task number %d.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":196,"author":{"gitId":"RichDom2185"},"content":"                            number));","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"RichDom2185"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":198,"author":{"gitId":"RichDom2185"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":199,"author":{"gitId":"RichDom2185"},"content":"                if (super.context.getTasks().uncheckTask(number)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":200,"author":{"gitId":"RichDom2185"},"content":"                    super.context.respond(\"Task has been marked as not done!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":201,"author":{"gitId":"RichDom2185"},"content":"                } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":202,"author":{"gitId":"RichDom2185"},"content":"                    super.context.respond(String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"RichDom2185"},"content":"                            \"Task not modified! Either the task is still not done, or you specified an invalid task number %d.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"RichDom2185"},"content":"                            number));","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"RichDom2185"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":206,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":207,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":209,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":210,"author":{"gitId":"RichDom2185"},"content":"    private static class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":211,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"RichDom2185"},"content":"        private final String[] args;","lastModifiedDate":"2022-08-22"},{"lineNumber":213,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":214,"author":{"gitId":"RichDom2185"},"content":"        private DeleteTaskCommand(Mia context, String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":215,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-22"},{"lineNumber":216,"author":{"gitId":"RichDom2185"},"content":"            assert args.length \u003d\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":217,"author":{"gitId":"RichDom2185"},"content":"            this.args \u003d args;","lastModifiedDate":"2022-08-22"},{"lineNumber":218,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":219,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":220,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":221,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":222,"author":{"gitId":"RichDom2185"},"content":"            final int number;","lastModifiedDate":"2022-08-22"},{"lineNumber":223,"author":{"gitId":"RichDom2185"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":224,"author":{"gitId":"RichDom2185"},"content":"                number \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":225,"author":{"gitId":"RichDom2185"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":226,"author":{"gitId":"RichDom2185"},"content":"                super.context.respond(String.format(\"You specified an invalid task number %s!\", args[0]));","lastModifiedDate":"2022-08-22"},{"lineNumber":227,"author":{"gitId":"RichDom2185"},"content":"                return;","lastModifiedDate":"2022-08-22"},{"lineNumber":228,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":229,"author":{"gitId":"RichDom2185"},"content":"            if (super.context.getTasks().deleteTask(number)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":230,"author":{"gitId":"RichDom2185"},"content":"                super.context.respond(\"Task has been deleted successfully!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":231,"author":{"gitId":"RichDom2185"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":232,"author":{"gitId":"RichDom2185"},"content":"                super.context.respond(String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":233,"author":{"gitId":"RichDom2185"},"content":"                        \"Something went wrong when deleting task %d! Likely, you specified a task number that is out of range.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":234,"author":{"gitId":"RichDom2185"},"content":"                        number));","lastModifiedDate":"2022-08-26"},{"lineNumber":235,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":236,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":237,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":238,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":239,"author":{"gitId":"RichDom2185"},"content":"    private static class FindTaskCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":240,"author":{"gitId":"RichDom2185"},"content":"        private final String[] args;","lastModifiedDate":"2022-08-29"},{"lineNumber":241,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":242,"author":{"gitId":"RichDom2185"},"content":"        private FindTaskCommand(Mia context, String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":243,"author":{"gitId":"RichDom2185"},"content":"            super(context);","lastModifiedDate":"2022-08-29"},{"lineNumber":244,"author":{"gitId":"RichDom2185"},"content":"            assert args.length \u003d\u003d 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":245,"author":{"gitId":"RichDom2185"},"content":"            this.args \u003d args;","lastModifiedDate":"2022-08-29"},{"lineNumber":246,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":247,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":248,"author":{"gitId":"RichDom2185"},"content":"        @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":249,"author":{"gitId":"RichDom2185"},"content":"        public void run() {","lastModifiedDate":"2022-08-29"},{"lineNumber":250,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(String.format(\"Finding tasks that match \\\"%s\\\"...\", args[0]));","lastModifiedDate":"2022-08-29"},{"lineNumber":251,"author":{"gitId":"RichDom2185"},"content":"            super.context.respond(super.context.getTasks().search(args[0]));","lastModifiedDate":"2022-08-29"},{"lineNumber":252,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":253,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":254,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RichDom2185":254}},{"path":"src/main/java/mia/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import general.utils.RegexHelper;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":" * A {@code Deadline} is a {@code Task} that has a due date and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    private LocalDate byDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"    private LocalTime byTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    Deadline(String title, String deadline) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"        this(title, false, deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"    Deadline(String title, boolean isCompleted, String deadline) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"        super(title, isCompleted);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"        byDate \u003d RegexHelper.extractAndParseDate(deadline)","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid deadline date: \" + deadline));","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"        byTime \u003d RegexHelper.extractAndParseTime(deadline)","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid deadline time: \" + deadline));","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"     * Parses and creates a new {@code Deadline} instance from a {@code String} representing its data.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"     * @param saveFormat The string representing the data from which to create a new {@code Deadline} instance","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"     * @return A new {@code Deadline} instance based on the parsed data","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"     * @throws IllegalArgumentException When the save format is invalid","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    public static Deadline fromSaveFormat(String saveFormat) throws IllegalArgumentException {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"        final String[] args \u003d saveFormat.split(\";;\");","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"            throw new IllegalArgumentException(\"Incorrect save format: \" + saveFormat);","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"        return new Deadline(args[2], args[1].equals(\"1\"), args[0]);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"D;;%s %s;;%s\",","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"                byDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)),","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"                byTime, super.toSaveFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"‼ %s (by %s at %s)\", super.toString(), byDate, byTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"RichDom2185":57}},{"path":"src/main/java/mia/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import general.utils.RegexHelper;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":" * An {@code Event} is a {@code Task} that has a start and end time.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    private LocalDate startDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"    private LocalTime startTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    private LocalDate endDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"    Event(String title, boolean isCompleted, String time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"        this(title, isCompleted, time, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"    Event(String title, String time) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"        this(title, false, time, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"    Event(String title, boolean isCompleted, String start, String end) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"        super(title, isCompleted);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"        startDate \u003d RegexHelper.extractAndParseDate(start)","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid event start date: \" + start));","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"        startTime \u003d RegexHelper.extractAndParseTime(start)","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid event start time: \" + start));","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"        endDate \u003d RegexHelper.extractAndParseDate(end)","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid event end date: \" + end));","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"        endTime \u003d RegexHelper.extractAndParseTime(end)","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid event end time: \" + end));","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"     * Parses and creates a new {@code Event} instance from a {@code String} representing its data.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"     * @param saveFormat The string representing the data from which to create a new {@code Event} instance","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"     * @return A new {@code Event} instance based on the parsed data","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"     * @throws IllegalArgumentException When the save format is invalid","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"    public static Event fromSaveFormat(String saveFormat) throws IllegalArgumentException {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"        final String[] args \u003d saveFormat.split(\";;\");","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"        if (args.length !\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"            throw new IllegalArgumentException(\"Incorrect save format: \" + saveFormat);","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"        return new Event(args[3], args[2].equals(\"1\"), args[0], args[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"E;;%s %s;;%s %s;;%s\",","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"                startDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)),","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"                startTime,","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"                endDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)),","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"                endTime, super.toSaveFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"📆 %s (from %s %s to %s %s)\", super.toString(), startDate, startTime, endDate, endTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"RichDom2185":69}},{"path":"src/main/java/mia/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"public class Main {","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"        final Mia mia \u003d new Mia(\"data/Mia.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"        mia.run();","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"RichDom2185":8}},{"path":"src/main/java/mia/Mia.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import general.ui.ChatWindow;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import general.ui.Span;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":" * An instance of {@code Mia}, a virtual assistant.","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"public class Mia {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    private static final String logo \u003d \"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\\n\"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"                                     + \"┃ You are talking to MIA... ┃\\n\"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"                                     + \"┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"    private final TaskManager tasksManager;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    private final ChatWindow window \u003d new ChatWindow(50);","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    public Mia(String dataPath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"        tasksManager \u003d new TaskManager(dataPath);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"     * Sends a message to the user.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"     * @param message the message to be sent","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"    public void respond(String message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"        window.printResponse(new Span(message));","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"     * Gets the {@code TaskManager} task list manager for this {@code Mia} instance.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"     * @return The {@code TaskManager} associated with this {@code Mia} instance.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"    public TaskManager getTasks() {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"        return tasksManager;","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"     * Starts this {@code Mia} instance.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"    public void run() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"        respond(\"Hello there!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"        while (true) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"            final String line \u003d window.prompt(\"Enter a command: \");","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"            // Replaces the entered command (previous line) with a bubble","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"            System.out.print(\"\\u001B[1A\\u001B[K\");","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"            window.printCommand(new Span(line));","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"                final Command command \u003d Command.from(this, line);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"                command.run();","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"                if (command.shouldExitContext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"                respond(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"        window.dispose();","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"RichDom2185":66}},{"path":"src/main/java/mia/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":" * A {@code Task} contains a title and a completed status. It","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":" * is abstract and should be extended by other classes that implement","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":" * additional features.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"    private String title;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    Task(String title) {","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"        this(title, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    Task(String title, boolean isCompleted) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"    public String getTitle() {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"        return title;","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"     * Sets whether the task is completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"     * @param completed the task status","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the status is modified, {@code false} otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"    public boolean setCompleted(boolean completed) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"        if (completed \u003d\u003d this.isCompleted) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"            return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"        this.isCompleted \u003d completed;","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"        return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"     * Determines whether a {@code Task}\u0027s title matches a given query.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"     * @param query The query to be word-matched against the title","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the task matches, {@code false} otherwise","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"    public boolean matches(String query) {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"        final String[] queryWords \u003d query.toLowerCase().split(\"\\\\s\");","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"        for (String word : queryWords) {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"            if (!title.toLowerCase().contains(word)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"                return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"        return true;","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"     * Parses the data contained in this {@code Task} object into a {@code String}.","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"     * @return The parsed data","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"%s;;%s;;\", isCompleted ? 1 : 0, title);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"%s %s\", isCompleted ? \"☑\" : \"☐\", title);","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"RichDom2185":70}},{"path":"src/main/java/mia/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import general.utils.StoredFile;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"import java.util.List;","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":" * A {@code TaskManager} contains a list of tasks that the user can add, edit, view, and delete.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"public class TaskManager {","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    private final StoredFile storedFile;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"     * Creates a new {@code TaskManager} instance from the state present in the specified save file.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"     * If the file does not exist, a default state is used. If the file has an invalid format, as much of","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"     * the parseable state will be used, while everything else will be dropped.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"     * @param saveFile The path to the file containing the saved state information","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"    public TaskManager(String saveFile) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"        List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"        storedFile \u003d StoredFile.from(saveFile);","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"        if (storedFile.fileExists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"            try {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"                tasks \u003d storedFile.getTextContent().lines().map(String::strip).flatMap(","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"                        line -\u003e {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"                            if (!line.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"                                switch (line.charAt(0)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"                                case \u0027T\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"                                    return Stream.of(Todo.fromSaveFormat(line.substring(3)));","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"                                case \u0027E\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"                                    return Stream.of(Event.fromSaveFormat(line.substring(3)));","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"                                case \u0027D\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"                                    return Stream.of(Deadline.fromSaveFormat(line.substring(3)));","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"                                default:","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"                                    System.out.printf(\"Invalid save file format: %s\\nSkipping this line... please check for corrupted data.\\n\", line);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"                                    return Stream.empty();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"                                }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"                            }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"                            return Stream.empty();","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"                        }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"                ).collect(Collectors.toList());","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"                System.out.println(\"Something went wrong while opening the file. Defaulting to empty initial state.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"                tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"            System.out.println(\"Save file not found, starting from scratch...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"     * Adds a new task to the list of tasks to be executed, and saves the updated save file to disk.","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"     * @param task The task to be added","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"            saveToDisk();","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"RichDom2185"},"content":"     * Deletes a task, and saves the updated save file to disk.","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"RichDom2185"},"content":"     * @param number the task number","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the task was deleted, {@code false} otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"RichDom2185"},"content":"    public boolean deleteTask(int number) {","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"RichDom2185"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"RichDom2185"},"content":"            if (number \u003e tasks.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"RichDom2185"},"content":"                return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"RichDom2185"},"content":"            tasks.remove(number - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"RichDom2185"},"content":"            return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"RichDom2185"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"RichDom2185"},"content":"            saveToDisk();","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"RichDom2185"},"content":"     * Marks a task as completed, and saves the updated save file to disk.","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"RichDom2185"},"content":"     * @param number the task number","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the task is modified, {@code false} otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"RichDom2185"},"content":"    public boolean checkTask(int number) {","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"RichDom2185"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"RichDom2185"},"content":"            if (number \u003e tasks.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"RichDom2185"},"content":"                return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"RichDom2185"},"content":"            return tasks.get(number - 1).setCompleted(true);","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"RichDom2185"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"RichDom2185"},"content":"            saveToDisk();","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"RichDom2185"},"content":"     * Marks a task as incomplete, and saves the updated save file to disk.","lastModifiedDate":"2022-08-30"},{"lineNumber":111,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"RichDom2185"},"content":"     * @param number the task number","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"RichDom2185"},"content":"     * @return {@code true} if the task is modified, {@code false} otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"RichDom2185"},"content":"    public boolean uncheckTask(int number) {","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"RichDom2185"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"RichDom2185"},"content":"            if (number \u003e tasks.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"RichDom2185"},"content":"                return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"RichDom2185"},"content":"            return tasks.get(number - 1).setCompleted(false);","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"RichDom2185"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"RichDom2185"},"content":"            saveToDisk();","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":127,"author":{"gitId":"RichDom2185"},"content":"     * Searches all tasks for titles matching the given query.","lastModifiedDate":"2022-08-30"},{"lineNumber":128,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":129,"author":{"gitId":"RichDom2185"},"content":"     * @param query The query to be word-matched against the task titles","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"RichDom2185"},"content":"     * @return A {@code String} representation of the tasks that matched the given query","lastModifiedDate":"2022-08-30"},{"lineNumber":131,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"RichDom2185"},"content":"    public String search(String query) {","lastModifiedDate":"2022-08-29"},{"lineNumber":133,"author":{"gitId":"RichDom2185"},"content":"        final List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":134,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"RichDom2185"},"content":"            final Task t \u003d tasks.get(i);","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"RichDom2185"},"content":"            if (t.matches(query)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"RichDom2185"},"content":"                matches.add(t);","lastModifiedDate":"2022-08-29"},{"lineNumber":138,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":139,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":140,"author":{"gitId":"RichDom2185"},"content":"        final StringBuilder sb \u003d new StringBuilder(\"Matching Tasks:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":141,"author":{"gitId":"RichDom2185"},"content":"        return getStringFromTasksList(matches, sb);","lastModifiedDate":"2022-08-29"},{"lineNumber":142,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":143,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":144,"author":{"gitId":"RichDom2185"},"content":"    private void saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"RichDom2185"},"content":"        final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"RichDom2185"},"content":"            sb.append(tasks.get(i).toSaveFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"RichDom2185"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"RichDom2185"},"content":"        storedFile.writeText(sb.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"RichDom2185"},"content":"    private static String getStringFromTasksList(List\u003cTask\u003e matches, StringBuilder sb) {","lastModifiedDate":"2022-08-29"},{"lineNumber":154,"author":{"gitId":"RichDom2185"},"content":"        for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":155,"author":{"gitId":"RichDom2185"},"content":"            sb.append(i + 1).append(\". \").append(matches.get(i).toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":156,"author":{"gitId":"RichDom2185"},"content":"            if (i !\u003d matches.size() - 1) {","lastModifiedDate":"2022-08-29"},{"lineNumber":157,"author":{"gitId":"RichDom2185"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"RichDom2185"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"RichDom2185"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":162,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":163,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":164,"author":{"gitId":"RichDom2185"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":165,"author":{"gitId":"RichDom2185"},"content":"        final StringBuilder sb \u003d new StringBuilder(\"Your Tasks:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":166,"author":{"gitId":"RichDom2185"},"content":"        return getStringFromTasksList(tasks, sb);","lastModifiedDate":"2022-08-29"},{"lineNumber":167,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":168,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"RichDom2185":168}},{"path":"src/main/java/mia/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"package mia;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":" * A {@code Todo} is a {@code Task} with no additional functionality.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":" * @author Richard Dominick","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    Todo(String title, boolean isCompleted) {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"        super(title, isCompleted);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    Todo(String title) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"        super(title);","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"     * Parses and creates a new {@code Todo} instance from a {@code String} representing its data.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"     * @param saveFormat The string representing the data from which to create a new {@code Todo} instance","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"     * @return A new {@code Todo} instance based on the parsed data","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"     * @throws IllegalArgumentException When the save format is invalid","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"    public static Todo fromSaveFormat(String saveFormat) throws IllegalArgumentException {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"        final String[] args \u003d saveFormat.split(\";;\");","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"            throw new IllegalArgumentException(\"Incorrect save format: \" + saveFormat);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"        return new Todo(args[1], args[0].equals(\"1\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"T;;%s\", super.toSaveFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"        return String.format(\"📜 %s\", super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"RichDom2185":42}},{"path":"src/test/java/ChatWindowTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"import general.ui.ChatWindow;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"import general.ui.Span;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"public class ChatWindowTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"    private static final int WINDOW_SIZE \u003d 50;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"    private static final String VERY_LONG_TEXT \u003d \"This is a very long text that will make it very likely \" +","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"            \"to wrap across multiple lines. Moreover, this text contains multiple sentences.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    private static final String SHORT_TEXT \u003d \"Hello, world!\";","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"RichDom2185"},"content":"    public void setUpStreams() {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"RichDom2185"},"content":"    @AfterEach","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"RichDom2185"},"content":"    public void restoreStreams() {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"RichDom2185"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"RichDom2185"},"content":"    public void simpleCommandTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"RichDom2185"},"content":"        final ChatWindow chatWindow \u003d new ChatWindow(WINDOW_SIZE);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"RichDom2185"},"content":"        final String expectedOutput \u003d \"╭───────────────╮\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"RichDom2185"},"content":"                                      \"│ Hello, world! │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"RichDom2185"},"content":"                                      \"╰┬╭─────────────╯\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"RichDom2185"},"content":"                                      \" ╰╯ You          \\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"RichDom2185"},"content":"        chatWindow.printCommand(new Span(SHORT_TEXT));","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"RichDom2185"},"content":"    public void simpleResponseTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"RichDom2185"},"content":"        final ChatWindow chatWindow \u003d new ChatWindow(WINDOW_SIZE);","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"RichDom2185"},"content":"        final String expectedOutput \u003d \"                                 ╭───────────────╮\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"RichDom2185"},"content":"                                      \"                                 │ Hello, world! │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"RichDom2185"},"content":"                                      \"                                 ╰─────────────╮┬╯\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"RichDom2185"},"content":"                                      \"                                           MIA ╰╯ \\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"RichDom2185"},"content":"        chatWindow.printResponse(new Span(SHORT_TEXT));","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"RichDom2185"},"content":"    public void commandWrapTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"RichDom2185"},"content":"        final ChatWindow window \u003d new ChatWindow(WINDOW_SIZE);","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"RichDom2185"},"content":"        final String expectedOutput \u003d \"╭────────────────────────────────────╮\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"RichDom2185"},"content":"                                      \"│ This is a very long text that will │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"RichDom2185"},"content":"                                      \"│ make it very likely to wrap across │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"RichDom2185"},"content":"                                      \"│ multiple lines. Moreover, this     │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"RichDom2185"},"content":"                                      \"│ text contains multiple sentences.  │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"RichDom2185"},"content":"                                      \"╰┬╭──────────────────────────────────╯\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"RichDom2185"},"content":"                                      \" ╰╯ You                               \\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"RichDom2185"},"content":"        window.printCommand(new Span(VERY_LONG_TEXT));","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"RichDom2185"},"content":"    public void responseWrapTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"RichDom2185"},"content":"        final ChatWindow window \u003d new ChatWindow(WINDOW_SIZE);","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"RichDom2185"},"content":"        final String expectedOutput \u003d \"            ╭────────────────────────────────────╮\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"RichDom2185"},"content":"                                      \"            │ This is a very long text that will │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"RichDom2185"},"content":"                                      \"            │ make it very likely to wrap across │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"RichDom2185"},"content":"                                      \"            │ multiple lines. Moreover, this     │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"RichDom2185"},"content":"                                      \"            │ text contains multiple sentences.  │\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"RichDom2185"},"content":"                                      \"            ╰──────────────────────────────────╮┬╯\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"RichDom2185"},"content":"                                      \"                                           MIA ╰╯ \\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"RichDom2185"},"content":"        window.printResponse(new Span(VERY_LONG_TEXT));","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"RichDom2185":80}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"import mia.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"    private final String DUMMY_DEADLINE \u003d \"23 January 2022 08:00;;0;;Title;;\";","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    public void saveFormatTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"        final Deadline deadline \u003d Deadline.fromSaveFormat(DUMMY_DEADLINE);","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(\"D;;\" + DUMMY_DEADLINE, deadline.toSaveFormat());","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    public void stringTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"        final Deadline deadline \u003d Deadline.fromSaveFormat(DUMMY_DEADLINE);","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(\"‼ ☐ Title (by 2022-01-23 at 08:00)\", deadline.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"RichDom2185":20}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"import mia.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"public class EventTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"    private final String DUMMY_EVENT \u003d \"23 January 2022 08:00;;23 January 2022 08:00;;0;;Title;;\";","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    public void saveFormatTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"        final Event event \u003d Event.fromSaveFormat(DUMMY_EVENT);","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(\"E;;\" + DUMMY_EVENT, event.toSaveFormat());","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    public void stringTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"        final Event event \u003d Event.fromSaveFormat(DUMMY_EVENT);","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(\"📆 ☐ Title (from 2022-01-23 08:00 to 2022-01-23 08:00)\", event.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"RichDom2185":20}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RichDom2185"},"content":"import mia.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"RichDom2185"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"RichDom2185"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"RichDom2185"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"RichDom2185"},"content":"    private final String DUMMY_TODO \u003d \"0;;Title;;\";","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"    public void saveFormatTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"RichDom2185"},"content":"        final Todo todo \u003d Todo.fromSaveFormat(DUMMY_TODO);","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(\"T;;\" + DUMMY_TODO, todo.toSaveFormat());","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"RichDom2185"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"RichDom2185"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"    public void stringTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"RichDom2185"},"content":"        final Todo todo \u003d Todo.fromSaveFormat(DUMMY_TODO);","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"        assertEquals(\"📜 ☐ Title\", todo.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"RichDom2185"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"RichDom2185"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"RichDom2185":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"RichDom2185"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\**\\*.java","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RichDom2185"},"content":"java -classpath ..\\bin mia.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"RichDom2185"},"content":"REM TODO: Replace the expected output","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RichDom2185":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"RichDom2185"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"RichDom2185"},"content":"java -classpath ../bin mia.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"RichDom2185"},"content":"# TODO: Replace the expected output","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RichDom2185":3,"-":36}}]
